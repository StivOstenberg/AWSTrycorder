<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CloudWatch</name>
    </assembly>
    <members>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchConfig">
            <summary>
            Configuration for accessing Amazon CloudWatch service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchException">
            <summary>
             Common exception for the CloudWatch service.
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Internal.AmazonCloudWatchMetadata">
            <summary>
            Service metadata for  Amazon CloudWatch service
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Internal.AmazonCloudWatchMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Internal.AmazonCloudWatchMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.AlarmHistoryItem">
            <summary>
            Represents the history of a specific alarm.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The descriptive name for the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.AlarmType">
            <summary>
            Gets and sets the property AlarmType. 
            <para>
            The type of alarm, either metric alarm or composite alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistoryData">
            <summary>
            Gets and sets the property HistoryData. 
            <para>
            Data about the alarm, in JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistoryItemType">
            <summary>
            Gets and sets the property HistoryItemType. 
            <para>
            The type of alarm history item.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistorySummary">
            <summary>
            Gets and sets the property HistorySummary. 
            <para>
            A summary of the alarm history, in text format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time stamp for the alarm history item.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.AnomalyDetector">
            <summary>
            An anomaly detection model associated with a particular CloudWatch metric and statistic.
            You can use the model to display a band of expected normal values when the metric
            is graphed.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AnomalyDetector.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The configuration specifies details about how the anomaly detection model is to be
            trained, including time ranges to exclude from use for training the model, and the
            time zone to use for the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AnomalyDetector.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The metric dimensions associated with the anomaly detection model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AnomalyDetector.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric associated with the anomaly detection model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AnomalyDetector.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric associated with the anomaly detection model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AnomalyDetector.Stat">
            <summary>
            Gets and sets the property Stat. 
            <para>
            The statistic associated with the anomaly detection model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AnomalyDetector.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            The current status of the anomaly detector's training. The possible values are <code>TRAINED
            | PENDING_TRAINING | TRAINED_INSUFFICIENT_DATA</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.AnomalyDetectorConfiguration">
            <summary>
            The configuration specifies details about how the anomaly detection model is to be
            trained, including time ranges to exclude from use for training the model and the
            time zone to use for the metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AnomalyDetectorConfiguration.ExcludedTimeRanges">
            <summary>
            Gets and sets the property ExcludedTimeRanges. 
            <para>
            An array of time ranges to exclude from use when the anomaly detection model is trained.
            Use this to make sure that events that could cause unusual values for the metric,
            such as deployments, aren't used when CloudWatch creates the model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AnomalyDetectorConfiguration.MetricTimezone">
            <summary>
            Gets and sets the property MetricTimezone. 
            <para>
            The time zone to use for the metric. This is useful to enable the model to automatically
            account for daylight savings time changes if the metric is sensitive to such time
            changes.
            </para>
             
            <para>
            To specify a time zone, use the name of the time zone as specified in the standard
            tz database. For more information, see <a href="https://en.wikipedia.org/wiki/Tz_database">tz
            database</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.CompositeAlarm">
            <summary>
            The details about a composite alarm.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.ActionsEnabled">
            <summary>
            Gets and sets the property ActionsEnabled. 
            <para>
            Indicates whether actions should be executed during any changes to the alarm state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.AlarmActions">
            <summary>
            Gets and sets the property AlarmActions. 
            <para>
            The actions to execute when this alarm transitions to the ALARM state from any other
            state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.AlarmArn">
            <summary>
            Gets and sets the property AlarmArn. 
            <para>
            The Amazon Resource Name (ARN) of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.AlarmConfigurationUpdatedTimestamp">
            <summary>
            Gets and sets the property AlarmConfigurationUpdatedTimestamp. 
            <para>
            The time stamp of the last update to the alarm configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.AlarmDescription">
            <summary>
            Gets and sets the property AlarmDescription. 
            <para>
            The description of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.AlarmRule">
            <summary>
            Gets and sets the property AlarmRule. 
            <para>
            The rule that this alarm uses to evaluate its alarm state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.InsufficientDataActions">
            <summary>
            Gets and sets the property InsufficientDataActions. 
            <para>
            The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state
            from any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.OKActions">
            <summary>
            Gets and sets the property OKActions. 
            <para>
            The actions to execute when this alarm transitions to the OK state from any other
            state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            An explanation for the alarm state, in text format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.StateReasonData">
            <summary>
            Gets and sets the property StateReasonData. 
            <para>
            An explanation for the alarm state, in JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.StateUpdatedTimestamp">
            <summary>
            Gets and sets the property StateUpdatedTimestamp. 
            <para>
            The time stamp of the last update to the alarm state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.CompositeAlarm.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            The state value for the alarm.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ConcurrentModificationException">
            <summary>
            More than one process tried to modify a resource at the same time.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ConcurrentModificationException.#ctor(System.String)">
            <summary>
            Constructs a new ConcurrentModificationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ConcurrentModificationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ConcurrentModificationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ConcurrentModificationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ConcurrentModificationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DashboardEntry">
            <summary>
            Represents a specific dashboard.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DashboardEntry.DashboardArn">
            <summary>
            Gets and sets the property DashboardArn. 
            <para>
            The Amazon Resource Name (ARN) of the dashboard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DashboardEntry.DashboardName">
            <summary>
            Gets and sets the property DashboardName. 
            <para>
            The name of the dashboard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DashboardEntry.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The time stamp of when the dashboard was last modified, either by an API call or through
            the console. This number is expressed as the number of milliseconds since Jan 1, 1970
            00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DashboardEntry.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the dashboard, in bytes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DashboardInvalidInputErrorException">
            <summary>
            Some part of the dashboard data is invalid.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.DashboardInvalidInputErrorException.#ctor(System.String)">
            <summary>
            Constructs a new DashboardInvalidInputErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.DashboardInvalidInputErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DashboardInvalidInputErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.DashboardInvalidInputErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of DashboardInvalidInputErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.DashboardInvalidInputErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DashboardInvalidInputErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.DashboardInvalidInputErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DashboardInvalidInputErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DashboardInvalidInputErrorException.DashboardValidationMessages">
            <summary>
            Gets and sets the property DashboardValidationMessages.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DashboardNotFoundErrorException">
            <summary>
            The specified dashboard does not exist.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.DashboardNotFoundErrorException.#ctor(System.String)">
            <summary>
            Constructs a new DashboardNotFoundErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.DashboardNotFoundErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DashboardNotFoundErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.DashboardNotFoundErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of DashboardNotFoundErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.DashboardNotFoundErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DashboardNotFoundErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.DashboardNotFoundErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DashboardNotFoundErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DashboardValidationMessage">
            <summary>
            An error or warning for the operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DashboardValidationMessage.DataPath">
            <summary>
            Gets and sets the property DataPath. 
            <para>
            The data path related to the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DashboardValidationMessage.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message describing the error or warning.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Datapoint">
            <summary>
            Encapsulates the statistical data that CloudWatch computes from metric data.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Average">
            <summary>
            Gets and sets the property Average. 
            <para>
            The average of the metric values that correspond to the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.ExtendedStatistics">
            <summary>
            Gets and sets the property ExtendedStatistics. 
            <para>
            The percentile statistic for the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Maximum">
            <summary>
            Gets and sets the property Maximum. 
            <para>
            The maximum metric value for the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Minimum">
            <summary>
            Gets and sets the property Minimum. 
            <para>
            The minimum metric value for the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.SampleCount">
            <summary>
            Gets and sets the property SampleCount. 
            <para>
            The number of metric values that contributed to the aggregate value of this data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Sum">
            <summary>
            Gets and sets the property Sum. 
            <para>
            The sum of the metric values for the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time stamp used for the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The standard unit for the data point.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteAlarmsRequest">
            <summary>
            Container for the parameters to the DeleteAlarms operation.
            Deletes the specified alarms. You can delete up to 100 alarms in one operation. However,
            this total can include no more than one composite alarm. For example, you could delete
            99 metric alarms and one composite alarms with one operation, but you can't delete
            two composite alarms with one operation.
            
             
            <para>
             In the event of an error, no alarms are deleted.
            </para>
             <note> 
            <para>
            It is possible to create a loop or cycle of composite alarms, where composite alarm
            A depends on composite alarm B, and composite alarm B also depends on composite alarm
            A. In this scenario, you can't delete any composite alarm that is part of the cycle
            because there is always still a composite alarm that depends on that alarm that you
            want to delete.
            </para>
             
            <para>
            To get out of such a situation, you must break the cycle by changing the rule of one
            of the composite alarms in the cycle to remove a dependency that creates the cycle.
            The simplest change to make to break a cycle is to change the <code>AlarmRule</code>
            of one of the alarms to <code>False</code>. 
            </para>
             
            <para>
            Additionally, the evaluation of composite alarms stops if CloudWatch detects a cycle
            in the evaluation path. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteAlarmsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            The alarms to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteAlarmsResponse">
            <summary>
            This is the response object from the DeleteAlarms operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteAnomalyDetectorRequest">
            <summary>
            Container for the parameters to the DeleteAnomalyDetector operation.
            Deletes the specified anomaly detection model from your account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteAnomalyDetectorRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The metric dimensions associated with the anomaly detection model to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteAnomalyDetectorRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The metric name associated with the anomaly detection model to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteAnomalyDetectorRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace associated with the anomaly detection model to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteAnomalyDetectorRequest.Stat">
            <summary>
            Gets and sets the property Stat. 
            <para>
            The statistic associated with the anomaly detection model to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteAnomalyDetectorResponse">
            <summary>
            This is the response object from the DeleteAnomalyDetector operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteDashboardsRequest">
            <summary>
            Container for the parameters to the DeleteDashboards operation.
            Deletes all dashboards that you specify. You can specify up to 100 dashboards to delete.
            If there is an error during this call, no dashboards are deleted.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteDashboardsRequest.DashboardNames">
            <summary>
            Gets and sets the property DashboardNames. 
            <para>
            The dashboards to be deleted. This parameter is required.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteDashboardsResponse">
            <summary>
            This is the response object from the DeleteDashboards operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteInsightRulesRequest">
            <summary>
            Container for the parameters to the DeleteInsightRules operation.
            Permanently deletes the specified Contributor Insights rules.
            
             
            <para>
            If you create a rule, delete it, and then re-create it with the same name, historical
            data from the first time the rule was created might not be available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteInsightRulesRequest.RuleNames">
            <summary>
            Gets and sets the property RuleNames. 
            <para>
            An array of the rule names to delete. If you need to find out the names of your rules,
            use <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeInsightRules.html">DescribeInsightRules</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteInsightRulesResponse">
            <summary>
            This is the response object from the DeleteInsightRules operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteInsightRulesResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            An array listing the rules that could not be deleted. You cannot delete built-in rules.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteMetricStreamRequest">
            <summary>
            Container for the parameters to the DeleteMetricStream operation.
            Permanently deletes the metric stream that you specify.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteMetricStreamRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the metric stream to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteMetricStreamResponse">
            <summary>
            This is the response object from the DeleteMetricStream operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest">
            <summary>
            Container for the parameters to the DescribeAlarmHistory operation.
            Retrieves the history for the specified alarm. You can filter the results by date
            range or item type. If an alarm name is not specified, the histories for either all
            metric alarms or all composite alarms are returned.
            
             
            <para>
            CloudWatch retains the history of an alarm even if you delete the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.AlarmTypes">
            <summary>
            Gets and sets the property AlarmTypes. 
            <para>
            Use this parameter to specify whether you want the operation to return metric alarms
            or composite alarms. If you omit this parameter, only metric alarms are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.EndDateUtc">
            <summary>
            Gets and sets the property EndDateUtc. 
            <para>
            The ending date to retrieve alarm history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.HistoryItemType">
            <summary>
            Gets and sets the property HistoryItemType. 
            <para>
            The type of alarm histories to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of alarm history records to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to indicate that there is more data available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.ScanBy">
            <summary>
            Gets and sets the property ScanBy. 
            <para>
            Specified whether to return the newest or oldest alarm history first. Specify <code>TimestampDescending</code>
            to have the newest event history returned first, and specify <code>TimestampAscending</code>
            to have the oldest history returned first.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.StartDateUtc">
            <summary>
            Gets and sets the property StartDateUtc. 
            <para>
            The starting date to retrieve alarm history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.EndDate">
            <summary>
            Gets and sets the property EndDateUtc. 
            <para>
            This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndDateUtc instead. Setting either EndDate or EndDateUtc
            results in both EndDate and EndDateUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndDate is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.
            </para>
             
            <para>
            The ending date to retrieve alarm history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.StartDate">
            <summary>
            Gets and sets the property StartDateUtc. 
            <para>
            This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartDateUtc instead. Setting either StartDate or
            StartDateUtc results in both StartDate and StartDateUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartDate
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.
            </para>
             
            <para>
            The starting date to retrieve alarm history.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse">
            <summary>
            This is the response object from the DescribeAlarmHistory operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse.AlarmHistoryItems">
            <summary>
            Gets and sets the property AlarmHistoryItems. 
            <para>
            The alarm histories, in JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that marks the start of the next batch of returned results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest">
            <summary>
            Container for the parameters to the DescribeAlarmsForMetric operation.
            Retrieves the alarms for the specified metric. To filter the results, specify a statistic,
            period, or unit.
            
             
            <para>
            This operation retrieves only standard alarms that are based on the specified metric.
            It does not return alarms based on math expressions that use the specified metric,
            or composite alarms that use the specified metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions associated with the metric. If the metric has any associated dimensions,
            you must specify them in order for the call to succeed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.ExtendedStatistic">
            <summary>
            Gets and sets the property ExtendedStatistic. 
            <para>
            The percentile statistic for the metric. Specify a value between p0.0 and p100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The period, in seconds, over which the statistic is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
            The statistic for the metric, other than percentiles. For percentile statistics, use
            <code>ExtendedStatistics</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit for the metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsForMetricResponse">
            <summary>
            This is the response object from the DescribeAlarmsForMetric operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricResponse.MetricAlarms">
            <summary>
            Gets and sets the property MetricAlarms. 
            <para>
            The information for each alarm with the specified metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsRequest">
            <summary>
            Container for the parameters to the DescribeAlarms operation.
            Retrieves the specified alarms. You can filter the results by specifying a prefix
            for the alarm name, the alarm state, or a prefix for any action.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.ActionPrefix">
            <summary>
            Gets and sets the property ActionPrefix. 
            <para>
            Use this parameter to filter the results of the operation to only those alarms that
            use a certain alarm action. For example, you could specify the ARN of an SNS topic
            to find all alarms that send notifications to that topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.AlarmNamePrefix">
            <summary>
            Gets and sets the property AlarmNamePrefix. 
            <para>
            An alarm name prefix. If you specify this parameter, you receive information about
            all alarms that have names that start with this prefix.
            </para>
             
            <para>
            If this parameter is specified, you cannot specify <code>AlarmNames</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            The names of the alarms to retrieve information about.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.AlarmTypes">
            <summary>
            Gets and sets the property AlarmTypes. 
            <para>
            Use this parameter to specify whether you want the operation to return metric alarms
            or composite alarms. If you omit this parameter, only metric alarms are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.ChildrenOfAlarmName">
            <summary>
            Gets and sets the property ChildrenOfAlarmName. 
            <para>
            If you use this parameter and specify the name of a composite alarm, the operation
            returns information about the "children" alarms of the alarm you specify. These are
            the metric alarms and composite alarms referenced in the <code>AlarmRule</code> field
            of the composite alarm that you specify in <code>ChildrenOfAlarmName</code>. Information
            about the composite alarm that you name in <code>ChildrenOfAlarmName</code> is not
            returned.
            </para>
             
            <para>
            If you specify <code>ChildrenOfAlarmName</code>, you cannot specify any other parameters
            in the request except for <code>MaxRecords</code> and <code>NextToken</code>. If you
            do so, you receive a validation error.
            </para>
             <note> 
            <para>
            Only the <code>Alarm Name</code>, <code>ARN</code>, <code>StateValue</code> (OK/ALARM/INSUFFICIENT_DATA),
            and <code>StateUpdatedTimestamp</code> information are returned by this operation
            when you use this parameter. To get complete information about these alarms, perform
            another <code>DescribeAlarms</code> operation and specify the parent alarm names in
            the <code>AlarmNames</code> parameter.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of alarm descriptions to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to indicate that there is more data available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.ParentsOfAlarmName">
            <summary>
            Gets and sets the property ParentsOfAlarmName. 
            <para>
            If you use this parameter and specify the name of a metric or composite alarm, the
            operation returns information about the "parent" alarms of the alarm you specify.
            These are the composite alarms that have <code>AlarmRule</code> parameters that reference
            the alarm named in <code>ParentsOfAlarmName</code>. Information about the alarm that
            you specify in <code>ParentsOfAlarmName</code> is not returned.
            </para>
             
            <para>
            If you specify <code>ParentsOfAlarmName</code>, you cannot specify any other parameters
            in the request except for <code>MaxRecords</code> and <code>NextToken</code>. If you
            do so, you receive a validation error.
            </para>
             <note> 
            <para>
            Only the Alarm Name and ARN are returned by this operation when you use this parameter.
            To get complete information about these alarms, perform another <code>DescribeAlarms</code>
            operation and specify the parent alarm names in the <code>AlarmNames</code> parameter.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            Specify this parameter to receive information only about alarms that are currently
            in the state that you specify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsResponse">
            <summary>
            This is the response object from the DescribeAlarms operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsResponse.CompositeAlarms">
            <summary>
            Gets and sets the property CompositeAlarms. 
            <para>
            The information about any composite alarms returned by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsResponse.MetricAlarms">
            <summary>
            Gets and sets the property MetricAlarms. 
            <para>
            The information about any metric alarms returned by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that marks the start of the next batch of returned results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAnomalyDetectorsRequest">
            <summary>
            Container for the parameters to the DescribeAnomalyDetectors operation.
            Lists the anomaly detection models that you have created in your account. You can
            list all models in your account or filter the results to only the models that are
            related to a certain namespace, metric name, or metric dimension.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAnomalyDetectorsRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            Limits the results to only the anomaly detection models that are associated with the
            specified metric dimensions. If there are multiple metrics that have these dimensions
            and have anomaly detection models associated, they're all returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAnomalyDetectorsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in one operation. The maximum value that you
            can specify is 100.
            </para>
             
            <para>
            To retrieve the remaining results, make another call with the returned <code>NextToken</code>
            value. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAnomalyDetectorsRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            Limits the results to only the anomaly detection models that are associated with the
            specified metric name. If there are multiple metrics with this name in different namespaces
            that have anomaly detection models, they're all returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAnomalyDetectorsRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            Limits the results to only the anomaly detection models that are associated with the
            specified namespace.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAnomalyDetectorsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Use the token returned by the previous operation to request the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAnomalyDetectorsResponse">
            <summary>
            This is the response object from the DescribeAnomalyDetectors operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAnomalyDetectorsResponse.AnomalyDetectors">
            <summary>
            Gets and sets the property AnomalyDetectors. 
            <para>
            The list of anomaly detection models returned by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAnomalyDetectorsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token that you can use in a subsequent operation to retrieve the next set of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeInsightRulesRequest">
            <summary>
            Container for the parameters to the DescribeInsightRules operation.
            Returns a list of all the Contributor Insights rules in your account.
            
             
            <para>
            For more information about Contributor Insights, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights.html">Using
            Contributor Insights to Analyze High-Cardinality Data</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeInsightRulesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in one operation. If you omit this parameter,
            the default of 500 is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeInsightRulesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Include this value, if it was returned by the previous operation, to get the next
            set of rules.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeInsightRulesResponse">
            <summary>
            This is the response object from the DescribeInsightRules operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeInsightRulesResponse.InsightRules">
            <summary>
            Gets and sets the property InsightRules. 
            <para>
            The rules returned by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeInsightRulesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If this parameter is present, it is a token that marks the start of the next batch
            of returned results. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Dimension">
            <summary>
            A dimension is a name/value pair that is part of the identity of a metric. You can
            assign up to 10 dimensions to a metric. Because dimensions are part of the unique
            identifier for a metric, whenever you add a unique name/value pair to one of your
            metrics, you are creating a new variation of that metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Dimension.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the dimension. Dimension names cannot contain blank spaces or non-ASCII
            characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Dimension.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the dimension. Dimension values cannot contain blank spaces or non-ASCII
            characters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DimensionFilter">
            <summary>
            Represents filters for a dimension.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DimensionFilter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The dimension name to be matched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DimensionFilter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the dimension to be matched.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DisableAlarmActionsRequest">
            <summary>
            Container for the parameters to the DisableAlarmActions operation.
            Disables the actions for the specified alarms. When an alarm's actions are disabled,
            the alarm actions do not execute when the alarm state changes.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DisableAlarmActionsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            The names of the alarms.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DisableAlarmActionsResponse">
            <summary>
            This is the response object from the DisableAlarmActions operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DisableInsightRulesRequest">
            <summary>
            Container for the parameters to the DisableInsightRules operation.
            Disables the specified Contributor Insights rules. When rules are disabled, they do
            not analyze log groups and do not incur costs.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DisableInsightRulesRequest.RuleNames">
            <summary>
            Gets and sets the property RuleNames. 
            <para>
            An array of the rule names to disable. If you need to find out the names of your rules,
            use <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeInsightRules.html">DescribeInsightRules</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DisableInsightRulesResponse">
            <summary>
            This is the response object from the DisableInsightRules operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DisableInsightRulesResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            An array listing the rules that could not be disabled. You cannot disable built-in
            rules.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.EnableAlarmActionsRequest">
            <summary>
            Container for the parameters to the EnableAlarmActions operation.
            Enables the actions for the specified alarms.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.EnableAlarmActionsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            The names of the alarms.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.EnableAlarmActionsResponse">
            <summary>
            This is the response object from the EnableAlarmActions operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.EnableInsightRulesRequest">
            <summary>
            Container for the parameters to the EnableInsightRules operation.
            Enables the specified Contributor Insights rules. When rules are enabled, they immediately
            begin analyzing log data.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.EnableInsightRulesRequest.RuleNames">
            <summary>
            Gets and sets the property RuleNames. 
            <para>
            An array of the rule names to enable. If you need to find out the names of your rules,
            use <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeInsightRules.html">DescribeInsightRules</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.EnableInsightRulesResponse">
            <summary>
            This is the response object from the EnableInsightRules operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.EnableInsightRulesResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            An array listing the rules that could not be enabled. You cannot disable or enable
            built-in rules.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetDashboardRequest">
            <summary>
            Container for the parameters to the GetDashboard operation.
            Displays the details of the dashboard that you specify.
            
             
            <para>
            To copy an existing dashboard, use <code>GetDashboard</code>, and then use the data
            returned within <code>DashboardBody</code> as the template for the new dashboard when
            you call <code>PutDashboard</code> to create the copy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetDashboardRequest.DashboardName">
            <summary>
            Gets and sets the property DashboardName. 
            <para>
            The name of the dashboard to be described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetDashboardResponse">
            <summary>
            This is the response object from the GetDashboard operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetDashboardResponse.DashboardArn">
            <summary>
            Gets and sets the property DashboardArn. 
            <para>
            The Amazon Resource Name (ARN) of the dashboard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetDashboardResponse.DashboardBody">
            <summary>
            Gets and sets the property DashboardBody. 
            <para>
            The detailed information about the dashboard, including what widgets are included
            and their location on the dashboard. For more information about the <code>DashboardBody</code>
            syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CloudWatch-Dashboard-Body-Structure.html">Dashboard
            Body Structure and Syntax</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetDashboardResponse.DashboardName">
            <summary>
            Gets and sets the property DashboardName. 
            <para>
            The name of the dashboard.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetInsightRuleReportRequest">
            <summary>
            Container for the parameters to the GetInsightRuleReport operation.
            This operation returns the time series data collected by a Contributor Insights rule.
            The data includes the identity and number of contributors to the log group.
            
             
            <para>
            You can also optionally return one or more statistics about each data point in the
            time series. These statistics can include the following:
            </para>
             <ul> <li> 
            <para>
             <code>UniqueContributors</code> -- the number of unique contributors for each data
            point.
            </para>
             </li> <li> 
            <para>
             <code>MaxContributorValue</code> -- the value of the top contributor for each data
            point. The identity of the contributor might change for each data point in the graph.
            </para>
             
            <para>
            If this rule aggregates by COUNT, the top contributor for each data point is the contributor
            with the most occurrences in that period. If the rule aggregates by SUM, the top contributor
            is the contributor with the highest sum in the log field specified by the rule's <code>Value</code>,
            during that period.
            </para>
             </li> <li> 
            <para>
             <code>SampleCount</code> -- the number of data points matched by the rule.
            </para>
             </li> <li> 
            <para>
             <code>Sum</code> -- the sum of the values from all contributors during the time period
            represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Minimum</code> -- the minimum value from a single observation during the time
            period represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Maximum</code> -- the maximum value from a single observation during the time
            period represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Average</code> -- the average value from all contributors during the time period
            represented by that data point.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The end time of the data to use in the report. When used in a raw HTTP Query API,
            it is formatted as <code>yyyy-MM-dd'T'HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportRequest.MaxContributorCount">
            <summary>
            Gets and sets the property MaxContributorCount. 
            <para>
            The maximum number of contributors to include in the report. The range is 1 to 100.
            If you omit this, the default of 10 is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportRequest.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
            Specifies which metrics to use for aggregation of contributor values for the report.
            You can specify one or more of the following metrics:
            </para>
             <ul> <li> 
            <para>
             <code>UniqueContributors</code> -- the number of unique contributors for each data
            point.
            </para>
             </li> <li> 
            <para>
             <code>MaxContributorValue</code> -- the value of the top contributor for each data
            point. The identity of the contributor might change for each data point in the graph.
            </para>
             
            <para>
            If this rule aggregates by COUNT, the top contributor for each data point is the contributor
            with the most occurrences in that period. If the rule aggregates by SUM, the top contributor
            is the contributor with the highest sum in the log field specified by the rule's <code>Value</code>,
            during that period.
            </para>
             </li> <li> 
            <para>
             <code>SampleCount</code> -- the number of data points matched by the rule.
            </para>
             </li> <li> 
            <para>
             <code>Sum</code> -- the sum of the values from all contributors during the time period
            represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Minimum</code> -- the minimum value from a single observation during the time
            period represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Maximum</code> -- the maximum value from a single observation during the time
            period represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Average</code> -- the average value from all contributors during the time period
            represented by that data point.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportRequest.OrderBy">
            <summary>
            Gets and sets the property OrderBy. 
            <para>
            Determines what statistic to use to rank the contributors. Valid values are SUM and
            MAXIMUM.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The period, in seconds, to use for the statistics in the <code>InsightRuleMetricDatapoint</code>
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportRequest.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the rule that you want to see data from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The start time of the data to use in the report. When used in a raw HTTP Query API,
            it is formatted as <code>yyyy-MM-dd'T'HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetInsightRuleReportResponse">
            <summary>
            This is the response object from the GetInsightRuleReport operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportResponse.AggregateValue">
            <summary>
            Gets and sets the property AggregateValue. 
            <para>
            The sum of the values from all individual contributors that match the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportResponse.AggregationStatistic">
            <summary>
            Gets and sets the property AggregationStatistic. 
            <para>
            Specifies whether this rule aggregates contributor data by COUNT or SUM.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportResponse.ApproximateUniqueCount">
            <summary>
            Gets and sets the property ApproximateUniqueCount. 
            <para>
            An approximate count of the unique contributors found by this rule in this time period.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportResponse.Contributors">
            <summary>
            Gets and sets the property Contributors. 
            <para>
            An array of the unique contributors found by this rule in this time period. If the
            rule contains multiple keys, each combination of values for the keys counts as a unique
            contributor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportResponse.KeyLabels">
            <summary>
            Gets and sets the property KeyLabels. 
            <para>
            An array of the strings used as the keys for this rule. The keys are the dimensions
            used to classify contributors. If the rule contains more than one key, then each unique
            combination of values for the keys is counted as a unique contributor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetInsightRuleReportResponse.MetricDatapoints">
            <summary>
            Gets and sets the property MetricDatapoints. 
            <para>
            A time series of metric data points that matches the time period in the rule request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricDataRequest">
            <summary>
            Container for the parameters to the GetMetricData operation.
            You can use the <code>GetMetricData</code> API to retrieve as many as 500 different
            metrics in a single request, with a total of as many as 100,800 data points. You can
            also optionally perform math expressions on the values of the returned statistics,
            to create new time series that represent new insights into your data. For example,
            using Lambda metrics, you could divide the Errors metric by the Invocations metric
            to get an error rate time series. For more information about metric math expressions,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric
            Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.
            
             
            <para>
            Calls to the <code>GetMetricData</code> API have a different pricing structure than
            calls to <code>GetMetricStatistics</code>. For more information about pricing, see
            <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.
            </para>
             
            <para>
            Amazon CloudWatch retains metric data as follows:
            </para>
             <ul> <li> 
            <para>
            Data points with a period of less than 60 seconds are available for 3 hours. These
            data points are high-resolution metrics and are available only for custom metrics
            that have been defined with a <code>StorageResolution</code> of 1.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 60 seconds (1-minute) are available for 15 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 300 seconds (5-minute) are available for 63 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 3600 seconds (1 hour) are available for 455 days (15
            months).
            </para>
             </li> </ul> 
            <para>
            Data points that are initially published with a shorter period are aggregated together
            for long-term storage. For example, if you collect data using a period of 1 minute,
            the data remains available for 15 days with 1-minute resolution. After 15 days, this
            data is still available, but is aggregated and retrievable only with a resolution
            of 5 minutes. After 63 days, the data is further aggregated and is available with
            a resolution of 1 hour.
            </para>
             
            <para>
            If you omit <code>Unit</code> in your request, all data that was collected with any
            unit is returned, along with the corresponding units that were specified when the
            data was reported to CloudWatch. If you specify a unit, the operation returns only
            data that was collected with that unit specified. If you specify a unit that does
            not match the data collected, the results of the operation are null. CloudWatch does
            not perform unit conversions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataRequest.EndTimeUtc">
            <summary>
            Gets and sets the property EndTimeUtc. 
            <para>
            The time stamp indicating the latest data to be returned.
            </para>
             
            <para>
            The value specified is exclusive; results include data points up to the specified
            time stamp.
            </para>
             
            <para>
            For better performance, specify <code>StartTime</code> and <code>EndTime</code> values
            that align with the value of the metric's <code>Period</code> and sync up with the
            beginning and end of an hour. For example, if the <code>Period</code> of a metric
            is 5 minutes, specifying 12:05 or 12:30 as <code>EndTime</code> can get a faster response
            from CloudWatch than setting 12:07 or 12:29 as the <code>EndTime</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataRequest.LabelOptions">
            <summary>
            Gets and sets the property LabelOptions. 
            <para>
            This structure includes the <code>Timezone</code> parameter, which you can use to
            specify your time zone so that the labels of returned data display the correct time
            for your time zone. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataRequest.MaxDatapoints">
            <summary>
            Gets and sets the property MaxDatapoints. 
            <para>
            The maximum number of data points the request should return before paginating. If
            you omit this, the default of 100,800 is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataRequest.MetricDataQueries">
            <summary>
            Gets and sets the property MetricDataQueries. 
            <para>
            The metric queries to be returned. A single <code>GetMetricData</code> call can include
            as many as 500 <code>MetricDataQuery</code> structures. Each of these structures can
            specify either a metric to retrieve, or a math expression to perform on retrieved
            data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Include this value, if it was returned by the previous <code>GetMetricData</code>
            operation, to get the next set of data points.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataRequest.ScanBy">
            <summary>
            Gets and sets the property ScanBy. 
            <para>
            The order in which data points should be returned. <code>TimestampDescending</code>
            returns the newest data first and paginates when the <code>MaxDatapoints</code> limit
            is reached. <code>TimestampAscending</code> returns the oldest data first and paginates
            when the <code>MaxDatapoints</code> limit is reached.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataRequest.StartTimeUtc">
            <summary>
            Gets and sets the property StartTimeUtc. 
            <para>
            The time stamp indicating the earliest data to be returned.
            </para>
             
            <para>
            The value specified is inclusive; results include data points with the specified time
            stamp. 
            </para>
             
            <para>
            CloudWatch rounds the specified time stamp as follows:
            </para>
             <ul> <li> 
            <para>
            Start time less than 15 days ago - Round down to the nearest whole minute. For example,
            12:32:34 is rounded down to 12:32:00.
            </para>
             </li> <li> 
            <para>
            Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval.
            For example, 12:32:34 is rounded down to 12:30:00.
            </para>
             </li> <li> 
            <para>
            Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval.
            For example, 12:32:34 is rounded down to 12:00:00.
            </para>
             </li> </ul> 
            <para>
            If you set <code>Period</code> to 5, 10, or 30, the start time of your request is
            rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions
            of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous
            10-second period, the start time of your request is rounded down and you receive data
            from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes
            of data, using a period of 5 seconds, you receive data timestamped between 15:02:15
            and 15:07:15. 
            </para>
             
            <para>
            For better performance, specify <code>StartTime</code> and <code>EndTime</code> values
            that align with the value of the metric's <code>Period</code> and sync up with the
            beginning and end of an hour. For example, if the <code>Period</code> of a metric
            is 5 minutes, specifying 12:05 or 12:30 as <code>StartTime</code> can get a faster
            response from CloudWatch than setting 12:07 or 12:29 as the <code>StartTime</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataRequest.EndTime">
            <summary>
            Gets and sets the property EndTimeUtc. 
            <para>
            This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.
            </para>
             
            <para>
            The time stamp indicating the latest data to be returned.
            </para>
             
            <para>
            The value specified is exclusive; results include data points up to the specified
            time stamp.
            </para>
             
            <para>
            For better performance, specify <code>StartTime</code> and <code>EndTime</code> values
            that align with the value of the metric's <code>Period</code> and sync up with the
            beginning and end of an hour. For example, if the <code>Period</code> of a metric
            is 5 minutes, specifying 12:05 or 12:30 as <code>EndTime</code> can get a faster response
            from CloudWatch than setting 12:07 or 12:29 as the <code>EndTime</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataRequest.StartTime">
            <summary>
            Gets and sets the property StartTimeUtc. 
            <para>
            This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.
            </para>
             
            <para>
            The time stamp indicating the earliest data to be returned.
            </para>
             
            <para>
            The value specified is inclusive; results include data points with the specified time
            stamp. 
            </para>
             
            <para>
            CloudWatch rounds the specified time stamp as follows:
            </para>
             <ul> <li> 
            <para>
            Start time less than 15 days ago - Round down to the nearest whole minute. For example,
            12:32:34 is rounded down to 12:32:00.
            </para>
             </li> <li> 
            <para>
            Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval.
            For example, 12:32:34 is rounded down to 12:30:00.
            </para>
             </li> <li> 
            <para>
            Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval.
            For example, 12:32:34 is rounded down to 12:00:00.
            </para>
             </li> </ul> 
            <para>
            If you set <code>Period</code> to 5, 10, or 30, the start time of your request is
            rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions
            of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous
            10-second period, the start time of your request is rounded down and you receive data
            from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes
            of data, using a period of 5 seconds, you receive data timestamped between 15:02:15
            and 15:07:15. 
            </para>
             
            <para>
            For better performance, specify <code>StartTime</code> and <code>EndTime</code> values
            that align with the value of the metric's <code>Period</code> and sync up with the
            beginning and end of an hour. For example, if the <code>Period</code> of a metric
            is 5 minutes, specifying 12:05 or 12:30 as <code>StartTime</code> can get a faster
            response from CloudWatch than setting 12:07 or 12:29 as the <code>StartTime</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricDataResponse">
            <summary>
            This is the response object from the GetMetricData operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataResponse.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            Contains a message about this <code>GetMetricData</code> operation, if the operation
            results in such a message. An example of a message that might be returned is <code>Maximum
            number of allowed metrics exceeded</code>. If there is a message, as much of the operation
            as possible is still executed.
            </para>
             
            <para>
            A message appears here only if it is related to the global <code>GetMetricData</code>
            operation. Any message about a specific metric returned by the operation appears in
            the <code>MetricDataResult</code> object returned for that metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataResponse.MetricDataResults">
            <summary>
            Gets and sets the property MetricDataResults. 
            <para>
            The metrics that are returned, including the metric name, namespace, and dimensions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token that marks the next batch of returned results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricStatisticsRequest">
            <summary>
            Container for the parameters to the GetMetricStatistics operation.
            Gets statistics for the specified metric.
            
             
            <para>
            The maximum number of data points returned from a single call is 1,440. If you request
            more than 1,440 data points, CloudWatch returns an error. To reduce the number of
            data points, you can narrow the specified time range and make multiple requests across
            adjacent time ranges, or you can increase the specified period. Data points are not
            returned in chronological order.
            </para>
             
            <para>
            CloudWatch aggregates data points based on the length of the period that you specify.
            For example, if you request statistics with a one-hour period, CloudWatch aggregates
            all data points with time stamps that fall within each one-hour period. Therefore,
            the number of values aggregated by CloudWatch is larger than the number of data points
            returned.
            </para>
             
            <para>
            CloudWatch needs raw data points to calculate percentile statistics. If you publish
            data using a statistic set instead, you can only retrieve percentile statistics for
            this data if one of the following conditions is true:
            </para>
             <ul> <li> 
            <para>
            The SampleCount value of the statistic set is 1.
            </para>
             </li> <li> 
            <para>
            The Min and the Max values of the statistic set are equal.
            </para>
             </li> </ul> 
            <para>
            Percentile statistics are not available for metrics when any of the metric values
            are negative numbers.
            </para>
             
            <para>
            Amazon CloudWatch retains metric data as follows:
            </para>
             <ul> <li> 
            <para>
            Data points with a period of less than 60 seconds are available for 3 hours. These
            data points are high-resolution metrics and are available only for custom metrics
            that have been defined with a <code>StorageResolution</code> of 1.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 60 seconds (1-minute) are available for 15 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 300 seconds (5-minute) are available for 63 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 3600 seconds (1 hour) are available for 455 days (15
            months).
            </para>
             </li> </ul> 
            <para>
            Data points that are initially published with a shorter period are aggregated together
            for long-term storage. For example, if you collect data using a period of 1 minute,
            the data remains available for 15 days with 1-minute resolution. After 15 days, this
            data is still available, but is aggregated and retrievable only with a resolution
            of 5 minutes. After 63 days, the data is further aggregated and is available with
            a resolution of 1 hour.
            </para>
             
            <para>
            CloudWatch started retaining 5-minute and 1-hour metric data as of July 9, 2016.
            </para>
             
            <para>
            For information about metrics and dimensions supported by AWS services, see the <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CW_Support_For_AWS.html">Amazon
            CloudWatch Metrics and Dimensions Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions. If the metric contains multiple dimensions, you must include a value
            for each dimension. CloudWatch treats each unique combination of dimensions as a separate
            metric. If a specific combination of dimensions was not published, you can't retrieve
            statistics for it. You must specify the same dimensions that were used when the metrics
            were created. For an example, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#dimension-combinations">Dimension
            Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more information
            about specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing
            Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.EndTimeUtc">
            <summary>
            Gets and sets the property EndTimeUtc. 
            <para>
            The time stamp that determines the last data point to return.
            </para>
             
            <para>
            The value specified is exclusive; results include data points up to the specified
            time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for
            example, 2016-10-10T23:00:00Z).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.ExtendedStatistics">
            <summary>
            Gets and sets the property ExtendedStatistics. 
            <para>
            The percentile statistics. Specify values between p0.0 and p100. When calling <code>GetMetricStatistics</code>,
            you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>,
            but not both. Percentile statistics are not available for metrics when any of the
            metric values are negative numbers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric, with or without spaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric, with or without spaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The granularity, in seconds, of the returned data points. For metrics with regular
            resolution, a period can be as short as one minute (60 seconds) and must be a multiple
            of 60. For high-resolution metrics that are collected at intervals of less than one
            minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
            metrics are those metrics stored by a <code>PutMetricData</code> call that includes
            a <code>StorageResolution</code> of 1 second.
            </para>
             
            <para>
            If the <code>StartTime</code> parameter specifies a time stamp that is greater than
            3 hours ago, you must specify the period as follows or no data points in that time
            range is returned:
            </para>
             <ul> <li> 
            <para>
            Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).
            </para>
             </li> <li> 
            <para>
            Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).
            </para>
             </li> <li> 
            <para>
            Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.StartTimeUtc">
            <summary>
            Gets and sets the property StartTimeUtc. 
            <para>
            The time stamp that determines the first data point to return. Start times are evaluated
            relative to the time that CloudWatch receives the request.
            </para>
             
            <para>
            The value specified is inclusive; results include data points with the specified time
            stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example,
            2016-10-03T23:00:00Z).
            </para>
             
            <para>
            CloudWatch rounds the specified time stamp as follows:
            </para>
             <ul> <li> 
            <para>
            Start time less than 15 days ago - Round down to the nearest whole minute. For example,
            12:32:34 is rounded down to 12:32:00.
            </para>
             </li> <li> 
            <para>
            Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval.
            For example, 12:32:34 is rounded down to 12:30:00.
            </para>
             </li> <li> 
            <para>
            Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval.
            For example, 12:32:34 is rounded down to 12:00:00.
            </para>
             </li> </ul> 
            <para>
            If you set <code>Period</code> to 5, 10, or 30, the start time of your request is
            rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions
            of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous
            10-second period, the start time of your request is rounded down and you receive data
            from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes
            of data, using a period of 5 seconds, you receive data timestamped between 15:02:15
            and 15:07:15. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Statistics">
            <summary>
            Gets and sets the property Statistics. 
            <para>
            The metric statistics, other than percentile. For percentile statistics, use <code>ExtendedStatistics</code>.
            When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code>
            or <code>ExtendedStatistics</code>, but not both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit for a given metric. If you omit <code>Unit</code>, all data that was collected
            with any unit is returned, along with the corresponding units that were specified
            when the data was reported to CloudWatch. If you specify a unit, the operation returns
            only data that was collected with that unit specified. If you specify a unit that
            does not match the data collected, the results of the operation are null. CloudWatch
            does not perform unit conversions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.EndTime">
            <summary>
            Gets and sets the property EndTimeUtc. 
            <para>
            This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.
            </para>
             
            <para>
            The time stamp that determines the last data point to return.
            </para>
             
            <para>
            The value specified is exclusive; results include data points up to the specified
            time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for
            example, 2016-10-10T23:00:00Z).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.StartTime">
            <summary>
            Gets and sets the property StartTimeUtc. 
            <para>
            This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.
            </para>
             
            <para>
            The time stamp that determines the first data point to return. Start times are evaluated
            relative to the time that CloudWatch receives the request.
            </para>
             
            <para>
            The value specified is inclusive; results include data points with the specified time
            stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example,
            2016-10-03T23:00:00Z).
            </para>
             
            <para>
            CloudWatch rounds the specified time stamp as follows:
            </para>
             <ul> <li> 
            <para>
            Start time less than 15 days ago - Round down to the nearest whole minute. For example,
            12:32:34 is rounded down to 12:32:00.
            </para>
             </li> <li> 
            <para>
            Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval.
            For example, 12:32:34 is rounded down to 12:30:00.
            </para>
             </li> <li> 
            <para>
            Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval.
            For example, 12:32:34 is rounded down to 12:00:00.
            </para>
             </li> </ul> 
            <para>
            If you set <code>Period</code> to 5, 10, or 30, the start time of your request is
            rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions
            of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous
            10-second period, the start time of your request is rounded down and you receive data
            from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes
            of data, using a period of 5 seconds, you receive data timestamped between 15:02:15
            and 15:07:15. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricStatisticsResponse">
            <summary>
            This is the response object from the GetMetricStatistics operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsResponse.Datapoints">
            <summary>
            Gets and sets the property Datapoints. 
            <para>
            The data points for the specified metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsResponse.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            A label for the specified metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricStreamRequest">
            <summary>
            Container for the parameters to the GetMetricStream operation.
            Returns information about the metric stream that you specify.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStreamRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the metric stream to retrieve information about.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricStreamResponse">
            <summary>
            This is the response object from the GetMetricStream operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStreamResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the metric stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStreamResponse.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date that the metric stream was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStreamResponse.ExcludeFilters">
            <summary>
            Gets and sets the property ExcludeFilters. 
            <para>
            If this array of metric namespaces is present, then these namespaces are the only
            metric namespaces that are not streamed by this metric stream. In this case, all other
            metric namespaces in the account are streamed by this metric stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStreamResponse.FirehoseArn">
            <summary>
            Gets and sets the property FirehoseArn. 
            <para>
            The ARN of the Amazon Kinesis Firehose delivery stream that is used by this metric
            stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStreamResponse.IncludeFilters">
            <summary>
            Gets and sets the property IncludeFilters. 
            <para>
            If this array of metric namespaces is present, then these namespaces are the only
            metric namespaces that are streamed by this metric stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStreamResponse.LastUpdateDate">
            <summary>
            Gets and sets the property LastUpdateDate. 
            <para>
            The date of the most recent update to the metric stream's configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStreamResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the metric stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStreamResponse.OutputFormat">
            <summary>
            Gets and sets the property OutputFormat.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStreamResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role that is used by this metric stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStreamResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the metric stream. The possible values are <code>running</code> and <code>stopped</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricWidgetImageRequest">
            <summary>
            Container for the parameters to the GetMetricWidgetImage operation.
            You can use the <code>GetMetricWidgetImage</code> API to retrieve a snapshot graph
            of one or more Amazon CloudWatch metrics as a bitmap image. You can then embed this
            image into your services and products, such as wiki pages, reports, and documents.
            You could also retrieve images regularly, such as every minute, and create your own
            custom live dashboard.
            
             
            <para>
            The graph you retrieve can include all CloudWatch metric graph features, including
            metric math and horizontal and vertical annotations.
            </para>
             
            <para>
            There is a limit of 20 transactions per second for this API. Each <code>GetMetricWidgetImage</code>
            action has the following limits:
            </para>
             <ul> <li> 
            <para>
            As many as 100 metrics in the graph.
            </para>
             </li> <li> 
            <para>
            Up to 100 KB uncompressed payload.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricWidgetImageRequest.MetricWidget">
            <summary>
            Gets and sets the property MetricWidget. 
            <para>
            A JSON string that defines the bitmap graph to be retrieved. The string includes the
            metrics to include in the graph, statistics, annotations, title, axis limits, and
            so on. You can include only one <code>MetricWidget</code> parameter in each <code>GetMetricWidgetImage</code>
            call.
            </para>
             
            <para>
            For more information about the syntax of <code>MetricWidget</code> see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CloudWatch-Metric-Widget-Structure.html">GetMetricWidgetImage:
            Metric Widget Structure and Syntax</a>.
            </para>
             
            <para>
            If any metric on the graph could not load all the requested data points, an orange
            triangle with an exclamation point appears next to the graph legend.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricWidgetImageRequest.OutputFormat">
            <summary>
            Gets and sets the property OutputFormat. 
            <para>
            The format of the resulting image. Only PNG images are supported.
            </para>
             
            <para>
            The default is <code>png</code>. If you specify <code>png</code>, the API returns
            an HTTP response with the content-type set to <code>text/xml</code>. The image data
            is in a <code>MetricWidgetImage</code> field. For example:
            </para>
             
            <para>
             <code> &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;</code> 
            </para>
             
            <para>
             <code> &lt;GetMetricWidgetImageResult&gt;</code> 
            </para>
             
            <para>
             <code> &lt;MetricWidgetImage&gt;</code> 
            </para>
             
            <para>
             <code> iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...</code> 
            </para>
             
            <para>
             <code> &lt;/MetricWidgetImage&gt;</code> 
            </para>
             
            <para>
             <code> &lt;/GetMetricWidgetImageResult&gt;</code> 
            </para>
             
            <para>
             <code> &lt;ResponseMetadata&gt;</code> 
            </para>
             
            <para>
             <code> &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;</code>
            
            </para>
             
            <para>
             <code> &lt;/ResponseMetadata&gt;</code> 
            </para>
             
            <para>
             <code>&lt;/GetMetricWidgetImageResponse&gt;</code> 
            </para>
             
            <para>
            The <code>image/png</code> setting is intended only for custom HTTP requests. For
            most use cases, and all actions using an AWS SDK, you should use <code>png</code>.
            If you specify <code>image/png</code>, the HTTP response has a content-type set to
            <code>image/png</code>, and the body of the response is a PNG image. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricWidgetImageResponse">
            <summary>
            This is the response object from the GetMetricWidgetImage operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricWidgetImageResponse.MetricWidgetImage">
            <summary>
            Gets and sets the property MetricWidgetImage. 
            <para>
            The image of the graph, in the output format specified. The output is base64-encoded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InsightRule">
            <summary>
            This structure contains the definition for a Contributor Insights rule.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRule.Definition">
            <summary>
            Gets and sets the property Definition. 
            <para>
            The definition of the rule, as a JSON object. The definition contains the keywords
            used to define contributors, the value to aggregate on if this rule returns a sum
            instead of a count, and the filters. For details on the valid syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html">Contributor
            Insights Rule Syntax</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRule.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRule.Schema">
            <summary>
            Gets and sets the property Schema. 
            <para>
            For rules that you create, this is always <code>{"Name": "CloudWatchLogRule", "Version":
            1}</code>. For built-in rules, this is <code>{"Name": "ServiceLogRule", "Version":
            1}</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRule.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Indicates whether the rule is enabled or disabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InsightRuleContributor">
            <summary>
            One of the unique contributors found by a Contributor Insights rule. If the rule contains
            multiple keys, then a unique contributor is a unique combination of values from all
            the keys in the rule.
            
             
            <para>
            If the rule contains a single key, then each unique contributor is each unique value
            for this key.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetInsightRuleReport.html">GetInsightRuleReport</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleContributor.ApproximateAggregateValue">
            <summary>
            Gets and sets the property ApproximateAggregateValue. 
            <para>
            An approximation of the aggregate value that comes from this contributor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleContributor.Datapoints">
            <summary>
            Gets and sets the property Datapoints. 
            <para>
            An array of the data points where this contributor is present. Only the data points
            when this contributor appeared are included in the array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleContributor.Keys">
            <summary>
            Gets and sets the property Keys. 
            <para>
            One of the log entry field keywords that is used to define contributors for this rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InsightRuleContributorDatapoint">
            <summary>
            One data point related to one contributor.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetInsightRuleReport.html">GetInsightRuleReport</a>
            and <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_InsightRuleContributor.html">InsightRuleContributor</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleContributorDatapoint.ApproximateValue">
            <summary>
            Gets and sets the property ApproximateValue. 
            <para>
            The approximate value that this contributor added during this timestamp.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleContributorDatapoint.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The timestamp of the data point.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InsightRuleMetricDatapoint">
            <summary>
            One data point from the metric time series returned in a Contributor Insights rule
            report.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetInsightRuleReport.html">GetInsightRuleReport</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleMetricDatapoint.Average">
            <summary>
            Gets and sets the property Average. 
            <para>
            The average value from all contributors during the time period represented by that
            data point.
            </para>
             
            <para>
            This statistic is returned only if you included it in the <code>Metrics</code> array
            in your request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleMetricDatapoint.MaxContributorValue">
            <summary>
            Gets and sets the property MaxContributorValue. 
            <para>
            The maximum value provided by one contributor during this timestamp. Each timestamp
            is evaluated separately, so the identity of the max contributor could be different
            for each timestamp.
            </para>
             
            <para>
            This statistic is returned only if you included it in the <code>Metrics</code> array
            in your request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleMetricDatapoint.Maximum">
            <summary>
            Gets and sets the property Maximum. 
            <para>
            The maximum value from a single occurence from a single contributor during the time
            period represented by that data point.
            </para>
             
            <para>
            This statistic is returned only if you included it in the <code>Metrics</code> array
            in your request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleMetricDatapoint.Minimum">
            <summary>
            Gets and sets the property Minimum. 
            <para>
            The minimum value from a single contributor during the time period represented by
            that data point.
            </para>
             
            <para>
            This statistic is returned only if you included it in the <code>Metrics</code> array
            in your request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleMetricDatapoint.SampleCount">
            <summary>
            Gets and sets the property SampleCount. 
            <para>
            The number of occurrences that matched the rule during this data point.
            </para>
             
            <para>
            This statistic is returned only if you included it in the <code>Metrics</code> array
            in your request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleMetricDatapoint.Sum">
            <summary>
            Gets and sets the property Sum. 
            <para>
            The sum of the values from all contributors during the time period represented by
            that data point.
            </para>
             
            <para>
            This statistic is returned only if you included it in the <code>Metrics</code> array
            in your request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleMetricDatapoint.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The timestamp of the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.InsightRuleMetricDatapoint.UniqueContributors">
            <summary>
            Gets and sets the property UniqueContributors. 
            <para>
            The number of unique contributors who published data during this timestamp.
            </para>
             
            <para>
            This statistic is returned only if you included it in the <code>Metrics</code> array
            in your request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InternalServiceException">
            <summary>
            Request processing has failed due to some unknown error, exception, or failure.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServiceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller">
            <summary>
            Response Unmarshaller for AlarmHistoryItem Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AnomalyDetectorConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for AnomalyDetectorConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AnomalyDetectorConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AnomalyDetectorConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AnomalyDetectorConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AnomalyDetectorUnmarshaller">
            <summary>
            Response Unmarshaller for AnomalyDetector Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AnomalyDetectorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AnomalyDetectorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AnomalyDetectorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.CompositeAlarmUnmarshaller">
            <summary>
            Response Unmarshaller for CompositeAlarm Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.CompositeAlarmUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.CompositeAlarmUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.CompositeAlarmUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConcurrentModificationException operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardEntryUnmarshaller">
            <summary>
            Response Unmarshaller for DashboardEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardInvalidInputErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DashboardInvalidInputErrorException operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardInvalidInputErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardInvalidInputErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardInvalidInputErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardNotFoundErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DashboardNotFoundErrorException operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardNotFoundErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardNotFoundErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardNotFoundErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardValidationMessageUnmarshaller">
            <summary>
            Response Unmarshaller for DashboardValidationMessage Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardValidationMessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardValidationMessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardValidationMessageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller">
            <summary>
            Response Unmarshaller for Datapoint Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller">
            <summary>
            DeleteAlarms Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DeleteAlarmsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAlarms operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAnomalyDetectorRequestMarshaller">
            <summary>
            DeleteAnomalyDetector Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAnomalyDetectorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAnomalyDetectorRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DeleteAnomalyDetectorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAnomalyDetectorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAnomalyDetectorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAnomalyDetector operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAnomalyDetectorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAnomalyDetectorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAnomalyDetectorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteDashboardsRequestMarshaller">
            <summary>
            DeleteDashboards Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteDashboardsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteDashboardsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DeleteDashboardsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteDashboardsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteDashboardsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDashboards operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteDashboardsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteDashboardsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteDashboardsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteInsightRulesRequestMarshaller">
            <summary>
            DeleteInsightRules Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteInsightRulesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteInsightRulesRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DeleteInsightRulesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteInsightRulesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteInsightRulesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteInsightRules operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteInsightRulesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteInsightRulesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteInsightRulesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteMetricStreamRequestMarshaller">
            <summary>
            DeleteMetricStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteMetricStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteMetricStreamRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DeleteMetricStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteMetricStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteMetricStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMetricStream operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteMetricStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteMetricStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteMetricStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller">
            <summary>
            DescribeAlarmHistory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarmHistory operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller">
            <summary>
            DescribeAlarmsForMetric Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarmsForMetric operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller">
            <summary>
            DescribeAlarms Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DescribeAlarmsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarms operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAnomalyDetectorsRequestMarshaller">
            <summary>
            DescribeAnomalyDetectors Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAnomalyDetectorsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAnomalyDetectorsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DescribeAnomalyDetectorsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAnomalyDetectorsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAnomalyDetectorsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAnomalyDetectors operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAnomalyDetectorsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAnomalyDetectorsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAnomalyDetectorsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeInsightRulesRequestMarshaller">
            <summary>
            DescribeInsightRules Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeInsightRulesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeInsightRulesRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DescribeInsightRulesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeInsightRulesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeInsightRulesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInsightRules operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeInsightRulesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeInsightRulesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeInsightRulesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller">
            <summary>
            Response Unmarshaller for Dimension Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller">
            <summary>
            DisableAlarmActions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DisableAlarmActionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableAlarmActions operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableInsightRulesRequestMarshaller">
            <summary>
            DisableInsightRules Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableInsightRulesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableInsightRulesRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DisableInsightRulesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableInsightRulesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableInsightRulesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableInsightRules operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableInsightRulesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableInsightRulesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableInsightRulesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller">
            <summary>
            EnableAlarmActions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.EnableAlarmActionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableAlarmActions operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableInsightRulesRequestMarshaller">
            <summary>
            EnableInsightRules Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableInsightRulesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableInsightRulesRequestMarshaller.Marshall(Amazon.CloudWatch.Model.EnableInsightRulesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableInsightRulesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableInsightRulesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableInsightRules operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableInsightRulesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableInsightRulesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableInsightRulesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetDashboardRequestMarshaller">
            <summary>
            GetDashboard Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetDashboardRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetDashboardRequestMarshaller.Marshall(Amazon.CloudWatch.Model.GetDashboardRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetDashboardRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetDashboardResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDashboard operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetDashboardResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetDashboardResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetDashboardResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetInsightRuleReportRequestMarshaller">
            <summary>
            GetInsightRuleReport Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetInsightRuleReportRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetInsightRuleReportRequestMarshaller.Marshall(Amazon.CloudWatch.Model.GetInsightRuleReportRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetInsightRuleReportRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetInsightRuleReportResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetInsightRuleReport operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetInsightRuleReportResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetInsightRuleReportResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetInsightRuleReportResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricDataRequestMarshaller">
            <summary>
            GetMetricData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricDataRequestMarshaller.Marshall(Amazon.CloudWatch.Model.GetMetricDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricDataRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMetricData operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller">
            <summary>
            GetMetricStatistics Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.GetMetricStatisticsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMetricStatistics operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStreamRequestMarshaller">
            <summary>
            GetMetricStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStreamRequestMarshaller.Marshall(Amazon.CloudWatch.Model.GetMetricStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMetricStream operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricWidgetImageRequestMarshaller">
            <summary>
            GetMetricWidgetImage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricWidgetImageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricWidgetImageRequestMarshaller.Marshall(Amazon.CloudWatch.Model.GetMetricWidgetImageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricWidgetImageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricWidgetImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMetricWidgetImage operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricWidgetImageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricWidgetImageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricWidgetImageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleContributorDatapointUnmarshaller">
            <summary>
            Response Unmarshaller for InsightRuleContributorDatapoint Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleContributorDatapointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleContributorDatapointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleContributorDatapointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleContributorUnmarshaller">
            <summary>
            Response Unmarshaller for InsightRuleContributor Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleContributorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleContributorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleContributorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleMetricDatapointUnmarshaller">
            <summary>
            Response Unmarshaller for InsightRuleMetricDatapoint Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleMetricDatapointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleMetricDatapointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleMetricDatapointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleUnmarshaller">
            <summary>
            Response Unmarshaller for InsightRule Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServiceException operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidFormatExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidFormatException operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidFormatExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidFormatExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidFormatExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidNextTokenException operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidParameterCombinationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterCombinationException operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidParameterCombinationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidParameterCombinationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidParameterCombinationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterValueException operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListDashboardsRequestMarshaller">
            <summary>
            ListDashboards Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListDashboardsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListDashboardsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.ListDashboardsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListDashboardsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListDashboardsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDashboards operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListDashboardsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListDashboardsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListDashboardsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller">
            <summary>
            ListMetrics Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.ListMetricsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListMetrics operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricStreamsRequestMarshaller">
            <summary>
            ListMetricStreams Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricStreamsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricStreamsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.ListMetricStreamsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricStreamsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricStreamsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListMetricStreams operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricStreamsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricStreamsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricStreamsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.CloudWatch.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MessageDataUnmarshaller">
            <summary>
            Response Unmarshaller for MessageData Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MessageDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MessageDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MessageDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller">
            <summary>
            Response Unmarshaller for MetricAlarm Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricDataQueryUnmarshaller">
            <summary>
            Response Unmarshaller for MetricDataQuery Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricDataQueryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricDataQueryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricDataQueryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricDataResultUnmarshaller">
            <summary>
            Response Unmarshaller for MetricDataResult Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricDataResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricDataResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricDataResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStatUnmarshaller">
            <summary>
            Response Unmarshaller for MetricStat Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStatUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStatUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStatUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamEntryUnmarshaller">
            <summary>
            Response Unmarshaller for MetricStreamEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamFilterUnmarshaller">
            <summary>
            Response Unmarshaller for MetricStreamFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller">
            <summary>
            Response Unmarshaller for Metric Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MissingRequiredParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MissingRequiredParameterException operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MissingRequiredParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MissingRequiredParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MissingRequiredParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PartialFailureUnmarshaller">
            <summary>
            Response Unmarshaller for PartialFailure Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PartialFailureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PartialFailureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PartialFailureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutAnomalyDetectorRequestMarshaller">
            <summary>
            PutAnomalyDetector Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutAnomalyDetectorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutAnomalyDetectorRequestMarshaller.Marshall(Amazon.CloudWatch.Model.PutAnomalyDetectorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutAnomalyDetectorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutAnomalyDetectorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutAnomalyDetector operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutAnomalyDetectorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutAnomalyDetectorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutAnomalyDetectorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutCompositeAlarmRequestMarshaller">
            <summary>
            PutCompositeAlarm Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutCompositeAlarmRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutCompositeAlarmRequestMarshaller.Marshall(Amazon.CloudWatch.Model.PutCompositeAlarmRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutCompositeAlarmRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutCompositeAlarmResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutCompositeAlarm operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutCompositeAlarmResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutCompositeAlarmResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutCompositeAlarmResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutDashboardRequestMarshaller">
            <summary>
            PutDashboard Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutDashboardRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutDashboardRequestMarshaller.Marshall(Amazon.CloudWatch.Model.PutDashboardRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutDashboardRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutDashboardResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutDashboard operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutDashboardResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutDashboardResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutDashboardResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutInsightRuleRequestMarshaller">
            <summary>
            PutInsightRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutInsightRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutInsightRuleRequestMarshaller.Marshall(Amazon.CloudWatch.Model.PutInsightRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutInsightRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutInsightRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutInsightRule operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutInsightRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutInsightRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutInsightRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller">
            <summary>
            PutMetricAlarm Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller.Marshall(Amazon.CloudWatch.Model.PutMetricAlarmRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricAlarm operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller">
            <summary>
            PutMetricData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller.Marshall(Amazon.CloudWatch.Model.PutMetricDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricData operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricStreamRequestMarshaller">
            <summary>
            PutMetricStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricStreamRequestMarshaller.Marshall(Amazon.CloudWatch.Model.PutMetricStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricStreamRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricStream operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.RangeUnmarshaller">
            <summary>
            Response Unmarshaller for Range Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.RangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.RangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.RangeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller">
            <summary>
            SetAlarmState Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller.Marshall(Amazon.CloudWatch.Model.SetAlarmStateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetAlarmState operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StartMetricStreamsRequestMarshaller">
            <summary>
            StartMetricStreams Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StartMetricStreamsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StartMetricStreamsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.StartMetricStreamsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StartMetricStreamsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StartMetricStreamsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartMetricStreams operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StartMetricStreamsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StartMetricStreamsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StartMetricStreamsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StopMetricStreamsRequestMarshaller">
            <summary>
            StopMetricStreams Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StopMetricStreamsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StopMetricStreamsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.StopMetricStreamsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StopMetricStreamsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StopMetricStreamsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopMetricStreams operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StopMetricStreamsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StopMetricStreamsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.StopMetricStreamsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.CloudWatch.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.CloudWatch.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidFormatException">
            <summary>
            Data was not syntactically valid JSON.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidFormatException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            <summary>
            The next token specified is invalid.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            <summary>
            Parameters were used together that cannot be used together.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterCombinationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            <summary>
            The value of an input parameter is bad or out-of-range.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.LabelOptions">
            <summary>
            This structure includes the <code>Timezone</code> parameter, which you can use to
            specify your time zone so that the labels that are associated with returned metrics
            display the correct time for your time zone. 
            
             
            <para>
            The <code>Timezone</code> value affects a label only if you have a time-based dynamic
            expression in the label. For more information about dynamic expressions in labels,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/graph-dynamic-labels.html">Using
            Dynamic Labels</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.LabelOptions.Timezone">
            <summary>
            Gets and sets the property Timezone. 
            <para>
            The time zone to use for metric data return in this operation. The format is <code>+</code>
            or <code>-</code> followed by four digits. The first two digits indicate the number
            of hours ahead or behind of UTC, and the final two digits are the number of minutes.
            For example, +0130 indicates a time zone that is 1 hour and 30 minutes ahead of UTC.
            The default is +0000. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.LimitExceededException">
            <summary>
            The operation exceeded one or more limits.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListDashboardsRequest">
            <summary>
            Container for the parameters to the ListDashboards operation.
            Returns a list of the dashboards for your account. If you include <code>DashboardNamePrefix</code>,
            only those dashboards with names starting with the prefix are listed. Otherwise, all
            dashboards in your account are listed. 
            
             
            <para>
             <code>ListDashboards</code> returns up to 1000 results on one page. If there are
            more than 1000 dashboards, you can call <code>ListDashboards</code> again and include
            the value you received for <code>NextToken</code> in the first call, to receive the
            next 1000 results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListDashboardsRequest.DashboardNamePrefix">
            <summary>
            Gets and sets the property DashboardNamePrefix. 
            <para>
            If you specify this parameter, only the dashboards with names starting with the specified
            string are listed. The maximum length is 255, and valid characters are A-Z, a-z, 0-9,
            ".", "-", and "_". 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListDashboardsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to indicate that there is more data available.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListDashboardsResponse">
            <summary>
            This is the response object from the ListDashboards operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListDashboardsResponse.DashboardEntries">
            <summary>
            Gets and sets the property DashboardEntries. 
            <para>
            The list of matching dashboards.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListDashboardsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that marks the start of the next batch of returned results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricsRequest">
            <summary>
            Container for the parameters to the ListMetrics operation.
            List the specified metrics. You can use the returned metrics with <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>
            to obtain statistical data.
            
             
            <para>
            Up to 500 results are returned for any one call. To retrieve additional results, use
            the returned token with subsequent calls.
            </para>
             
            <para>
            After you create a metric, allow up to 15 minutes before the metric appears. You can
            see statistics about the metric sooner by using <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
             
            <para>
             <code>ListMetrics</code> doesn't return information about metrics if those metrics
            haven't reported data in the past two weeks. To retrieve those metrics, use <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions to filter against. Only the dimensions that match exactly will be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric to filter against. Only the metrics with names that match exactly
            will be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The metric namespace to filter against. Only the namespace that matches exactly will
            be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to indicate that there is more data available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.RecentlyActive">
            <summary>
            Gets and sets the property RecentlyActive. 
            <para>
            To filter the results to show only metrics that have had data points published in
            the past three hours, specify this parameter with a value of <code>PT3H</code>. This
            is the only valid value for this parameter.
            </para>
             
            <para>
            The results that are returned are an approximation of the value you specify. There
            is a low probability that the returned results include metrics with last published
            data as much as 40 minutes more than the specified time interval.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricsResponse">
            <summary>
            This is the response object from the ListMetrics operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsResponse.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
            The metrics that match your request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricStreamsRequest">
            <summary>
            Container for the parameters to the ListMetricStreams operation.
            Returns a list of metric streams in this account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricStreamsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in one operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricStreamsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Include this value, if it was returned by the previous call, to get the next set of
            metric streams.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricStreamsResponse">
            <summary>
            This is the response object from the ListMetricStreams operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricStreamsResponse.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            The array of metric stream information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricStreamsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that marks the start of the next batch of returned results. You can use
            this token in a subsequent operation to get the next batch of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Displays the tags associated with a CloudWatch resource. Currently, alarms and Contributor
            Insights rules support tagging.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListTagsForResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The ARN of the CloudWatch resource that you want to view tags for.
            </para>
             
            <para>
            The ARN format of an alarm is <code>arn:aws:cloudwatch:<i>Region</i>:<i>account-id</i>:alarm:<i>alarm-name</i>
            </code> 
            </para>
             
            <para>
            The ARN format of a Contributor Insights rule is <code>arn:aws:cloudwatch:<i>Region</i>:<i>account-id</i>:insight-rule:<i>insight-rule-name</i>
            </code> 
            </para>
             
            <para>
            For more information about ARN format, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazoncloudwatch.html#amazoncloudwatch-resources-for-iam-policies">
            Resource Types Defined by Amazon CloudWatch</a> in the <i>Amazon Web Services General
            Reference</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of tag keys and values associated with the resource you specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MessageData">
            <summary>
            A message returned by the <code>GetMetricData</code>API, including a code and a description.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MessageData.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The error code or status code associated with the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MessageData.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The message text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Metric">
            <summary>
            Represents a specific metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions for the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric. This is a required field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricAlarm">
            <summary>
            The details about a metric alarm.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.ActionsEnabled">
            <summary>
            Gets and sets the property ActionsEnabled. 
            <para>
            Indicates whether actions should be executed during any changes to the alarm state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmActions">
            <summary>
            Gets and sets the property AlarmActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>ALARM</code> state
            from any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmArn">
            <summary>
            Gets and sets the property AlarmArn. 
            <para>
            The Amazon Resource Name (ARN) of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmConfigurationUpdatedTimestamp">
            <summary>
            Gets and sets the property AlarmConfigurationUpdatedTimestamp. 
            <para>
            The time stamp of the last update to the alarm configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmDescription">
            <summary>
            Gets and sets the property AlarmDescription. 
            <para>
            The description of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
            The arithmetic operation to use when comparing the specified statistic and threshold.
            The specified statistic value is used as the first operand.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.DatapointsToAlarm">
            <summary>
            Gets and sets the property DatapointsToAlarm. 
            <para>
            The number of data points that must be breaching to trigger the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions for the metric associated with the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.EvaluateLowSampleCountPercentile">
            <summary>
            Gets and sets the property EvaluateLowSampleCountPercentile. 
            <para>
            Used only for alarms based on percentiles. If <code>ignore</code>, the alarm state
            does not change during periods with too few data points to be statistically significant.
            If <code>evaluate</code> or this parameter is not used, the alarm is always evaluated
            and possibly changes state no matter how many data points are available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.EvaluationPeriods">
            <summary>
            Gets and sets the property EvaluationPeriods. 
            <para>
            The number of periods over which data is compared to the specified threshold.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.ExtendedStatistic">
            <summary>
            Gets and sets the property ExtendedStatistic. 
            <para>
            The percentile statistic for the metric associated with the alarm. Specify a value
            between p0.0 and p100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.InsufficientDataActions">
            <summary>
            Gets and sets the property InsufficientDataActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code>
            state from any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric associated with the alarm, if this is an alarm based on a single
            metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
            An array of MetricDataQuery structures, used in an alarm based on a metric math expression.
            Each structure either retrieves a metric or performs a math expression. One item in
            the Metrics array is the math expression that the alarm watches. This expression by
            designated by having <code>ReturnData</code> set to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric associated with the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.OKActions">
            <summary>
            Gets and sets the property OKActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>OK</code> state from
            any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The period, in seconds, over which the statistic is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            An explanation for the alarm state, in text format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateReasonData">
            <summary>
            Gets and sets the property StateReasonData. 
            <para>
            An explanation for the alarm state, in JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateUpdatedTimestamp">
            <summary>
            Gets and sets the property StateUpdatedTimestamp. 
            <para>
            The time stamp of the last update to the alarm state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            The state value for the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
            The statistic for the metric associated with the alarm, other than percentile. For
            percentile statistics, use <code>ExtendedStatistic</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Threshold">
            <summary>
            Gets and sets the property Threshold. 
            <para>
            The value to compare with the specified statistic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.ThresholdMetricId">
            <summary>
            Gets and sets the property ThresholdMetricId. 
            <para>
            In an alarm based on an anomaly detection model, this is the ID of the <code>ANOMALY_DETECTION_BAND</code>
            function used as the threshold for the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.TreatMissingData">
            <summary>
            Gets and sets the property TreatMissingData. 
            <para>
            Sets how this alarm is to handle missing data points. If this parameter is omitted,
            the default behavior of <code>missing</code> is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit of the metric associated with the alarm.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricDataQuery">
            <summary>
            This structure is used in both <code>GetMetricData</code> and <code>PutMetricAlarm</code>.
            The supported use of this structure is different for those two operations.
            
             
            <para>
            When used in <code>GetMetricData</code>, it indicates the metric data to return, and
            whether this call is just retrieving a batch set of data for one metric, or is performing
            a math expression on metric data. A single <code>GetMetricData</code> call can include
            up to 500 <code>MetricDataQuery</code> structures.
            </para>
             
            <para>
            When used in <code>PutMetricAlarm</code>, it enables you to create an alarm based
            on a metric math expression. Each <code>MetricDataQuery</code> in the array specifies
            either a metric to retrieve, or a math expression to be performed on retrieved metrics.
            A single <code>PutMetricAlarm</code> call can include up to 20 <code>MetricDataQuery</code>
            structures in the array. The 20 structures can include as many as 10 structures that
            contain a <code>MetricStat</code> parameter to retrieve a metric, and as many as 10
            structures that contain the <code>Expression</code> parameter to perform a math expression.
            Of those <code>Expression</code> structures, one must have <code>True</code> as the
            value for <code>ReturnData</code>. The result of this expression is the value the
            alarm watches.
            </para>
             
            <para>
            Any expression used in a <code>PutMetricAlarm</code> operation must return a single
            time series. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric
            Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
             
            <para>
            Some of the parameters of this structure also have different uses whether you are
            using this structure in a <code>GetMetricData</code> operation or a <code>PutMetricAlarm</code>
            operation. These differences are explained in the following parameter list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataQuery.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            The math expression to be performed on the returned data, if this object is performing
            a math expression. This expression can use the <code>Id</code> of the other metrics
            to refer to those metrics, and can also use the <code>Id</code> of other expressions
            to use the result of those expressions. For more information about metric math expressions,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric
            Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
             
            <para>
            Within each MetricDataQuery object, you must specify either <code>Expression</code>
            or <code>MetricStat</code> but not both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataQuery.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            A short name used to tie this object to the results in the response. This name must
            be unique within a single call to <code>GetMetricData</code>. If you are performing
            math expressions on this set of data, this name represents that data and can serve
            as a variable in the mathematical expression. The valid characters are letters, numbers,
            and underscore. The first character must be a lowercase letter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataQuery.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            A human-readable label for this metric or expression. This is especially useful if
            this is an expression, so that you know what the value represents. If the metric or
            expression is shown in a CloudWatch dashboard widget, the label is shown. If Label
            is omitted, CloudWatch generates a default.
            </para>
             
            <para>
            You can put dynamic expressions into a label, so that it is more descriptive. For
            more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/graph-dynamic-labels.html">Using
            Dynamic Labels</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataQuery.MetricStat">
            <summary>
            Gets and sets the property MetricStat. 
            <para>
            The metric to be returned, along with statistics, period, and units. Use this parameter
            only if this object is retrieving a metric and not performing a math expression on
            returned data.
            </para>
             
            <para>
            Within one MetricDataQuery object, you must specify either <code>Expression</code>
            or <code>MetricStat</code> but not both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataQuery.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The granularity, in seconds, of the returned data points. For metrics with regular
            resolution, a period can be as short as one minute (60 seconds) and must be a multiple
            of 60. For high-resolution metrics that are collected at intervals of less than one
            minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
            metrics are those metrics stored by a <code>PutMetricData</code> operation that includes
            a <code>StorageResolution of 1 second</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataQuery.ReturnData">
            <summary>
            Gets and sets the property ReturnData. 
            <para>
            When used in <code>GetMetricData</code>, this option indicates whether to return the
            timestamps and raw data values of this metric. If you are performing this call just
            to do math expressions and do not also need the raw data returned, you can specify
            <code>False</code>. If you omit this, the default of <code>True</code> is used.
            </para>
             
            <para>
            When used in <code>PutMetricAlarm</code>, specify <code>True</code> for the one expression
            result to use as the alarm. For all other metrics and expressions in the same <code>PutMetricAlarm</code>
            operation, specify <code>ReturnData</code> as False.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricDataResult">
            <summary>
            A <code>GetMetricData</code> call returns an array of <code>MetricDataResult</code>
            structures. Each of these structures includes the data points for that metric, along
            with the timestamps of those data points and other identifying information.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataResult.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The short name you specified to represent this metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataResult.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            The human-readable label associated with the data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataResult.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            A list of messages with additional information about the data returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataResult.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            The status of the returned data. <code>Complete</code> indicates that all data points
            in the requested time range were returned. <code>PartialData</code> means that an
            incomplete set of data points were returned. You can use the <code>NextToken</code>
            value that was returned and repeat your request to get more data points. <code>NextToken</code>
            is not returned if you are performing a math expression. <code>InternalError</code>
            indicates that an error occurred. Retry your request using <code>NextToken</code>,
            if present.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataResult.Timestamps">
            <summary>
            Gets and sets the property Timestamps. 
            <para>
            The timestamps for the data points, formatted in Unix timestamp format. The number
            of timestamps always matches the number of values and the value for Timestamps[x]
            is Values[x].
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDataResult.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            The data points for the metric corresponding to <code>Timestamps</code>. The number
            of values always matches the number of timestamps and the timestamp for Values[x]
            is Timestamps[x].
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricDatum">
            <summary>
            Encapsulates the information sent to either create a metric or add new values to be
            aggregated into an existing metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Counts">
            <summary>
            Gets and sets the property Counts. 
            <para>
            Array of numbers that is used along with the <code>Values</code> array. Each number
            in the <code>Count</code> array is the number of times the corresponding value in
            the <code>Values</code> array occurred during the period. 
            </para>
             
            <para>
            If you omit the <code>Counts</code> array, the default of 1 is used as the value for
            each count. If you include a <code>Counts</code> array, it must include the same amount
            of values as the <code>Values</code> array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions associated with the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.StatisticValues">
            <summary>
            Gets and sets the property StatisticValues. 
            <para>
            The statistical values for the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.StorageResolution">
            <summary>
            Gets and sets the property StorageResolution. 
            <para>
            Valid values are 1 and 60. Setting this to 1 specifies this metric as a high-resolution
            metric, so that CloudWatch stores the metric with sub-minute resolution down to one
            second. Setting this to 60 specifies this metric as a regular-resolution metric, which
            CloudWatch stores at 1-minute resolution. Currently, high resolution is available
            only for custom metrics. For more information about high-resolution metrics, see <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html#high-resolution-metrics">High-Resolution
            Metrics</a> in the <i>Amazon CloudWatch User Guide</i>. 
            </para>
             
            <para>
            This field is optional, if you do not specify it the default of 60 is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.TimestampUtc">
            <summary>
            Gets and sets the property TimestampUtc. 
            <para>
            The time the metric data was received, expressed as the number of milliseconds since
            Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            When you are using a <code>Put</code> operation, this defines what unit you want to
            use when storing the metric.
            </para>
             
            <para>
            In a <code>Get</code> operation, this displays the unit that is used for the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value for the metric.
            </para>
             
            <para>
            Although the parameter accepts numbers of type Double, CloudWatch rejects values that
            are either too small or too large. Values must be in the range of -2^360 to 2^360.
            In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            Array of numbers representing the values for the metric during the period. Each unique
            value is listed just once in this array, and the corresponding number in the <code>Counts</code>
            array specifies the number of times that value occurred during the period. You can
            include up to 150 unique values in each <code>PutMetricData</code> action that specifies
            a <code>Values</code> array.
            </para>
             
            <para>
            Although the <code>Values</code> array accepts numbers of type <code>Double</code>,
            CloudWatch rejects values that are either too small or too large. Values must be in
            the range of -2^360 to 2^360. In addition, special values (for example, NaN, +Infinity,
            -Infinity) are not supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Timestamp">
            <summary>
            Gets and sets the property TimestampUtc. 
            <para>
            This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use TimestampUtc instead. Setting either Timestamp or
            TimestampUtc results in both Timestamp and TimestampUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. Timestamp
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.
            </para>
             
            <para>
            The time the metric data was received, expressed as the number of milliseconds since
            Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricStat">
            <summary>
            This structure defines the metric to be returned, along with the statistics, period,
            and units.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStat.Metric">
            <summary>
            Gets and sets the property Metric. 
            <para>
            The metric to return, including the metric name, namespace, and dimensions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStat.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The granularity, in seconds, of the returned data points. For metrics with regular
            resolution, a period can be as short as one minute (60 seconds) and must be a multiple
            of 60. For high-resolution metrics that are collected at intervals of less than one
            minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
            metrics are those metrics stored by a <code>PutMetricData</code> call that includes
            a <code>StorageResolution</code> of 1 second.
            </para>
             
            <para>
            If the <code>StartTime</code> parameter specifies a time stamp that is greater than
            3 hours ago, you must specify the period as follows or no data points in that time
            range is returned:
            </para>
             <ul> <li> 
            <para>
            Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).
            </para>
             </li> <li> 
            <para>
            Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).
            </para>
             </li> <li> 
            <para>
            Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStat.Stat">
            <summary>
            Gets and sets the property Stat. 
            <para>
            The statistic to return. It can include any CloudWatch statistic or extended statistic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStat.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            When you are using a <code>Put</code> operation, this defines what unit you want to
            use when storing the metric.
            </para>
             
            <para>
            In a <code>Get</code> operation, if you omit <code>Unit</code> then all data that
            was collected with any unit is returned, along with the corresponding units that were
            specified when the data was reported to CloudWatch. If you specify a unit, the operation
            returns only data that was collected with that unit specified. If you specify a unit
            that does not match the data collected, the results of the operation are null. CloudWatch
            does not perform unit conversions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricStreamEntry">
            <summary>
            This structure contains the configuration information about one metric stream.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStreamEntry.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the metric stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStreamEntry.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date that the metric stream was originally created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStreamEntry.FirehoseArn">
            <summary>
            Gets and sets the property FirehoseArn. 
            <para>
            The ARN of the Kinesis Firehose devlivery stream that is used for this metric stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStreamEntry.LastUpdateDate">
            <summary>
            Gets and sets the property LastUpdateDate. 
            <para>
            The date that the configuration of this metric stream was most recently updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStreamEntry.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the metric stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStreamEntry.OutputFormat">
            <summary>
            Gets and sets the property OutputFormat. 
            <para>
            The output format of this metric stream. Valid values are <code>json</code> and <code>opentelemetry0.7</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStreamEntry.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of this stream. Valid values are <code>running</code> and <code>stopped</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricStreamFilter">
            <summary>
            This structure contains the name of one of the metric namespaces that is listed in
            a filter of a metric stream.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricStreamFilter.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The name of the metric namespace in the filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            <summary>
            An input parameter that is required is missing.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String)">
            <summary>
            Constructs a new MissingRequiredParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PartialFailure">
            <summary>
            This array is empty if the API operation was successful for all the rules specified
            in the request. If the operation could not process one of the rules, the following
            data is returned for each of those rules.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PartialFailure.ExceptionType">
            <summary>
            Gets and sets the property ExceptionType. 
            <para>
            The type of error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PartialFailure.FailureCode">
            <summary>
            Gets and sets the property FailureCode. 
            <para>
            The code of the error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PartialFailure.FailureDescription">
            <summary>
            Gets and sets the property FailureDescription. 
            <para>
            A description of the error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PartialFailure.FailureResource">
            <summary>
            Gets and sets the property FailureResource. 
            <para>
            The specified rule that could not be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutAnomalyDetectorRequest">
            <summary>
            Container for the parameters to the PutAnomalyDetector operation.
            Creates an anomaly detection model for a CloudWatch metric. You can use the model
            to display a band of expected normal values when the metric is graphed.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html">CloudWatch
            Anomaly Detection</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutAnomalyDetectorRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The configuration specifies details about how the anomaly detection model is to be
            trained, including time ranges to exclude when training and updating the model. You
            can specify as many as 10 time ranges.
            </para>
             
            <para>
            The configuration can also include the time zone to use for the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutAnomalyDetectorRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The metric dimensions to create the anomaly detection model for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutAnomalyDetectorRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric to create the anomaly detection model for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutAnomalyDetectorRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric to create the anomaly detection model for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutAnomalyDetectorRequest.Stat">
            <summary>
            Gets and sets the property Stat. 
            <para>
            The statistic to use for the metric and the anomaly detection model.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutAnomalyDetectorResponse">
            <summary>
            This is the response object from the PutAnomalyDetector operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutCompositeAlarmRequest">
            <summary>
            Container for the parameters to the PutCompositeAlarm operation.
            Creates or updates a <i>composite alarm</i>. When you create a composite alarm, you
            specify a rule expression for the alarm that takes into account the alarm states of
            other alarms that you have created. The composite alarm goes into ALARM state only
            if all conditions of the rule are met.
            
             
            <para>
            The alarms specified in a composite alarm's rule expression can include metric alarms
            and other composite alarms.
            </para>
             
            <para>
            Using composite alarms can reduce alarm noise. You can create multiple metric alarms,
            and also create a composite alarm and set up alerts only for the composite alarm.
            For example, you could create a composite alarm that goes into ALARM state only when
            more than one of the underlying metric alarms are in ALARM state.
            </para>
             
            <para>
            Currently, the only alarm actions that can be taken by composite alarms are notifying
            SNS topics.
            </para>
             <note> 
            <para>
            It is possible to create a loop or cycle of composite alarms, where composite alarm
            A depends on composite alarm B, and composite alarm B also depends on composite alarm
            A. In this scenario, you can't delete any composite alarm that is part of the cycle
            because there is always still a composite alarm that depends on that alarm that you
            want to delete.
            </para>
             
            <para>
            To get out of such a situation, you must break the cycle by changing the rule of one
            of the composite alarms in the cycle to remove a dependency that creates the cycle.
            The simplest change to make to break a cycle is to change the <code>AlarmRule</code>
            of one of the alarms to <code>False</code>. 
            </para>
             
            <para>
            Additionally, the evaluation of composite alarms stops if CloudWatch detects a cycle
            in the evaluation path. 
            </para>
             </note> 
            <para>
            When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>.
            The alarm is then evaluated and its state is set appropriately. Any actions associated
            with the new state are then executed. For a composite alarm, this initial time after
            creation is the only time that the alarm can be in <code>INSUFFICIENT_DATA</code>
            state.
            </para>
             
            <para>
            When you update an existing alarm, its state is left unchanged, but the update completely
            overwrites the previous configuration of the alarm.
            </para>
             
            <para>
            If you are an IAM user, you must have <code>iam:CreateServiceLinkedRole</code> to
            create a composite alarm that has Systems Manager OpsItem actions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutCompositeAlarmRequest.ActionsEnabled">
            <summary>
            Gets and sets the property ActionsEnabled. 
            <para>
            Indicates whether actions should be executed during any changes to the alarm state
            of the composite alarm. The default is <code>TRUE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutCompositeAlarmRequest.AlarmActions">
            <summary>
            Gets and sets the property AlarmActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>ALARM</code> state
            from any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
             
            <para>
            Valid Values: <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i>
            </code> | <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:opsitem:<i>severity</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutCompositeAlarmRequest.AlarmDescription">
            <summary>
            Gets and sets the property AlarmDescription. 
            <para>
            The description for the composite alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutCompositeAlarmRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name for the composite alarm. This name must be unique within the Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutCompositeAlarmRequest.AlarmRule">
            <summary>
            Gets and sets the property AlarmRule. 
            <para>
            An expression that specifies which other alarms are to be evaluated to determine this
            composite alarm's state. For each alarm that you reference, you designate a function
            that specifies whether that alarm needs to be in ALARM state, OK state, or INSUFFICIENT_DATA
            state. You can use operators (AND, OR and NOT) to combine multiple functions in a
            single expression. You can use parenthesis to logically group the functions in your
            expression.
            </para>
             
            <para>
            You can use either alarm names or ARNs to reference the other alarms that are to be
            evaluated.
            </para>
             
            <para>
            Functions can include the following:
            </para>
             <ul> <li> 
            <para>
             <code>ALARM("<i>alarm-name</i> or <i>alarm-ARN</i>")</code> is TRUE if the named
            alarm is in ALARM state.
            </para>
             </li> <li> 
            <para>
             <code>OK("<i>alarm-name</i> or <i>alarm-ARN</i>")</code> is TRUE if the named alarm
            is in OK state.
            </para>
             </li> <li> 
            <para>
             <code>INSUFFICIENT_DATA("<i>alarm-name</i> or <i>alarm-ARN</i>")</code> is TRUE if
            the named alarm is in INSUFFICIENT_DATA state.
            </para>
             </li> <li> 
            <para>
             <code>TRUE</code> always evaluates to TRUE.
            </para>
             </li> <li> 
            <para>
             <code>FALSE</code> always evaluates to FALSE.
            </para>
             </li> </ul> 
            <para>
            TRUE and FALSE are useful for testing a complex <code>AlarmRule</code> structure,
            and for testing your alarm actions.
            </para>
             
            <para>
            Alarm names specified in <code>AlarmRule</code> can be surrounded with double-quotes
            ("), but do not have to be.
            </para>
             
            <para>
            The following are some examples of <code>AlarmRule</code>:
            </para>
             <ul> <li> 
            <para>
             <code>ALARM(CPUUtilizationTooHigh) AND ALARM(DiskReadOpsTooHigh)</code> specifies
            that the composite alarm goes into ALARM state only if both CPUUtilizationTooHigh
            and DiskReadOpsTooHigh alarms are in ALARM state.
            </para>
             </li> <li> 
            <para>
             <code>ALARM(CPUUtilizationTooHigh) AND NOT ALARM(DeploymentInProgress)</code> specifies
            that the alarm goes to ALARM state if CPUUtilizationTooHigh is in ALARM state and
            DeploymentInProgress is not in ALARM state. This example reduces alarm noise during
            a known deployment window.
            </para>
             </li> <li> 
            <para>
             <code>(ALARM(CPUUtilizationTooHigh) OR ALARM(DiskReadOpsTooHigh)) AND OK(NetworkOutTooHigh)</code>
            goes into ALARM state if CPUUtilizationTooHigh OR DiskReadOpsTooHigh is in ALARM state,
            and if NetworkOutTooHigh is in OK state. This provides another example of using a
            composite alarm to prevent noise. This rule ensures that you are not notified with
            an alarm action on high CPU or disk usage if a known network problem is also occurring.
            </para>
             </li> </ul> 
            <para>
            The <code>AlarmRule</code> can specify as many as 100 "children" alarms. The <code>AlarmRule</code>
            expression can have as many as 500 elements. Elements are child alarms, TRUE or FALSE
            statements, and parentheses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutCompositeAlarmRequest.InsufficientDataActions">
            <summary>
            Gets and sets the property InsufficientDataActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code>
            state from any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
             
            <para>
            Valid Values: <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutCompositeAlarmRequest.OKActions">
            <summary>
            Gets and sets the property OKActions. 
            <para>
            The actions to execute when this alarm transitions to an <code>OK</code> state from
            any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
             
            <para>
            Valid Values: <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutCompositeAlarmRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs to associate with the composite alarm. You can associate
            as many as 50 tags with an alarm.
            </para>
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions, by granting a user permission to access or change only resources
            with certain tag values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutCompositeAlarmResponse">
            <summary>
            This is the response object from the PutCompositeAlarm operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutDashboardRequest">
            <summary>
            Container for the parameters to the PutDashboard operation.
            Creates a dashboard if it does not already exist, or updates an existing dashboard.
            If you update a dashboard, the entire contents are replaced with what you specify
            here.
            
             
            <para>
            All dashboards in your account are global, not region-specific.
            </para>
             
            <para>
            A simple way to create a dashboard using <code>PutDashboard</code> is to copy an existing
            dashboard. To copy an existing dashboard using the console, you can load the dashboard
            and then use the View/edit source command in the Actions menu to display the JSON
            block for that dashboard. Another way to copy a dashboard is to use <code>GetDashboard</code>,
            and then use the data returned within <code>DashboardBody</code> as the template for
            the new dashboard when you call <code>PutDashboard</code>.
            </para>
             
            <para>
            When you create a dashboard with <code>PutDashboard</code>, a good practice is to
            add a text widget at the top of the dashboard with a message that the dashboard was
            created by script and should not be changed in the console. This message could also
            point console users to the location of the <code>DashboardBody</code> script or the
            CloudFormation template used to create the dashboard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutDashboardRequest.DashboardBody">
            <summary>
            Gets and sets the property DashboardBody. 
            <para>
            The detailed information about the dashboard in JSON format, including the widgets
            to include and their location on the dashboard. This parameter is required.
            </para>
             
            <para>
            For more information about the syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CloudWatch-Dashboard-Body-Structure.html">Dashboard
            Body Structure and Syntax</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutDashboardRequest.DashboardName">
            <summary>
            Gets and sets the property DashboardName. 
            <para>
            The name of the dashboard. If a dashboard with this name already exists, this call
            modifies that dashboard, replacing its current contents. Otherwise, a new dashboard
            is created. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, "-",
            and "_". This parameter is required.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutDashboardResponse">
            <summary>
            This is the response object from the PutDashboard operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutDashboardResponse.DashboardValidationMessages">
            <summary>
            Gets and sets the property DashboardValidationMessages. 
            <para>
            If the input for <code>PutDashboard</code> was correct and the dashboard was successfully
            created or modified, this result is empty.
            </para>
             
            <para>
            If this result includes only warning messages, then the input was valid enough for
            the dashboard to be created or modified, but some elements of the dashboard might
            not render.
            </para>
             
            <para>
            If this result includes error messages, the input was not valid and the operation
            failed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutInsightRuleRequest">
            <summary>
            Container for the parameters to the PutInsightRule operation.
            Creates a Contributor Insights rule. Rules evaluate log events in a CloudWatch Logs
            log group, enabling you to find contributor data for the log events in that log group.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights.html">Using
            Contributor Insights to Analyze High-Cardinality Data</a>.
            
             
            <para>
            If you create a rule, delete it, and then re-create it with the same name, historical
            data from the first time the rule was created might not be available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutInsightRuleRequest.RuleDefinition">
            <summary>
            Gets and sets the property RuleDefinition. 
            <para>
            The definition of the rule, as a JSON object. For details on the valid syntax, see
            <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html">Contributor
            Insights Rule Syntax</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutInsightRuleRequest.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            A unique name for the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutInsightRuleRequest.RuleState">
            <summary>
            Gets and sets the property RuleState. 
            <para>
            The state of the rule. Valid values are ENABLED and DISABLED.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutInsightRuleRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs to associate with the Contributor Insights rule. You can
            associate as many as 50 tags with a rule.
            </para>
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions, by granting a user permission to access or change only the
            resources that have certain tag values.
            </para>
             
            <para>
            To be able to associate tags with a rule, you must have the <code>cloudwatch:TagResource</code>
            permission in addition to the <code>cloudwatch:PutInsightRule</code> permission.
            </para>
             
            <para>
            If you are using this operation to update an existing Contributor Insights rule, any
            tags you specify in this parameter are ignored. To change the tags of an existing
            rule, use <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html">TagResource</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutInsightRuleResponse">
            <summary>
            This is the response object from the PutInsightRule operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricAlarmRequest">
            <summary>
            Container for the parameters to the PutMetricAlarm operation.
            Creates or updates an alarm and associates it with the specified metric, metric math
            expression, or anomaly detection model.
            
             
            <para>
            Alarms based on anomaly detection models cannot have Auto Scaling actions.
            </para>
             
            <para>
            When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>.
            The alarm is then evaluated and its state is set appropriately. Any actions associated
            with the new state are then executed.
            </para>
             
            <para>
            When you update an existing alarm, its state is left unchanged, but the update completely
            overwrites the previous configuration of the alarm.
            </para>
             
            <para>
            If you are an IAM user, you must have Amazon EC2 permissions for some alarm operations:
            </para>
             <ul> <li> 
            <para>
            The <code>iam:CreateServiceLinkedRole</code> for all alarms with EC2 actions
            </para>
             </li> <li> 
            <para>
            The <code>iam:CreateServiceLinkedRole</code> to create an alarm with Systems Manager
            OpsItem actions.
            </para>
             </li> </ul> 
            <para>
            The first time you create an alarm in the AWS Management Console, the CLI, or by using
            the PutMetricAlarm API, CloudWatch creates the necessary service-linked role for you.
            The service-linked roles are called <code>AWSServiceRoleForCloudWatchEvents</code>
            and <code>AWSServiceRoleForCloudWatchAlarms_ActionSSM</code>. For more information,
            see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">AWS
            service-linked role</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.ActionsEnabled">
            <summary>
            Gets and sets the property ActionsEnabled. 
            <para>
            Indicates whether actions should be executed during any changes to the alarm state.
            The default is <code>TRUE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmActions">
            <summary>
            Gets and sets the property AlarmActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>ALARM</code> state
            from any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
             
            <para>
            Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code>
            | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code>
            | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code>
            | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>:autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i>
            </code> | <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:opsitem:<i>severity</i>
            </code> 
            </para>
             
            <para>
            Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code>
            | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code>
            | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmDescription">
            <summary>
            Gets and sets the property AlarmDescription. 
            <para>
            The description for the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name for the alarm. This name must be unique within the Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
             The arithmetic operation to use when comparing the specified statistic and threshold.
            The specified statistic value is used as the first operand.
            </para>
             
            <para>
            The values <code>LessThanLowerOrGreaterThanUpperThreshold</code>, <code>LessThanLowerThreshold</code>,
            and <code>GreaterThanUpperThreshold</code> are used only for alarms based on anomaly
            detection models.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.DatapointsToAlarm">
            <summary>
            Gets and sets the property DatapointsToAlarm. 
            <para>
            The number of data points that must be breaching to trigger the alarm. This is used
            only if you are setting an "M out of N" alarm. In that case, this value is the M.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation">Evaluating
            an Alarm</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions for the metric specified in <code>MetricName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.EvaluateLowSampleCountPercentile">
            <summary>
            Gets and sets the property EvaluateLowSampleCountPercentile. 
            <para>
             Used only for alarms based on percentiles. If you specify <code>ignore</code>, the
            alarm state does not change during periods with too few data points to be statistically
            significant. If you specify <code>evaluate</code> or omit this parameter, the alarm
            is always evaluated and possibly changes state no matter how many data points are
            available. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples">Percentile-Based
            CloudWatch Alarms and Low Data Samples</a>.
            </para>
             
            <para>
            Valid Values: <code>evaluate | ignore</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.EvaluationPeriods">
            <summary>
            Gets and sets the property EvaluationPeriods. 
            <para>
            The number of periods over which data is compared to the specified threshold. If you
            are setting an alarm that requires that a number of consecutive data points be breaching
            to trigger the alarm, this value specifies that number. If you are setting an "M out
            of N" alarm, this value is the N.
            </para>
             
            <para>
            An alarm's total current evaluation period can be no longer than one day, so this
            number multiplied by <code>Period</code> cannot be more than 86,400 seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.ExtendedStatistic">
            <summary>
            Gets and sets the property ExtendedStatistic. 
            <para>
            The percentile statistic for the metric specified in <code>MetricName</code>. Specify
            a value between p0.0 and p100. When you call <code>PutMetricAlarm</code> and specify
            a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code>
            but not both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.InsufficientDataActions">
            <summary>
            Gets and sets the property InsufficientDataActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code>
            state from any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
             
            <para>
            Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code>
            | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code>
            | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code>
            | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>:autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i>
            </code> 
            </para>
             
            <para>
            Valid Values (for use with IAM roles): <code>&gt;arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code>
            | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code>
            | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name for the metric associated with the alarm. For each <code>PutMetricAlarm</code>
            operation, you must specify either <code>MetricName</code> or a <code>Metrics</code>
            array.
            </para>
             
            <para>
            If you are creating an alarm based on a math expression, you cannot specify this parameter,
            or any of the <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>,
            <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters. Instead, you
            specify all this information in the <code>Metrics</code> array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
            An array of <code>MetricDataQuery</code> structures that enable you to create an alarm
            based on the result of a metric math expression. For each <code>PutMetricAlarm</code>
            operation, you must specify either <code>MetricName</code> or a <code>Metrics</code>
            array.
            </para>
             
            <para>
            Each item in the <code>Metrics</code> array either retrieves a metric or performs
            a math expression.
            </para>
             
            <para>
            One item in the <code>Metrics</code> array is the expression that the alarm watches.
            You designate this expression by setting <code>ReturnData</code> to true for this
            object in the array. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDataQuery.html">MetricDataQuery</a>.
            </para>
             
            <para>
            If you use the <code>Metrics</code> parameter, you cannot include the <code>MetricName</code>,
            <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>,
            or <code>ExtendedStatistic</code> parameters of <code>PutMetricAlarm</code> in the
            same operation. Instead, you retrieve the metrics you are using in your math expression
            as part of the <code>Metrics</code> array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace for the metric associated specified in <code>MetricName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.OKActions">
            <summary>
            Gets and sets the property OKActions. 
            <para>
            The actions to execute when this alarm transitions to an <code>OK</code> state from
            any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
             
            <para>
            Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code>
            | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code>
            | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code>
            | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>:autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i>
            </code> 
            </para>
             
            <para>
            Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code>
            | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code>
            | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code>
            | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Recover/1.0</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The length, in seconds, used each time the metric specified in <code>MetricName</code>
            is evaluated. Valid values are 10, 30, and any multiple of 60.
            </para>
             
            <para>
             <code>Period</code> is required for alarms based on static thresholds. If you are
            creating an alarm based on a metric math expression, you specify the period for each
            metric within the objects in the <code>Metrics</code> array.
            </para>
             
            <para>
            Be sure to specify 10 or 30 only for metrics that are stored by a <code>PutMetricData</code>
            call with a <code>StorageResolution</code> of 1. If you specify a period of 10 or
            30 for a metric that does not have sub-minute resolution, the alarm still attempts
            to gather data at the period rate that you specify. In this case, it does not receive
            data for the attempts that do not correspond to a one-minute data resolution, and
            the alarm might often lapse into INSUFFICENT_DATA status. Specifying 10 or 30 also
            sets this alarm as a high-resolution alarm, which has a higher charge than other alarms.
            For more information about pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para>
             
            <para>
            An alarm's total current evaluation period can be no longer than one day, so <code>Period</code>
            multiplied by <code>EvaluationPeriods</code> cannot be more than 86,400 seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
            The statistic for the metric specified in <code>MetricName</code>, other than percentile.
            For percentile statistics, use <code>ExtendedStatistic</code>. When you call <code>PutMetricAlarm</code>
            and specify a <code>MetricName</code>, you must specify either <code>Statistic</code>
            or <code>ExtendedStatistic,</code> but not both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs to associate with the alarm. You can associate as many as
            50 tags with an alarm.
            </para>
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values.
            </para>
             
            <para>
            If you are using this operation to update an existing alarm, any tags you specify
            in this parameter are ignored. To change the tags of an existing alarm, use <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html">TagResource</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_UntagResource.html">UntagResource</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Threshold">
            <summary>
            Gets and sets the property Threshold. 
            <para>
            The value against which the specified statistic is compared.
            </para>
             
            <para>
            This parameter is required for alarms based on static thresholds, but should not be
            used for alarms based on anomaly detection models.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.ThresholdMetricId">
            <summary>
            Gets and sets the property ThresholdMetricId. 
            <para>
            If this is an alarm based on an anomaly detection model, make this value match the
            ID of the <code>ANOMALY_DETECTION_BAND</code> function.
            </para>
             
            <para>
            For an example of how to use this parameter, see the <b>Anomaly Detection Model Alarm</b>
            example on this page.
            </para>
             
            <para>
            If your alarm uses this parameter, it cannot have Auto Scaling actions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.TreatMissingData">
            <summary>
            Gets and sets the property TreatMissingData. 
            <para>
             Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code>
            is omitted, the default behavior of <code>missing</code> is used. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data">Configuring
            How CloudWatch Alarms Treats Missing Data</a>.
            </para>
             
            <para>
            Valid Values: <code>breaching | notBreaching | ignore | missing</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn
            metric are Bytes because NetworkIn tracks the number of bytes that an instance receives
            on all network interfaces. You can also specify a unit when you create a custom metric.
            Units help provide conceptual meaning to your data. Metric data points that specify
            a unit of measure, such as Percent, are aggregated separately.
            </para>
             
            <para>
            If you don't specify <code>Unit</code>, CloudWatch retrieves all unit types that have
            been published for the metric and attempts to evaluate the alarm. Usually, metrics
            are published with only one unit, so the alarm works as intended.
            </para>
             
            <para>
            However, if the metric is published with multiple types of units and you don't specify
            a unit, the alarm's behavior is not defined and it behaves predictably.
            </para>
             
            <para>
            We recommend omitting <code>Unit</code> so that you don't inadvertently specify an
            incorrect unit that is not published for this metric. Doing so causes the alarm to
            be stuck in the <code>INSUFFICIENT DATA</code> state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricAlarmResponse">
            <summary>
            This is the response object from the PutMetricAlarm operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricDataRequest">
            <summary>
            Container for the parameters to the PutMetricData operation.
            Publishes metric data points to Amazon CloudWatch. CloudWatch associates the data
            points with the specified metric. If the specified metric does not exist, CloudWatch
            creates the metric. When CloudWatch creates a metric, it can take up to fifteen minutes
            for the metric to appear in calls to <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html">ListMetrics</a>.
            
             
            <para>
            You can publish either individual data points in the <code>Value</code> field, or
            arrays of values and the number of times each value occurred during the period by
            using the <code>Values</code> and <code>Counts</code> fields in the <code>MetricDatum</code>
            structure. Using the <code>Values</code> and <code>Counts</code> method enables you
            to publish up to 150 values per metric with one <code>PutMetricData</code> request,
            and supports retrieving percentile statistics on this data.
            </para>
             
            <para>
            Each <code>PutMetricData</code> request is limited to 40 KB in size for HTTP POST
            requests. You can send a payload compressed by gzip. Each request is also limited
            to no more than 20 different metrics.
            </para>
             
            <para>
            Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>,
            CloudWatch rejects values that are either too small or too large. Values must be in
            the range of -2^360 to 2^360. In addition, special values (for example, NaN, +Infinity,
            -Infinity) are not supported.
            </para>
             
            <para>
            You can use up to 10 dimensions per metric to further clarify what data the metric
            collects. Each dimension consists of a Name and Value pair. For more information about
            specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing
            Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
             
            <para>
            You specify the time stamp to be associated with each data point. You can specify
            time stamps that are as much as two weeks before the current date, and as much as
            2 hours after the current day and time.
            </para>
             
            <para>
            Data points with time stamps from 24 hours ago or longer can take at least 48 hours
            to become available for <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>
            from the time they are submitted. Data points with time stamps between 3 and 24 hours
            ago can take as much as 2 hours to become available for for <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
             
            <para>
            CloudWatch needs raw data points to calculate percentile statistics. If you publish
            data using a statistic set instead, you can only retrieve percentile statistics for
            this data if one of the following conditions is true:
            </para>
             <ul> <li> 
            <para>
            The <code>SampleCount</code> value of the statistic set is 1 and <code>Min</code>,
            <code>Max</code>, and <code>Sum</code> are all equal.
            </para>
             </li> <li> 
            <para>
            The <code>Min</code> and <code>Max</code> are equal, and <code>Sum</code> is equal
            to <code>Min</code> multiplied by <code>SampleCount</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricDataRequest.MetricData">
            <summary>
            Gets and sets the property MetricData. 
            <para>
            The data for the metric. The array can include no more than 20 metrics per call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricDataRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace for the metric data.
            </para>
             
            <para>
            To avoid conflicts with AWS service namespaces, you should not specify a namespace
            that begins with <code>AWS/</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricDataResponse">
            <summary>
            This is the response object from the PutMetricData operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricStreamRequest">
            <summary>
            Container for the parameters to the PutMetricStream operation.
            Creates or updates a metric stream. Metric streams can automatically stream CloudWatch
            metrics to AWS destinations including Amazon S3 and to many third-party solutions.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Metric-Streams.html">
            Using Metric Streams</a>.
            </para>
             
            <para>
            To create a metric stream, you must be logged on to an account that has the <code>iam:PassRole</code>
            permission and either the <code>CloudWatchFullAccess</code> policy or the <code>cloudwatch:PutMetricStream</code>
            permission.
            </para>
             
            <para>
            When you create or update a metric stream, you choose one of the following:
            </para>
             <ul> <li> 
            <para>
            Stream metrics from all metric namespaces in the account.
            </para>
             </li> <li> 
            <para>
            Stream metrics from all metric namespaces in the account, except for the namespaces
            that you list in <code>ExcludeFilters</code>.
            </para>
             </li> <li> 
            <para>
            Stream metrics from only the metric namespaces that you list in <code>IncludeFilters</code>.
            </para>
             </li> </ul> 
            <para>
            When you use <code>PutMetricStream</code> to create a new metric stream, the stream
            is created in the <code>running</code> state. If you use it to update an existing
            stream, the state of the stream is not changed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricStreamRequest.ExcludeFilters">
            <summary>
            Gets and sets the property ExcludeFilters. 
            <para>
            If you specify this parameter, the stream sends metrics from all metric namespaces
            except for the namespaces that you specify here.
            </para>
             
            <para>
            You cannot include <code>ExcludeFilters</code> and <code>IncludeFilters</code> in
            the same operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricStreamRequest.FirehoseArn">
            <summary>
            Gets and sets the property FirehoseArn. 
            <para>
            The ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.
            This Amazon Kinesis Firehose delivery stream must already exist and must be in the
            same account as the metric stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricStreamRequest.IncludeFilters">
            <summary>
            Gets and sets the property IncludeFilters. 
            <para>
            If you specify this parameter, the stream sends only the metrics from the metric namespaces
            that you specify here.
            </para>
             
            <para>
            You cannot include <code>IncludeFilters</code> and <code>ExcludeFilters</code> in
            the same operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricStreamRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            If you are creating a new metric stream, this is the name for the new stream. The
            name must be different than the names of other metric streams in this account and
            Region.
            </para>
             
            <para>
            If you are updating a metric stream, specify the name of that stream here.
            </para>
             
            <para>
            Valid characters are A-Z, a-z, 0-9, "-" and "_".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricStreamRequest.OutputFormat">
            <summary>
            Gets and sets the property OutputFormat. 
            <para>
            The output format for the stream. Valid values are <code>json</code> and <code>opentelemetry0.7</code>.
            For more information about metric stream output formats, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html">
            Metric streams output formats</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricStreamRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of an IAM role that this metric stream will use to access Amazon Kinesis Firehose
            resources. This IAM role must already exist and must be in the same account as the
            metric stream. This IAM role must include the following permissions:
            </para>
             <ul> <li> 
            <para>
            firehose:PutRecord
            </para>
             </li> <li> 
            <para>
            firehose:PutRecordBatch
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricStreamRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of key-value pairs to associate with the metric stream. You can associate as
            many as 50 tags with a metric stream.
            </para>
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricStreamResponse">
            <summary>
            This is the response object from the PutMetricStream operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricStreamResponse.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the metric stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Range">
            <summary>
            Specifies one range of days or times to exclude from use for training an anomaly detection
            model.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Range.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The end time of the range to exclude. The format is <code>yyyy-MM-dd'T'HH:mm:ss</code>.
            For example, <code>2019-07-01T23:59:59</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Range.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The start time of the range to exclude. The format is <code>yyyy-MM-dd'T'HH:mm:ss</code>.
            For example, <code>2019-07-01T23:59:59</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            <summary>
            The named resource does not exist.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.SetAlarmStateRequest">
            <summary>
            Container for the parameters to the SetAlarmState operation.
            Temporarily sets the state of an alarm for testing purposes. When the updated state
            differs from the previous value, the action configured for the appropriate state is
            invoked. For example, if your alarm is configured to send an Amazon SNS message when
            an alarm is triggered, temporarily changing the alarm state to <code>ALARM</code>
            sends an SNS message.
            
             
            <para>
            Metric alarms returns to their actual state quickly, often within seconds. Because
            the metric alarm state change happens quickly, it is typically only visible in the
            alarm's <b>History</b> tab in the Amazon CloudWatch console or through <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeAlarmHistory.html">DescribeAlarmHistory</a>.
            </para>
             
            <para>
            If you use <code>SetAlarmState</code> on a composite alarm, the composite alarm is
            not guaranteed to return to its actual state. It returns to its actual state only
            once any of its children alarms change state. It is also reevaluated if you update
            its configuration.
            </para>
             
            <para>
            If an alarm triggers EC2 Auto Scaling policies or application Auto Scaling policies,
            you must include information in the <code>StateReasonData</code> parameter to enable
            the policy to take the correct action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason that this alarm is set to this specific state, in text format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateReasonData">
            <summary>
            Gets and sets the property StateReasonData. 
            <para>
            The reason that this alarm is set to this specific state, in JSON format.
            </para>
             
            <para>
            For SNS or EC2 alarm actions, this is just informational. But for EC2 Auto Scaling
            or application Auto Scaling alarm actions, the Auto Scaling policy uses the information
            in this field to take the correct action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            The value of the state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.SetAlarmStateResponse">
            <summary>
            This is the response object from the SetAlarmState operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.StartMetricStreamsRequest">
            <summary>
            Container for the parameters to the StartMetricStreams operation.
            Starts the streaming of metrics for one or more of your metric streams.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StartMetricStreamsRequest.Names">
            <summary>
            Gets and sets the property Names. 
            <para>
            The array of the names of metric streams to start streaming.
            </para>
             
            <para>
            This is an "all or nothing" operation. If you do not have permission to access all
            of the metric streams that you list here, then none of the streams that you list in
            the operation will start streaming.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.StartMetricStreamsResponse">
            <summary>
            This is the response object from the StartMetricStreams operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.StatisticSet">
            <summary>
            Represents a set of statistics that describes a specific metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Maximum">
            <summary>
            Gets and sets the property Maximum. 
            <para>
            The maximum value of the sample set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Minimum">
            <summary>
            Gets and sets the property Minimum. 
            <para>
            The minimum value of the sample set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.SampleCount">
            <summary>
            Gets and sets the property SampleCount. 
            <para>
            The number of samples used for the statistic set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Sum">
            <summary>
            Gets and sets the property Sum. 
            <para>
            The sum of values for the sample set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.StopMetricStreamsRequest">
            <summary>
            Container for the parameters to the StopMetricStreams operation.
            Stops the streaming of metrics for one or more of your metric streams.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StopMetricStreamsRequest.Names">
            <summary>
            Gets and sets the property Names. 
            <para>
            The array of the names of metric streams to stop streaming.
            </para>
             
            <para>
            This is an "all or nothing" operation. If you do not have permission to access all
            of the metric streams that you list here, then none of the streams that you list in
            the operation will stop streaming.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.StopMetricStreamsResponse">
            <summary>
            This is the response object from the StopMetricStreams operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Tag">
            <summary>
            A key-value pair associated with a CloudWatch resource.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            A string that you can use to assign a value. The combination of tag keys and values
            can help you organize and categorize your resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value for the specified tag key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Assigns one or more tags (key-value pairs) to the specified CloudWatch resource. Currently,
            the only CloudWatch resources that can be tagged are alarms and Contributor Insights
            rules.
            
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values.
            </para>
             
            <para>
            Tags don't have any semantic meaning to AWS and are interpreted strictly as strings
            of characters.
            </para>
             
            <para>
            You can use the <code>TagResource</code> action with an alarm that already has tags.
            If you specify a new tag key for the alarm, this tag is appended to the list of tags
            associated with the alarm. If you specify a tag key that is already associated with
            the alarm, the new tag value that you specify replaces the previous value for that
            tag.
            </para>
             
            <para>
            You can associate as many as 50 tags with a CloudWatch resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.TagResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The ARN of the CloudWatch resource that you're adding tags to.
            </para>
             
            <para>
            The ARN format of an alarm is <code>arn:aws:cloudwatch:<i>Region</i>:<i>account-id</i>:alarm:<i>alarm-name</i>
            </code> 
            </para>
             
            <para>
            The ARN format of a Contributor Insights rule is <code>arn:aws:cloudwatch:<i>Region</i>:<i>account-id</i>:insight-rule:<i>insight-rule-name</i>
            </code> 
            </para>
             
            <para>
            For more information about ARN format, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazoncloudwatch.html#amazoncloudwatch-resources-for-iam-policies">
            Resource Types Defined by Amazon CloudWatch</a> in the <i>Amazon Web Services General
            Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of key-value pairs to associate with the alarm.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes one or more tags from the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.UntagResourceRequest.ResourceARN">
            <summary>
            Gets and sets the property ResourceARN. 
            <para>
            The ARN of the CloudWatch resource that you're removing tags from.
            </para>
             
            <para>
            The ARN format of an alarm is <code>arn:aws:cloudwatch:<i>Region</i>:<i>account-id</i>:alarm:<i>alarm-name</i>
            </code> 
            </para>
             
            <para>
            The ARN format of a Contributor Insights rule is <code>arn:aws:cloudwatch:<i>Region</i>:<i>account-id</i>:insight-rule:<i>insight-rule-name</i>
            </code> 
            </para>
             
            <para>
            For more information about ARN format, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazoncloudwatch.html#amazoncloudwatch-resources-for-iam-policies">
            Resource Types Defined by Amazon CloudWatch</a> in the <i>Amazon Web Services General
            Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The list of tag keys to remove from the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.CloudWatchPaginatorFactory">
             <summary>
             Paginators for the CloudWatch service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.CloudWatchPaginatorFactory.DescribeAlarmHistory(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest)">
             <summary>
             Paginator for DescribeAlarmHistory operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.CloudWatchPaginatorFactory.DescribeAlarms(Amazon.CloudWatch.Model.DescribeAlarmsRequest)">
             <summary>
             Paginator for DescribeAlarms operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.CloudWatchPaginatorFactory.DescribeInsightRules(Amazon.CloudWatch.Model.DescribeInsightRulesRequest)">
             <summary>
             Paginator for DescribeInsightRules operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.CloudWatchPaginatorFactory.GetMetricData(Amazon.CloudWatch.Model.GetMetricDataRequest)">
             <summary>
             Paginator for GetMetricData operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.CloudWatchPaginatorFactory.ListDashboards(Amazon.CloudWatch.Model.ListDashboardsRequest)">
             <summary>
             Paginator for ListDashboards operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.CloudWatchPaginatorFactory.ListMetrics(Amazon.CloudWatch.Model.ListMetricsRequest)">
             <summary>
             Paginator for ListMetrics operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.CloudWatchPaginatorFactory.ListMetricStreams(Amazon.CloudWatch.Model.ListMetricStreamsRequest)">
             <summary>
             Paginator for ListMetricStreams operation
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmHistoryPaginator">
            <summary>
            Base class for DescribeAlarmHistory paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryPaginator.AlarmHistoryItems">
            <summary>
            Enumerable containing all of the AlarmHistoryItems
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsPaginator">
            <summary>
            Base class for DescribeAlarms paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsPaginator.MetricAlarms">
            <summary>
            Enumerable containing all of the MetricAlarms
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsPaginator.CompositeAlarms">
            <summary>
            Enumerable containing all of the CompositeAlarms
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeInsightRulesPaginator">
            <summary>
            Base class for DescribeInsightRules paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeInsightRulesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricDataPaginator">
            <summary>
            Base class for GetMetricData paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataPaginator.MetricDataResults">
            <summary>
            Enumerable containing all of the MetricDataResults
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricDataPaginator.Messages">
            <summary>
            Enumerable containing all of the Messages
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ICloudWatchPaginatorFactory">
             <summary>
             Paginators for the CloudWatch service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ICloudWatchPaginatorFactory.DescribeAlarmHistory(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest)">
             <summary>
             Paginator for DescribeAlarmHistory operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ICloudWatchPaginatorFactory.DescribeAlarms(Amazon.CloudWatch.Model.DescribeAlarmsRequest)">
             <summary>
             Paginator for DescribeAlarms operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ICloudWatchPaginatorFactory.DescribeInsightRules(Amazon.CloudWatch.Model.DescribeInsightRulesRequest)">
             <summary>
             Paginator for DescribeInsightRules operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ICloudWatchPaginatorFactory.GetMetricData(Amazon.CloudWatch.Model.GetMetricDataRequest)">
             <summary>
             Paginator for GetMetricData operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ICloudWatchPaginatorFactory.ListDashboards(Amazon.CloudWatch.Model.ListDashboardsRequest)">
             <summary>
             Paginator for ListDashboards operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ICloudWatchPaginatorFactory.ListMetrics(Amazon.CloudWatch.Model.ListMetricsRequest)">
             <summary>
             Paginator for ListMetrics operation
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ICloudWatchPaginatorFactory.ListMetricStreams(Amazon.CloudWatch.Model.ListMetricStreamsRequest)">
             <summary>
             Paginator for ListMetricStreams operation
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.IDescribeAlarmHistoryPaginator">
             <summary>
             Paginator for the DescribeAlarmHistory operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IDescribeAlarmHistoryPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IDescribeAlarmHistoryPaginator.AlarmHistoryItems">
            <summary>
            Enumerable containing all of the AlarmHistoryItems
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.IDescribeAlarmsPaginator">
             <summary>
             Paginator for the DescribeAlarms operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IDescribeAlarmsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IDescribeAlarmsPaginator.MetricAlarms">
            <summary>
            Enumerable containing all of the MetricAlarms
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IDescribeAlarmsPaginator.CompositeAlarms">
            <summary>
            Enumerable containing all of the CompositeAlarms
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.IDescribeInsightRulesPaginator">
             <summary>
             Paginator for the DescribeInsightRules operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IDescribeInsightRulesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.IGetMetricDataPaginator">
             <summary>
             Paginator for the GetMetricData operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IGetMetricDataPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IGetMetricDataPaginator.MetricDataResults">
            <summary>
            Enumerable containing all of the MetricDataResults
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IGetMetricDataPaginator.Messages">
            <summary>
            Enumerable containing all of the Messages
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.IListDashboardsPaginator">
             <summary>
             Paginator for the ListDashboards operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IListDashboardsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IListDashboardsPaginator.DashboardEntries">
            <summary>
            Enumerable containing all of the DashboardEntries
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.IListMetricsPaginator">
             <summary>
             Paginator for the ListMetrics operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IListMetricsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IListMetricsPaginator.Metrics">
            <summary>
            Enumerable containing all of the Metrics
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.IListMetricStreamsPaginator">
             <summary>
             Paginator for the ListMetricStreams operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.IListMetricStreamsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListDashboardsPaginator">
            <summary>
            Base class for ListDashboards paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListDashboardsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListDashboardsPaginator.DashboardEntries">
            <summary>
            Enumerable containing all of the DashboardEntries
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricsPaginator">
            <summary>
            Base class for ListMetrics paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsPaginator.Metrics">
            <summary>
            Enumerable containing all of the Metrics
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricStreamsPaginator">
            <summary>
            Base class for ListMetricStreams paginators.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricStreamsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchRequest">
            <summary>
            Base class for CloudWatch operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.AlarmType">
            <summary>
            Constants used for properties of type AlarmType.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.AlarmType.CompositeAlarm">
            <summary>
            Constant CompositeAlarm for AlarmType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.AlarmType.MetricAlarm">
            <summary>
            Constant MetricAlarm for AlarmType
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AlarmType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AlarmType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AlarmType.op_Implicit(System.String)~Amazon.CloudWatch.AlarmType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.AnomalyDetectorStateValue">
            <summary>
            Constants used for properties of type AnomalyDetectorStateValue.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.AnomalyDetectorStateValue.PENDING_TRAINING">
            <summary>
            Constant PENDING_TRAINING for AnomalyDetectorStateValue
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.AnomalyDetectorStateValue.TRAINED">
            <summary>
            Constant TRAINED for AnomalyDetectorStateValue
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.AnomalyDetectorStateValue.TRAINED_INSUFFICIENT_DATA">
            <summary>
            Constant TRAINED_INSUFFICIENT_DATA for AnomalyDetectorStateValue
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AnomalyDetectorStateValue.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AnomalyDetectorStateValue.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AnomalyDetectorStateValue.op_Implicit(System.String)~Amazon.CloudWatch.AnomalyDetectorStateValue">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.ComparisonOperator">
            <summary>
            Constants used for properties of type ComparisonOperator.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.GreaterThanOrEqualToThreshold">
            <summary>
            Constant GreaterThanOrEqualToThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.GreaterThanThreshold">
            <summary>
            Constant GreaterThanThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.GreaterThanUpperThreshold">
            <summary>
            Constant GreaterThanUpperThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.LessThanLowerOrGreaterThanUpperThreshold">
            <summary>
            Constant LessThanLowerOrGreaterThanUpperThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.LessThanLowerThreshold">
            <summary>
            Constant LessThanLowerThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.LessThanOrEqualToThreshold">
            <summary>
            Constant LessThanOrEqualToThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.LessThanThreshold">
            <summary>
            Constant LessThanThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.ComparisonOperator.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.ComparisonOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.ComparisonOperator.op_Implicit(System.String)~Amazon.CloudWatch.ComparisonOperator">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.HistoryItemType">
            <summary>
            Constants used for properties of type HistoryItemType.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.Action">
            <summary>
            Constant Action for HistoryItemType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.ConfigurationUpdate">
            <summary>
            Constant ConfigurationUpdate for HistoryItemType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.StateUpdate">
            <summary>
            Constant StateUpdate for HistoryItemType
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.HistoryItemType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.HistoryItemType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.HistoryItemType.op_Implicit(System.String)~Amazon.CloudWatch.HistoryItemType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.MetricStreamOutputFormat">
            <summary>
            Constants used for properties of type MetricStreamOutputFormat.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.MetricStreamOutputFormat.Json">
            <summary>
            Constant Json for MetricStreamOutputFormat
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.MetricStreamOutputFormat.Opentelemetry07">
            <summary>
            Constant Opentelemetry07 for MetricStreamOutputFormat
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.MetricStreamOutputFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.MetricStreamOutputFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.MetricStreamOutputFormat.op_Implicit(System.String)~Amazon.CloudWatch.MetricStreamOutputFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.RecentlyActive">
            <summary>
            Constants used for properties of type RecentlyActive.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.RecentlyActive.PT3H">
            <summary>
            Constant PT3H for RecentlyActive
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.RecentlyActive.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.RecentlyActive.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.RecentlyActive.op_Implicit(System.String)~Amazon.CloudWatch.RecentlyActive">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.ScanBy">
            <summary>
            Constants used for properties of type ScanBy.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ScanBy.TimestampAscending">
            <summary>
            Constant TimestampAscending for ScanBy
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ScanBy.TimestampDescending">
            <summary>
            Constant TimestampDescending for ScanBy
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.ScanBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.ScanBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.ScanBy.op_Implicit(System.String)~Amazon.CloudWatch.ScanBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.StandardUnit">
            <summary>
            Constants used for properties of type StandardUnit.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Bits">
            <summary>
            Constant Bits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.BitsSecond">
            <summary>
            Constant BitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Bytes">
            <summary>
            Constant Bytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.BytesSecond">
            <summary>
            Constant BytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Count">
            <summary>
            Constant Count for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.CountSecond">
            <summary>
            Constant CountSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Gigabits">
            <summary>
            Constant Gigabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.GigabitsSecond">
            <summary>
            Constant GigabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Gigabytes">
            <summary>
            Constant Gigabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.GigabytesSecond">
            <summary>
            Constant GigabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Kilobits">
            <summary>
            Constant Kilobits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.KilobitsSecond">
            <summary>
            Constant KilobitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Kilobytes">
            <summary>
            Constant Kilobytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.KilobytesSecond">
            <summary>
            Constant KilobytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Megabits">
            <summary>
            Constant Megabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.MegabitsSecond">
            <summary>
            Constant MegabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Megabytes">
            <summary>
            Constant Megabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.MegabytesSecond">
            <summary>
            Constant MegabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Microseconds">
            <summary>
            Constant Microseconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Milliseconds">
            <summary>
            Constant Milliseconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.None">
            <summary>
            Constant None for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Percent">
            <summary>
            Constant Percent for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Seconds">
            <summary>
            Constant Seconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Terabits">
            <summary>
            Constant Terabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.TerabitsSecond">
            <summary>
            Constant TerabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Terabytes">
            <summary>
            Constant Terabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.TerabytesSecond">
            <summary>
            Constant TerabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StandardUnit.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StandardUnit.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.StandardUnit.op_Implicit(System.String)~Amazon.CloudWatch.StandardUnit">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.StateValue">
            <summary>
            Constants used for properties of type StateValue.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.ALARM">
            <summary>
            Constant ALARM for StateValue
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.INSUFFICIENT_DATA">
            <summary>
            Constant INSUFFICIENT_DATA for StateValue
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.OK">
            <summary>
            Constant OK for StateValue
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StateValue.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StateValue.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.StateValue.op_Implicit(System.String)~Amazon.CloudWatch.StateValue">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Statistic">
            <summary>
            Constants used for properties of type Statistic.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Average">
            <summary>
            Constant Average for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Maximum">
            <summary>
            Constant Maximum for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Minimum">
            <summary>
            Constant Minimum for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.SampleCount">
            <summary>
            Constant SampleCount for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Sum">
            <summary>
            Constant Sum for Statistic
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Statistic.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Statistic.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.Statistic.op_Implicit(System.String)~Amazon.CloudWatch.Statistic">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.StatusCode">
            <summary>
            Constants used for properties of type StatusCode.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StatusCode.Complete">
            <summary>
            Constant Complete for StatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StatusCode.InternalError">
            <summary>
            Constant InternalError for StatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StatusCode.PartialData">
            <summary>
            Constant PartialData for StatusCode
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StatusCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StatusCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.StatusCode.op_Implicit(System.String)~Amazon.CloudWatch.StatusCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchClient">
             <summary>
             Implementation for accessing CloudWatch
            
             Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications
             you run on AWS in real time. You can use CloudWatch to collect and track metrics,
             which are the variables you want to measure for your resources and applications.
             
              
             <para>
             CloudWatch alarms send notifications or automatically change the resources you are
             monitoring based on rules that you define. For example, you can monitor the CPU usage
             and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine
             whether you should launch additional instances to handle increased load. You can also
             use this data to stop under-used instances to save money.
             </para>
              
             <para>
             In addition to monitoring the built-in metrics that come with AWS, you can monitor
             your own custom metrics. With CloudWatch, you gain system-wide visibility into resource
             utilization, application performance, and operational health.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor">
             <summary>
             Constructs AmazonCloudWatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonCloudWatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.CloudWatch.AmazonCloudWatchConfig)">
             <summary>
             Constructs AmazonCloudWatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials and an
            AmazonCloudWatchClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DeleteAlarmsAsync(Amazon.CloudWatch.Model.DeleteAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified alarms. You can delete up to 100 alarms in one operation. However,
            this total can include no more than one composite alarm. For example, you could delete
            99 metric alarms and one composite alarms with one operation, but you can't delete
            two composite alarms with one operation.
            
             
            <para>
             In the event of an error, no alarms are deleted.
            </para>
             <note> 
            <para>
            It is possible to create a loop or cycle of composite alarms, where composite alarm
            A depends on composite alarm B, and composite alarm B also depends on composite alarm
            A. In this scenario, you can't delete any composite alarm that is part of the cycle
            because there is always still a composite alarm that depends on that alarm that you
            want to delete.
            </para>
             
            <para>
            To get out of such a situation, you must break the cycle by changing the rule of one
            of the composite alarms in the cycle to remove a dependency that creates the cycle.
            The simplest change to make to break a cycle is to change the <code>AlarmRule</code>
            of one of the alarms to <code>False</code>. 
            </para>
             
            <para>
            Additionally, the evaluation of composite alarms stops if CloudWatch detects a cycle
            in the evaluation path. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAlarms service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAlarms service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteAlarms">REST API Reference for DeleteAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DeleteAnomalyDetectorAsync(Amazon.CloudWatch.Model.DeleteAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified anomaly detection model from your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAnomalyDetector service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteAnomalyDetector">REST API Reference for DeleteAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DeleteDashboardsAsync(Amazon.CloudWatch.Model.DeleteDashboardsRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes all dashboards that you specify. You can specify up to 100 dashboards to delete.
            If there is an error during this call, no dashboards are deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDashboards service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDashboards service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.DashboardNotFoundErrorException">
            The specified dashboard does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteDashboards">REST API Reference for DeleteDashboards Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DeleteInsightRulesAsync(Amazon.CloudWatch.Model.DeleteInsightRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified Contributor Insights rules.
            
             
            <para>
            If you create a rule, delete it, and then re-create it with the same name, historical
            data from the first time the rule was created might not be available.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteInsightRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteInsightRules service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteInsightRules">REST API Reference for DeleteInsightRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DeleteMetricStreamAsync(Amazon.CloudWatch.Model.DeleteMetricStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the metric stream that you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMetricStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMetricStream service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteMetricStream">REST API Reference for DeleteMetricStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmHistoryAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the history for the specified alarm. You can filter the results by date
            range or item type. If an alarm name is not specified, the histories for either all
            metric alarms or all composite alarms are returned.
            
             
            <para>
            CloudWatch retains the history of an alarm even if you delete the alarm.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarmHistory service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmHistory">REST API Reference for DescribeAlarmHistory Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmHistoryAsync(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the history for the specified alarm. You can filter the results by date
            range or item type. If an alarm name is not specified, the histories for either all
            metric alarms or all composite alarms are returned.
            
             
            <para>
            CloudWatch retains the history of an alarm even if you delete the alarm.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmHistory service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarmHistory service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmHistory">REST API Reference for DescribeAlarmHistory Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the specified alarms. You can filter the results by specifying a prefix
            for the alarm name, the alarm state, or a prefix for any action.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarms service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarms">REST API Reference for DescribeAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmsAsync(Amazon.CloudWatch.Model.DescribeAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the specified alarms. You can filter the results by specifying a prefix
            for the alarm name, the alarm state, or a prefix for any action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAlarms service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarms service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarms">REST API Reference for DescribeAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmsForMetricAsync(Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the alarms for the specified metric. To filter the results, specify a statistic,
            period, or unit.
            
             
            <para>
            This operation retrieves only standard alarms that are based on the specified metric.
            It does not return alarms based on math expressions that use the specified metric,
            or composite alarms that use the specified metric.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmsForMetric service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarmsForMetric service method, as returned by CloudWatch.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmsForMetric">REST API Reference for DescribeAlarmsForMetric Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAnomalyDetectorsAsync(Amazon.CloudWatch.Model.DescribeAnomalyDetectorsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the anomaly detection models that you have created in your account. You can
            list all models in your account or filter the results to only the models that are
            related to a certain namespace, metric name, or metric dimension.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAnomalyDetectors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAnomalyDetectors service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAnomalyDetectors">REST API Reference for DescribeAnomalyDetectors Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeInsightRulesAsync(Amazon.CloudWatch.Model.DescribeInsightRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all the Contributor Insights rules in your account.
            
             
            <para>
            For more information about Contributor Insights, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights.html">Using
            Contributor Insights to Analyze High-Cardinality Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInsightRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInsightRules service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeInsightRules">REST API Reference for DescribeInsightRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DisableAlarmActionsAsync(Amazon.CloudWatch.Model.DisableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Disables the actions for the specified alarms. When an alarm's actions are disabled,
            the alarm actions do not execute when the alarm state changes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableAlarmActions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisableAlarmActions service method, as returned by CloudWatch.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DisableAlarmActions">REST API Reference for DisableAlarmActions Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DisableInsightRulesAsync(Amazon.CloudWatch.Model.DisableInsightRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Disables the specified Contributor Insights rules. When rules are disabled, they do
            not analyze log groups and do not incur costs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableInsightRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisableInsightRules service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DisableInsightRules">REST API Reference for DisableInsightRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.EnableAlarmActionsAsync(Amazon.CloudWatch.Model.EnableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Enables the actions for the specified alarms.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableAlarmActions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the EnableAlarmActions service method, as returned by CloudWatch.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/EnableAlarmActions">REST API Reference for EnableAlarmActions Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.EnableInsightRulesAsync(Amazon.CloudWatch.Model.EnableInsightRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Enables the specified Contributor Insights rules. When rules are enabled, they immediately
            begin analyzing log data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableInsightRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the EnableInsightRules service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.LimitExceededException">
            The operation exceeded one or more limits.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/EnableInsightRules">REST API Reference for EnableInsightRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.GetDashboardAsync(Amazon.CloudWatch.Model.GetDashboardRequest,System.Threading.CancellationToken)">
            <summary>
            Displays the details of the dashboard that you specify.
            
             
            <para>
            To copy an existing dashboard, use <code>GetDashboard</code>, and then use the data
            returned within <code>DashboardBody</code> as the template for the new dashboard when
            you call <code>PutDashboard</code> to create the copy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDashboard service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDashboard service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.DashboardNotFoundErrorException">
            The specified dashboard does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetDashboard">REST API Reference for GetDashboard Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.GetInsightRuleReportAsync(Amazon.CloudWatch.Model.GetInsightRuleReportRequest,System.Threading.CancellationToken)">
            <summary>
            This operation returns the time series data collected by a Contributor Insights rule.
            The data includes the identity and number of contributors to the log group.
            
             
            <para>
            You can also optionally return one or more statistics about each data point in the
            time series. These statistics can include the following:
            </para>
             <ul> <li> 
            <para>
             <code>UniqueContributors</code> -- the number of unique contributors for each data
            point.
            </para>
             </li> <li> 
            <para>
             <code>MaxContributorValue</code> -- the value of the top contributor for each data
            point. The identity of the contributor might change for each data point in the graph.
            </para>
             
            <para>
            If this rule aggregates by COUNT, the top contributor for each data point is the contributor
            with the most occurrences in that period. If the rule aggregates by SUM, the top contributor
            is the contributor with the highest sum in the log field specified by the rule's <code>Value</code>,
            during that period.
            </para>
             </li> <li> 
            <para>
             <code>SampleCount</code> -- the number of data points matched by the rule.
            </para>
             </li> <li> 
            <para>
             <code>Sum</code> -- the sum of the values from all contributors during the time period
            represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Minimum</code> -- the minimum value from a single observation during the time
            period represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Maximum</code> -- the maximum value from a single observation during the time
            period represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Average</code> -- the average value from all contributors during the time period
            represented by that data point.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetInsightRuleReport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetInsightRuleReport service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetInsightRuleReport">REST API Reference for GetInsightRuleReport Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.GetMetricDataAsync(Amazon.CloudWatch.Model.GetMetricDataRequest,System.Threading.CancellationToken)">
            <summary>
            You can use the <code>GetMetricData</code> API to retrieve as many as 500 different
            metrics in a single request, with a total of as many as 100,800 data points. You can
            also optionally perform math expressions on the values of the returned statistics,
            to create new time series that represent new insights into your data. For example,
            using Lambda metrics, you could divide the Errors metric by the Invocations metric
            to get an error rate time series. For more information about metric math expressions,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric
            Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.
            
             
            <para>
            Calls to the <code>GetMetricData</code> API have a different pricing structure than
            calls to <code>GetMetricStatistics</code>. For more information about pricing, see
            <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.
            </para>
             
            <para>
            Amazon CloudWatch retains metric data as follows:
            </para>
             <ul> <li> 
            <para>
            Data points with a period of less than 60 seconds are available for 3 hours. These
            data points are high-resolution metrics and are available only for custom metrics
            that have been defined with a <code>StorageResolution</code> of 1.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 60 seconds (1-minute) are available for 15 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 300 seconds (5-minute) are available for 63 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 3600 seconds (1 hour) are available for 455 days (15
            months).
            </para>
             </li> </ul> 
            <para>
            Data points that are initially published with a shorter period are aggregated together
            for long-term storage. For example, if you collect data using a period of 1 minute,
            the data remains available for 15 days with 1-minute resolution. After 15 days, this
            data is still available, but is aggregated and retrievable only with a resolution
            of 5 minutes. After 63 days, the data is further aggregated and is available with
            a resolution of 1 hour.
            </para>
             
            <para>
            If you omit <code>Unit</code> in your request, all data that was collected with any
            unit is returned, along with the corresponding units that were specified when the
            data was reported to CloudWatch. If you specify a unit, the operation returns only
            data that was collected with that unit specified. If you specify a unit that does
            not match the data collected, the results of the operation are null. CloudWatch does
            not perform unit conversions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMetricData service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricData">REST API Reference for GetMetricData Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.GetMetricStatisticsAsync(Amazon.CloudWatch.Model.GetMetricStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets statistics for the specified metric.
            
             
            <para>
            The maximum number of data points returned from a single call is 1,440. If you request
            more than 1,440 data points, CloudWatch returns an error. To reduce the number of
            data points, you can narrow the specified time range and make multiple requests across
            adjacent time ranges, or you can increase the specified period. Data points are not
            returned in chronological order.
            </para>
             
            <para>
            CloudWatch aggregates data points based on the length of the period that you specify.
            For example, if you request statistics with a one-hour period, CloudWatch aggregates
            all data points with time stamps that fall within each one-hour period. Therefore,
            the number of values aggregated by CloudWatch is larger than the number of data points
            returned.
            </para>
             
            <para>
            CloudWatch needs raw data points to calculate percentile statistics. If you publish
            data using a statistic set instead, you can only retrieve percentile statistics for
            this data if one of the following conditions is true:
            </para>
             <ul> <li> 
            <para>
            The SampleCount value of the statistic set is 1.
            </para>
             </li> <li> 
            <para>
            The Min and the Max values of the statistic set are equal.
            </para>
             </li> </ul> 
            <para>
            Percentile statistics are not available for metrics when any of the metric values
            are negative numbers.
            </para>
             
            <para>
            Amazon CloudWatch retains metric data as follows:
            </para>
             <ul> <li> 
            <para>
            Data points with a period of less than 60 seconds are available for 3 hours. These
            data points are high-resolution metrics and are available only for custom metrics
            that have been defined with a <code>StorageResolution</code> of 1.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 60 seconds (1-minute) are available for 15 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 300 seconds (5-minute) are available for 63 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 3600 seconds (1 hour) are available for 455 days (15
            months).
            </para>
             </li> </ul> 
            <para>
            Data points that are initially published with a shorter period are aggregated together
            for long-term storage. For example, if you collect data using a period of 1 minute,
            the data remains available for 15 days with 1-minute resolution. After 15 days, this
            data is still available, but is aggregated and retrievable only with a resolution
            of 5 minutes. After 63 days, the data is further aggregated and is available with
            a resolution of 1 hour.
            </para>
             
            <para>
            CloudWatch started retaining 5-minute and 1-hour metric data as of July 9, 2016.
            </para>
             
            <para>
            For information about metrics and dimensions supported by AWS services, see the <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CW_Support_For_AWS.html">Amazon
            CloudWatch Metrics and Dimensions Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricStatistics service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMetricStatistics service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            Parameters were used together that cannot be used together.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricStatistics">REST API Reference for GetMetricStatistics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.GetMetricStreamAsync(Amazon.CloudWatch.Model.GetMetricStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the metric stream that you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMetricStream service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            Parameters were used together that cannot be used together.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricStream">REST API Reference for GetMetricStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.GetMetricWidgetImageAsync(Amazon.CloudWatch.Model.GetMetricWidgetImageRequest,System.Threading.CancellationToken)">
            <summary>
            You can use the <code>GetMetricWidgetImage</code> API to retrieve a snapshot graph
            of one or more Amazon CloudWatch metrics as a bitmap image. You can then embed this
            image into your services and products, such as wiki pages, reports, and documents.
            You could also retrieve images regularly, such as every minute, and create your own
            custom live dashboard.
            
             
            <para>
            The graph you retrieve can include all CloudWatch metric graph features, including
            metric math and horizontal and vertical annotations.
            </para>
             
            <para>
            There is a limit of 20 transactions per second for this API. Each <code>GetMetricWidgetImage</code>
            action has the following limits:
            </para>
             <ul> <li> 
            <para>
            As many as 100 metrics in the graph.
            </para>
             </li> <li> 
            <para>
            Up to 100 KB uncompressed payload.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricWidgetImage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMetricWidgetImage service method, as returned by CloudWatch.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricWidgetImage">REST API Reference for GetMetricWidgetImage Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.ListDashboardsAsync(Amazon.CloudWatch.Model.ListDashboardsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the dashboards for your account. If you include <code>DashboardNamePrefix</code>,
            only those dashboards with names starting with the prefix are listed. Otherwise, all
            dashboards in your account are listed. 
            
             
            <para>
             <code>ListDashboards</code> returns up to 1000 results on one page. If there are
            more than 1000 dashboards, you can call <code>ListDashboards</code> again and include
            the value you received for <code>NextToken</code> in the first call, to receive the
            next 1000 results.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDashboards service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDashboards service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListDashboards">REST API Reference for ListDashboards Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.ListMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            List the specified metrics. You can use the returned metrics with <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>
            to obtain statistical data.
            
             
            <para>
            Up to 500 results are returned for any one call. To retrieve additional results, use
            the returned token with subsequent calls.
            </para>
             
            <para>
            After you create a metric, allow up to 15 minutes before the metric appears. You can
            see statistics about the metric sooner by using <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
             
            <para>
             <code>ListMetrics</code> doesn't return information about metrics if those metrics
            haven't reported data in the past two weeks. To retrieve those metrics, use <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMetrics service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListMetrics">REST API Reference for ListMetrics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.ListMetricsAsync(Amazon.CloudWatch.Model.ListMetricsRequest,System.Threading.CancellationToken)">
            <summary>
            List the specified metrics. You can use the returned metrics with <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>
            to obtain statistical data.
            
             
            <para>
            Up to 500 results are returned for any one call. To retrieve additional results, use
            the returned token with subsequent calls.
            </para>
             
            <para>
            After you create a metric, allow up to 15 minutes before the metric appears. You can
            see statistics about the metric sooner by using <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
             
            <para>
             <code>ListMetrics</code> doesn't return information about metrics if those metrics
            haven't reported data in the past two weeks. To retrieve those metrics, use <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMetrics service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMetrics service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListMetrics">REST API Reference for ListMetrics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.ListMetricStreamsAsync(Amazon.CloudWatch.Model.ListMetricStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of metric streams in this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMetricStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMetricStreams service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListMetricStreams">REST API Reference for ListMetricStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.ListTagsForResourceAsync(Amazon.CloudWatch.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Displays the tags associated with a CloudWatch resource. Currently, alarms and Contributor
            Insights rules support tagging.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutAnomalyDetectorAsync(Amazon.CloudWatch.Model.PutAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an anomaly detection model for a CloudWatch metric. You can use the model
            to display a band of expected normal values when the metric is graphed.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html">CloudWatch
            Anomaly Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAnomalyDetector service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.LimitExceededException">
            The operation exceeded one or more limits.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutAnomalyDetector">REST API Reference for PutAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutCompositeAlarmAsync(Amazon.CloudWatch.Model.PutCompositeAlarmRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a <i>composite alarm</i>. When you create a composite alarm, you
            specify a rule expression for the alarm that takes into account the alarm states of
            other alarms that you have created. The composite alarm goes into ALARM state only
            if all conditions of the rule are met.
            
             
            <para>
            The alarms specified in a composite alarm's rule expression can include metric alarms
            and other composite alarms.
            </para>
             
            <para>
            Using composite alarms can reduce alarm noise. You can create multiple metric alarms,
            and also create a composite alarm and set up alerts only for the composite alarm.
            For example, you could create a composite alarm that goes into ALARM state only when
            more than one of the underlying metric alarms are in ALARM state.
            </para>
             
            <para>
            Currently, the only alarm actions that can be taken by composite alarms are notifying
            SNS topics.
            </para>
             <note> 
            <para>
            It is possible to create a loop or cycle of composite alarms, where composite alarm
            A depends on composite alarm B, and composite alarm B also depends on composite alarm
            A. In this scenario, you can't delete any composite alarm that is part of the cycle
            because there is always still a composite alarm that depends on that alarm that you
            want to delete.
            </para>
             
            <para>
            To get out of such a situation, you must break the cycle by changing the rule of one
            of the composite alarms in the cycle to remove a dependency that creates the cycle.
            The simplest change to make to break a cycle is to change the <code>AlarmRule</code>
            of one of the alarms to <code>False</code>. 
            </para>
             
            <para>
            Additionally, the evaluation of composite alarms stops if CloudWatch detects a cycle
            in the evaluation path. 
            </para>
             </note> 
            <para>
            When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>.
            The alarm is then evaluated and its state is set appropriately. Any actions associated
            with the new state are then executed. For a composite alarm, this initial time after
            creation is the only time that the alarm can be in <code>INSUFFICIENT_DATA</code>
            state.
            </para>
             
            <para>
            When you update an existing alarm, its state is left unchanged, but the update completely
            overwrites the previous configuration of the alarm.
            </para>
             
            <para>
            If you are an IAM user, you must have <code>iam:CreateServiceLinkedRole</code> to
            create a composite alarm that has Systems Manager OpsItem actions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutCompositeAlarm service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutCompositeAlarm service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.LimitExceededException">
            The quota for alarms for this customer has already been reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutCompositeAlarm">REST API Reference for PutCompositeAlarm Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutDashboardAsync(Amazon.CloudWatch.Model.PutDashboardRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a dashboard if it does not already exist, or updates an existing dashboard.
            If you update a dashboard, the entire contents are replaced with what you specify
            here.
            
             
            <para>
            All dashboards in your account are global, not region-specific.
            </para>
             
            <para>
            A simple way to create a dashboard using <code>PutDashboard</code> is to copy an existing
            dashboard. To copy an existing dashboard using the console, you can load the dashboard
            and then use the View/edit source command in the Actions menu to display the JSON
            block for that dashboard. Another way to copy a dashboard is to use <code>GetDashboard</code>,
            and then use the data returned within <code>DashboardBody</code> as the template for
            the new dashboard when you call <code>PutDashboard</code>.
            </para>
             
            <para>
            When you create a dashboard with <code>PutDashboard</code>, a good practice is to
            add a text widget at the top of the dashboard with a message that the dashboard was
            created by script and should not be changed in the console. This message could also
            point console users to the location of the <code>DashboardBody</code> script or the
            CloudFormation template used to create the dashboard.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDashboard service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDashboard service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.DashboardInvalidInputErrorException">
            Some part of the dashboard data is invalid.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutDashboard">REST API Reference for PutDashboard Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutInsightRuleAsync(Amazon.CloudWatch.Model.PutInsightRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a Contributor Insights rule. Rules evaluate log events in a CloudWatch Logs
            log group, enabling you to find contributor data for the log events in that log group.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights.html">Using
            Contributor Insights to Analyze High-Cardinality Data</a>.
            
             
            <para>
            If you create a rule, delete it, and then re-create it with the same name, historical
            data from the first time the rule was created might not be available.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutInsightRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutInsightRule service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.LimitExceededException">
            The operation exceeded one or more limits.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutInsightRule">REST API Reference for PutInsightRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutMetricAlarmAsync(Amazon.CloudWatch.Model.PutMetricAlarmRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an alarm and associates it with the specified metric, metric math
            expression, or anomaly detection model.
            
             
            <para>
            Alarms based on anomaly detection models cannot have Auto Scaling actions.
            </para>
             
            <para>
            When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>.
            The alarm is then evaluated and its state is set appropriately. Any actions associated
            with the new state are then executed.
            </para>
             
            <para>
            When you update an existing alarm, its state is left unchanged, but the update completely
            overwrites the previous configuration of the alarm.
            </para>
             
            <para>
            If you are an IAM user, you must have Amazon EC2 permissions for some alarm operations:
            </para>
             <ul> <li> 
            <para>
            The <code>iam:CreateServiceLinkedRole</code> for all alarms with EC2 actions
            </para>
             </li> <li> 
            <para>
            The <code>iam:CreateServiceLinkedRole</code> to create an alarm with Systems Manager
            OpsItem actions.
            </para>
             </li> </ul> 
            <para>
            The first time you create an alarm in the AWS Management Console, the CLI, or by using
            the PutMetricAlarm API, CloudWatch creates the necessary service-linked role for you.
            The service-linked roles are called <code>AWSServiceRoleForCloudWatchEvents</code>
            and <code>AWSServiceRoleForCloudWatchAlarms_ActionSSM</code>. For more information,
            see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">AWS
            service-linked role</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricAlarm service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutMetricAlarm service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.LimitExceededException">
            The quota for alarms for this customer has already been reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutMetricAlarm">REST API Reference for PutMetricAlarm Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutMetricDataAsync(Amazon.CloudWatch.Model.PutMetricDataRequest,System.Threading.CancellationToken)">
            <summary>
            Publishes metric data points to Amazon CloudWatch. CloudWatch associates the data
            points with the specified metric. If the specified metric does not exist, CloudWatch
            creates the metric. When CloudWatch creates a metric, it can take up to fifteen minutes
            for the metric to appear in calls to <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html">ListMetrics</a>.
            
             
            <para>
            You can publish either individual data points in the <code>Value</code> field, or
            arrays of values and the number of times each value occurred during the period by
            using the <code>Values</code> and <code>Counts</code> fields in the <code>MetricDatum</code>
            structure. Using the <code>Values</code> and <code>Counts</code> method enables you
            to publish up to 150 values per metric with one <code>PutMetricData</code> request,
            and supports retrieving percentile statistics on this data.
            </para>
             
            <para>
            Each <code>PutMetricData</code> request is limited to 40 KB in size for HTTP POST
            requests. You can send a payload compressed by gzip. Each request is also limited
            to no more than 20 different metrics.
            </para>
             
            <para>
            Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>,
            CloudWatch rejects values that are either too small or too large. Values must be in
            the range of -2^360 to 2^360. In addition, special values (for example, NaN, +Infinity,
            -Infinity) are not supported.
            </para>
             
            <para>
            You can use up to 10 dimensions per metric to further clarify what data the metric
            collects. Each dimension consists of a Name and Value pair. For more information about
            specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing
            Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
             
            <para>
            You specify the time stamp to be associated with each data point. You can specify
            time stamps that are as much as two weeks before the current date, and as much as
            2 hours after the current day and time.
            </para>
             
            <para>
            Data points with time stamps from 24 hours ago or longer can take at least 48 hours
            to become available for <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>
            from the time they are submitted. Data points with time stamps between 3 and 24 hours
            ago can take as much as 2 hours to become available for for <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
             
            <para>
            CloudWatch needs raw data points to calculate percentile statistics. If you publish
            data using a statistic set instead, you can only retrieve percentile statistics for
            this data if one of the following conditions is true:
            </para>
             <ul> <li> 
            <para>
            The <code>SampleCount</code> value of the statistic set is 1 and <code>Min</code>,
            <code>Max</code>, and <code>Sum</code> are all equal.
            </para>
             </li> <li> 
            <para>
            The <code>Min</code> and <code>Max</code> are equal, and <code>Sum</code> is equal
            to <code>Min</code> multiplied by <code>SampleCount</code>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutMetricData service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            Parameters were used together that cannot be used together.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutMetricData">REST API Reference for PutMetricData Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutMetricStreamAsync(Amazon.CloudWatch.Model.PutMetricStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a metric stream. Metric streams can automatically stream CloudWatch
            metrics to AWS destinations including Amazon S3 and to many third-party solutions.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Metric-Streams.html">
            Using Metric Streams</a>.
            </para>
             
            <para>
            To create a metric stream, you must be logged on to an account that has the <code>iam:PassRole</code>
            permission and either the <code>CloudWatchFullAccess</code> policy or the <code>cloudwatch:PutMetricStream</code>
            permission.
            </para>
             
            <para>
            When you create or update a metric stream, you choose one of the following:
            </para>
             <ul> <li> 
            <para>
            Stream metrics from all metric namespaces in the account.
            </para>
             </li> <li> 
            <para>
            Stream metrics from all metric namespaces in the account, except for the namespaces
            that you list in <code>ExcludeFilters</code>.
            </para>
             </li> <li> 
            <para>
            Stream metrics from only the metric namespaces that you list in <code>IncludeFilters</code>.
            </para>
             </li> </ul> 
            <para>
            When you use <code>PutMetricStream</code> to create a new metric stream, the stream
            is created in the <code>running</code> state. If you use it to update an existing
            stream, the state of the stream is not changed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutMetricStream service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.ConcurrentModificationException">
            More than one process tried to modify a resource at the same time.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            Parameters were used together that cannot be used together.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutMetricStream">REST API Reference for PutMetricStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.SetAlarmStateAsync(Amazon.CloudWatch.Model.SetAlarmStateRequest,System.Threading.CancellationToken)">
            <summary>
            Temporarily sets the state of an alarm for testing purposes. When the updated state
            differs from the previous value, the action configured for the appropriate state is
            invoked. For example, if your alarm is configured to send an Amazon SNS message when
            an alarm is triggered, temporarily changing the alarm state to <code>ALARM</code>
            sends an SNS message.
            
             
            <para>
            Metric alarms returns to their actual state quickly, often within seconds. Because
            the metric alarm state change happens quickly, it is typically only visible in the
            alarm's <b>History</b> tab in the Amazon CloudWatch console or through <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeAlarmHistory.html">DescribeAlarmHistory</a>.
            </para>
             
            <para>
            If you use <code>SetAlarmState</code> on a composite alarm, the composite alarm is
            not guaranteed to return to its actual state. It returns to its actual state only
            once any of its children alarms change state. It is also reevaluated if you update
            its configuration.
            </para>
             
            <para>
            If an alarm triggers EC2 Auto Scaling policies or application Auto Scaling policies,
            you must include information in the <code>StateReasonData</code> parameter to enable
            the policy to take the correct action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetAlarmState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetAlarmState service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidFormatException">
            Data was not syntactically valid JSON.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/SetAlarmState">REST API Reference for SetAlarmState Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.StartMetricStreamsAsync(Amazon.CloudWatch.Model.StartMetricStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the streaming of metrics for one or more of your metric streams.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartMetricStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartMetricStreams service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/StartMetricStreams">REST API Reference for StartMetricStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.StopMetricStreamsAsync(Amazon.CloudWatch.Model.StopMetricStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Stops the streaming of metrics for one or more of your metric streams.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopMetricStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopMetricStreams service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/StopMetricStreams">REST API Reference for StopMetricStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.TagResourceAsync(Amazon.CloudWatch.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified CloudWatch resource. Currently,
            the only CloudWatch resources that can be tagged are alarms and Contributor Insights
            rules.
            
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values.
            </para>
             
            <para>
            Tags don't have any semantic meaning to AWS and are interpreted strictly as strings
            of characters.
            </para>
             
            <para>
            You can use the <code>TagResource</code> action with an alarm that already has tags.
            If you specify a new tag key for the alarm, this tag is appended to the list of tags
            associated with the alarm. If you specify a tag key that is already associated with
            the alarm, the new tag value that you specify replaces the previous value for that
            tag.
            </para>
             
            <para>
            You can associate as many as 50 tags with a CloudWatch resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.ConcurrentModificationException">
            More than one process tried to modify a resource at the same time.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.UntagResourceAsync(Amazon.CloudWatch.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.ConcurrentModificationException">
            More than one process tried to modify a resource at the same time.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="T:Amazon.CloudWatch.IAmazonCloudWatch">
             <summary>
             Interface for accessing CloudWatch
            
             Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications
             you run on AWS in real time. You can use CloudWatch to collect and track metrics,
             which are the variables you want to measure for your resources and applications.
             
              
             <para>
             CloudWatch alarms send notifications or automatically change the resources you are
             monitoring based on rules that you define. For example, you can monitor the CPU usage
             and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine
             whether you should launch additional instances to handle increased load. You can also
             use this data to stop under-used instances to save money.
             </para>
              
             <para>
             In addition to monitoring the built-in metrics that come with AWS, you can monitor
             your own custom metrics. With CloudWatch, you gain system-wide visibility into resource
             utilization, application performance, and operational health.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.CloudWatch.IAmazonCloudWatch.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DeleteAlarmsAsync(Amazon.CloudWatch.Model.DeleteAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified alarms. You can delete up to 100 alarms in one operation. However,
            this total can include no more than one composite alarm. For example, you could delete
            99 metric alarms and one composite alarms with one operation, but you can't delete
            two composite alarms with one operation.
            
             
            <para>
             In the event of an error, no alarms are deleted.
            </para>
             <note> 
            <para>
            It is possible to create a loop or cycle of composite alarms, where composite alarm
            A depends on composite alarm B, and composite alarm B also depends on composite alarm
            A. In this scenario, you can't delete any composite alarm that is part of the cycle
            because there is always still a composite alarm that depends on that alarm that you
            want to delete.
            </para>
             
            <para>
            To get out of such a situation, you must break the cycle by changing the rule of one
            of the composite alarms in the cycle to remove a dependency that creates the cycle.
            The simplest change to make to break a cycle is to change the <code>AlarmRule</code>
            of one of the alarms to <code>False</code>. 
            </para>
             
            <para>
            Additionally, the evaluation of composite alarms stops if CloudWatch detects a cycle
            in the evaluation path. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAlarms service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAlarms service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteAlarms">REST API Reference for DeleteAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DeleteAnomalyDetectorAsync(Amazon.CloudWatch.Model.DeleteAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified anomaly detection model from your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteAnomalyDetector service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteAnomalyDetector">REST API Reference for DeleteAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DeleteDashboardsAsync(Amazon.CloudWatch.Model.DeleteDashboardsRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes all dashboards that you specify. You can specify up to 100 dashboards to delete.
            If there is an error during this call, no dashboards are deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDashboards service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDashboards service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.DashboardNotFoundErrorException">
            The specified dashboard does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteDashboards">REST API Reference for DeleteDashboards Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DeleteInsightRulesAsync(Amazon.CloudWatch.Model.DeleteInsightRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified Contributor Insights rules.
            
             
            <para>
            If you create a rule, delete it, and then re-create it with the same name, historical
            data from the first time the rule was created might not be available.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteInsightRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteInsightRules service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteInsightRules">REST API Reference for DeleteInsightRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DeleteMetricStreamAsync(Amazon.CloudWatch.Model.DeleteMetricStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the metric stream that you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMetricStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMetricStream service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteMetricStream">REST API Reference for DeleteMetricStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmHistoryAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the history for the specified alarm. You can filter the results by date
            range or item type. If an alarm name is not specified, the histories for either all
            metric alarms or all composite alarms are returned.
            
             
            <para>
            CloudWatch retains the history of an alarm even if you delete the alarm.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarmHistory service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmHistory">REST API Reference for DescribeAlarmHistory Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmHistoryAsync(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the history for the specified alarm. You can filter the results by date
            range or item type. If an alarm name is not specified, the histories for either all
            metric alarms or all composite alarms are returned.
            
             
            <para>
            CloudWatch retains the history of an alarm even if you delete the alarm.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmHistory service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarmHistory service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmHistory">REST API Reference for DescribeAlarmHistory Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the specified alarms. You can filter the results by specifying a prefix
            for the alarm name, the alarm state, or a prefix for any action.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarms service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarms">REST API Reference for DescribeAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmsAsync(Amazon.CloudWatch.Model.DescribeAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the specified alarms. You can filter the results by specifying a prefix
            for the alarm name, the alarm state, or a prefix for any action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAlarms service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarms service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarms">REST API Reference for DescribeAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmsForMetricAsync(Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the alarms for the specified metric. To filter the results, specify a statistic,
            period, or unit.
            
             
            <para>
            This operation retrieves only standard alarms that are based on the specified metric.
            It does not return alarms based on math expressions that use the specified metric,
            or composite alarms that use the specified metric.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmsForMetric service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarmsForMetric service method, as returned by CloudWatch.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmsForMetric">REST API Reference for DescribeAlarmsForMetric Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAnomalyDetectorsAsync(Amazon.CloudWatch.Model.DescribeAnomalyDetectorsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the anomaly detection models that you have created in your account. You can
            list all models in your account or filter the results to only the models that are
            related to a certain namespace, metric name, or metric dimension.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAnomalyDetectors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAnomalyDetectors service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAnomalyDetectors">REST API Reference for DescribeAnomalyDetectors Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeInsightRulesAsync(Amazon.CloudWatch.Model.DescribeInsightRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all the Contributor Insights rules in your account.
            
             
            <para>
            For more information about Contributor Insights, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights.html">Using
            Contributor Insights to Analyze High-Cardinality Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInsightRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInsightRules service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeInsightRules">REST API Reference for DescribeInsightRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DisableAlarmActionsAsync(Amazon.CloudWatch.Model.DisableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Disables the actions for the specified alarms. When an alarm's actions are disabled,
            the alarm actions do not execute when the alarm state changes.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableAlarmActions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisableAlarmActions service method, as returned by CloudWatch.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DisableAlarmActions">REST API Reference for DisableAlarmActions Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DisableInsightRulesAsync(Amazon.CloudWatch.Model.DisableInsightRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Disables the specified Contributor Insights rules. When rules are disabled, they do
            not analyze log groups and do not incur costs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableInsightRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisableInsightRules service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DisableInsightRules">REST API Reference for DisableInsightRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.EnableAlarmActionsAsync(Amazon.CloudWatch.Model.EnableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Enables the actions for the specified alarms.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableAlarmActions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the EnableAlarmActions service method, as returned by CloudWatch.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/EnableAlarmActions">REST API Reference for EnableAlarmActions Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.EnableInsightRulesAsync(Amazon.CloudWatch.Model.EnableInsightRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Enables the specified Contributor Insights rules. When rules are enabled, they immediately
            begin analyzing log data.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableInsightRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the EnableInsightRules service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.LimitExceededException">
            The operation exceeded one or more limits.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/EnableInsightRules">REST API Reference for EnableInsightRules Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.GetDashboardAsync(Amazon.CloudWatch.Model.GetDashboardRequest,System.Threading.CancellationToken)">
            <summary>
            Displays the details of the dashboard that you specify.
            
             
            <para>
            To copy an existing dashboard, use <code>GetDashboard</code>, and then use the data
            returned within <code>DashboardBody</code> as the template for the new dashboard when
            you call <code>PutDashboard</code> to create the copy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDashboard service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDashboard service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.DashboardNotFoundErrorException">
            The specified dashboard does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetDashboard">REST API Reference for GetDashboard Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.GetInsightRuleReportAsync(Amazon.CloudWatch.Model.GetInsightRuleReportRequest,System.Threading.CancellationToken)">
            <summary>
            This operation returns the time series data collected by a Contributor Insights rule.
            The data includes the identity and number of contributors to the log group.
            
             
            <para>
            You can also optionally return one or more statistics about each data point in the
            time series. These statistics can include the following:
            </para>
             <ul> <li> 
            <para>
             <code>UniqueContributors</code> -- the number of unique contributors for each data
            point.
            </para>
             </li> <li> 
            <para>
             <code>MaxContributorValue</code> -- the value of the top contributor for each data
            point. The identity of the contributor might change for each data point in the graph.
            </para>
             
            <para>
            If this rule aggregates by COUNT, the top contributor for each data point is the contributor
            with the most occurrences in that period. If the rule aggregates by SUM, the top contributor
            is the contributor with the highest sum in the log field specified by the rule's <code>Value</code>,
            during that period.
            </para>
             </li> <li> 
            <para>
             <code>SampleCount</code> -- the number of data points matched by the rule.
            </para>
             </li> <li> 
            <para>
             <code>Sum</code> -- the sum of the values from all contributors during the time period
            represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Minimum</code> -- the minimum value from a single observation during the time
            period represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Maximum</code> -- the maximum value from a single observation during the time
            period represented by that data point.
            </para>
             </li> <li> 
            <para>
             <code>Average</code> -- the average value from all contributors during the time period
            represented by that data point.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetInsightRuleReport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetInsightRuleReport service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetInsightRuleReport">REST API Reference for GetInsightRuleReport Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.GetMetricDataAsync(Amazon.CloudWatch.Model.GetMetricDataRequest,System.Threading.CancellationToken)">
            <summary>
            You can use the <code>GetMetricData</code> API to retrieve as many as 500 different
            metrics in a single request, with a total of as many as 100,800 data points. You can
            also optionally perform math expressions on the values of the returned statistics,
            to create new time series that represent new insights into your data. For example,
            using Lambda metrics, you could divide the Errors metric by the Invocations metric
            to get an error rate time series. For more information about metric math expressions,
            see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric
            Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.
            
             
            <para>
            Calls to the <code>GetMetricData</code> API have a different pricing structure than
            calls to <code>GetMetricStatistics</code>. For more information about pricing, see
            <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.
            </para>
             
            <para>
            Amazon CloudWatch retains metric data as follows:
            </para>
             <ul> <li> 
            <para>
            Data points with a period of less than 60 seconds are available for 3 hours. These
            data points are high-resolution metrics and are available only for custom metrics
            that have been defined with a <code>StorageResolution</code> of 1.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 60 seconds (1-minute) are available for 15 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 300 seconds (5-minute) are available for 63 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 3600 seconds (1 hour) are available for 455 days (15
            months).
            </para>
             </li> </ul> 
            <para>
            Data points that are initially published with a shorter period are aggregated together
            for long-term storage. For example, if you collect data using a period of 1 minute,
            the data remains available for 15 days with 1-minute resolution. After 15 days, this
            data is still available, but is aggregated and retrievable only with a resolution
            of 5 minutes. After 63 days, the data is further aggregated and is available with
            a resolution of 1 hour.
            </para>
             
            <para>
            If you omit <code>Unit</code> in your request, all data that was collected with any
            unit is returned, along with the corresponding units that were specified when the
            data was reported to CloudWatch. If you specify a unit, the operation returns only
            data that was collected with that unit specified. If you specify a unit that does
            not match the data collected, the results of the operation are null. CloudWatch does
            not perform unit conversions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMetricData service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricData">REST API Reference for GetMetricData Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.GetMetricStatisticsAsync(Amazon.CloudWatch.Model.GetMetricStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets statistics for the specified metric.
            
             
            <para>
            The maximum number of data points returned from a single call is 1,440. If you request
            more than 1,440 data points, CloudWatch returns an error. To reduce the number of
            data points, you can narrow the specified time range and make multiple requests across
            adjacent time ranges, or you can increase the specified period. Data points are not
            returned in chronological order.
            </para>
             
            <para>
            CloudWatch aggregates data points based on the length of the period that you specify.
            For example, if you request statistics with a one-hour period, CloudWatch aggregates
            all data points with time stamps that fall within each one-hour period. Therefore,
            the number of values aggregated by CloudWatch is larger than the number of data points
            returned.
            </para>
             
            <para>
            CloudWatch needs raw data points to calculate percentile statistics. If you publish
            data using a statistic set instead, you can only retrieve percentile statistics for
            this data if one of the following conditions is true:
            </para>
             <ul> <li> 
            <para>
            The SampleCount value of the statistic set is 1.
            </para>
             </li> <li> 
            <para>
            The Min and the Max values of the statistic set are equal.
            </para>
             </li> </ul> 
            <para>
            Percentile statistics are not available for metrics when any of the metric values
            are negative numbers.
            </para>
             
            <para>
            Amazon CloudWatch retains metric data as follows:
            </para>
             <ul> <li> 
            <para>
            Data points with a period of less than 60 seconds are available for 3 hours. These
            data points are high-resolution metrics and are available only for custom metrics
            that have been defined with a <code>StorageResolution</code> of 1.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 60 seconds (1-minute) are available for 15 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 300 seconds (5-minute) are available for 63 days.
            </para>
             </li> <li> 
            <para>
            Data points with a period of 3600 seconds (1 hour) are available for 455 days (15
            months).
            </para>
             </li> </ul> 
            <para>
            Data points that are initially published with a shorter period are aggregated together
            for long-term storage. For example, if you collect data using a period of 1 minute,
            the data remains available for 15 days with 1-minute resolution. After 15 days, this
            data is still available, but is aggregated and retrievable only with a resolution
            of 5 minutes. After 63 days, the data is further aggregated and is available with
            a resolution of 1 hour.
            </para>
             
            <para>
            CloudWatch started retaining 5-minute and 1-hour metric data as of July 9, 2016.
            </para>
             
            <para>
            For information about metrics and dimensions supported by AWS services, see the <a
            href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CW_Support_For_AWS.html">Amazon
            CloudWatch Metrics and Dimensions Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricStatistics service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMetricStatistics service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            Parameters were used together that cannot be used together.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricStatistics">REST API Reference for GetMetricStatistics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.GetMetricStreamAsync(Amazon.CloudWatch.Model.GetMetricStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the metric stream that you specify.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMetricStream service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            Parameters were used together that cannot be used together.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricStream">REST API Reference for GetMetricStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.GetMetricWidgetImageAsync(Amazon.CloudWatch.Model.GetMetricWidgetImageRequest,System.Threading.CancellationToken)">
            <summary>
            You can use the <code>GetMetricWidgetImage</code> API to retrieve a snapshot graph
            of one or more Amazon CloudWatch metrics as a bitmap image. You can then embed this
            image into your services and products, such as wiki pages, reports, and documents.
            You could also retrieve images regularly, such as every minute, and create your own
            custom live dashboard.
            
             
            <para>
            The graph you retrieve can include all CloudWatch metric graph features, including
            metric math and horizontal and vertical annotations.
            </para>
             
            <para>
            There is a limit of 20 transactions per second for this API. Each <code>GetMetricWidgetImage</code>
            action has the following limits:
            </para>
             <ul> <li> 
            <para>
            As many as 100 metrics in the graph.
            </para>
             </li> <li> 
            <para>
            Up to 100 KB uncompressed payload.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricWidgetImage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMetricWidgetImage service method, as returned by CloudWatch.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricWidgetImage">REST API Reference for GetMetricWidgetImage Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.ListDashboardsAsync(Amazon.CloudWatch.Model.ListDashboardsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the dashboards for your account. If you include <code>DashboardNamePrefix</code>,
            only those dashboards with names starting with the prefix are listed. Otherwise, all
            dashboards in your account are listed. 
            
             
            <para>
             <code>ListDashboards</code> returns up to 1000 results on one page. If there are
            more than 1000 dashboards, you can call <code>ListDashboards</code> again and include
            the value you received for <code>NextToken</code> in the first call, to receive the
            next 1000 results.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDashboards service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDashboards service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListDashboards">REST API Reference for ListDashboards Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.ListMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            List the specified metrics. You can use the returned metrics with <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>
            to obtain statistical data.
            
             
            <para>
            Up to 500 results are returned for any one call. To retrieve additional results, use
            the returned token with subsequent calls.
            </para>
             
            <para>
            After you create a metric, allow up to 15 minutes before the metric appears. You can
            see statistics about the metric sooner by using <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
             
            <para>
             <code>ListMetrics</code> doesn't return information about metrics if those metrics
            haven't reported data in the past two weeks. To retrieve those metrics, use <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMetrics service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListMetrics">REST API Reference for ListMetrics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.ListMetricsAsync(Amazon.CloudWatch.Model.ListMetricsRequest,System.Threading.CancellationToken)">
            <summary>
            List the specified metrics. You can use the returned metrics with <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>
            to obtain statistical data.
            
             
            <para>
            Up to 500 results are returned for any one call. To retrieve additional results, use
            the returned token with subsequent calls.
            </para>
             
            <para>
            After you create a metric, allow up to 15 minutes before the metric appears. You can
            see statistics about the metric sooner by using <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
             
            <para>
             <code>ListMetrics</code> doesn't return information about metrics if those metrics
            haven't reported data in the past two weeks. To retrieve those metrics, use <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMetrics service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMetrics service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListMetrics">REST API Reference for ListMetrics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.ListMetricStreamsAsync(Amazon.CloudWatch.Model.ListMetricStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of metric streams in this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMetricStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMetricStreams service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListMetricStreams">REST API Reference for ListMetricStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.ListTagsForResourceAsync(Amazon.CloudWatch.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Displays the tags associated with a CloudWatch resource. Currently, alarms and Contributor
            Insights rules support tagging.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutAnomalyDetectorAsync(Amazon.CloudWatch.Model.PutAnomalyDetectorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an anomaly detection model for a CloudWatch metric. You can use the model
            to display a band of expected normal values when the metric is graphed.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html">CloudWatch
            Anomaly Detection</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAnomalyDetector service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAnomalyDetector service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.LimitExceededException">
            The operation exceeded one or more limits.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutAnomalyDetector">REST API Reference for PutAnomalyDetector Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutCompositeAlarmAsync(Amazon.CloudWatch.Model.PutCompositeAlarmRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a <i>composite alarm</i>. When you create a composite alarm, you
            specify a rule expression for the alarm that takes into account the alarm states of
            other alarms that you have created. The composite alarm goes into ALARM state only
            if all conditions of the rule are met.
            
             
            <para>
            The alarms specified in a composite alarm's rule expression can include metric alarms
            and other composite alarms.
            </para>
             
            <para>
            Using composite alarms can reduce alarm noise. You can create multiple metric alarms,
            and also create a composite alarm and set up alerts only for the composite alarm.
            For example, you could create a composite alarm that goes into ALARM state only when
            more than one of the underlying metric alarms are in ALARM state.
            </para>
             
            <para>
            Currently, the only alarm actions that can be taken by composite alarms are notifying
            SNS topics.
            </para>
             <note> 
            <para>
            It is possible to create a loop or cycle of composite alarms, where composite alarm
            A depends on composite alarm B, and composite alarm B also depends on composite alarm
            A. In this scenario, you can't delete any composite alarm that is part of the cycle
            because there is always still a composite alarm that depends on that alarm that you
            want to delete.
            </para>
             
            <para>
            To get out of such a situation, you must break the cycle by changing the rule of one
            of the composite alarms in the cycle to remove a dependency that creates the cycle.
            The simplest change to make to break a cycle is to change the <code>AlarmRule</code>
            of one of the alarms to <code>False</code>. 
            </para>
             
            <para>
            Additionally, the evaluation of composite alarms stops if CloudWatch detects a cycle
            in the evaluation path. 
            </para>
             </note> 
            <para>
            When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>.
            The alarm is then evaluated and its state is set appropriately. Any actions associated
            with the new state are then executed. For a composite alarm, this initial time after
            creation is the only time that the alarm can be in <code>INSUFFICIENT_DATA</code>
            state.
            </para>
             
            <para>
            When you update an existing alarm, its state is left unchanged, but the update completely
            overwrites the previous configuration of the alarm.
            </para>
             
            <para>
            If you are an IAM user, you must have <code>iam:CreateServiceLinkedRole</code> to
            create a composite alarm that has Systems Manager OpsItem actions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutCompositeAlarm service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutCompositeAlarm service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.LimitExceededException">
            The quota for alarms for this customer has already been reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutCompositeAlarm">REST API Reference for PutCompositeAlarm Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutDashboardAsync(Amazon.CloudWatch.Model.PutDashboardRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a dashboard if it does not already exist, or updates an existing dashboard.
            If you update a dashboard, the entire contents are replaced with what you specify
            here.
            
             
            <para>
            All dashboards in your account are global, not region-specific.
            </para>
             
            <para>
            A simple way to create a dashboard using <code>PutDashboard</code> is to copy an existing
            dashboard. To copy an existing dashboard using the console, you can load the dashboard
            and then use the View/edit source command in the Actions menu to display the JSON
            block for that dashboard. Another way to copy a dashboard is to use <code>GetDashboard</code>,
            and then use the data returned within <code>DashboardBody</code> as the template for
            the new dashboard when you call <code>PutDashboard</code>.
            </para>
             
            <para>
            When you create a dashboard with <code>PutDashboard</code>, a good practice is to
            add a text widget at the top of the dashboard with a message that the dashboard was
            created by script and should not be changed in the console. This message could also
            point console users to the location of the <code>DashboardBody</code> script or the
            CloudFormation template used to create the dashboard.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDashboard service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDashboard service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.DashboardInvalidInputErrorException">
            Some part of the dashboard data is invalid.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutDashboard">REST API Reference for PutDashboard Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutInsightRuleAsync(Amazon.CloudWatch.Model.PutInsightRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a Contributor Insights rule. Rules evaluate log events in a CloudWatch Logs
            log group, enabling you to find contributor data for the log events in that log group.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights.html">Using
            Contributor Insights to Analyze High-Cardinality Data</a>.
            
             
            <para>
            If you create a rule, delete it, and then re-create it with the same name, historical
            data from the first time the rule was created might not be available.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutInsightRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutInsightRule service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.LimitExceededException">
            The operation exceeded one or more limits.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutInsightRule">REST API Reference for PutInsightRule Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutMetricAlarmAsync(Amazon.CloudWatch.Model.PutMetricAlarmRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an alarm and associates it with the specified metric, metric math
            expression, or anomaly detection model.
            
             
            <para>
            Alarms based on anomaly detection models cannot have Auto Scaling actions.
            </para>
             
            <para>
            When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>.
            The alarm is then evaluated and its state is set appropriately. Any actions associated
            with the new state are then executed.
            </para>
             
            <para>
            When you update an existing alarm, its state is left unchanged, but the update completely
            overwrites the previous configuration of the alarm.
            </para>
             
            <para>
            If you are an IAM user, you must have Amazon EC2 permissions for some alarm operations:
            </para>
             <ul> <li> 
            <para>
            The <code>iam:CreateServiceLinkedRole</code> for all alarms with EC2 actions
            </para>
             </li> <li> 
            <para>
            The <code>iam:CreateServiceLinkedRole</code> to create an alarm with Systems Manager
            OpsItem actions.
            </para>
             </li> </ul> 
            <para>
            The first time you create an alarm in the AWS Management Console, the CLI, or by using
            the PutMetricAlarm API, CloudWatch creates the necessary service-linked role for you.
            The service-linked roles are called <code>AWSServiceRoleForCloudWatchEvents</code>
            and <code>AWSServiceRoleForCloudWatchAlarms_ActionSSM</code>. For more information,
            see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">AWS
            service-linked role</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricAlarm service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutMetricAlarm service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.LimitExceededException">
            The quota for alarms for this customer has already been reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutMetricAlarm">REST API Reference for PutMetricAlarm Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutMetricDataAsync(Amazon.CloudWatch.Model.PutMetricDataRequest,System.Threading.CancellationToken)">
            <summary>
            Publishes metric data points to Amazon CloudWatch. CloudWatch associates the data
            points with the specified metric. If the specified metric does not exist, CloudWatch
            creates the metric. When CloudWatch creates a metric, it can take up to fifteen minutes
            for the metric to appear in calls to <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html">ListMetrics</a>.
            
             
            <para>
            You can publish either individual data points in the <code>Value</code> field, or
            arrays of values and the number of times each value occurred during the period by
            using the <code>Values</code> and <code>Counts</code> fields in the <code>MetricDatum</code>
            structure. Using the <code>Values</code> and <code>Counts</code> method enables you
            to publish up to 150 values per metric with one <code>PutMetricData</code> request,
            and supports retrieving percentile statistics on this data.
            </para>
             
            <para>
            Each <code>PutMetricData</code> request is limited to 40 KB in size for HTTP POST
            requests. You can send a payload compressed by gzip. Each request is also limited
            to no more than 20 different metrics.
            </para>
             
            <para>
            Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>,
            CloudWatch rejects values that are either too small or too large. Values must be in
            the range of -2^360 to 2^360. In addition, special values (for example, NaN, +Infinity,
            -Infinity) are not supported.
            </para>
             
            <para>
            You can use up to 10 dimensions per metric to further clarify what data the metric
            collects. Each dimension consists of a Name and Value pair. For more information about
            specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing
            Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
             
            <para>
            You specify the time stamp to be associated with each data point. You can specify
            time stamps that are as much as two weeks before the current date, and as much as
            2 hours after the current day and time.
            </para>
             
            <para>
            Data points with time stamps from 24 hours ago or longer can take at least 48 hours
            to become available for <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>
            from the time they are submitted. Data points with time stamps between 3 and 24 hours
            ago can take as much as 2 hours to become available for for <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html">GetMetricData</a>
            or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html">GetMetricStatistics</a>.
            </para>
             
            <para>
            CloudWatch needs raw data points to calculate percentile statistics. If you publish
            data using a statistic set instead, you can only retrieve percentile statistics for
            this data if one of the following conditions is true:
            </para>
             <ul> <li> 
            <para>
            The <code>SampleCount</code> value of the statistic set is 1 and <code>Min</code>,
            <code>Max</code>, and <code>Sum</code> are all equal.
            </para>
             </li> <li> 
            <para>
            The <code>Min</code> and <code>Max</code> are equal, and <code>Sum</code> is equal
            to <code>Min</code> multiplied by <code>SampleCount</code>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricData service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutMetricData service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            Parameters were used together that cannot be used together.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutMetricData">REST API Reference for PutMetricData Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutMetricStreamAsync(Amazon.CloudWatch.Model.PutMetricStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a metric stream. Metric streams can automatically stream CloudWatch
            metrics to AWS destinations including Amazon S3 and to many third-party solutions.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Metric-Streams.html">
            Using Metric Streams</a>.
            </para>
             
            <para>
            To create a metric stream, you must be logged on to an account that has the <code>iam:PassRole</code>
            permission and either the <code>CloudWatchFullAccess</code> policy or the <code>cloudwatch:PutMetricStream</code>
            permission.
            </para>
             
            <para>
            When you create or update a metric stream, you choose one of the following:
            </para>
             <ul> <li> 
            <para>
            Stream metrics from all metric namespaces in the account.
            </para>
             </li> <li> 
            <para>
            Stream metrics from all metric namespaces in the account, except for the namespaces
            that you list in <code>ExcludeFilters</code>.
            </para>
             </li> <li> 
            <para>
            Stream metrics from only the metric namespaces that you list in <code>IncludeFilters</code>.
            </para>
             </li> </ul> 
            <para>
            When you use <code>PutMetricStream</code> to create a new metric stream, the stream
            is created in the <code>running</code> state. If you use it to update an existing
            stream, the state of the stream is not changed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricStream service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutMetricStream service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.ConcurrentModificationException">
            More than one process tried to modify a resource at the same time.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            Parameters were used together that cannot be used together.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutMetricStream">REST API Reference for PutMetricStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.SetAlarmStateAsync(Amazon.CloudWatch.Model.SetAlarmStateRequest,System.Threading.CancellationToken)">
            <summary>
            Temporarily sets the state of an alarm for testing purposes. When the updated state
            differs from the previous value, the action configured for the appropriate state is
            invoked. For example, if your alarm is configured to send an Amazon SNS message when
            an alarm is triggered, temporarily changing the alarm state to <code>ALARM</code>
            sends an SNS message.
            
             
            <para>
            Metric alarms returns to their actual state quickly, often within seconds. Because
            the metric alarm state change happens quickly, it is typically only visible in the
            alarm's <b>History</b> tab in the Amazon CloudWatch console or through <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeAlarmHistory.html">DescribeAlarmHistory</a>.
            </para>
             
            <para>
            If you use <code>SetAlarmState</code> on a composite alarm, the composite alarm is
            not guaranteed to return to its actual state. It returns to its actual state only
            once any of its children alarms change state. It is also reevaluated if you update
            its configuration.
            </para>
             
            <para>
            If an alarm triggers EC2 Auto Scaling policies or application Auto Scaling policies,
            you must include information in the <code>StateReasonData</code> parameter to enable
            the policy to take the correct action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetAlarmState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetAlarmState service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidFormatException">
            Data was not syntactically valid JSON.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/SetAlarmState">REST API Reference for SetAlarmState Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.StartMetricStreamsAsync(Amazon.CloudWatch.Model.StartMetricStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the streaming of metrics for one or more of your metric streams.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartMetricStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartMetricStreams service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/StartMetricStreams">REST API Reference for StartMetricStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.StopMetricStreamsAsync(Amazon.CloudWatch.Model.StopMetricStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Stops the streaming of metrics for one or more of your metric streams.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopMetricStreams service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopMetricStreams service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            An input parameter that is required is missing.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/StopMetricStreams">REST API Reference for StopMetricStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.TagResourceAsync(Amazon.CloudWatch.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified CloudWatch resource. Currently,
            the only CloudWatch resources that can be tagged are alarms and Contributor Insights
            rules.
            
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values.
            </para>
             
            <para>
            Tags don't have any semantic meaning to AWS and are interpreted strictly as strings
            of characters.
            </para>
             
            <para>
            You can use the <code>TagResource</code> action with an alarm that already has tags.
            If you specify a new tag key for the alarm, this tag is appended to the list of tags
            associated with the alarm. If you specify a tag key that is already associated with
            the alarm, the new tag value that you specify replaces the previous value for that
            tag.
            </para>
             
            <para>
            You can associate as many as 50 tags with a CloudWatch resource.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.ConcurrentModificationException">
            More than one process tried to modify a resource at the same time.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.UntagResourceAsync(Amazon.CloudWatch.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from the specified resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.ConcurrentModificationException">
            More than one process tried to modify a resource at the same time.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            The named resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
    </members>
</doc>
