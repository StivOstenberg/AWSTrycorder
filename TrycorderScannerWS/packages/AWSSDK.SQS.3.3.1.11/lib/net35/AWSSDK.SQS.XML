<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.SQS</name>
    </assembly>
    <members>
        <member name="T:Amazon.SQS.AmazonSQSClient">
             <summary>
             Implementation for accessing SQS
            
             Welcome to the <i>Amazon Simple Queue Service API Reference</i>.
             
              
             <para>
             Amazon Simple Queue Service (Amazon SQS) is a reliable, highly-scalable hosted queue
             for storing messages as they travel between applications or microservices. Amazon
             SQS moves data between distributed application components and helps you decouple these
             components.
             </para>
              <note> 
             <para>
              <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/standard-queues.html">Standard
             queues</a> are available in all regions. <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html">FIFO
             queues</a> are available in US West (Oregon) and US East (Ohio).
             </para>
              </note> 
             <para>
             You can use <a href="http://aws.amazon.com/tools/#sdk">AWS SDKs</a> to access Amazon
             SQS using your favorite programming language. The SDKs perform tasks such as the following
             automatically:
             </para>
              <ul> <li> 
             <para>
             Cryptographically sign your service requests
             </para>
              </li> <li> 
             <para>
             Retry requests
             </para>
              </li> <li> 
             <para>
             Handle error responses
             </para>
              </li> </ul> 
             <para>
              <b>Additional Information</b> 
             </para>
              <ul> <li> 
             <para>
              <a href="http://aws.amazon.com/sqs/">Amazon SQS Product Page</a> 
             </para>
              </li> <li> 
             <para>
              <i>Amazon SQS Developer Guide</i> 
             </para>
              <ul> <li> 
             <para>
              <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/MakingRequestsArticle.html">Making
             API Requests</a> 
             </para>
              </li> <li> 
             <para>
              <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-attributes.html">Using
             Amazon SQS Message Attributes</a> 
             </para>
              </li> <li> 
             <para>
              <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using
             Amazon SQS Dead Letter Queues</a> 
             </para>
              </li> </ul> </li> <li> 
             <para>
              <i>Amazon Web Services General Reference</i> 
             </para>
              <ul> <li> 
             <para>
              <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region">Regions
             and Endpoints</a> 
             </para>
              </li> </ul> </li> </ul>
             </summary>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.GetNewPolicyAndStatement(Amazon.SQS.Model.GetQueueAttributesResponse,System.String,Amazon.Auth.AccessControlPolicy.Policy@,Amazon.Auth.AccessControlPolicy.Statement@)">
            <summary>
            Helper method for AuthorizeS3ToSendMessage()
            </summary>
            <param name="response"></param>
            <param name="bucket"></param>
            <param name="policy"></param>
            <param name="statement"></param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.AuthorizeS3ToSendMessage(System.String,System.String)">
            <summary>
            This is a utility method which updates the policy of a queue to allow the
            S3 bucket to publish events to it.
            </summary>
            <param name="queueUrl">The queue that will have its policy updated.</param>
            <param name="bucket">The bucket that will be given access to send messages from.</param>
            <returns>The ARN for the SQS queue. This can be used when setting up the S3 bucket notification.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor">
             <summary>
             Constructs AmazonSQSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonSQSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(Amazon.SQS.AmazonSQSConfig)">
             <summary>
             Constructs AmazonSQSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonSQSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSQSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSQSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SQS.AmazonSQSConfig)">
            <summary>
            Constructs AmazonSQSClient with AWS Credentials and an
            AmazonSQSClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSQSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String,Amazon.SQS.AmazonSQSConfig)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSQSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSQSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String,System.String,Amazon.SQS.AmazonSQSConfig)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSQSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSQSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customize the pipeline
            </summary>
            <param name="pipeline"></param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.AddPermission(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Adds a permission to a queue for a specific <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a>.
            This allows sharing access to the queue.
            
             
            <para>
            When you create a queue, you have full control access rights for the queue. Only you,
            the owner of the queue, can grant or deny permissions to the queue. For more information
            about these permissions, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
            Queues</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             <note> 
            <para>
             <code>AddPermission</code> writes an Amazon-SQS-generated policy. If you want to
            write your own policy, use <code> <a>SetQueueAttributes</a> </code> to upload your
            policy. For more information about writing your own policy, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AccessPolicyLanguage.html">Using
            The Access Policy Language</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to which permissions are added. Queue URLs are case-sensitive.</param>
            <param name="label">The unique identification of the permission you're setting (for example, <code>AliceSendMessage</code>). Maximum 80 characters. Allowed characters include alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>).</param>
            <param name="awsAccountIds">The AWS account number of the <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a> who is given permission. The principal must have an AWS account, but does not need to be signed up for Amazon SQS. For information about locating the AWS account identification, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AWSCredentials.html">Your AWS Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.</param>
            <param name="actions">The action the client wants to allow for the specified principal. The following values are valid: <ul> <li>  <code>*</code>  </li> <li>  <code>ChangeMessageVisibility</code>  </li> <li>  <code>DeleteMessage</code>  </li> <li>  <code>GetQueueAttributes</code>  </li> <li>  <code>GetQueueUrl</code>  </li> <li>  <code>ReceiveMessage</code>  </li> <li>  <code>SendMessage</code>  </li> </ul> For more information about these actions, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html#PermissionTypes">Understanding Permissions</a> in the <i>Amazon SQS Developer Guide</i>. Specifying <code>SendMessage</code>, <code>DeleteMessage</code>, or <code>ChangeMessageVisibility</code> for <code>ActionName.n</code> also grants permissions for the corresponding batch versions of those actions: <code>SendMessageBatch</code>, <code>DeleteMessageBatch</code>, and <code>ChangeMessageVisibilityBatch</code>.</param>
            
            <returns>The response from the AddPermission service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.OverLimitException">
            The action that you requested would violate a limit. For example, <code>ReceiveMessage</code>
            returns this error if the maximum number of inflight messages is reached. <code> <a>AddPermission</a>
            </code> returns this error if the maximum number of permissions for the queue is reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/AddPermission">REST API Reference for AddPermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.AddPermission(Amazon.SQS.Model.AddPermissionRequest)">
            <summary>
            Adds a permission to a queue for a specific <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a>.
            This allows sharing access to the queue.
            
             
            <para>
            When you create a queue, you have full control access rights for the queue. Only you,
            the owner of the queue, can grant or deny permissions to the queue. For more information
            about these permissions, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
            Queues</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             <note> 
            <para>
             <code>AddPermission</code> writes an Amazon-SQS-generated policy. If you want to
            write your own policy, use <code> <a>SetQueueAttributes</a> </code> to upload your
            policy. For more information about writing your own policy, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AccessPolicyLanguage.html">Using
            The Access Policy Language</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddPermission service method.</param>
            
            <returns>The response from the AddPermission service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.OverLimitException">
            The action that you requested would violate a limit. For example, <code>ReceiveMessage</code>
            returns this error if the maximum number of inflight messages is reached. <code> <a>AddPermission</a>
            </code> returns this error if the maximum number of permissions for the queue is reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/AddPermission">REST API Reference for AddPermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginAddPermission(Amazon.SQS.Model.AddPermissionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AddPermission operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddPermission operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAddPermission
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/AddPermission">REST API Reference for AddPermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndAddPermission(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AddPermission operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAddPermission.</param>
            
            <returns>Returns a  AddPermissionResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/AddPermission">REST API Reference for AddPermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ChangeMessageVisibility(System.String,System.String,System.Int32)">
            <summary>
            Changes the visibility timeout of a specified message in a queue to a new value. The
            maximum allowed timeout value is 12 hours. Thus, you can't extend the timeout of a
            message in an existing queue to more than a total visibility timeout of 12 hours.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            
             
            <para>
            For example, you have a message and with the default visibility timeout of 5 minutes.
            After 3 minutes, you call <code>ChangeMessageVisiblity</code> with a timeout of 10
            minutes. At that time, the timeout for the message is extended by 10 minutes beyond
            the time of the <code>ChangeMessageVisibility</code> action. This results in a total
            visibility timeout of 13 minutes. You can continue to call the <code>ChangeMessageVisibility</code>
            to extend the visibility timeout to a maximum of 12 hours. If you try to extend the
            visibility timeout beyond 12 hours, your request is rejected.
            </para>
             
            <para>
            A message is considered to be <i>in flight</i> after it's received from a queue by
            a consumer, but not yet deleted from the queue.
            </para>
             
            <para>
            For standard queues, there can be a maximum of 120,000 inflight messages per queue.
            If you reach this limit, Amazon SQS returns the <code>OverLimit</code> error message.
            To avoid reaching the limit, you should delete messages from the queue after they're
            processed. You can also increase the number of queues you use to process your messages.
            </para>
             
            <para>
            For FIFO queues, there can be a maximum of 20,000 inflight messages per queue. If
            you reach this limit, Amazon SQS returns no error messages.
            </para>
             <important> 
            <para>
            If you attempt to set the <code>VisibilityTimeout</code> to a value greater than the
            maximum time left, Amazon SQS returns an error. Amazon SQS doesn't automatically recalculate
            and increase the timeout to the maximum remaining time.
            </para>
             
            <para>
            Unlike with a queue, when you change the visibility timeout for a specific message
            the timeout value is applied immediately but isn't saved in memory for that message.
            If you don't delete a message after it is received, the visibility timeout for the
            message reverts to the original timeout value (not to the value you set using the
            <code>ChangeMessageVisibility</code> action) the next time the message is received.
            </para>
             </important>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose message's visibility is changed. Queue URLs are case-sensitive.</param>
            <param name="receiptHandle">The receipt handle associated with the message whose visibility timeout is changed. This parameter is returned by the <code> <a>ReceiveMessage</a> </code> action.</param>
            <param name="visibilityTimeout">The new value for the message's visibility timeout (in seconds). Values values: <code>0</code> to <code>43200</code>. Maximum: 12 hours.</param>
            
            <returns>The response from the ChangeMessageVisibility service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.MessageNotInflightException">
            The message referred to isn't in flight.
            </exception>
            <exception cref="T:Amazon.SQS.Model.ReceiptHandleIsInvalidException">
            The receipt handle provided isn't valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibility">REST API Reference for ChangeMessageVisibility Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ChangeMessageVisibility(Amazon.SQS.Model.ChangeMessageVisibilityRequest)">
            <summary>
            Changes the visibility timeout of a specified message in a queue to a new value. The
            maximum allowed timeout value is 12 hours. Thus, you can't extend the timeout of a
            message in an existing queue to more than a total visibility timeout of 12 hours.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            
             
            <para>
            For example, you have a message and with the default visibility timeout of 5 minutes.
            After 3 minutes, you call <code>ChangeMessageVisiblity</code> with a timeout of 10
            minutes. At that time, the timeout for the message is extended by 10 minutes beyond
            the time of the <code>ChangeMessageVisibility</code> action. This results in a total
            visibility timeout of 13 minutes. You can continue to call the <code>ChangeMessageVisibility</code>
            to extend the visibility timeout to a maximum of 12 hours. If you try to extend the
            visibility timeout beyond 12 hours, your request is rejected.
            </para>
             
            <para>
            A message is considered to be <i>in flight</i> after it's received from a queue by
            a consumer, but not yet deleted from the queue.
            </para>
             
            <para>
            For standard queues, there can be a maximum of 120,000 inflight messages per queue.
            If you reach this limit, Amazon SQS returns the <code>OverLimit</code> error message.
            To avoid reaching the limit, you should delete messages from the queue after they're
            processed. You can also increase the number of queues you use to process your messages.
            </para>
             
            <para>
            For FIFO queues, there can be a maximum of 20,000 inflight messages per queue. If
            you reach this limit, Amazon SQS returns no error messages.
            </para>
             <important> 
            <para>
            If you attempt to set the <code>VisibilityTimeout</code> to a value greater than the
            maximum time left, Amazon SQS returns an error. Amazon SQS doesn't automatically recalculate
            and increase the timeout to the maximum remaining time.
            </para>
             
            <para>
            Unlike with a queue, when you change the visibility timeout for a specific message
            the timeout value is applied immediately but isn't saved in memory for that message.
            If you don't delete a message after it is received, the visibility timeout for the
            message reverts to the original timeout value (not to the value you set using the
            <code>ChangeMessageVisibility</code> action) the next time the message is received.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibility service method.</param>
            
            <returns>The response from the ChangeMessageVisibility service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.MessageNotInflightException">
            The message referred to isn't in flight.
            </exception>
            <exception cref="T:Amazon.SQS.Model.ReceiptHandleIsInvalidException">
            The receipt handle provided isn't valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibility">REST API Reference for ChangeMessageVisibility Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginChangeMessageVisibility(Amazon.SQS.Model.ChangeMessageVisibilityRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ChangeMessageVisibility operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibility operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndChangeMessageVisibility
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibility">REST API Reference for ChangeMessageVisibility Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndChangeMessageVisibility(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ChangeMessageVisibility operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginChangeMessageVisibility.</param>
            
            <returns>Returns a  ChangeMessageVisibilityResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibility">REST API Reference for ChangeMessageVisibility Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ChangeMessageVisibilityBatch(System.String,System.Collections.Generic.List{Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry})">
            <summary>
            Changes the visibility timeout of multiple messages. This is a batch version of <code>
            <a>ChangeMessageVisibility</a> </code>. The result of the action on each message is
            reported individually in the response. You can send up to 10 <code> <a>ChangeMessageVisibility</a>
            </code> requests with each <code>ChangeMessageVisibilityBatch</code> action.
            
             <important> 
            <para>
            Because the batch request can result in a combination of successful and unsuccessful
            actions, you should check for batch errors even when the call returns an HTTP status
            code of <code>200</code>.
            </para>
             </important> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose messages' visibility is changed. Queue URLs are case-sensitive.</param>
            <param name="entries">A list of receipt handles of the messages for which the visibility timeout must be changed.</param>
            
            <returns>The response from the ChangeMessageVisibilityBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibilityBatch">REST API Reference for ChangeMessageVisibilityBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ChangeMessageVisibilityBatch(Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest)">
            <summary>
            Changes the visibility timeout of multiple messages. This is a batch version of <code>
            <a>ChangeMessageVisibility</a> </code>. The result of the action on each message is
            reported individually in the response. You can send up to 10 <code> <a>ChangeMessageVisibility</a>
            </code> requests with each <code>ChangeMessageVisibilityBatch</code> action.
            
             <important> 
            <para>
            Because the batch request can result in a combination of successful and unsuccessful
            actions, you should check for batch errors even when the call returns an HTTP status
            code of <code>200</code>.
            </para>
             </important> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibilityBatch service method.</param>
            
            <returns>The response from the ChangeMessageVisibilityBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibilityBatch">REST API Reference for ChangeMessageVisibilityBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginChangeMessageVisibilityBatch(Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ChangeMessageVisibilityBatch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibilityBatch operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndChangeMessageVisibilityBatch
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibilityBatch">REST API Reference for ChangeMessageVisibilityBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndChangeMessageVisibilityBatch(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ChangeMessageVisibilityBatch operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginChangeMessageVisibilityBatch.</param>
            
            <returns>Returns a  ChangeMessageVisibilityBatchResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibilityBatch">REST API Reference for ChangeMessageVisibilityBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.CreateQueue(System.String)">
            <summary>
            Creates a new standard or FIFO queue or returns the URL of an existing queue. You
            can pass one or more attributes in the request. Keep the following caveats in mind:
            
             <ul> <li> 
            <para>
            If you don't specify the <code>FifoQueue</code> attribute, Amazon SQS creates a standard
            queue.
            </para>
             <note> 
            <para>
             You can't change the queue type after you create it and you can't convert an existing
            standard queue into a FIFO queue. You must either create a new FIFO queue for your
            application or delete your existing standard queue and recreate it as a FIFO queue.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-moving">
            Moving From a Standard Queue to a FIFO Queue</a> in the <i>Amazon SQS Developer Guide</i>.
            
            </para>
             </note> </li> <li> 
            <para>
            If you don't provide a value for an attribute, the queue is created with the default
            value for the attribute.
            </para>
             </li> <li> 
            <para>
            If you delete a queue, you must wait at least 60 seconds before creating a queue with
            the same name.
            </para>
             </li> </ul> 
            <para>
            To successfully create a new queue, you must provide a queue name that adheres to
            the <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/limits-queues.html">limits
            related to queues</a> and is unique within the scope of your queues.
            </para>
             
            <para>
            To get the queue URL, use the <code> <a>GetQueueUrl</a> </code> action. <code> <a>GetQueueUrl</a>
            </code> requires only the <code>QueueName</code> parameter. be aware of existing queue
            names:
            </para>
             <ul> <li> 
            <para>
            If you provide the name of an existing queue along with the exact names and values
            of all the queue's attributes, <code>CreateQueue</code> returns the queue URL for
            the existing queue.
            </para>
             </li> <li> 
            <para>
            If the queue name, attribute names, or attribute values don't match an existing queue,
            <code>CreateQueue</code> returns an error.
            </para>
             </li> </ul> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueName">The name of the new queue. The following limits apply to this name: <ul> <li> A queue name can have up to 80 characters. </li> <li> Valid values: alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>). </li> <li> A FIFO queue name must end with the <code>.fifo</code> suffix. </li> </ul> Queue names are case-sensitive.</param>
            
            <returns>The response from the CreateQueue service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.QueueDeletedRecentlyException">
            You must wait 60 seconds after deleting a queue before you can create another one
            with the same name.
            </exception>
            <exception cref="T:Amazon.SQS.Model.QueueNameExistsException">
            A queue already exists with this name. Amazon SQS returns this error only if the request
            includes attributes whose values differ from those of the existing queue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/CreateQueue">REST API Reference for CreateQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.CreateQueue(Amazon.SQS.Model.CreateQueueRequest)">
            <summary>
            Creates a new standard or FIFO queue or returns the URL of an existing queue. You
            can pass one or more attributes in the request. Keep the following caveats in mind:
            
             <ul> <li> 
            <para>
            If you don't specify the <code>FifoQueue</code> attribute, Amazon SQS creates a standard
            queue.
            </para>
             <note> 
            <para>
             You can't change the queue type after you create it and you can't convert an existing
            standard queue into a FIFO queue. You must either create a new FIFO queue for your
            application or delete your existing standard queue and recreate it as a FIFO queue.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-moving">
            Moving From a Standard Queue to a FIFO Queue</a> in the <i>Amazon SQS Developer Guide</i>.
            
            </para>
             </note> </li> <li> 
            <para>
            If you don't provide a value for an attribute, the queue is created with the default
            value for the attribute.
            </para>
             </li> <li> 
            <para>
            If you delete a queue, you must wait at least 60 seconds before creating a queue with
            the same name.
            </para>
             </li> </ul> 
            <para>
            To successfully create a new queue, you must provide a queue name that adheres to
            the <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/limits-queues.html">limits
            related to queues</a> and is unique within the scope of your queues.
            </para>
             
            <para>
            To get the queue URL, use the <code> <a>GetQueueUrl</a> </code> action. <code> <a>GetQueueUrl</a>
            </code> requires only the <code>QueueName</code> parameter. be aware of existing queue
            names:
            </para>
             <ul> <li> 
            <para>
            If you provide the name of an existing queue along with the exact names and values
            of all the queue's attributes, <code>CreateQueue</code> returns the queue URL for
            the existing queue.
            </para>
             </li> <li> 
            <para>
            If the queue name, attribute names, or attribute values don't match an existing queue,
            <code>CreateQueue</code> returns an error.
            </para>
             </li> </ul> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateQueue service method.</param>
            
            <returns>The response from the CreateQueue service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.QueueDeletedRecentlyException">
            You must wait 60 seconds after deleting a queue before you can create another one
            with the same name.
            </exception>
            <exception cref="T:Amazon.SQS.Model.QueueNameExistsException">
            A queue already exists with this name. Amazon SQS returns this error only if the request
            includes attributes whose values differ from those of the existing queue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/CreateQueue">REST API Reference for CreateQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginCreateQueue(Amazon.SQS.Model.CreateQueueRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateQueue operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateQueue operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateQueue
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/CreateQueue">REST API Reference for CreateQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndCreateQueue(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateQueue operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateQueue.</param>
            
            <returns>Returns a  CreateQueueResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/CreateQueue">REST API Reference for CreateQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.DeleteMessage(System.String,System.String)">
            <summary>
            Deletes the specified message from the specified queue. You specify the message by
            using the message's <i>receipt handle</i> and not the <i>MessageId</i> you receive
            when you send the message. Even if the message is locked by another reader due to
            the visibility timeout setting, it is still deleted from the queue. If you leave a
            message in the queue for longer than the queue's configured retention period, Amazon
            SQS automatically deletes the message. 
            
             <note> 
            <para>
             The receipt handle is associated with a specific instance of receiving the message.
            If you receive a message more than once, the receipt handle you get each time you
            receive the message is different. If you don't provide the most recently received
            receipt handle for the message when you use the <code>DeleteMessage</code> action,
            the request succeeds, but the message might not be deleted.
            </para>
             
            <para>
            For standard queues, it is possible to receive a message even after you deleting it.
            This might happen on rare occasions if one of the servers storing a copy of the message
            is unavailable when you send the request to delete the message. The copy remains on
            the server and might be returned to you on a subsequent receive request. You should
            ensure that your application is idempotent, so that receiving a message more than
            once does not cause issues.
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which messages are deleted. Queue URLs are case-sensitive.</param>
            <param name="receiptHandle">The receipt handle associated with the message to delete.</param>
            
            <returns>The response from the DeleteMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidIdFormatException">
            The receipt handle isn't valid for the current version.
            </exception>
            <exception cref="T:Amazon.SQS.Model.ReceiptHandleIsInvalidException">
            The receipt handle provided isn't valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessage">REST API Reference for DeleteMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.DeleteMessage(Amazon.SQS.Model.DeleteMessageRequest)">
            <summary>
            Deletes the specified message from the specified queue. You specify the message by
            using the message's <i>receipt handle</i> and not the <i>MessageId</i> you receive
            when you send the message. Even if the message is locked by another reader due to
            the visibility timeout setting, it is still deleted from the queue. If you leave a
            message in the queue for longer than the queue's configured retention period, Amazon
            SQS automatically deletes the message. 
            
             <note> 
            <para>
             The receipt handle is associated with a specific instance of receiving the message.
            If you receive a message more than once, the receipt handle you get each time you
            receive the message is different. If you don't provide the most recently received
            receipt handle for the message when you use the <code>DeleteMessage</code> action,
            the request succeeds, but the message might not be deleted.
            </para>
             
            <para>
            For standard queues, it is possible to receive a message even after you deleting it.
            This might happen on rare occasions if one of the servers storing a copy of the message
            is unavailable when you send the request to delete the message. The copy remains on
            the server and might be returned to you on a subsequent receive request. You should
            ensure that your application is idempotent, so that receiving a message more than
            once does not cause issues.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMessage service method.</param>
            
            <returns>The response from the DeleteMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidIdFormatException">
            The receipt handle isn't valid for the current version.
            </exception>
            <exception cref="T:Amazon.SQS.Model.ReceiptHandleIsInvalidException">
            The receipt handle provided isn't valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessage">REST API Reference for DeleteMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginDeleteMessage(Amazon.SQS.Model.DeleteMessageRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteMessage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMessage operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteMessage
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessage">REST API Reference for DeleteMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndDeleteMessage(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteMessage operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteMessage.</param>
            
            <returns>Returns a  DeleteMessageResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessage">REST API Reference for DeleteMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.DeleteMessageBatch(System.String,System.Collections.Generic.List{Amazon.SQS.Model.DeleteMessageBatchRequestEntry})">
            <summary>
            Deletes up to ten messages from the specified queue. This is a batch version of <code>
            <a>DeleteMessage</a> </code>. The result of the action on each message is reported
            individually in the response.
            
             <important> 
            <para>
            Because the batch request can result in a combination of successful and unsuccessful
            actions, you should check for batch errors even when the call returns an HTTP status
            code of <code>200</code>.
            </para>
             </important> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which messages are deleted. Queue URLs are case-sensitive.</param>
            <param name="entries">A list of receipt handles for the messages to be deleted.</param>
            
            <returns>The response from the DeleteMessageBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessageBatch">REST API Reference for DeleteMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.DeleteMessageBatch(Amazon.SQS.Model.DeleteMessageBatchRequest)">
            <summary>
            Deletes up to ten messages from the specified queue. This is a batch version of <code>
            <a>DeleteMessage</a> </code>. The result of the action on each message is reported
            individually in the response.
            
             <important> 
            <para>
            Because the batch request can result in a combination of successful and unsuccessful
            actions, you should check for batch errors even when the call returns an HTTP status
            code of <code>200</code>.
            </para>
             </important> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMessageBatch service method.</param>
            
            <returns>The response from the DeleteMessageBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessageBatch">REST API Reference for DeleteMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginDeleteMessageBatch(Amazon.SQS.Model.DeleteMessageBatchRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteMessageBatch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMessageBatch operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteMessageBatch
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessageBatch">REST API Reference for DeleteMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndDeleteMessageBatch(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteMessageBatch operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteMessageBatch.</param>
            
            <returns>Returns a  DeleteMessageBatchResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessageBatch">REST API Reference for DeleteMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.DeleteQueue(System.String)">
            <summary>
            Deletes the queue specified by the <code>QueueUrl</code>, even if the queue is empty.
            If the specified queue doesn't exist, Amazon SQS returns a successful response.
            
             <important> 
            <para>
            Be careful with the <code>DeleteQueue</code> action: When you delete a queue, any
            messages in the queue are no longer available. 
            </para>
             </important> 
            <para>
            When you delete a queue, the deletion process takes up to 60 seconds. Requests you
            send involving that queue during the 60 seconds might succeed. For example, a <code>
            <a>SendMessage</a> </code> request might succeed, but after 60 seconds the queue and
            the message you sent no longer exist.
            </para>
             
            <para>
            When you delete a queue, you must wait at least 60 seconds before creating a queue
            with the same name. 
            </para>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to delete. Queue URLs are case-sensitive.</param>
            
            <returns>The response from the DeleteQueue service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteQueue">REST API Reference for DeleteQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.DeleteQueue(Amazon.SQS.Model.DeleteQueueRequest)">
            <summary>
            Deletes the queue specified by the <code>QueueUrl</code>, even if the queue is empty.
            If the specified queue doesn't exist, Amazon SQS returns a successful response.
            
             <important> 
            <para>
            Be careful with the <code>DeleteQueue</code> action: When you delete a queue, any
            messages in the queue are no longer available. 
            </para>
             </important> 
            <para>
            When you delete a queue, the deletion process takes up to 60 seconds. Requests you
            send involving that queue during the 60 seconds might succeed. For example, a <code>
            <a>SendMessage</a> </code> request might succeed, but after 60 seconds the queue and
            the message you sent no longer exist.
            </para>
             
            <para>
            When you delete a queue, you must wait at least 60 seconds before creating a queue
            with the same name. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteQueue service method.</param>
            
            <returns>The response from the DeleteQueue service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteQueue">REST API Reference for DeleteQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginDeleteQueue(Amazon.SQS.Model.DeleteQueueRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteQueue operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteQueue operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteQueue
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteQueue">REST API Reference for DeleteQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndDeleteQueue(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteQueue operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteQueue.</param>
            
            <returns>Returns a  DeleteQueueResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteQueue">REST API Reference for DeleteQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.GetQueueAttributes(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets attributes for the specified queue.
            
             <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose attribute information is retrieved. Queue URLs are case-sensitive.</param>
            <param name="attributeNames">A list of attributes for which to retrieve information. <note> In the future, new attributes might be added. If you write code that calls this action, we recommend that you structure your code so that it can handle new attributes gracefully. </note> The following attributes are supported: <ul> <li>  <code>All</code> - Returns all values.  </li> <li>  <code>ApproximateNumberOfMessages</code> - Returns the approximate number of visible messages in a queue. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-resources-required-process-messages.html">Resources Required to Process Messages</a> in the <i>Amazon SQS Developer Guide</i>.  </li> <li>  <code>ApproximateNumberOfMessagesDelayed</code> - Returns the approximate number of messages that are waiting to be added to the queue.  </li> <li>  <code>ApproximateNumberOfMessagesNotVisible</code> - Returns the approximate number of messages that have not timed-out and aren't deleted. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-resources-required-process-messages.html">Resources Required to Process Messages</a> in the <i>Amazon SQS Developer Guide</i>.  </li> <li>  <code>CreatedTimestamp</code> - Returns the time when the queue was created in seconds (<a href="http://en.wikipedia.org/wiki/Unix_time">epoch time</a>). </li> <li>  <code>DelaySeconds</code> - Returns the default delay on the queue in seconds. </li> <li>  <code>LastModifiedTimestamp</code> - Returns the time when the queue was last changed in seconds (<a href="http://en.wikipedia.org/wiki/Unix_time">epoch time</a>). </li> <li>  <code>MaximumMessageSize</code> - Returns the limit of how many bytes a message can contain before Amazon SQS rejects it. </li> <li>  <code>MessageRetentionPeriod</code> - Returns the number of seconds for which Amazon SQS retains a message. </li> <li>  <code>Policy</code> - Returns the policy of the queue. </li> <li>  <code>QueueArn</code> - Returns the Amazon resource name (ARN) of the queue. </li> <li>  <code>ReceiveMessageWaitTimeSeconds</code> - Returns the number of seconds for which the <code>ReceiveMessage</code> action waits for a message to arrive.  </li> <li>  <code>RedrivePolicy</code> - Returns the parameters for dead letter queue functionality of the source queue. For more information about the redrive policy and dead letter queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>.  </li> <li>  <code>VisibilityTimeout</code> - Returns the visibility timeout for the queue. For more information about the visibility timeout, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility Timeout</a> in the <i>Amazon SQS Developer Guide</i>.  </li> </ul> The following attributes apply only to <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html">FIFO (first-in-first-out) queues</a>: <ul> <li>  <code>FifoQueue</code> - Returns whether the queue is FIFO. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-understanding-logic">FIFO Queue Logic</a> in the <i>Amazon SQS Developer Guide</i>. </li> <li>  <code>ContentBasedDeduplication</code> - Returns whether content-based deduplication is enabled for the queue. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing">Exactly-Once Processing</a> in the <i>Amazon SQS Developer Guide</i>.  </li> </ul></param>
            
            <returns>The response from the GetQueueAttributes service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidAttributeNameException">
            The attribute referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueAttributes">REST API Reference for GetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.GetQueueAttributes(Amazon.SQS.Model.GetQueueAttributesRequest)">
            <summary>
            Gets attributes for the specified queue.
            
             <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueueAttributes service method.</param>
            
            <returns>The response from the GetQueueAttributes service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidAttributeNameException">
            The attribute referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueAttributes">REST API Reference for GetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginGetQueueAttributes(Amazon.SQS.Model.GetQueueAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetQueueAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetQueueAttributes operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetQueueAttributes
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueAttributes">REST API Reference for GetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndGetQueueAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetQueueAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetQueueAttributes.</param>
            
            <returns>Returns a  GetQueueAttributesResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueAttributes">REST API Reference for GetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.GetQueueUrl(System.String)">
            <summary>
            Returns the URL of an existing queue. This action provides a simple way to retrieve
            the URL of an Amazon SQS queue.
            
             
            <para>
            To access a queue that belongs to another AWS account, use the <code>QueueOwnerAWSAccountId</code>
            parameter to specify the account ID of the queue's owner. The queue's owner must grant
            you permission to access the queue. For more information about shared queue access,
            see <code> <a>AddPermission</a> </code> or see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
            Queues</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
            </summary>
            <param name="queueName">The name of the queue whose URL must be fetched. Maximum 80 characters. Valid values: alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>). Queue names are case-sensitive.</param>
            
            <returns>The response from the GetQueueUrl service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.QueueDoesNotExistException">
            The queue referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueUrl">REST API Reference for GetQueueUrl Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.GetQueueUrl(Amazon.SQS.Model.GetQueueUrlRequest)">
            <summary>
            Returns the URL of an existing queue. This action provides a simple way to retrieve
            the URL of an Amazon SQS queue.
            
             
            <para>
            To access a queue that belongs to another AWS account, use the <code>QueueOwnerAWSAccountId</code>
            parameter to specify the account ID of the queue's owner. The queue's owner must grant
            you permission to access the queue. For more information about shared queue access,
            see <code> <a>AddPermission</a> </code> or see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
            Queues</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueueUrl service method.</param>
            
            <returns>The response from the GetQueueUrl service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.QueueDoesNotExistException">
            The queue referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueUrl">REST API Reference for GetQueueUrl Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginGetQueueUrl(Amazon.SQS.Model.GetQueueUrlRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetQueueUrl operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetQueueUrl operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetQueueUrl
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueUrl">REST API Reference for GetQueueUrl Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndGetQueueUrl(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetQueueUrl operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetQueueUrl.</param>
            
            <returns>Returns a  GetQueueUrlResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueUrl">REST API Reference for GetQueueUrl Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ListDeadLetterSourceQueues(Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest)">
            <summary>
            Returns a list of your queues that have the <code>RedrivePolicy</code> queue attribute
            configured with a dead letter queue.
            
             
            <para>
            For more information about using dead letter queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using
            Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeadLetterSourceQueues service method.</param>
            
            <returns>The response from the ListDeadLetterSourceQueues service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.QueueDoesNotExistException">
            The queue referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListDeadLetterSourceQueues">REST API Reference for ListDeadLetterSourceQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginListDeadLetterSourceQueues(Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListDeadLetterSourceQueues operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDeadLetterSourceQueues operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListDeadLetterSourceQueues
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListDeadLetterSourceQueues">REST API Reference for ListDeadLetterSourceQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndListDeadLetterSourceQueues(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListDeadLetterSourceQueues operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListDeadLetterSourceQueues.</param>
            
            <returns>Returns a  ListDeadLetterSourceQueuesResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListDeadLetterSourceQueues">REST API Reference for ListDeadLetterSourceQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ListQueues(System.String)">
            <summary>
            Returns a list of your queues. The maximum number of queues that can be returned is
            1,000. If you specify a value for the optional <code>QueueNamePrefix</code> parameter,
            only queues with a name that begins with the specified value are returned.
            </summary>
            <param name="queueNamePrefix">A string to use for filtering the list results. Only those queues whose name begins with the specified string are returned. Queue names are case-sensitive.</param>
            
            <returns>The response from the ListQueues service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListQueues">REST API Reference for ListQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ListQueues(Amazon.SQS.Model.ListQueuesRequest)">
            <summary>
            Returns a list of your queues. The maximum number of queues that can be returned is
            1,000. If you specify a value for the optional <code>QueueNamePrefix</code> parameter,
            only queues with a name that begins with the specified value are returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListQueues service method.</param>
            
            <returns>The response from the ListQueues service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListQueues">REST API Reference for ListQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginListQueues(Amazon.SQS.Model.ListQueuesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListQueues operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListQueues operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListQueues
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListQueues">REST API Reference for ListQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndListQueues(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListQueues operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListQueues.</param>
            
            <returns>Returns a  ListQueuesResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListQueues">REST API Reference for ListQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.PurgeQueue(System.String)">
            <summary>
            Deletes the messages in a queue specified by the <code>QueueURL</code> parameter.
            
             <important> 
            <para>
            When you use the <code>PurgeQueue</code> action, you can't retrieve a message deleted
            from a queue.
            </para>
             </important> 
            <para>
            When you purge a queue, the message deletion process takes up to 60 seconds. All messages
            sent to the queue before calling the <code>PurgeQueue</code> action are deleted. Messages
            sent to the queue while it is being purged might be deleted. While the queue is being
            purged, messages sent to the queue before <code>PurgeQueue</code> is called might
            be received, but are deleted within the next minute.
            </para>
            </summary>
            <param name="queueUrl">The URL of the queue from which the <code>PurgeQueue</code> action deletes messages. Queue URLs are case-sensitive.</param>
            
            <returns>The response from the PurgeQueue service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.PurgeQueueInProgressException">
            Indicates that the specified queue previously received a <code>PurgeQueue</code> request
            within the last 60 seconds (the time it can take to delete the messages in the queue).
            </exception>
            <exception cref="T:Amazon.SQS.Model.QueueDoesNotExistException">
            The queue referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/PurgeQueue">REST API Reference for PurgeQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.PurgeQueue(Amazon.SQS.Model.PurgeQueueRequest)">
            <summary>
            Deletes the messages in a queue specified by the <code>QueueURL</code> parameter.
            
             <important> 
            <para>
            When you use the <code>PurgeQueue</code> action, you can't retrieve a message deleted
            from a queue.
            </para>
             </important> 
            <para>
            When you purge a queue, the message deletion process takes up to 60 seconds. All messages
            sent to the queue before calling the <code>PurgeQueue</code> action are deleted. Messages
            sent to the queue while it is being purged might be deleted. While the queue is being
            purged, messages sent to the queue before <code>PurgeQueue</code> is called might
            be received, but are deleted within the next minute.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PurgeQueue service method.</param>
            
            <returns>The response from the PurgeQueue service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.PurgeQueueInProgressException">
            Indicates that the specified queue previously received a <code>PurgeQueue</code> request
            within the last 60 seconds (the time it can take to delete the messages in the queue).
            </exception>
            <exception cref="T:Amazon.SQS.Model.QueueDoesNotExistException">
            The queue referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/PurgeQueue">REST API Reference for PurgeQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginPurgeQueue(Amazon.SQS.Model.PurgeQueueRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the PurgeQueue operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurgeQueue operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndPurgeQueue
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/PurgeQueue">REST API Reference for PurgeQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndPurgeQueue(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  PurgeQueue operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginPurgeQueue.</param>
            
            <returns>Returns a  PurgeQueueResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/PurgeQueue">REST API Reference for PurgeQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ReceiveMessage(System.String)">
            <summary>
            Retrieves one or more messages (up to 10), from the specified queue. Using the <code>WaitTimeSeconds</code>
            parameter enables long-poll support. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html">Amazon
            SQS Long Polling</a> in the <i>Amazon SQS Developer Guide</i>. 
            
             
            <para>
            Short poll is the default behavior where a weighted random set of machines is sampled
            on a <code>ReceiveMessage</code> call. Thus, only the messages on the sampled machines
            are returned. If the number of messages in the queue is small (fewer than 1,000),
            you most likely get fewer messages than you requested per <code>ReceiveMessage</code>
            call. If the number of messages in the queue is extremely small, you might not receive
            any messages in a particular <code>ReceiveMessage</code> response. If this happens,
            repeat the request. 
            </para>
             
            <para>
            For each message returned, the response includes the following:
            </para>
             <ul> <li> 
            <para>
            The message body.
            </para>
             </li> <li> 
            <para>
            An MD5 digest of the message body. For information on MD5, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            </para>
             </li> <li> 
            <para>
            The <code>MessageId</code> you received when you sent the message to the queue.
            </para>
             </li> <li> 
            <para>
            The receipt handle.
            </para>
             </li> <li> 
            <para>
            The message attributes.
            </para>
             </li> <li> 
            <para>
            An MD5 digest of the message attributes.
            </para>
             </li> </ul> 
            <para>
            The receipt handle is the identifier you must provide when deleting the message. For
            more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-message-identifiers.html">Queue
            and Message Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            You can provide the <code>VisibilityTimeout</code> parameter in your request. The
            parameter is applied to the messages that Amazon SQS returns in the response. If you
            don't include the parameter, the overall visibility timeout for the queue is used
            for the returned messages. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            A message that isn't deleted or a message whose visibility isn't extended before the
            visibility timeout expires counts as a failed receive. Depending on the configuration
            of the queue, the message might be sent to the dead letter queue.
            </para>
             <note> 
            <para>
            In the future, new attributes might be added. If you write code that calls this action,
            we recommend that you structure your code so that it can handle new attributes gracefully.
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which messages are received. Queue URLs are case-sensitive.</param>
            
            <returns>The response from the ReceiveMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.OverLimitException">
            The action that you requested would violate a limit. For example, <code>ReceiveMessage</code>
            returns this error if the maximum number of inflight messages is reached. <code> <a>AddPermission</a>
            </code> returns this error if the maximum number of permissions for the queue is reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ReceiveMessage">REST API Reference for ReceiveMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ReceiveMessage(Amazon.SQS.Model.ReceiveMessageRequest)">
            <summary>
            Retrieves one or more messages (up to 10), from the specified queue. Using the <code>WaitTimeSeconds</code>
            parameter enables long-poll support. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html">Amazon
            SQS Long Polling</a> in the <i>Amazon SQS Developer Guide</i>. 
            
             
            <para>
            Short poll is the default behavior where a weighted random set of machines is sampled
            on a <code>ReceiveMessage</code> call. Thus, only the messages on the sampled machines
            are returned. If the number of messages in the queue is small (fewer than 1,000),
            you most likely get fewer messages than you requested per <code>ReceiveMessage</code>
            call. If the number of messages in the queue is extremely small, you might not receive
            any messages in a particular <code>ReceiveMessage</code> response. If this happens,
            repeat the request. 
            </para>
             
            <para>
            For each message returned, the response includes the following:
            </para>
             <ul> <li> 
            <para>
            The message body.
            </para>
             </li> <li> 
            <para>
            An MD5 digest of the message body. For information on MD5, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            </para>
             </li> <li> 
            <para>
            The <code>MessageId</code> you received when you sent the message to the queue.
            </para>
             </li> <li> 
            <para>
            The receipt handle.
            </para>
             </li> <li> 
            <para>
            The message attributes.
            </para>
             </li> <li> 
            <para>
            An MD5 digest of the message attributes.
            </para>
             </li> </ul> 
            <para>
            The receipt handle is the identifier you must provide when deleting the message. For
            more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-message-identifiers.html">Queue
            and Message Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            You can provide the <code>VisibilityTimeout</code> parameter in your request. The
            parameter is applied to the messages that Amazon SQS returns in the response. If you
            don't include the parameter, the overall visibility timeout for the queue is used
            for the returned messages. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            A message that isn't deleted or a message whose visibility isn't extended before the
            visibility timeout expires counts as a failed receive. Depending on the configuration
            of the queue, the message might be sent to the dead letter queue.
            </para>
             <note> 
            <para>
            In the future, new attributes might be added. If you write code that calls this action,
            we recommend that you structure your code so that it can handle new attributes gracefully.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReceiveMessage service method.</param>
            
            <returns>The response from the ReceiveMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.OverLimitException">
            The action that you requested would violate a limit. For example, <code>ReceiveMessage</code>
            returns this error if the maximum number of inflight messages is reached. <code> <a>AddPermission</a>
            </code> returns this error if the maximum number of permissions for the queue is reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ReceiveMessage">REST API Reference for ReceiveMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginReceiveMessage(Amazon.SQS.Model.ReceiveMessageRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ReceiveMessage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReceiveMessage operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndReceiveMessage
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ReceiveMessage">REST API Reference for ReceiveMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndReceiveMessage(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ReceiveMessage operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginReceiveMessage.</param>
            
            <returns>Returns a  ReceiveMessageResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ReceiveMessage">REST API Reference for ReceiveMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.RemovePermission(System.String,System.String)">
            <summary>
            Revokes any permissions in the queue policy that matches the specified <code>Label</code>
            parameter. Only the owner of the queue can remove permissions.
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which permissions are removed. Queue URLs are case-sensitive.</param>
            <param name="label">The identification of the permission to remove. This is the label added using the <code> <a>AddPermission</a> </code> action.</param>
            
            <returns>The response from the RemovePermission service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.RemovePermission(Amazon.SQS.Model.RemovePermissionRequest)">
            <summary>
            Revokes any permissions in the queue policy that matches the specified <code>Label</code>
            parameter. Only the owner of the queue can remove permissions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemovePermission service method.</param>
            
            <returns>The response from the RemovePermission service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginRemovePermission(Amazon.SQS.Model.RemovePermissionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RemovePermission operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemovePermission operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRemovePermission
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndRemovePermission(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RemovePermission operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRemovePermission.</param>
            
            <returns>Returns a  RemovePermissionResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.SendMessage(System.String,System.String)">
            <summary>
            Delivers a message to the specified queue.
            
             <important> 
            <para>
            The following list shows the characters (in Unicode) that are allowed in your message,
            according to the W3C XML specification:
            </para>
             <ul> <li> 
            <para>
             <code>#x9</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xA</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x20</code> to <code>#xD7FF</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xE000</code> to <code>#xFFFD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x10000</code> to <code>#x10FFFF</code> 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            If you send any characters that aren't included in this list, your request is rejected.
            </para>
             </important>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to which a message is sent. Queue URLs are case-sensitive.</param>
            <param name="messageBody">The message to send. The maximum string size is 256 KB. <important> The following list shows the characters (in Unicode) that are allowed in your message, according to the W3C XML specification: <ul> <li>  <code>#x9</code>  </li> <li>  <code>#xA</code>  </li> <li>  <code>#xD</code>  </li> <li>  <code>#x20</code> to <code>#xD7FF</code>  </li> <li>  <code>#xE000</code> to <code>#xFFFD</code>  </li> <li>  <code>#x10000</code> to <code>#x10FFFF</code>  </li> </ul> For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>. If you send any characters that aren't included in this list, your request is rejected. </important></param>
            
            <returns>The response from the SendMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidMessageContentsException">
            The message contains characters outside the allowed set.
            </exception>
            <exception cref="T:Amazon.SQS.Model.UnsupportedOperationException">
            Error code 400. Unsupported operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessage">REST API Reference for SendMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.SendMessage(Amazon.SQS.Model.SendMessageRequest)">
            <summary>
            Delivers a message to the specified queue.
            
             <important> 
            <para>
            The following list shows the characters (in Unicode) that are allowed in your message,
            according to the W3C XML specification:
            </para>
             <ul> <li> 
            <para>
             <code>#x9</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xA</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x20</code> to <code>#xD7FF</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xE000</code> to <code>#xFFFD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x10000</code> to <code>#x10FFFF</code> 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            If you send any characters that aren't included in this list, your request is rejected.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendMessage service method.</param>
            
            <returns>The response from the SendMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidMessageContentsException">
            The message contains characters outside the allowed set.
            </exception>
            <exception cref="T:Amazon.SQS.Model.UnsupportedOperationException">
            Error code 400. Unsupported operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessage">REST API Reference for SendMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginSendMessage(Amazon.SQS.Model.SendMessageRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SendMessage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendMessage operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSendMessage
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessage">REST API Reference for SendMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndSendMessage(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SendMessage operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSendMessage.</param>
            
            <returns>Returns a  SendMessageResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessage">REST API Reference for SendMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.SendMessageBatch(System.String,System.Collections.Generic.List{Amazon.SQS.Model.SendMessageBatchRequestEntry})">
            <summary>
            Delivers up to ten messages to the specified queue. This is a batch version of <code>
            <a>SendMessage</a> </code>. For a FIFO queue, multiple messages within a single batch
            are enqueued in the order they are sent.
            
             
            <para>
            The result of sending each message is reported individually in the response. Because
            the batch request can result in a combination of successful and unsuccessful actions,
            you should check for batch errors even when the call returns an HTTP status code of
            <code>200</code>.
            </para>
             
            <para>
            The maximum allowed individual message size and the maximum total payload size (the
            sum of the individual lengths of all of the batched messages) are both 256 KB (262,144
            bytes).
            </para>
             <important> 
            <para>
            The following list shows the characters (in Unicode) that are allowed in your message,
            according to the W3C XML specification:
            </para>
             <ul> <li> 
            <para>
             <code>#x9</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xA</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x20</code> to <code>#xD7FF</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xE000</code> to <code>#xFFFD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x10000</code> to <code>#x10FFFF</code> 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            If you send any characters that aren't included in this list, your request is rejected.
            </para>
             </important> 
            <para>
            If you don't specify the <code>DelaySeconds</code> parameter for an entry, Amazon
            SQS uses the default value for the queue.
            </para>
             <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to which batched messages are sent. Queue URLs are case-sensitive.</param>
            <param name="entries">A list of <code> <a>SendMessageBatchRequestEntry</a> </code> items.</param>
            
            <returns>The response from the SendMessageBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.BatchRequestTooLongException">
            The length of all the messages put together is more than the limit.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <exception cref="T:Amazon.SQS.Model.UnsupportedOperationException">
            Error code 400. Unsupported operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessageBatch">REST API Reference for SendMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.SendMessageBatch(Amazon.SQS.Model.SendMessageBatchRequest)">
            <summary>
            Delivers up to ten messages to the specified queue. This is a batch version of <code>
            <a>SendMessage</a> </code>. For a FIFO queue, multiple messages within a single batch
            are enqueued in the order they are sent.
            
             
            <para>
            The result of sending each message is reported individually in the response. Because
            the batch request can result in a combination of successful and unsuccessful actions,
            you should check for batch errors even when the call returns an HTTP status code of
            <code>200</code>.
            </para>
             
            <para>
            The maximum allowed individual message size and the maximum total payload size (the
            sum of the individual lengths of all of the batched messages) are both 256 KB (262,144
            bytes).
            </para>
             <important> 
            <para>
            The following list shows the characters (in Unicode) that are allowed in your message,
            according to the W3C XML specification:
            </para>
             <ul> <li> 
            <para>
             <code>#x9</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xA</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x20</code> to <code>#xD7FF</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xE000</code> to <code>#xFFFD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x10000</code> to <code>#x10FFFF</code> 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            If you send any characters that aren't included in this list, your request is rejected.
            </para>
             </important> 
            <para>
            If you don't specify the <code>DelaySeconds</code> parameter for an entry, Amazon
            SQS uses the default value for the queue.
            </para>
             <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendMessageBatch service method.</param>
            
            <returns>The response from the SendMessageBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.BatchRequestTooLongException">
            The length of all the messages put together is more than the limit.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <exception cref="T:Amazon.SQS.Model.UnsupportedOperationException">
            Error code 400. Unsupported operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessageBatch">REST API Reference for SendMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginSendMessageBatch(Amazon.SQS.Model.SendMessageBatchRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SendMessageBatch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendMessageBatch operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSendMessageBatch
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessageBatch">REST API Reference for SendMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndSendMessageBatch(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SendMessageBatch operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSendMessageBatch.</param>
            
            <returns>Returns a  SendMessageBatchResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessageBatch">REST API Reference for SendMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.SetQueueAttributes(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sets the value of one or more queue attributes. When you change a queue's attributes,
            the change can take up to 60 seconds for most of the attributes to propagate throughout
            the Amazon SQS system. Changes made to the <code>MessageRetentionPeriod</code> attribute
            can take up to 15 minutes.
            
             <note> 
            <para>
            In the future, new attributes might be added. If you write code that calls this action,
            we recommend that you structure your code so that it can handle new attributes gracefully.
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose attributes are set. Queue URLs are case-sensitive.</param>
            <param name="attributes">A map of attributes to set. The following lists the names, descriptions, and values of the special request parameters that the <code>SetQueueAttributes</code> action uses: <ul> <li>  <code>DelaySeconds</code> - The number of seconds for which the delivery of all messages in the queue is delayed. Valid values: An integer from 0 to 900 (15 minutes). The default is 0 (zero).  </li> <li>  <code>MaximumMessageSize</code> - The limit of how many bytes a message can contain before Amazon SQS rejects it. Valid values: An integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256 KiB). The default is 262,144 (256 KiB).  </li> <li>  <code>MessageRetentionPeriod</code> - The number of seconds for which Amazon SQS retains a message. Valid values: An integer representing seconds, from 60 (1 minute) to 1,209,600 (14 days). The default is 345,600 (4 days).  </li> <li>  <code>Policy</code> - The queue's policy. A valid AWS policy. For more information about policy structure, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html">Overview of AWS IAM Policies</a> in the <i>Amazon IAM User Guide</i>.  </li> <li>  <code>ReceiveMessageWaitTimeSeconds</code> - The number of seconds for which a <code> <a>ReceiveMessage</a> </code> action waits for a message to arrive. Valid values: an integer from 0 to 20 (seconds). The default is 0.  </li> <li>  <code>RedrivePolicy</code> - The parameters for the dead letter queue functionality of the source queue. For more information about the redrive policy and dead letter queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>.  <note> The dead letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead letter queue of a standard queue must also be a standard queue. </note> </li> <li>  <code>VisibilityTimeout</code> - The visibility timeout for the queue. Valid values: an integer from 0 to 43,200 (12 hours). The default is 30. For more information about the visibility timeout, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility Timeout</a> in the <i>Amazon SQS Developer Guide</i>. </li> </ul> The following attribute applies only to <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html">FIFO (first-in-first-out) queues</a>: <ul> <li>  <code>ContentBasedDeduplication</code> - Enables content-based deduplication. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing">Exactly-Once Processing</a> in the <i>Amazon SQS Developer Guide</i>.  <ul> <li> Every message must have a unique <code>MessageDeduplicationId</code>, <ul> <li> You may provide a <code>MessageDeduplicationId</code> explicitly. </li> <li> If you aren't able to provide a <code>MessageDeduplicationId</code> and you enable <code>ContentBasedDeduplication</code> for your queue, Amazon SQS uses a SHA-256 hash to generate the <code>MessageDeduplicationId</code> using the body of the message (but not the attributes of the message).  </li> <li> If you don't provide a <code>MessageDeduplicationId</code> and the queue doesn't have <code>ContentBasedDeduplication</code> set, the action fails with an error. </li> <li> If the queue has <code>ContentBasedDeduplication</code> set, your <code>MessageDeduplicationId</code> overrides the generated one. </li> </ul> </li> <li> When <code>ContentBasedDeduplication</code> is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered. </li> <li> You can also use <code>ContentBasedDeduplication</code> for messages with identical content to be treated as duplicates. </li> <li> If you send one message with <code>ContentBasedDeduplication</code> enabled and then another message with a <code>MessageDeduplicationId</code> that is the same as the one generated for the first <code>MessageDeduplicationId</code>, the two messages are treated as duplicates and only one copy of the message is delivered.  </li> </ul> </li> </ul> Any other valid special request parameters (such as the following) are ignored: <ul> <li>  <code>ApproximateNumberOfMessages</code>  </li> <li>  <code>ApproximateNumberOfMessagesDelayed</code>  </li> <li>  <code>ApproximateNumberOfMessagesNotVisible</code>  </li> <li>  <code>CreatedTimestamp</code>  </li> <li>  <code>LastModifiedTimestamp</code>  </li> <li>  <code>QueueArn</code>  </li> </ul></param>
            
            <returns>The response from the SetQueueAttributes service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidAttributeNameException">
            The attribute referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SetQueueAttributes">REST API Reference for SetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.SetQueueAttributes(Amazon.SQS.Model.SetQueueAttributesRequest)">
            <summary>
            Sets the value of one or more queue attributes. When you change a queue's attributes,
            the change can take up to 60 seconds for most of the attributes to propagate throughout
            the Amazon SQS system. Changes made to the <code>MessageRetentionPeriod</code> attribute
            can take up to 15 minutes.
            
             <note> 
            <para>
            In the future, new attributes might be added. If you write code that calls this action,
            we recommend that you structure your code so that it can handle new attributes gracefully.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetQueueAttributes service method.</param>
            
            <returns>The response from the SetQueueAttributes service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidAttributeNameException">
            The attribute referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SetQueueAttributes">REST API Reference for SetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.BeginSetQueueAttributes(Amazon.SQS.Model.SetQueueAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetQueueAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetQueueAttributes operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetQueueAttributes
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SetQueueAttributes">REST API Reference for SetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.EndSetQueueAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetQueueAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetQueueAttributes.</param>
            
            <returns>Returns a  SetQueueAttributesResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SetQueueAttributes">REST API Reference for SetQueueAttributes Operation</seealso>
        </member>
        <member name="T:Amazon.SQS.IAmazonSQS">
             <summary>
             Interface for accessing SQS
            
             Welcome to the <i>Amazon Simple Queue Service API Reference</i>.
             
              
             <para>
             Amazon Simple Queue Service (Amazon SQS) is a reliable, highly-scalable hosted queue
             for storing messages as they travel between applications or microservices. Amazon
             SQS moves data between distributed application components and helps you decouple these
             components.
             </para>
              <note> 
             <para>
              <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/standard-queues.html">Standard
             queues</a> are available in all regions. <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html">FIFO
             queues</a> are available in US West (Oregon) and US East (Ohio).
             </para>
              </note> 
             <para>
             You can use <a href="http://aws.amazon.com/tools/#sdk">AWS SDKs</a> to access Amazon
             SQS using your favorite programming language. The SDKs perform tasks such as the following
             automatically:
             </para>
              <ul> <li> 
             <para>
             Cryptographically sign your service requests
             </para>
              </li> <li> 
             <para>
             Retry requests
             </para>
              </li> <li> 
             <para>
             Handle error responses
             </para>
              </li> </ul> 
             <para>
              <b>Additional Information</b> 
             </para>
              <ul> <li> 
             <para>
              <a href="http://aws.amazon.com/sqs/">Amazon SQS Product Page</a> 
             </para>
              </li> <li> 
             <para>
              <i>Amazon SQS Developer Guide</i> 
             </para>
              <ul> <li> 
             <para>
              <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/MakingRequestsArticle.html">Making
             API Requests</a> 
             </para>
              </li> <li> 
             <para>
              <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-attributes.html">Using
             Amazon SQS Message Attributes</a> 
             </para>
              </li> <li> 
             <para>
              <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using
             Amazon SQS Dead Letter Queues</a> 
             </para>
              </li> </ul> </li> <li> 
             <para>
              <i>Amazon Web Services General Reference</i> 
             </para>
              <ul> <li> 
             <para>
              <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region">Regions
             and Endpoints</a> 
             </para>
              </li> </ul> </li> </ul>
             </summary>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.AuthorizeS3ToSendMessage(System.String,System.String)">
            <summary>
            This is a utility method which updates the policy of a queue to allow the
            S3 bucket to publish events to it.
            </summary>
            <param name="queueUrl">The queue that will have its policy updated.</param>
            <param name="bucket">The bucket that will be given access to send messages from.</param>
            <returns>The ARN for the SQS queue. This can be used when setting up the S3 bucket notification.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.AddPermission(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Adds a permission to a queue for a specific <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a>.
            This allows sharing access to the queue.
            
             
            <para>
            When you create a queue, you have full control access rights for the queue. Only you,
            the owner of the queue, can grant or deny permissions to the queue. For more information
            about these permissions, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
            Queues</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             <note> 
            <para>
             <code>AddPermission</code> writes an Amazon-SQS-generated policy. If you want to
            write your own policy, use <code> <a>SetQueueAttributes</a> </code> to upload your
            policy. For more information about writing your own policy, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AccessPolicyLanguage.html">Using
            The Access Policy Language</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to which permissions are added. Queue URLs are case-sensitive.</param>
            <param name="label">The unique identification of the permission you're setting (for example, <code>AliceSendMessage</code>). Maximum 80 characters. Allowed characters include alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>).</param>
            <param name="awsAccountIds">The AWS account number of the <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a> who is given permission. The principal must have an AWS account, but does not need to be signed up for Amazon SQS. For information about locating the AWS account identification, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AWSCredentials.html">Your AWS Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.</param>
            <param name="actions">The action the client wants to allow for the specified principal. The following values are valid: <ul> <li>  <code>*</code>  </li> <li>  <code>ChangeMessageVisibility</code>  </li> <li>  <code>DeleteMessage</code>  </li> <li>  <code>GetQueueAttributes</code>  </li> <li>  <code>GetQueueUrl</code>  </li> <li>  <code>ReceiveMessage</code>  </li> <li>  <code>SendMessage</code>  </li> </ul> For more information about these actions, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html#PermissionTypes">Understanding Permissions</a> in the <i>Amazon SQS Developer Guide</i>. Specifying <code>SendMessage</code>, <code>DeleteMessage</code>, or <code>ChangeMessageVisibility</code> for <code>ActionName.n</code> also grants permissions for the corresponding batch versions of those actions: <code>SendMessageBatch</code>, <code>DeleteMessageBatch</code>, and <code>ChangeMessageVisibilityBatch</code>.</param>
            
            <returns>The response from the AddPermission service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.OverLimitException">
            The action that you requested would violate a limit. For example, <code>ReceiveMessage</code>
            returns this error if the maximum number of inflight messages is reached. <code> <a>AddPermission</a>
            </code> returns this error if the maximum number of permissions for the queue is reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/AddPermission">REST API Reference for AddPermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.AddPermission(Amazon.SQS.Model.AddPermissionRequest)">
            <summary>
            Adds a permission to a queue for a specific <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a>.
            This allows sharing access to the queue.
            
             
            <para>
            When you create a queue, you have full control access rights for the queue. Only you,
            the owner of the queue, can grant or deny permissions to the queue. For more information
            about these permissions, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
            Queues</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             <note> 
            <para>
             <code>AddPermission</code> writes an Amazon-SQS-generated policy. If you want to
            write your own policy, use <code> <a>SetQueueAttributes</a> </code> to upload your
            policy. For more information about writing your own policy, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AccessPolicyLanguage.html">Using
            The Access Policy Language</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddPermission service method.</param>
            
            <returns>The response from the AddPermission service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.OverLimitException">
            The action that you requested would violate a limit. For example, <code>ReceiveMessage</code>
            returns this error if the maximum number of inflight messages is reached. <code> <a>AddPermission</a>
            </code> returns this error if the maximum number of permissions for the queue is reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/AddPermission">REST API Reference for AddPermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginAddPermission(Amazon.SQS.Model.AddPermissionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AddPermission operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddPermission operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAddPermission
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/AddPermission">REST API Reference for AddPermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndAddPermission(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AddPermission operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAddPermission.</param>
            
            <returns>Returns a  AddPermissionResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/AddPermission">REST API Reference for AddPermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ChangeMessageVisibility(System.String,System.String,System.Int32)">
            <summary>
            Changes the visibility timeout of a specified message in a queue to a new value. The
            maximum allowed timeout value is 12 hours. Thus, you can't extend the timeout of a
            message in an existing queue to more than a total visibility timeout of 12 hours.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            
             
            <para>
            For example, you have a message and with the default visibility timeout of 5 minutes.
            After 3 minutes, you call <code>ChangeMessageVisiblity</code> with a timeout of 10
            minutes. At that time, the timeout for the message is extended by 10 minutes beyond
            the time of the <code>ChangeMessageVisibility</code> action. This results in a total
            visibility timeout of 13 minutes. You can continue to call the <code>ChangeMessageVisibility</code>
            to extend the visibility timeout to a maximum of 12 hours. If you try to extend the
            visibility timeout beyond 12 hours, your request is rejected.
            </para>
             
            <para>
            A message is considered to be <i>in flight</i> after it's received from a queue by
            a consumer, but not yet deleted from the queue.
            </para>
             
            <para>
            For standard queues, there can be a maximum of 120,000 inflight messages per queue.
            If you reach this limit, Amazon SQS returns the <code>OverLimit</code> error message.
            To avoid reaching the limit, you should delete messages from the queue after they're
            processed. You can also increase the number of queues you use to process your messages.
            </para>
             
            <para>
            For FIFO queues, there can be a maximum of 20,000 inflight messages per queue. If
            you reach this limit, Amazon SQS returns no error messages.
            </para>
             <important> 
            <para>
            If you attempt to set the <code>VisibilityTimeout</code> to a value greater than the
            maximum time left, Amazon SQS returns an error. Amazon SQS doesn't automatically recalculate
            and increase the timeout to the maximum remaining time.
            </para>
             
            <para>
            Unlike with a queue, when you change the visibility timeout for a specific message
            the timeout value is applied immediately but isn't saved in memory for that message.
            If you don't delete a message after it is received, the visibility timeout for the
            message reverts to the original timeout value (not to the value you set using the
            <code>ChangeMessageVisibility</code> action) the next time the message is received.
            </para>
             </important>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose message's visibility is changed. Queue URLs are case-sensitive.</param>
            <param name="receiptHandle">The receipt handle associated with the message whose visibility timeout is changed. This parameter is returned by the <code> <a>ReceiveMessage</a> </code> action.</param>
            <param name="visibilityTimeout">The new value for the message's visibility timeout (in seconds). Values values: <code>0</code> to <code>43200</code>. Maximum: 12 hours.</param>
            
            <returns>The response from the ChangeMessageVisibility service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.MessageNotInflightException">
            The message referred to isn't in flight.
            </exception>
            <exception cref="T:Amazon.SQS.Model.ReceiptHandleIsInvalidException">
            The receipt handle provided isn't valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibility">REST API Reference for ChangeMessageVisibility Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ChangeMessageVisibility(Amazon.SQS.Model.ChangeMessageVisibilityRequest)">
            <summary>
            Changes the visibility timeout of a specified message in a queue to a new value. The
            maximum allowed timeout value is 12 hours. Thus, you can't extend the timeout of a
            message in an existing queue to more than a total visibility timeout of 12 hours.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            
             
            <para>
            For example, you have a message and with the default visibility timeout of 5 minutes.
            After 3 minutes, you call <code>ChangeMessageVisiblity</code> with a timeout of 10
            minutes. At that time, the timeout for the message is extended by 10 minutes beyond
            the time of the <code>ChangeMessageVisibility</code> action. This results in a total
            visibility timeout of 13 minutes. You can continue to call the <code>ChangeMessageVisibility</code>
            to extend the visibility timeout to a maximum of 12 hours. If you try to extend the
            visibility timeout beyond 12 hours, your request is rejected.
            </para>
             
            <para>
            A message is considered to be <i>in flight</i> after it's received from a queue by
            a consumer, but not yet deleted from the queue.
            </para>
             
            <para>
            For standard queues, there can be a maximum of 120,000 inflight messages per queue.
            If you reach this limit, Amazon SQS returns the <code>OverLimit</code> error message.
            To avoid reaching the limit, you should delete messages from the queue after they're
            processed. You can also increase the number of queues you use to process your messages.
            </para>
             
            <para>
            For FIFO queues, there can be a maximum of 20,000 inflight messages per queue. If
            you reach this limit, Amazon SQS returns no error messages.
            </para>
             <important> 
            <para>
            If you attempt to set the <code>VisibilityTimeout</code> to a value greater than the
            maximum time left, Amazon SQS returns an error. Amazon SQS doesn't automatically recalculate
            and increase the timeout to the maximum remaining time.
            </para>
             
            <para>
            Unlike with a queue, when you change the visibility timeout for a specific message
            the timeout value is applied immediately but isn't saved in memory for that message.
            If you don't delete a message after it is received, the visibility timeout for the
            message reverts to the original timeout value (not to the value you set using the
            <code>ChangeMessageVisibility</code> action) the next time the message is received.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibility service method.</param>
            
            <returns>The response from the ChangeMessageVisibility service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.MessageNotInflightException">
            The message referred to isn't in flight.
            </exception>
            <exception cref="T:Amazon.SQS.Model.ReceiptHandleIsInvalidException">
            The receipt handle provided isn't valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibility">REST API Reference for ChangeMessageVisibility Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginChangeMessageVisibility(Amazon.SQS.Model.ChangeMessageVisibilityRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ChangeMessageVisibility operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibility operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndChangeMessageVisibility
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibility">REST API Reference for ChangeMessageVisibility Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndChangeMessageVisibility(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ChangeMessageVisibility operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginChangeMessageVisibility.</param>
            
            <returns>Returns a  ChangeMessageVisibilityResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibility">REST API Reference for ChangeMessageVisibility Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ChangeMessageVisibilityBatch(System.String,System.Collections.Generic.List{Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry})">
            <summary>
            Changes the visibility timeout of multiple messages. This is a batch version of <code>
            <a>ChangeMessageVisibility</a> </code>. The result of the action on each message is
            reported individually in the response. You can send up to 10 <code> <a>ChangeMessageVisibility</a>
            </code> requests with each <code>ChangeMessageVisibilityBatch</code> action.
            
             <important> 
            <para>
            Because the batch request can result in a combination of successful and unsuccessful
            actions, you should check for batch errors even when the call returns an HTTP status
            code of <code>200</code>.
            </para>
             </important> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose messages' visibility is changed. Queue URLs are case-sensitive.</param>
            <param name="entries">A list of receipt handles of the messages for which the visibility timeout must be changed.</param>
            
            <returns>The response from the ChangeMessageVisibilityBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibilityBatch">REST API Reference for ChangeMessageVisibilityBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ChangeMessageVisibilityBatch(Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest)">
            <summary>
            Changes the visibility timeout of multiple messages. This is a batch version of <code>
            <a>ChangeMessageVisibility</a> </code>. The result of the action on each message is
            reported individually in the response. You can send up to 10 <code> <a>ChangeMessageVisibility</a>
            </code> requests with each <code>ChangeMessageVisibilityBatch</code> action.
            
             <important> 
            <para>
            Because the batch request can result in a combination of successful and unsuccessful
            actions, you should check for batch errors even when the call returns an HTTP status
            code of <code>200</code>.
            </para>
             </important> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibilityBatch service method.</param>
            
            <returns>The response from the ChangeMessageVisibilityBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibilityBatch">REST API Reference for ChangeMessageVisibilityBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginChangeMessageVisibilityBatch(Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ChangeMessageVisibilityBatch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibilityBatch operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndChangeMessageVisibilityBatch
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibilityBatch">REST API Reference for ChangeMessageVisibilityBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndChangeMessageVisibilityBatch(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ChangeMessageVisibilityBatch operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginChangeMessageVisibilityBatch.</param>
            
            <returns>Returns a  ChangeMessageVisibilityBatchResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ChangeMessageVisibilityBatch">REST API Reference for ChangeMessageVisibilityBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.CreateQueue(System.String)">
            <summary>
            Creates a new standard or FIFO queue or returns the URL of an existing queue. You
            can pass one or more attributes in the request. Keep the following caveats in mind:
            
             <ul> <li> 
            <para>
            If you don't specify the <code>FifoQueue</code> attribute, Amazon SQS creates a standard
            queue.
            </para>
             <note> 
            <para>
             You can't change the queue type after you create it and you can't convert an existing
            standard queue into a FIFO queue. You must either create a new FIFO queue for your
            application or delete your existing standard queue and recreate it as a FIFO queue.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-moving">
            Moving From a Standard Queue to a FIFO Queue</a> in the <i>Amazon SQS Developer Guide</i>.
            
            </para>
             </note> </li> <li> 
            <para>
            If you don't provide a value for an attribute, the queue is created with the default
            value for the attribute.
            </para>
             </li> <li> 
            <para>
            If you delete a queue, you must wait at least 60 seconds before creating a queue with
            the same name.
            </para>
             </li> </ul> 
            <para>
            To successfully create a new queue, you must provide a queue name that adheres to
            the <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/limits-queues.html">limits
            related to queues</a> and is unique within the scope of your queues.
            </para>
             
            <para>
            To get the queue URL, use the <code> <a>GetQueueUrl</a> </code> action. <code> <a>GetQueueUrl</a>
            </code> requires only the <code>QueueName</code> parameter. be aware of existing queue
            names:
            </para>
             <ul> <li> 
            <para>
            If you provide the name of an existing queue along with the exact names and values
            of all the queue's attributes, <code>CreateQueue</code> returns the queue URL for
            the existing queue.
            </para>
             </li> <li> 
            <para>
            If the queue name, attribute names, or attribute values don't match an existing queue,
            <code>CreateQueue</code> returns an error.
            </para>
             </li> </ul> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueName">The name of the new queue. The following limits apply to this name: <ul> <li> A queue name can have up to 80 characters. </li> <li> Valid values: alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>). </li> <li> A FIFO queue name must end with the <code>.fifo</code> suffix. </li> </ul> Queue names are case-sensitive.</param>
            
            <returns>The response from the CreateQueue service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.QueueDeletedRecentlyException">
            You must wait 60 seconds after deleting a queue before you can create another one
            with the same name.
            </exception>
            <exception cref="T:Amazon.SQS.Model.QueueNameExistsException">
            A queue already exists with this name. Amazon SQS returns this error only if the request
            includes attributes whose values differ from those of the existing queue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/CreateQueue">REST API Reference for CreateQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.CreateQueue(Amazon.SQS.Model.CreateQueueRequest)">
            <summary>
            Creates a new standard or FIFO queue or returns the URL of an existing queue. You
            can pass one or more attributes in the request. Keep the following caveats in mind:
            
             <ul> <li> 
            <para>
            If you don't specify the <code>FifoQueue</code> attribute, Amazon SQS creates a standard
            queue.
            </para>
             <note> 
            <para>
             You can't change the queue type after you create it and you can't convert an existing
            standard queue into a FIFO queue. You must either create a new FIFO queue for your
            application or delete your existing standard queue and recreate it as a FIFO queue.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-moving">
            Moving From a Standard Queue to a FIFO Queue</a> in the <i>Amazon SQS Developer Guide</i>.
            
            </para>
             </note> </li> <li> 
            <para>
            If you don't provide a value for an attribute, the queue is created with the default
            value for the attribute.
            </para>
             </li> <li> 
            <para>
            If you delete a queue, you must wait at least 60 seconds before creating a queue with
            the same name.
            </para>
             </li> </ul> 
            <para>
            To successfully create a new queue, you must provide a queue name that adheres to
            the <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/limits-queues.html">limits
            related to queues</a> and is unique within the scope of your queues.
            </para>
             
            <para>
            To get the queue URL, use the <code> <a>GetQueueUrl</a> </code> action. <code> <a>GetQueueUrl</a>
            </code> requires only the <code>QueueName</code> parameter. be aware of existing queue
            names:
            </para>
             <ul> <li> 
            <para>
            If you provide the name of an existing queue along with the exact names and values
            of all the queue's attributes, <code>CreateQueue</code> returns the queue URL for
            the existing queue.
            </para>
             </li> <li> 
            <para>
            If the queue name, attribute names, or attribute values don't match an existing queue,
            <code>CreateQueue</code> returns an error.
            </para>
             </li> </ul> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateQueue service method.</param>
            
            <returns>The response from the CreateQueue service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.QueueDeletedRecentlyException">
            You must wait 60 seconds after deleting a queue before you can create another one
            with the same name.
            </exception>
            <exception cref="T:Amazon.SQS.Model.QueueNameExistsException">
            A queue already exists with this name. Amazon SQS returns this error only if the request
            includes attributes whose values differ from those of the existing queue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/CreateQueue">REST API Reference for CreateQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginCreateQueue(Amazon.SQS.Model.CreateQueueRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateQueue operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateQueue operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateQueue
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/CreateQueue">REST API Reference for CreateQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndCreateQueue(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateQueue operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateQueue.</param>
            
            <returns>Returns a  CreateQueueResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/CreateQueue">REST API Reference for CreateQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.DeleteMessage(System.String,System.String)">
            <summary>
            Deletes the specified message from the specified queue. You specify the message by
            using the message's <i>receipt handle</i> and not the <i>MessageId</i> you receive
            when you send the message. Even if the message is locked by another reader due to
            the visibility timeout setting, it is still deleted from the queue. If you leave a
            message in the queue for longer than the queue's configured retention period, Amazon
            SQS automatically deletes the message. 
            
             <note> 
            <para>
             The receipt handle is associated with a specific instance of receiving the message.
            If you receive a message more than once, the receipt handle you get each time you
            receive the message is different. If you don't provide the most recently received
            receipt handle for the message when you use the <code>DeleteMessage</code> action,
            the request succeeds, but the message might not be deleted.
            </para>
             
            <para>
            For standard queues, it is possible to receive a message even after you deleting it.
            This might happen on rare occasions if one of the servers storing a copy of the message
            is unavailable when you send the request to delete the message. The copy remains on
            the server and might be returned to you on a subsequent receive request. You should
            ensure that your application is idempotent, so that receiving a message more than
            once does not cause issues.
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which messages are deleted. Queue URLs are case-sensitive.</param>
            <param name="receiptHandle">The receipt handle associated with the message to delete.</param>
            
            <returns>The response from the DeleteMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidIdFormatException">
            The receipt handle isn't valid for the current version.
            </exception>
            <exception cref="T:Amazon.SQS.Model.ReceiptHandleIsInvalidException">
            The receipt handle provided isn't valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessage">REST API Reference for DeleteMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.DeleteMessage(Amazon.SQS.Model.DeleteMessageRequest)">
            <summary>
            Deletes the specified message from the specified queue. You specify the message by
            using the message's <i>receipt handle</i> and not the <i>MessageId</i> you receive
            when you send the message. Even if the message is locked by another reader due to
            the visibility timeout setting, it is still deleted from the queue. If you leave a
            message in the queue for longer than the queue's configured retention period, Amazon
            SQS automatically deletes the message. 
            
             <note> 
            <para>
             The receipt handle is associated with a specific instance of receiving the message.
            If you receive a message more than once, the receipt handle you get each time you
            receive the message is different. If you don't provide the most recently received
            receipt handle for the message when you use the <code>DeleteMessage</code> action,
            the request succeeds, but the message might not be deleted.
            </para>
             
            <para>
            For standard queues, it is possible to receive a message even after you deleting it.
            This might happen on rare occasions if one of the servers storing a copy of the message
            is unavailable when you send the request to delete the message. The copy remains on
            the server and might be returned to you on a subsequent receive request. You should
            ensure that your application is idempotent, so that receiving a message more than
            once does not cause issues.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMessage service method.</param>
            
            <returns>The response from the DeleteMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidIdFormatException">
            The receipt handle isn't valid for the current version.
            </exception>
            <exception cref="T:Amazon.SQS.Model.ReceiptHandleIsInvalidException">
            The receipt handle provided isn't valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessage">REST API Reference for DeleteMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginDeleteMessage(Amazon.SQS.Model.DeleteMessageRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteMessage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMessage operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteMessage
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessage">REST API Reference for DeleteMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndDeleteMessage(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteMessage operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteMessage.</param>
            
            <returns>Returns a  DeleteMessageResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessage">REST API Reference for DeleteMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.DeleteMessageBatch(System.String,System.Collections.Generic.List{Amazon.SQS.Model.DeleteMessageBatchRequestEntry})">
            <summary>
            Deletes up to ten messages from the specified queue. This is a batch version of <code>
            <a>DeleteMessage</a> </code>. The result of the action on each message is reported
            individually in the response.
            
             <important> 
            <para>
            Because the batch request can result in a combination of successful and unsuccessful
            actions, you should check for batch errors even when the call returns an HTTP status
            code of <code>200</code>.
            </para>
             </important> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which messages are deleted. Queue URLs are case-sensitive.</param>
            <param name="entries">A list of receipt handles for the messages to be deleted.</param>
            
            <returns>The response from the DeleteMessageBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessageBatch">REST API Reference for DeleteMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.DeleteMessageBatch(Amazon.SQS.Model.DeleteMessageBatchRequest)">
            <summary>
            Deletes up to ten messages from the specified queue. This is a batch version of <code>
            <a>DeleteMessage</a> </code>. The result of the action on each message is reported
            individually in the response.
            
             <important> 
            <para>
            Because the batch request can result in a combination of successful and unsuccessful
            actions, you should check for batch errors even when the call returns an HTTP status
            code of <code>200</code>.
            </para>
             </important> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMessageBatch service method.</param>
            
            <returns>The response from the DeleteMessageBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessageBatch">REST API Reference for DeleteMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginDeleteMessageBatch(Amazon.SQS.Model.DeleteMessageBatchRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteMessageBatch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMessageBatch operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteMessageBatch
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessageBatch">REST API Reference for DeleteMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndDeleteMessageBatch(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteMessageBatch operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteMessageBatch.</param>
            
            <returns>Returns a  DeleteMessageBatchResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteMessageBatch">REST API Reference for DeleteMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.DeleteQueue(System.String)">
            <summary>
            Deletes the queue specified by the <code>QueueUrl</code>, even if the queue is empty.
            If the specified queue doesn't exist, Amazon SQS returns a successful response.
            
             <important> 
            <para>
            Be careful with the <code>DeleteQueue</code> action: When you delete a queue, any
            messages in the queue are no longer available. 
            </para>
             </important> 
            <para>
            When you delete a queue, the deletion process takes up to 60 seconds. Requests you
            send involving that queue during the 60 seconds might succeed. For example, a <code>
            <a>SendMessage</a> </code> request might succeed, but after 60 seconds the queue and
            the message you sent no longer exist.
            </para>
             
            <para>
            When you delete a queue, you must wait at least 60 seconds before creating a queue
            with the same name. 
            </para>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to delete. Queue URLs are case-sensitive.</param>
            
            <returns>The response from the DeleteQueue service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteQueue">REST API Reference for DeleteQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.DeleteQueue(Amazon.SQS.Model.DeleteQueueRequest)">
            <summary>
            Deletes the queue specified by the <code>QueueUrl</code>, even if the queue is empty.
            If the specified queue doesn't exist, Amazon SQS returns a successful response.
            
             <important> 
            <para>
            Be careful with the <code>DeleteQueue</code> action: When you delete a queue, any
            messages in the queue are no longer available. 
            </para>
             </important> 
            <para>
            When you delete a queue, the deletion process takes up to 60 seconds. Requests you
            send involving that queue during the 60 seconds might succeed. For example, a <code>
            <a>SendMessage</a> </code> request might succeed, but after 60 seconds the queue and
            the message you sent no longer exist.
            </para>
             
            <para>
            When you delete a queue, you must wait at least 60 seconds before creating a queue
            with the same name. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteQueue service method.</param>
            
            <returns>The response from the DeleteQueue service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteQueue">REST API Reference for DeleteQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginDeleteQueue(Amazon.SQS.Model.DeleteQueueRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteQueue operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteQueue operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteQueue
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteQueue">REST API Reference for DeleteQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndDeleteQueue(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteQueue operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteQueue.</param>
            
            <returns>Returns a  DeleteQueueResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/DeleteQueue">REST API Reference for DeleteQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.GetQueueAttributes(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets attributes for the specified queue.
            
             <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose attribute information is retrieved. Queue URLs are case-sensitive.</param>
            <param name="attributeNames">A list of attributes for which to retrieve information. <note> In the future, new attributes might be added. If you write code that calls this action, we recommend that you structure your code so that it can handle new attributes gracefully. </note> The following attributes are supported: <ul> <li>  <code>All</code> - Returns all values.  </li> <li>  <code>ApproximateNumberOfMessages</code> - Returns the approximate number of visible messages in a queue. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-resources-required-process-messages.html">Resources Required to Process Messages</a> in the <i>Amazon SQS Developer Guide</i>.  </li> <li>  <code>ApproximateNumberOfMessagesDelayed</code> - Returns the approximate number of messages that are waiting to be added to the queue.  </li> <li>  <code>ApproximateNumberOfMessagesNotVisible</code> - Returns the approximate number of messages that have not timed-out and aren't deleted. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-resources-required-process-messages.html">Resources Required to Process Messages</a> in the <i>Amazon SQS Developer Guide</i>.  </li> <li>  <code>CreatedTimestamp</code> - Returns the time when the queue was created in seconds (<a href="http://en.wikipedia.org/wiki/Unix_time">epoch time</a>). </li> <li>  <code>DelaySeconds</code> - Returns the default delay on the queue in seconds. </li> <li>  <code>LastModifiedTimestamp</code> - Returns the time when the queue was last changed in seconds (<a href="http://en.wikipedia.org/wiki/Unix_time">epoch time</a>). </li> <li>  <code>MaximumMessageSize</code> - Returns the limit of how many bytes a message can contain before Amazon SQS rejects it. </li> <li>  <code>MessageRetentionPeriod</code> - Returns the number of seconds for which Amazon SQS retains a message. </li> <li>  <code>Policy</code> - Returns the policy of the queue. </li> <li>  <code>QueueArn</code> - Returns the Amazon resource name (ARN) of the queue. </li> <li>  <code>ReceiveMessageWaitTimeSeconds</code> - Returns the number of seconds for which the <code>ReceiveMessage</code> action waits for a message to arrive.  </li> <li>  <code>RedrivePolicy</code> - Returns the parameters for dead letter queue functionality of the source queue. For more information about the redrive policy and dead letter queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>.  </li> <li>  <code>VisibilityTimeout</code> - Returns the visibility timeout for the queue. For more information about the visibility timeout, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility Timeout</a> in the <i>Amazon SQS Developer Guide</i>.  </li> </ul> The following attributes apply only to <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html">FIFO (first-in-first-out) queues</a>: <ul> <li>  <code>FifoQueue</code> - Returns whether the queue is FIFO. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-understanding-logic">FIFO Queue Logic</a> in the <i>Amazon SQS Developer Guide</i>. </li> <li>  <code>ContentBasedDeduplication</code> - Returns whether content-based deduplication is enabled for the queue. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing">Exactly-Once Processing</a> in the <i>Amazon SQS Developer Guide</i>.  </li> </ul></param>
            
            <returns>The response from the GetQueueAttributes service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidAttributeNameException">
            The attribute referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueAttributes">REST API Reference for GetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.GetQueueAttributes(Amazon.SQS.Model.GetQueueAttributesRequest)">
            <summary>
            Gets attributes for the specified queue.
            
             <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueueAttributes service method.</param>
            
            <returns>The response from the GetQueueAttributes service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidAttributeNameException">
            The attribute referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueAttributes">REST API Reference for GetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginGetQueueAttributes(Amazon.SQS.Model.GetQueueAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetQueueAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetQueueAttributes operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetQueueAttributes
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueAttributes">REST API Reference for GetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndGetQueueAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetQueueAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetQueueAttributes.</param>
            
            <returns>Returns a  GetQueueAttributesResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueAttributes">REST API Reference for GetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.GetQueueUrl(System.String)">
            <summary>
            Returns the URL of an existing queue. This action provides a simple way to retrieve
            the URL of an Amazon SQS queue.
            
             
            <para>
            To access a queue that belongs to another AWS account, use the <code>QueueOwnerAWSAccountId</code>
            parameter to specify the account ID of the queue's owner. The queue's owner must grant
            you permission to access the queue. For more information about shared queue access,
            see <code> <a>AddPermission</a> </code> or see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
            Queues</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
            </summary>
            <param name="queueName">The name of the queue whose URL must be fetched. Maximum 80 characters. Valid values: alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>). Queue names are case-sensitive.</param>
            
            <returns>The response from the GetQueueUrl service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.QueueDoesNotExistException">
            The queue referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueUrl">REST API Reference for GetQueueUrl Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.GetQueueUrl(Amazon.SQS.Model.GetQueueUrlRequest)">
            <summary>
            Returns the URL of an existing queue. This action provides a simple way to retrieve
            the URL of an Amazon SQS queue.
            
             
            <para>
            To access a queue that belongs to another AWS account, use the <code>QueueOwnerAWSAccountId</code>
            parameter to specify the account ID of the queue's owner. The queue's owner must grant
            you permission to access the queue. For more information about shared queue access,
            see <code> <a>AddPermission</a> </code> or see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
            Queues</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetQueueUrl service method.</param>
            
            <returns>The response from the GetQueueUrl service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.QueueDoesNotExistException">
            The queue referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueUrl">REST API Reference for GetQueueUrl Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginGetQueueUrl(Amazon.SQS.Model.GetQueueUrlRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetQueueUrl operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetQueueUrl operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetQueueUrl
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueUrl">REST API Reference for GetQueueUrl Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndGetQueueUrl(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetQueueUrl operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetQueueUrl.</param>
            
            <returns>Returns a  GetQueueUrlResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/GetQueueUrl">REST API Reference for GetQueueUrl Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ListDeadLetterSourceQueues(Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest)">
            <summary>
            Returns a list of your queues that have the <code>RedrivePolicy</code> queue attribute
            configured with a dead letter queue.
            
             
            <para>
            For more information about using dead letter queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using
            Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDeadLetterSourceQueues service method.</param>
            
            <returns>The response from the ListDeadLetterSourceQueues service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.QueueDoesNotExistException">
            The queue referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListDeadLetterSourceQueues">REST API Reference for ListDeadLetterSourceQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginListDeadLetterSourceQueues(Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListDeadLetterSourceQueues operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDeadLetterSourceQueues operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListDeadLetterSourceQueues
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListDeadLetterSourceQueues">REST API Reference for ListDeadLetterSourceQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndListDeadLetterSourceQueues(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListDeadLetterSourceQueues operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListDeadLetterSourceQueues.</param>
            
            <returns>Returns a  ListDeadLetterSourceQueuesResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListDeadLetterSourceQueues">REST API Reference for ListDeadLetterSourceQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ListQueues(System.String)">
            <summary>
            Returns a list of your queues. The maximum number of queues that can be returned is
            1,000. If you specify a value for the optional <code>QueueNamePrefix</code> parameter,
            only queues with a name that begins with the specified value are returned.
            </summary>
            <param name="queueNamePrefix">A string to use for filtering the list results. Only those queues whose name begins with the specified string are returned. Queue names are case-sensitive.</param>
            
            <returns>The response from the ListQueues service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListQueues">REST API Reference for ListQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ListQueues(Amazon.SQS.Model.ListQueuesRequest)">
            <summary>
            Returns a list of your queues. The maximum number of queues that can be returned is
            1,000. If you specify a value for the optional <code>QueueNamePrefix</code> parameter,
            only queues with a name that begins with the specified value are returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListQueues service method.</param>
            
            <returns>The response from the ListQueues service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListQueues">REST API Reference for ListQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginListQueues(Amazon.SQS.Model.ListQueuesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListQueues operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListQueues operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListQueues
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListQueues">REST API Reference for ListQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndListQueues(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListQueues operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListQueues.</param>
            
            <returns>Returns a  ListQueuesResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ListQueues">REST API Reference for ListQueues Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.PurgeQueue(System.String)">
            <summary>
            Deletes the messages in a queue specified by the <code>QueueURL</code> parameter.
            
             <important> 
            <para>
            When you use the <code>PurgeQueue</code> action, you can't retrieve a message deleted
            from a queue.
            </para>
             </important> 
            <para>
            When you purge a queue, the message deletion process takes up to 60 seconds. All messages
            sent to the queue before calling the <code>PurgeQueue</code> action are deleted. Messages
            sent to the queue while it is being purged might be deleted. While the queue is being
            purged, messages sent to the queue before <code>PurgeQueue</code> is called might
            be received, but are deleted within the next minute.
            </para>
            </summary>
            <param name="queueUrl">The URL of the queue from which the <code>PurgeQueue</code> action deletes messages. Queue URLs are case-sensitive.</param>
            
            <returns>The response from the PurgeQueue service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.PurgeQueueInProgressException">
            Indicates that the specified queue previously received a <code>PurgeQueue</code> request
            within the last 60 seconds (the time it can take to delete the messages in the queue).
            </exception>
            <exception cref="T:Amazon.SQS.Model.QueueDoesNotExistException">
            The queue referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/PurgeQueue">REST API Reference for PurgeQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.PurgeQueue(Amazon.SQS.Model.PurgeQueueRequest)">
            <summary>
            Deletes the messages in a queue specified by the <code>QueueURL</code> parameter.
            
             <important> 
            <para>
            When you use the <code>PurgeQueue</code> action, you can't retrieve a message deleted
            from a queue.
            </para>
             </important> 
            <para>
            When you purge a queue, the message deletion process takes up to 60 seconds. All messages
            sent to the queue before calling the <code>PurgeQueue</code> action are deleted. Messages
            sent to the queue while it is being purged might be deleted. While the queue is being
            purged, messages sent to the queue before <code>PurgeQueue</code> is called might
            be received, but are deleted within the next minute.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PurgeQueue service method.</param>
            
            <returns>The response from the PurgeQueue service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.PurgeQueueInProgressException">
            Indicates that the specified queue previously received a <code>PurgeQueue</code> request
            within the last 60 seconds (the time it can take to delete the messages in the queue).
            </exception>
            <exception cref="T:Amazon.SQS.Model.QueueDoesNotExistException">
            The queue referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/PurgeQueue">REST API Reference for PurgeQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginPurgeQueue(Amazon.SQS.Model.PurgeQueueRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the PurgeQueue operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurgeQueue operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndPurgeQueue
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/PurgeQueue">REST API Reference for PurgeQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndPurgeQueue(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  PurgeQueue operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginPurgeQueue.</param>
            
            <returns>Returns a  PurgeQueueResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/PurgeQueue">REST API Reference for PurgeQueue Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ReceiveMessage(System.String)">
            <summary>
            Retrieves one or more messages (up to 10), from the specified queue. Using the <code>WaitTimeSeconds</code>
            parameter enables long-poll support. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html">Amazon
            SQS Long Polling</a> in the <i>Amazon SQS Developer Guide</i>. 
            
             
            <para>
            Short poll is the default behavior where a weighted random set of machines is sampled
            on a <code>ReceiveMessage</code> call. Thus, only the messages on the sampled machines
            are returned. If the number of messages in the queue is small (fewer than 1,000),
            you most likely get fewer messages than you requested per <code>ReceiveMessage</code>
            call. If the number of messages in the queue is extremely small, you might not receive
            any messages in a particular <code>ReceiveMessage</code> response. If this happens,
            repeat the request. 
            </para>
             
            <para>
            For each message returned, the response includes the following:
            </para>
             <ul> <li> 
            <para>
            The message body.
            </para>
             </li> <li> 
            <para>
            An MD5 digest of the message body. For information on MD5, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            </para>
             </li> <li> 
            <para>
            The <code>MessageId</code> you received when you sent the message to the queue.
            </para>
             </li> <li> 
            <para>
            The receipt handle.
            </para>
             </li> <li> 
            <para>
            The message attributes.
            </para>
             </li> <li> 
            <para>
            An MD5 digest of the message attributes.
            </para>
             </li> </ul> 
            <para>
            The receipt handle is the identifier you must provide when deleting the message. For
            more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-message-identifiers.html">Queue
            and Message Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            You can provide the <code>VisibilityTimeout</code> parameter in your request. The
            parameter is applied to the messages that Amazon SQS returns in the response. If you
            don't include the parameter, the overall visibility timeout for the queue is used
            for the returned messages. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            A message that isn't deleted or a message whose visibility isn't extended before the
            visibility timeout expires counts as a failed receive. Depending on the configuration
            of the queue, the message might be sent to the dead letter queue.
            </para>
             <note> 
            <para>
            In the future, new attributes might be added. If you write code that calls this action,
            we recommend that you structure your code so that it can handle new attributes gracefully.
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which messages are received. Queue URLs are case-sensitive.</param>
            
            <returns>The response from the ReceiveMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.OverLimitException">
            The action that you requested would violate a limit. For example, <code>ReceiveMessage</code>
            returns this error if the maximum number of inflight messages is reached. <code> <a>AddPermission</a>
            </code> returns this error if the maximum number of permissions for the queue is reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ReceiveMessage">REST API Reference for ReceiveMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ReceiveMessage(Amazon.SQS.Model.ReceiveMessageRequest)">
            <summary>
            Retrieves one or more messages (up to 10), from the specified queue. Using the <code>WaitTimeSeconds</code>
            parameter enables long-poll support. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html">Amazon
            SQS Long Polling</a> in the <i>Amazon SQS Developer Guide</i>. 
            
             
            <para>
            Short poll is the default behavior where a weighted random set of machines is sampled
            on a <code>ReceiveMessage</code> call. Thus, only the messages on the sampled machines
            are returned. If the number of messages in the queue is small (fewer than 1,000),
            you most likely get fewer messages than you requested per <code>ReceiveMessage</code>
            call. If the number of messages in the queue is extremely small, you might not receive
            any messages in a particular <code>ReceiveMessage</code> response. If this happens,
            repeat the request. 
            </para>
             
            <para>
            For each message returned, the response includes the following:
            </para>
             <ul> <li> 
            <para>
            The message body.
            </para>
             </li> <li> 
            <para>
            An MD5 digest of the message body. For information on MD5, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            </para>
             </li> <li> 
            <para>
            The <code>MessageId</code> you received when you sent the message to the queue.
            </para>
             </li> <li> 
            <para>
            The receipt handle.
            </para>
             </li> <li> 
            <para>
            The message attributes.
            </para>
             </li> <li> 
            <para>
            An MD5 digest of the message attributes.
            </para>
             </li> </ul> 
            <para>
            The receipt handle is the identifier you must provide when deleting the message. For
            more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-message-identifiers.html">Queue
            and Message Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            You can provide the <code>VisibilityTimeout</code> parameter in your request. The
            parameter is applied to the messages that Amazon SQS returns in the response. If you
            don't include the parameter, the overall visibility timeout for the queue is used
            for the returned messages. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            A message that isn't deleted or a message whose visibility isn't extended before the
            visibility timeout expires counts as a failed receive. Depending on the configuration
            of the queue, the message might be sent to the dead letter queue.
            </para>
             <note> 
            <para>
            In the future, new attributes might be added. If you write code that calls this action,
            we recommend that you structure your code so that it can handle new attributes gracefully.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReceiveMessage service method.</param>
            
            <returns>The response from the ReceiveMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.OverLimitException">
            The action that you requested would violate a limit. For example, <code>ReceiveMessage</code>
            returns this error if the maximum number of inflight messages is reached. <code> <a>AddPermission</a>
            </code> returns this error if the maximum number of permissions for the queue is reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ReceiveMessage">REST API Reference for ReceiveMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginReceiveMessage(Amazon.SQS.Model.ReceiveMessageRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ReceiveMessage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReceiveMessage operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndReceiveMessage
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ReceiveMessage">REST API Reference for ReceiveMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndReceiveMessage(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ReceiveMessage operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginReceiveMessage.</param>
            
            <returns>Returns a  ReceiveMessageResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/ReceiveMessage">REST API Reference for ReceiveMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.RemovePermission(System.String,System.String)">
            <summary>
            Revokes any permissions in the queue policy that matches the specified <code>Label</code>
            parameter. Only the owner of the queue can remove permissions.
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which permissions are removed. Queue URLs are case-sensitive.</param>
            <param name="label">The identification of the permission to remove. This is the label added using the <code> <a>AddPermission</a> </code> action.</param>
            
            <returns>The response from the RemovePermission service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.RemovePermission(Amazon.SQS.Model.RemovePermissionRequest)">
            <summary>
            Revokes any permissions in the queue policy that matches the specified <code>Label</code>
            parameter. Only the owner of the queue can remove permissions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemovePermission service method.</param>
            
            <returns>The response from the RemovePermission service method, as returned by SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginRemovePermission(Amazon.SQS.Model.RemovePermissionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RemovePermission operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemovePermission operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRemovePermission
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndRemovePermission(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RemovePermission operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRemovePermission.</param>
            
            <returns>Returns a  RemovePermissionResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/RemovePermission">REST API Reference for RemovePermission Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.SendMessage(System.String,System.String)">
            <summary>
            Delivers a message to the specified queue.
            
             <important> 
            <para>
            The following list shows the characters (in Unicode) that are allowed in your message,
            according to the W3C XML specification:
            </para>
             <ul> <li> 
            <para>
             <code>#x9</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xA</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x20</code> to <code>#xD7FF</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xE000</code> to <code>#xFFFD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x10000</code> to <code>#x10FFFF</code> 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            If you send any characters that aren't included in this list, your request is rejected.
            </para>
             </important>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to which a message is sent. Queue URLs are case-sensitive.</param>
            <param name="messageBody">The message to send. The maximum string size is 256 KB. <important> The following list shows the characters (in Unicode) that are allowed in your message, according to the W3C XML specification: <ul> <li>  <code>#x9</code>  </li> <li>  <code>#xA</code>  </li> <li>  <code>#xD</code>  </li> <li>  <code>#x20</code> to <code>#xD7FF</code>  </li> <li>  <code>#xE000</code> to <code>#xFFFD</code>  </li> <li>  <code>#x10000</code> to <code>#x10FFFF</code>  </li> </ul> For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>. If you send any characters that aren't included in this list, your request is rejected. </important></param>
            
            <returns>The response from the SendMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidMessageContentsException">
            The message contains characters outside the allowed set.
            </exception>
            <exception cref="T:Amazon.SQS.Model.UnsupportedOperationException">
            Error code 400. Unsupported operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessage">REST API Reference for SendMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.SendMessage(Amazon.SQS.Model.SendMessageRequest)">
            <summary>
            Delivers a message to the specified queue.
            
             <important> 
            <para>
            The following list shows the characters (in Unicode) that are allowed in your message,
            according to the W3C XML specification:
            </para>
             <ul> <li> 
            <para>
             <code>#x9</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xA</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x20</code> to <code>#xD7FF</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xE000</code> to <code>#xFFFD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x10000</code> to <code>#x10FFFF</code> 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            If you send any characters that aren't included in this list, your request is rejected.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendMessage service method.</param>
            
            <returns>The response from the SendMessage service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidMessageContentsException">
            The message contains characters outside the allowed set.
            </exception>
            <exception cref="T:Amazon.SQS.Model.UnsupportedOperationException">
            Error code 400. Unsupported operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessage">REST API Reference for SendMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginSendMessage(Amazon.SQS.Model.SendMessageRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SendMessage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendMessage operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSendMessage
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessage">REST API Reference for SendMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndSendMessage(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SendMessage operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSendMessage.</param>
            
            <returns>Returns a  SendMessageResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessage">REST API Reference for SendMessage Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.SendMessageBatch(System.String,System.Collections.Generic.List{Amazon.SQS.Model.SendMessageBatchRequestEntry})">
            <summary>
            Delivers up to ten messages to the specified queue. This is a batch version of <code>
            <a>SendMessage</a> </code>. For a FIFO queue, multiple messages within a single batch
            are enqueued in the order they are sent.
            
             
            <para>
            The result of sending each message is reported individually in the response. Because
            the batch request can result in a combination of successful and unsuccessful actions,
            you should check for batch errors even when the call returns an HTTP status code of
            <code>200</code>.
            </para>
             
            <para>
            The maximum allowed individual message size and the maximum total payload size (the
            sum of the individual lengths of all of the batched messages) are both 256 KB (262,144
            bytes).
            </para>
             <important> 
            <para>
            The following list shows the characters (in Unicode) that are allowed in your message,
            according to the W3C XML specification:
            </para>
             <ul> <li> 
            <para>
             <code>#x9</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xA</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x20</code> to <code>#xD7FF</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xE000</code> to <code>#xFFFD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x10000</code> to <code>#x10FFFF</code> 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            If you send any characters that aren't included in this list, your request is rejected.
            </para>
             </important> 
            <para>
            If you don't specify the <code>DelaySeconds</code> parameter for an entry, Amazon
            SQS uses the default value for the queue.
            </para>
             <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to which batched messages are sent. Queue URLs are case-sensitive.</param>
            <param name="entries">A list of <code> <a>SendMessageBatchRequestEntry</a> </code> items.</param>
            
            <returns>The response from the SendMessageBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.BatchRequestTooLongException">
            The length of all the messages put together is more than the limit.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <exception cref="T:Amazon.SQS.Model.UnsupportedOperationException">
            Error code 400. Unsupported operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessageBatch">REST API Reference for SendMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.SendMessageBatch(Amazon.SQS.Model.SendMessageBatchRequest)">
            <summary>
            Delivers up to ten messages to the specified queue. This is a batch version of <code>
            <a>SendMessage</a> </code>. For a FIFO queue, multiple messages within a single batch
            are enqueued in the order they are sent.
            
             
            <para>
            The result of sending each message is reported individually in the response. Because
            the batch request can result in a combination of successful and unsuccessful actions,
            you should check for batch errors even when the call returns an HTTP status code of
            <code>200</code>.
            </para>
             
            <para>
            The maximum allowed individual message size and the maximum total payload size (the
            sum of the individual lengths of all of the batched messages) are both 256 KB (262,144
            bytes).
            </para>
             <important> 
            <para>
            The following list shows the characters (in Unicode) that are allowed in your message,
            according to the W3C XML specification:
            </para>
             <ul> <li> 
            <para>
             <code>#x9</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xA</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x20</code> to <code>#xD7FF</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xE000</code> to <code>#xFFFD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x10000</code> to <code>#x10FFFF</code> 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            If you send any characters that aren't included in this list, your request is rejected.
            </para>
             </important> 
            <para>
            If you don't specify the <code>DelaySeconds</code> parameter for an entry, Amazon
            SQS uses the default value for the queue.
            </para>
             <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendMessageBatch service method.</param>
            
            <returns>The response from the SendMessageBatch service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            Two or more batch entries in the request have the same <code>Id</code>.
            </exception>
            <exception cref="T:Amazon.SQS.Model.BatchRequestTooLongException">
            The length of all the messages put together is more than the limit.
            </exception>
            <exception cref="T:Amazon.SQS.Model.EmptyBatchRequestException">
            The batch request doesn't contain any entries.
            </exception>
            <exception cref="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            The <code>Id</code> of a batch entry in a batch request doesn't abide by the specification.
            </exception>
            <exception cref="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            The batch request contains more entries than permissible.
            </exception>
            <exception cref="T:Amazon.SQS.Model.UnsupportedOperationException">
            Error code 400. Unsupported operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessageBatch">REST API Reference for SendMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginSendMessageBatch(Amazon.SQS.Model.SendMessageBatchRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SendMessageBatch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendMessageBatch operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSendMessageBatch
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessageBatch">REST API Reference for SendMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndSendMessageBatch(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SendMessageBatch operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSendMessageBatch.</param>
            
            <returns>Returns a  SendMessageBatchResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SendMessageBatch">REST API Reference for SendMessageBatch Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.SetQueueAttributes(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sets the value of one or more queue attributes. When you change a queue's attributes,
            the change can take up to 60 seconds for most of the attributes to propagate throughout
            the Amazon SQS system. Changes made to the <code>MessageRetentionPeriod</code> attribute
            can take up to 15 minutes.
            
             <note> 
            <para>
            In the future, new attributes might be added. If you write code that calls this action,
            we recommend that you structure your code so that it can handle new attributes gracefully.
            </para>
             </note>
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose attributes are set. Queue URLs are case-sensitive.</param>
            <param name="attributes">A map of attributes to set. The following lists the names, descriptions, and values of the special request parameters that the <code>SetQueueAttributes</code> action uses: <ul> <li>  <code>DelaySeconds</code> - The number of seconds for which the delivery of all messages in the queue is delayed. Valid values: An integer from 0 to 900 (15 minutes). The default is 0 (zero).  </li> <li>  <code>MaximumMessageSize</code> - The limit of how many bytes a message can contain before Amazon SQS rejects it. Valid values: An integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256 KiB). The default is 262,144 (256 KiB).  </li> <li>  <code>MessageRetentionPeriod</code> - The number of seconds for which Amazon SQS retains a message. Valid values: An integer representing seconds, from 60 (1 minute) to 1,209,600 (14 days). The default is 345,600 (4 days).  </li> <li>  <code>Policy</code> - The queue's policy. A valid AWS policy. For more information about policy structure, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html">Overview of AWS IAM Policies</a> in the <i>Amazon IAM User Guide</i>.  </li> <li>  <code>ReceiveMessageWaitTimeSeconds</code> - The number of seconds for which a <code> <a>ReceiveMessage</a> </code> action waits for a message to arrive. Valid values: an integer from 0 to 20 (seconds). The default is 0.  </li> <li>  <code>RedrivePolicy</code> - The parameters for the dead letter queue functionality of the source queue. For more information about the redrive policy and dead letter queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>.  <note> The dead letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead letter queue of a standard queue must also be a standard queue. </note> </li> <li>  <code>VisibilityTimeout</code> - The visibility timeout for the queue. Valid values: an integer from 0 to 43,200 (12 hours). The default is 30. For more information about the visibility timeout, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility Timeout</a> in the <i>Amazon SQS Developer Guide</i>. </li> </ul> The following attribute applies only to <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html">FIFO (first-in-first-out) queues</a>: <ul> <li>  <code>ContentBasedDeduplication</code> - Enables content-based deduplication. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing">Exactly-Once Processing</a> in the <i>Amazon SQS Developer Guide</i>.  <ul> <li> Every message must have a unique <code>MessageDeduplicationId</code>, <ul> <li> You may provide a <code>MessageDeduplicationId</code> explicitly. </li> <li> If you aren't able to provide a <code>MessageDeduplicationId</code> and you enable <code>ContentBasedDeduplication</code> for your queue, Amazon SQS uses a SHA-256 hash to generate the <code>MessageDeduplicationId</code> using the body of the message (but not the attributes of the message).  </li> <li> If you don't provide a <code>MessageDeduplicationId</code> and the queue doesn't have <code>ContentBasedDeduplication</code> set, the action fails with an error. </li> <li> If the queue has <code>ContentBasedDeduplication</code> set, your <code>MessageDeduplicationId</code> overrides the generated one. </li> </ul> </li> <li> When <code>ContentBasedDeduplication</code> is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered. </li> <li> You can also use <code>ContentBasedDeduplication</code> for messages with identical content to be treated as duplicates. </li> <li> If you send one message with <code>ContentBasedDeduplication</code> enabled and then another message with a <code>MessageDeduplicationId</code> that is the same as the one generated for the first <code>MessageDeduplicationId</code>, the two messages are treated as duplicates and only one copy of the message is delivered.  </li> </ul> </li> </ul> Any other valid special request parameters (such as the following) are ignored: <ul> <li>  <code>ApproximateNumberOfMessages</code>  </li> <li>  <code>ApproximateNumberOfMessagesDelayed</code>  </li> <li>  <code>ApproximateNumberOfMessagesNotVisible</code>  </li> <li>  <code>CreatedTimestamp</code>  </li> <li>  <code>LastModifiedTimestamp</code>  </li> <li>  <code>QueueArn</code>  </li> </ul></param>
            
            <returns>The response from the SetQueueAttributes service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidAttributeNameException">
            The attribute referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SetQueueAttributes">REST API Reference for SetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.SetQueueAttributes(Amazon.SQS.Model.SetQueueAttributesRequest)">
            <summary>
            Sets the value of one or more queue attributes. When you change a queue's attributes,
            the change can take up to 60 seconds for most of the attributes to propagate throughout
            the Amazon SQS system. Changes made to the <code>MessageRetentionPeriod</code> attribute
            can take up to 15 minutes.
            
             <note> 
            <para>
            In the future, new attributes might be added. If you write code that calls this action,
            we recommend that you structure your code so that it can handle new attributes gracefully.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetQueueAttributes service method.</param>
            
            <returns>The response from the SetQueueAttributes service method, as returned by SQS.</returns>
            <exception cref="T:Amazon.SQS.Model.InvalidAttributeNameException">
            The attribute referred to doesn't exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SetQueueAttributes">REST API Reference for SetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.BeginSetQueueAttributes(Amazon.SQS.Model.SetQueueAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetQueueAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetQueueAttributes operation on AmazonSQSClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetQueueAttributes
                    operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SetQueueAttributes">REST API Reference for SetQueueAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.EndSetQueueAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetQueueAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetQueueAttributes.</param>
            
            <returns>Returns a  SetQueueAttributesResult from SQS.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SetQueueAttributes">REST API Reference for SetQueueAttributes Operation</seealso>
        </member>
        <member name="T:Amazon.SQS.Internal.ProcessRequestHandler">
            <summary>
            Custom pipeline handler
            </summary>
        </member>
        <member name="M:Amazon.SQS.Internal.ProcessRequestHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.SQS.Internal.ProcessRequestHandler.InvokeAsync(Amazon.Runtime.IAsyncExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
            <returns>IAsyncResult which represent an async operation.</returns>
        </member>
        <member name="M:Amazon.SQS.Internal.ProcessRequestHandler.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Customize the QueueUrl
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.SQS.Internal.ValidationResponseHandler">
            <summary>
            Custom pipeline handler
            </summary>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls the post invoke logic after calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.InvokeAsyncCallback(Amazon.Runtime.IAsyncExecutionContext)">
            <summary>
            Calls the PostInvoke methods after calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.PostInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Custom pipeline handler
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.CalculateMD5(System.Collections.Generic.Dictionary{System.String,Amazon.SQS.Model.MessageAttributeValue})">
            <summary>
            Calculate the MD5 of the message attributes
            </summary>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.CalculateMD5(System.String)">
            <summary>
            Calculate the MD5
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.CalculateMD5(System.Byte[])">
            <summary>
            Calculate the MD5
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.CompareMD5(System.String,System.String)">
            <summary>
            Compare the MD5
            </summary>
            <param name="message"></param>
            <param name="md5FromService"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.CompareMD5(System.Collections.Generic.Dictionary{System.String,Amazon.SQS.Model.MessageAttributeValue},System.String)">
            <summary>
            Compare the MD5
            </summary>
            <param name="attributes"></param>
            <param name="md5FromService"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.ValidateMD5(System.String,System.String)">
            <summary>
            Validate the MD5
            </summary>
            <param name="message"></param>
            <param name="md5FromService"></param>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.ValidateMD5(System.Collections.Generic.Dictionary{System.String,Amazon.SQS.Model.MessageAttributeValue},System.String)">
            <summary>
            Validate the MD5
            </summary>
            <param name="attributes"></param>
            <param name="md5FromService"></param>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.ValidateMD5(System.String,System.String,System.String)">
            <summary>
            Validate the MD5
            </summary>
            <param name="message"></param>
            <param name="messageId"></param>
            <param name="md5FromService"></param>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.ValidateMD5(System.Collections.Generic.Dictionary{System.String,Amazon.SQS.Model.MessageAttributeValue},System.String,System.String)">
            <summary>
            Validate the MD5
            </summary>
            <param name="attributes"></param>
            <param name="messageId"></param>
            <param name="md5FromService"></param>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.ValidateMD5(Amazon.SQS.Model.Message)">
            <summary>
            Validate the MD5
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.ValidateReceiveMessage(Amazon.SQS.Model.ReceiveMessageResponse)">
            <summary>
            Validate the Message
            </summary>
            <param name="response"></param>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.ValidateSendMessage(Amazon.SQS.Model.SendMessageRequest,Amazon.SQS.Model.SendMessageResponse)">
            <summary>
            Validate the Message
            </summary>
            <param name="request"></param>
            <param name="response"></param>
        </member>
        <member name="M:Amazon.SQS.Internal.ValidationResponseHandler.ValidateSendMessageBatch(Amazon.SQS.Model.SendMessageBatchRequest,Amazon.SQS.Model.SendMessageBatchResponse)">
            <summary>
            Validate the Message
            </summary>
            <param name="request"></param>
            <param name="response"></param>
        </member>
        <member name="T:Amazon.SQS.Model.GetQueueAttributesResponse">
            <summary>
            Get Queue Attributes Result
            </summary>
            <summary>
            A list of returned queue attributes.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.VisibilityTimeout">
            <summary>
            Gets the visibility timeout from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.DelaySeconds">
            <summary>
            Gets the delay in seconds from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.MaximumMessageSize">
            <summary>
            Gets the maximum message size from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.MessageRetentionPeriod">
            <summary>
            Returns the message retention period from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.ApproximateNumberOfMessages">
            <summary>
            Gets the approximate number of messages from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.ApproximateNumberOfMessagesNotVisible">
            <summary>
            Gets the approximate number of messages not visible from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.ApproximateNumberOfMessagesDelayed">
            <summary>
            Gets the approximate number of messages delayed from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.CreatedTimestamp">
            <summary>
            Gets the created timestamp from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.LastModifiedTimestamp">
            <summary>
            Gets the last modified timestamp from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.QueueARN">
            <summary>
            Gets the queue arn from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.Policy">
            <summary>
            Gets the queue access policy from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of attributes to their respective values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.AddPermissionRequest">
            <summary>
            Container for the parameters to the AddPermission operation.
            Adds a permission to a queue for a specific <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a>.
            This allows sharing access to the queue.
            
             
            <para>
            When you create a queue, you have full control access rights for the queue. Only you,
            the owner of the queue, can grant or deny permissions to the queue. For more information
            about these permissions, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
            Queues</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             <note> 
            <para>
             <code>AddPermission</code> writes an Amazon-SQS-generated policy. If you want to
            write your own policy, use <code> <a>SetQueueAttributes</a> </code> to upload your
            policy. For more information about writing your own policy, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AccessPolicyLanguage.html">Using
            The Access Policy Language</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.AddPermissionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.AddPermissionRequest.#ctor(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates AddPermissionRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to which permissions are added. Queue URLs are case-sensitive.</param>
            <param name="label">The unique identification of the permission you're setting (for example, <code>AliceSendMessage</code>). Maximum 80 characters. Allowed characters include alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>).</param>
            <param name="awsAccountIds">The AWS account number of the <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a> who is given permission. The principal must have an AWS account, but does not need to be signed up for Amazon SQS. For information about locating the AWS account identification, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AWSCredentials.html">Your AWS Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.</param>
            <param name="actions">The action the client wants to allow for the specified principal. The following values are valid: <ul> <li>  <code>*</code>  </li> <li>  <code>ChangeMessageVisibility</code>  </li> <li>  <code>DeleteMessage</code>  </li> <li>  <code>GetQueueAttributes</code>  </li> <li>  <code>GetQueueUrl</code>  </li> <li>  <code>ReceiveMessage</code>  </li> <li>  <code>SendMessage</code>  </li> </ul> For more information about these actions, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html#PermissionTypes">Understanding Permissions</a> in the <i>Amazon SQS Developer Guide</i>. Specifying <code>SendMessage</code>, <code>DeleteMessage</code>, or <code>ChangeMessageVisibility</code> for <code>ActionName.n</code> also grants permissions for the corresponding batch versions of those actions: <code>SendMessageBatch</code>, <code>DeleteMessageBatch</code>, and <code>ChangeMessageVisibilityBatch</code>.</param>
        </member>
        <member name="P:Amazon.SQS.Model.AddPermissionRequest.Actions">
            <summary>
            Gets and sets the property Actions. 
            <para>
            The action the client wants to allow for the specified principal. The following values
            are valid:
            </para>
             <ul> <li> 
            <para>
             <code>*</code> 
            </para>
             </li> <li> 
            <para>
             <code>ChangeMessageVisibility</code> 
            </para>
             </li> <li> 
            <para>
             <code>DeleteMessage</code> 
            </para>
             </li> <li> 
            <para>
             <code>GetQueueAttributes</code> 
            </para>
             </li> <li> 
            <para>
             <code>GetQueueUrl</code> 
            </para>
             </li> <li> 
            <para>
             <code>ReceiveMessage</code> 
            </para>
             </li> <li> 
            <para>
             <code>SendMessage</code> 
            </para>
             </li> </ul> 
            <para>
            For more information about these actions, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html#PermissionTypes">Understanding
            Permissions</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            Specifying <code>SendMessage</code>, <code>DeleteMessage</code>, or <code>ChangeMessageVisibility</code>
            for <code>ActionName.n</code> also grants permissions for the corresponding batch
            versions of those actions: <code>SendMessageBatch</code>, <code>DeleteMessageBatch</code>,
            and <code>ChangeMessageVisibilityBatch</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.AddPermissionRequest.AWSAccountIds">
            <summary>
            Gets and sets the property AWSAccountIds. 
            <para>
            The AWS account number of the <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a>
            who is given permission. The principal must have an AWS account, but does not need
            to be signed up for Amazon SQS. For information about locating the AWS account identification,
            see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AWSCredentials.html">Your
            AWS Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.AddPermissionRequest.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            The unique identification of the permission you're setting (for example, <code>AliceSendMessage</code>).
            Maximum 80 characters. Allowed characters include alphanumeric characters, hyphens
            (<code>-</code>), and underscores (<code>_</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.AddPermissionRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to which permissions are added.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.AddPermissionResponse">
            <summary>
            This is the response object from the AddPermission operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.BatchEntryIdsNotDistinctException.#ctor(System.String)">
            <summary>
            Constructs a new BatchEntryIdsNotDistinctException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.BatchEntryIdsNotDistinctException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BatchEntryIdsNotDistinctException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.BatchEntryIdsNotDistinctException.#ctor(System.Exception)">
            <summary>
            Construct instance of BatchEntryIdsNotDistinctException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.BatchEntryIdsNotDistinctException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BatchEntryIdsNotDistinctException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.BatchEntryIdsNotDistinctException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BatchEntryIdsNotDistinctException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.BatchEntryIdsNotDistinctException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BatchEntryIdsNotDistinctException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.BatchRequestTooLongException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.BatchRequestTooLongException.#ctor(System.String)">
            <summary>
            Constructs a new BatchRequestTooLongException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.BatchRequestTooLongException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BatchRequestTooLongException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.BatchRequestTooLongException.#ctor(System.Exception)">
            <summary>
            Construct instance of BatchRequestTooLongException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.BatchRequestTooLongException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BatchRequestTooLongException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.BatchRequestTooLongException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BatchRequestTooLongException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.BatchRequestTooLongException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BatchRequestTooLongException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.BatchResultErrorEntry">
            <summary>
            This is used in the responses of batch API to give a detailed description of the result
            of an action on each entry in the request.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.BatchResultErrorEntry.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            An error code representing why the action failed on this entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.BatchResultErrorEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The <code>Id</code> of an entry in a batch request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.BatchResultErrorEntry.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message explaining why the action failed on this entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.BatchResultErrorEntry.SenderFault">
            <summary>
            Gets and sets the property SenderFault. 
            <para>
            Specifies whether the error happened due to the sender's fault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest">
            <summary>
            Container for the parameters to the ChangeMessageVisibilityBatch operation.
            Changes the visibility timeout of multiple messages. This is a batch version of <code>
            <a>ChangeMessageVisibility</a> </code>. The result of the action on each message is
            reported individually in the response. You can send up to 10 <code> <a>ChangeMessageVisibility</a>
            </code> requests with each <code>ChangeMessageVisibilityBatch</code> action.
            
             <important> 
            <para>
            Because the batch request can result in a combination of successful and unsuccessful
            actions, you should check for batch errors even when the call returns an HTTP status
            code of <code>200</code>.
            </para>
             </important> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry})">
            <summary>
            Instantiates ChangeMessageVisibilityBatchRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose messages' visibility is changed. Queue URLs are case-sensitive.</param>
            <param name="entries">A list of receipt handles of the messages for which the visibility timeout must be changed.</param>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            A list of receipt handles of the messages for which the visibility timeout must be
            changed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue whose messages' visibility is changed.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry">
            <summary>
            Encloses a receipt handle and an entry id for each message in <code> <a>ChangeMessageVisibilityBatch</a>
            </code>.
            
             <important> 
            <para>
            All of the following list parameters must be prefixed with <code>ChangeMessageVisibilityBatchRequestEntry.n</code>,
            where <code>n</code> is an integer value starting with <code>1</code>. For example,
            a parameter list for this action might look like this:
            </para>
             </important> 
            <para>
             <code>&amp;amp;ChangeMessageVisibilityBatchRequestEntry.1.Id=change_visibility_msg_2</code>
            
            </para>
             
            <para>
             <code>&amp;amp;ChangeMessageVisibilityBatchRequestEntry.1.ReceiptHandle=&lt;replaceable&gt;Your_Receipt_Handle&lt;/replaceable&gt;</code>
            
            </para>
             
            <para>
             <code>&amp;amp;ChangeMessageVisibilityBatchRequestEntry.1.VisibilityTimeout=45</code>
            
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry.#ctor(System.String,System.String)">
            <summary>
            Instantiates ChangeMessageVisibilityBatchRequestEntry with the parameterized properties
            </summary>
            <param name="id">An identifier for this particular receipt handle used to communicate the result. <note> The <code>Id</code>s of a batch request need to be unique within a request </note></param>
            <param name="receiptHandle">A receipt handle.</param>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            An identifier for this particular receipt handle used to communicate the result.
            </para>
             <note> 
            <para>
            The <code>Id</code>s of a batch request need to be unique within a request
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry.ReceiptHandle">
            <summary>
            Gets and sets the property ReceiptHandle. 
            <para>
            A receipt handle.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry.VisibilityTimeout">
            <summary>
            Gets and sets the property VisibilityTimeout. 
            <para>
            The new value (in seconds) for the message's visibility timeout.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityBatchResponse">
            <summary>
            For each message in the batch, the response contains a <code> <a>ChangeMessageVisibilityBatchResultEntry</a>
            </code> tag if the message succeeds or a <code> <a>BatchResultErrorEntry</a> </code>
            tag if the message fails.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchResponse.Failed">
            <summary>
            Gets and sets the property Failed. 
            <para>
            A list of <code> <a>BatchResultErrorEntry</a> </code> items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchResponse.Successful">
            <summary>
            Gets and sets the property Successful. 
            <para>
            A list of <code> <a>ChangeMessageVisibilityBatchResultEntry</a> </code> items.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityBatchResultEntry">
            <summary>
            Encloses the <code>Id</code> of an entry in <code> <a>ChangeMessageVisibilityBatch</a>
            </code>.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchResultEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Represents a message whose visibility timeout has been changed successfully.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityRequest">
            <summary>
            Container for the parameters to the ChangeMessageVisibility operation.
            Changes the visibility timeout of a specified message in a queue to a new value. The
            maximum allowed timeout value is 12 hours. Thus, you can't extend the timeout of a
            message in an existing queue to more than a total visibility timeout of 12 hours.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            
             
            <para>
            For example, you have a message and with the default visibility timeout of 5 minutes.
            After 3 minutes, you call <code>ChangeMessageVisiblity</code> with a timeout of 10
            minutes. At that time, the timeout for the message is extended by 10 minutes beyond
            the time of the <code>ChangeMessageVisibility</code> action. This results in a total
            visibility timeout of 13 minutes. You can continue to call the <code>ChangeMessageVisibility</code>
            to extend the visibility timeout to a maximum of 12 hours. If you try to extend the
            visibility timeout beyond 12 hours, your request is rejected.
            </para>
             
            <para>
            A message is considered to be <i>in flight</i> after it's received from a queue by
            a consumer, but not yet deleted from the queue.
            </para>
             
            <para>
            For standard queues, there can be a maximum of 120,000 inflight messages per queue.
            If you reach this limit, Amazon SQS returns the <code>OverLimit</code> error message.
            To avoid reaching the limit, you should delete messages from the queue after they're
            processed. You can also increase the number of queues you use to process your messages.
            </para>
             
            <para>
            For FIFO queues, there can be a maximum of 20,000 inflight messages per queue. If
            you reach this limit, Amazon SQS returns no error messages.
            </para>
             <important> 
            <para>
            If you attempt to set the <code>VisibilityTimeout</code> to a value greater than the
            maximum time left, Amazon SQS returns an error. Amazon SQS doesn't automatically recalculate
            and increase the timeout to the maximum remaining time.
            </para>
             
            <para>
            Unlike with a queue, when you change the visibility timeout for a specific message
            the timeout value is applied immediately but isn't saved in memory for that message.
            If you don't delete a message after it is received, the visibility timeout for the
            message reverts to the original timeout value (not to the value you set using the
            <code>ChangeMessageVisibility</code> action) the next time the message is received.
            </para>
             </important>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityRequest.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Instantiates ChangeMessageVisibilityRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose message's visibility is changed. Queue URLs are case-sensitive.</param>
            <param name="receiptHandle">The receipt handle associated with the message whose visibility timeout is changed. This parameter is returned by the <code> <a>ReceiveMessage</a> </code> action.</param>
            <param name="visibilityTimeout">The new value for the message's visibility timeout (in seconds). Values values: <code>0</code> to <code>43200</code>. Maximum: 12 hours.</param>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue whose message's visibility is changed.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityRequest.ReceiptHandle">
            <summary>
            Gets and sets the property ReceiptHandle. 
            <para>
            The receipt handle associated with the message whose visibility timeout is changed.
            This parameter is returned by the <code> <a>ReceiveMessage</a> </code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityRequest.VisibilityTimeout">
            <summary>
            Gets and sets the property VisibilityTimeout. 
            <para>
            The new value for the message's visibility timeout (in seconds). Values values: <code>0</code>
            to <code>43200</code>. Maximum: 12 hours.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityResponse">
            <summary>
            This is the response object from the ChangeMessageVisibility operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.CreateQueueRequest">
            <summary>
            Container for the parameters to the CreateQueue operation.
            Creates a new standard or FIFO queue or returns the URL of an existing queue. You
            can pass one or more attributes in the request. Keep the following caveats in mind:
            
             <ul> <li> 
            <para>
            If you don't specify the <code>FifoQueue</code> attribute, Amazon SQS creates a standard
            queue.
            </para>
             <note> 
            <para>
             You can't change the queue type after you create it and you can't convert an existing
            standard queue into a FIFO queue. You must either create a new FIFO queue for your
            application or delete your existing standard queue and recreate it as a FIFO queue.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-moving">
            Moving From a Standard Queue to a FIFO Queue</a> in the <i>Amazon SQS Developer Guide</i>.
            
            </para>
             </note> </li> <li> 
            <para>
            If you don't provide a value for an attribute, the queue is created with the default
            value for the attribute.
            </para>
             </li> <li> 
            <para>
            If you delete a queue, you must wait at least 60 seconds before creating a queue with
            the same name.
            </para>
             </li> </ul> 
            <para>
            To successfully create a new queue, you must provide a queue name that adheres to
            the <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/limits-queues.html">limits
            related to queues</a> and is unique within the scope of your queues.
            </para>
             
            <para>
            To get the queue URL, use the <code> <a>GetQueueUrl</a> </code> action. <code> <a>GetQueueUrl</a>
            </code> requires only the <code>QueueName</code> parameter. be aware of existing queue
            names:
            </para>
             <ul> <li> 
            <para>
            If you provide the name of an existing queue along with the exact names and values
            of all the queue's attributes, <code>CreateQueue</code> returns the queue URL for
            the existing queue.
            </para>
             </li> <li> 
            <para>
            If the queue name, attribute names, or attribute values don't match an existing queue,
            <code>CreateQueue</code> returns an error.
            </para>
             </li> </ul> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.CreateQueueRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.CreateQueueRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateQueueRequest with the parameterized properties
            </summary>
            <param name="queueName">The name of the new queue. The following limits apply to this name: <ul> <li> A queue name can have up to 80 characters. </li> <li> Valid values: alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>). </li> <li> A FIFO queue name must end with the <code>.fifo</code> suffix. </li> </ul> Queue names are case-sensitive.</param>
        </member>
        <member name="P:Amazon.SQS.Model.CreateQueueRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of attributes with their corresponding values.
            </para>
             
            <para>
            The following lists the names, descriptions, and values of the special request parameters
            that the <code>CreateQueue</code> action uses:
            </para>
             <ul> <li> 
            <para>
             <code>DelaySeconds</code> - The number of seconds for which the delivery of all messages
            in the queue is delayed. Valid values: An integer from 0 to 900 seconds (15 minutes).
            The default is 0 (zero). 
            </para>
             </li> <li> 
            <para>
             <code>MaximumMessageSize</code> - The limit of how many bytes a message can contain
            before Amazon SQS rejects it. Valid values: An integer from 1,024 bytes (1 KiB) to
            262,144 bytes (256 KiB). The default is 262,144 (256 KiB). 
            </para>
             </li> <li> 
            <para>
             <code>MessageRetentionPeriod</code> - The number of seconds for which Amazon SQS
            retains a message. Valid values: An integer from 60 seconds (1 minute) to 1,209,600
            seconds (14 days). The default is 345,600 (4 days). 
            </para>
             </li> <li> 
            <para>
             <code>Policy</code> - The queue's policy. A valid AWS policy. For more information
            about policy structure, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html">Overview
            of AWS IAM Policies</a> in the <i>Amazon IAM User Guide</i>. 
            </para>
             </li> <li> 
            <para>
             <code>ReceiveMessageWaitTimeSeconds</code> - The number of seconds for which a <code>
            <a>ReceiveMessage</a> </code> action waits for a message to arrive. Valid values:
            An integer from 0 to 20 (seconds). The default is 0 (zero). 
            </para>
             </li> <li> 
            <para>
             <code>RedrivePolicy</code> - The parameters for the dead letter queue functionality
            of the source queue. For more information about the redrive policy and dead letter
            queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using
            Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
             <note> 
            <para>
            The dead letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead
            letter queue of a standard queue must also be a standard queue.
            </para>
             </note> </li> <li> 
            <para>
             <code>VisibilityTimeout</code> - The visibility timeout for the queue. Valid values:
            An integer from 0 to 43,200 (12 hours). The default is 30. For more information about
            the visibility timeout, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            The following attributes apply only to <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html">FIFO
            (first-in-first-out) queues</a>:
            </para>
             <ul> <li> 
            <para>
             <code>FifoQueue</code> - Designates a queue as FIFO. You can provide this attribute
            only during queue creation. You can't change it for an existing queue. When you set
            this attribute, you must provide a <code>MessageGroupId</code> explicitly.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-understanding-logic">FIFO
            Queue Logic</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <code>ContentBasedDeduplication</code> - Enables content-based deduplication. For
            more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing">Exactly-Once
            Processing</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
             <ul> <li> 
            <para>
            Every message must have a unique <code>MessageDeduplicationId</code>,
            </para>
             <ul> <li> 
            <para>
            You may provide a <code>MessageDeduplicationId</code> explicitly.
            </para>
             </li> <li> 
            <para>
            If you aren't able to provide a <code>MessageDeduplicationId</code> and you enable
            <code>ContentBasedDeduplication</code> for your queue, Amazon SQS uses a SHA-256 hash
            to generate the <code>MessageDeduplicationId</code> using the body of the message
            (but not the attributes of the message). 
            </para>
             </li> <li> 
            <para>
            If you don't provide a <code>MessageDeduplicationId</code> and the queue doesn't have
            <code>ContentBasedDeduplication</code> set, the action fails with an error.
            </para>
             </li> <li> 
            <para>
            If the queue has <code>ContentBasedDeduplication</code> set, your <code>MessageDeduplicationId</code>
            overrides the generated one.
            </para>
             </li> </ul> </li> <li> 
            <para>
            When <code>ContentBasedDeduplication</code> is in effect, messages with identical
            content sent within the deduplication interval are treated as duplicates and only
            one copy of the message is delivered.
            </para>
             </li> <li> 
            <para>
            You can also use <code>ContentBasedDeduplication</code> for messages with identical
            content to be treated as duplicates.
            </para>
             </li> <li> 
            <para>
            If you send one message with <code>ContentBasedDeduplication</code> enabled and then
            another message with a <code>MessageDeduplicationId</code> that is the same as the
            one generated for the first <code>MessageDeduplicationId</code>, the two messages
            are treated as duplicates and only one copy of the message is delivered. 
            </para>
             </li> </ul> </li> </ul> 
            <para>
            Any other valid special request parameters (such as the following) are ignored:
            </para>
             <ul> <li> 
            <para>
             <code>ApproximateNumberOfMessages</code> 
            </para>
             </li> <li> 
            <para>
             <code>ApproximateNumberOfMessagesDelayed</code> 
            </para>
             </li> <li> 
            <para>
             <code>ApproximateNumberOfMessagesNotVisible</code> 
            </para>
             </li> <li> 
            <para>
             <code>CreatedTimestamp</code> 
            </para>
             </li> <li> 
            <para>
             <code>LastModifiedTimestamp</code> 
            </para>
             </li> <li> 
            <para>
             <code>QueueArn</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.CreateQueueRequest.QueueName">
            <summary>
            Gets and sets the property QueueName. 
            <para>
            The name of the new queue. The following limits apply to this name:
            </para>
             <ul> <li> 
            <para>
            A queue name can have up to 80 characters.
            </para>
             </li> <li> 
            <para>
            Valid values: alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>).
            </para>
             </li> <li> 
            <para>
            A FIFO queue name must end with the <code>.fifo</code> suffix.
            </para>
             </li> </ul> 
            <para>
            Queue names are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.CreateQueueResponse">
            <summary>
            Returns the <code>QueueUrl</code> attribute of the created queue.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.CreateQueueResponse.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the created Amazon SQS queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageBatchRequest">
            <summary>
            Container for the parameters to the DeleteMessageBatch operation.
            Deletes up to ten messages from the specified queue. This is a batch version of <code>
            <a>DeleteMessage</a> </code>. The result of the action on each message is reported
            individually in the response.
            
             <important> 
            <para>
            Because the batch request can result in a combination of successful and unsuccessful
            actions, you should check for batch errors even when the call returns an HTTP status
            code of <code>200</code>.
            </para>
             </important> <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageBatchRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageBatchRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.SQS.Model.DeleteMessageBatchRequestEntry})">
            <summary>
            Instantiates DeleteMessageBatchRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which messages are deleted. Queue URLs are case-sensitive.</param>
            <param name="entries">A list of receipt handles for the messages to be deleted.</param>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            A list of receipt handles for the messages to be deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue from which messages are deleted.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageBatchRequestEntry">
            <summary>
            Encloses a receipt handle and an identifier for it.
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageBatchRequestEntry.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageBatchRequestEntry.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteMessageBatchRequestEntry with the parameterized properties
            </summary>
            <param name="id">An identifier for this particular receipt handle. This is used to communicate the result. <note> The <code>Id</code>s of a batch request need to be unique within a request </note></param>
            <param name="receiptHandle">A receipt handle.</param>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchRequestEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            An identifier for this particular receipt handle. This is used to communicate the
            result.
            </para>
             <note> 
            <para>
            The <code>Id</code>s of a batch request need to be unique within a request
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchRequestEntry.ReceiptHandle">
            <summary>
            Gets and sets the property ReceiptHandle. 
            <para>
            A receipt handle.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageBatchResponse">
            <summary>
            For each message in the batch, the response contains a <code> <a>DeleteMessageBatchResultEntry</a>
            </code> tag if the message is deleted or a <code> <a>BatchResultErrorEntry</a> </code>
            tag if the message can't be deleted.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchResponse.Failed">
            <summary>
            Gets and sets the property Failed. 
            <para>
            A list of <code> <a>BatchResultErrorEntry</a> </code> items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchResponse.Successful">
            <summary>
            Gets and sets the property Successful. 
            <para>
            A list of <code> <a>DeleteMessageBatchResultEntry</a> </code> items.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageBatchResultEntry">
            <summary>
            Encloses the <code>Id</code> of an entry in <code> <a>DeleteMessageBatch</a> </code>.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchResultEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Represents a successfully deleted message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageRequest">
            <summary>
            Container for the parameters to the DeleteMessage operation.
            Deletes the specified message from the specified queue. You specify the message by
            using the message's <i>receipt handle</i> and not the <i>MessageId</i> you receive
            when you send the message. Even if the message is locked by another reader due to
            the visibility timeout setting, it is still deleted from the queue. If you leave a
            message in the queue for longer than the queue's configured retention period, Amazon
            SQS automatically deletes the message. 
            
             <note> 
            <para>
             The receipt handle is associated with a specific instance of receiving the message.
            If you receive a message more than once, the receipt handle you get each time you
            receive the message is different. If you don't provide the most recently received
            receipt handle for the message when you use the <code>DeleteMessage</code> action,
            the request succeeds, but the message might not be deleted.
            </para>
             
            <para>
            For standard queues, it is possible to receive a message even after you deleting it.
            This might happen on rare occasions if one of the servers storing a copy of the message
            is unavailable when you send the request to delete the message. The copy remains on
            the server and might be returned to you on a subsequent receive request. You should
            ensure that your application is idempotent, so that receiving a message more than
            once does not cause issues.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteMessageRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which messages are deleted. Queue URLs are case-sensitive.</param>
            <param name="receiptHandle">The receipt handle associated with the message to delete.</param>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue from which messages are deleted.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageRequest.ReceiptHandle">
            <summary>
            Gets and sets the property ReceiptHandle. 
            <para>
            The receipt handle associated with the message to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageResponse">
            <summary>
            This is the response object from the DeleteMessage operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteQueueRequest">
            <summary>
            Container for the parameters to the DeleteQueue operation.
            Deletes the queue specified by the <code>QueueUrl</code>, even if the queue is empty.
            If the specified queue doesn't exist, Amazon SQS returns a successful response.
            
             <important> 
            <para>
            Be careful with the <code>DeleteQueue</code> action: When you delete a queue, any
            messages in the queue are no longer available. 
            </para>
             </important> 
            <para>
            When you delete a queue, the deletion process takes up to 60 seconds. Requests you
            send involving that queue during the 60 seconds might succeed. For example, a <code>
            <a>SendMessage</a> </code> request might succeed, but after 60 seconds the queue and
            the message you sent no longer exist.
            </para>
             
            <para>
            When you delete a queue, you must wait at least 60 seconds before creating a queue
            with the same name. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteQueueRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteQueueRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteQueueRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to delete. Queue URLs are case-sensitive.</param>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteQueueRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to delete.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteQueueResponse">
            <summary>
            This is the response object from the DeleteQueue operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.EmptyBatchRequestException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.EmptyBatchRequestException.#ctor(System.String)">
            <summary>
            Constructs a new EmptyBatchRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.EmptyBatchRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EmptyBatchRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.EmptyBatchRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of EmptyBatchRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.EmptyBatchRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EmptyBatchRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.EmptyBatchRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EmptyBatchRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.EmptyBatchRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EmptyBatchRequestException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.GetQueueAttributesRequest">
            <summary>
            Container for the parameters to the GetQueueAttributes operation.
            Gets attributes for the specified queue.
            
             <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.GetQueueAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.GetQueueAttributesRequest.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates GetQueueAttributesRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose attribute information is retrieved. Queue URLs are case-sensitive.</param>
            <param name="attributeNames">A list of attributes for which to retrieve information. <note> In the future, new attributes might be added. If you write code that calls this action, we recommend that you structure your code so that it can handle new attributes gracefully. </note> The following attributes are supported: <ul> <li>  <code>All</code> - Returns all values.  </li> <li>  <code>ApproximateNumberOfMessages</code> - Returns the approximate number of visible messages in a queue. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-resources-required-process-messages.html">Resources Required to Process Messages</a> in the <i>Amazon SQS Developer Guide</i>.  </li> <li>  <code>ApproximateNumberOfMessagesDelayed</code> - Returns the approximate number of messages that are waiting to be added to the queue.  </li> <li>  <code>ApproximateNumberOfMessagesNotVisible</code> - Returns the approximate number of messages that have not timed-out and aren't deleted. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-resources-required-process-messages.html">Resources Required to Process Messages</a> in the <i>Amazon SQS Developer Guide</i>.  </li> <li>  <code>CreatedTimestamp</code> - Returns the time when the queue was created in seconds (<a href="http://en.wikipedia.org/wiki/Unix_time">epoch time</a>). </li> <li>  <code>DelaySeconds</code> - Returns the default delay on the queue in seconds. </li> <li>  <code>LastModifiedTimestamp</code> - Returns the time when the queue was last changed in seconds (<a href="http://en.wikipedia.org/wiki/Unix_time">epoch time</a>). </li> <li>  <code>MaximumMessageSize</code> - Returns the limit of how many bytes a message can contain before Amazon SQS rejects it. </li> <li>  <code>MessageRetentionPeriod</code> - Returns the number of seconds for which Amazon SQS retains a message. </li> <li>  <code>Policy</code> - Returns the policy of the queue. </li> <li>  <code>QueueArn</code> - Returns the Amazon resource name (ARN) of the queue. </li> <li>  <code>ReceiveMessageWaitTimeSeconds</code> - Returns the number of seconds for which the <code>ReceiveMessage</code> action waits for a message to arrive.  </li> <li>  <code>RedrivePolicy</code> - Returns the parameters for dead letter queue functionality of the source queue. For more information about the redrive policy and dead letter queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>.  </li> <li>  <code>VisibilityTimeout</code> - Returns the visibility timeout for the queue. For more information about the visibility timeout, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility Timeout</a> in the <i>Amazon SQS Developer Guide</i>.  </li> </ul> The following attributes apply only to <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html">FIFO (first-in-first-out) queues</a>: <ul> <li>  <code>FifoQueue</code> - Returns whether the queue is FIFO. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-understanding-logic">FIFO Queue Logic</a> in the <i>Amazon SQS Developer Guide</i>. </li> <li>  <code>ContentBasedDeduplication</code> - Returns whether content-based deduplication is enabled for the queue. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing">Exactly-Once Processing</a> in the <i>Amazon SQS Developer Guide</i>.  </li> </ul></param>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesRequest.AttributeNames">
            <summary>
            Gets and sets the property AttributeNames. 
            <para>
            A list of attributes for which to retrieve information.
            </para>
             <note> 
            <para>
            In the future, new attributes might be added. If you write code that calls this action,
            we recommend that you structure your code so that it can handle new attributes gracefully.
            </para>
             </note> 
            <para>
            The following attributes are supported:
            </para>
             <ul> <li> 
            <para>
             <code>All</code> - Returns all values. 
            </para>
             </li> <li> 
            <para>
             <code>ApproximateNumberOfMessages</code> - Returns the approximate number of visible
            messages in a queue. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-resources-required-process-messages.html">Resources
            Required to Process Messages</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
             </li> <li> 
            <para>
             <code>ApproximateNumberOfMessagesDelayed</code> - Returns the approximate number
            of messages that are waiting to be added to the queue. 
            </para>
             </li> <li> 
            <para>
             <code>ApproximateNumberOfMessagesNotVisible</code> - Returns the approximate number
            of messages that have not timed-out and aren't deleted. For more information, see
            <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-resources-required-process-messages.html">Resources
            Required to Process Messages</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
             </li> <li> 
            <para>
             <code>CreatedTimestamp</code> - Returns the time when the queue was created in seconds
            (<a href="http://en.wikipedia.org/wiki/Unix_time">epoch time</a>).
            </para>
             </li> <li> 
            <para>
             <code>DelaySeconds</code> - Returns the default delay on the queue in seconds.
            </para>
             </li> <li> 
            <para>
             <code>LastModifiedTimestamp</code> - Returns the time when the queue was last changed
            in seconds (<a href="http://en.wikipedia.org/wiki/Unix_time">epoch time</a>).
            </para>
             </li> <li> 
            <para>
             <code>MaximumMessageSize</code> - Returns the limit of how many bytes a message can
            contain before Amazon SQS rejects it.
            </para>
             </li> <li> 
            <para>
             <code>MessageRetentionPeriod</code> - Returns the number of seconds for which Amazon
            SQS retains a message.
            </para>
             </li> <li> 
            <para>
             <code>Policy</code> - Returns the policy of the queue.
            </para>
             </li> <li> 
            <para>
             <code>QueueArn</code> - Returns the Amazon resource name (ARN) of the queue.
            </para>
             </li> <li> 
            <para>
             <code>ReceiveMessageWaitTimeSeconds</code> - Returns the number of seconds for which
            the <code>ReceiveMessage</code> action waits for a message to arrive. 
            </para>
             </li> <li> 
            <para>
             <code>RedrivePolicy</code> - Returns the parameters for dead letter queue functionality
            of the source queue. For more information about the redrive policy and dead letter
            queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using
            Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
             </li> <li> 
            <para>
             <code>VisibilityTimeout</code> - Returns the visibility timeout for the queue. For
            more information about the visibility timeout, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
             </li> </ul> 
            <para>
            The following attributes apply only to <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html">FIFO
            (first-in-first-out) queues</a>:
            </para>
             <ul> <li> 
            <para>
             <code>FifoQueue</code> - Returns whether the queue is FIFO. For more information,
            see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-understanding-logic">FIFO
            Queue Logic</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             </li> <li> 
            <para>
             <code>ContentBasedDeduplication</code> - Returns whether content-based deduplication
            is enabled for the queue. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing">Exactly-Once
            Processing</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue whose attribute information is retrieved.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.GetQueueUrlRequest">
            <summary>
            Container for the parameters to the GetQueueUrl operation.
            Returns the URL of an existing queue. This action provides a simple way to retrieve
            the URL of an Amazon SQS queue.
            
             
            <para>
            To access a queue that belongs to another AWS account, use the <code>QueueOwnerAWSAccountId</code>
            parameter to specify the account ID of the queue's owner. The queue's owner must grant
            you permission to access the queue. For more information about shared queue access,
            see <code> <a>AddPermission</a> </code> or see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
            Queues</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.GetQueueUrlRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.GetQueueUrlRequest.#ctor(System.String)">
            <summary>
            Instantiates GetQueueUrlRequest with the parameterized properties
            </summary>
            <param name="queueName">The name of the queue whose URL must be fetched. Maximum 80 characters. Valid values: alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>). Queue names are case-sensitive.</param>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueUrlRequest.QueueName">
            <summary>
            Gets and sets the property QueueName. 
            <para>
            The name of the queue whose URL must be fetched. Maximum 80 characters. Valid values:
            alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>).
            </para>
             
            <para>
            Queue names are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueUrlRequest.QueueOwnerAWSAccountId">
            <summary>
            Gets and sets the property QueueOwnerAWSAccountId. 
            <para>
            The AWS account ID of the account that created the queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.GetQueueUrlResponse">
            <summary>
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/UnderstandingResponses.html">Responses</a>
            in the <i>Amazon SQS Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueUrlResponse.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.InvalidAttributeNameException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidAttributeNameException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidAttributeNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidAttributeNameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidAttributeNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidAttributeNameException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidAttributeNameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidAttributeNameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidAttributeNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidAttributeNameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidAttributeNameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidAttributeNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidAttributeNameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidBatchEntryIdException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidBatchEntryIdException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidBatchEntryIdException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidBatchEntryIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidBatchEntryIdException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidBatchEntryIdException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidBatchEntryIdException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidBatchEntryIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidBatchEntryIdException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidBatchEntryIdException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidBatchEntryIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidBatchEntryIdException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.InvalidIdFormatException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidIdFormatException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidIdFormatException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidIdFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidIdFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidIdFormatException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidIdFormatException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidIdFormatException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidIdFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidIdFormatException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidIdFormatException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidIdFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidIdFormatException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.InvalidMessageContentsException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidMessageContentsException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidMessageContentsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidMessageContentsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidMessageContentsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidMessageContentsException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidMessageContentsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidMessageContentsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidMessageContentsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidMessageContentsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidMessageContentsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidMessageContentsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidMessageContentsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest">
            <summary>
            Container for the parameters to the ListDeadLetterSourceQueues operation.
            Returns a list of your queues that have the <code>RedrivePolicy</code> queue attribute
            configured with a dead letter queue.
            
             
            <para>
            For more information about using dead letter queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using
            Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of a dead letter queue.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ListDeadLetterSourceQueuesResponse">
            <summary>
            A list of your dead letter source queues.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ListDeadLetterSourceQueuesResponse.QueueUrls">
            <summary>
            Gets and sets the property QueueUrls. 
            <para>
            A list of source queue URLs that have the <code>RedrivePolicy</code> queue attribute
            configured with a dead letter queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ListQueuesRequest">
            <summary>
            Container for the parameters to the ListQueues operation.
            Returns a list of your queues. The maximum number of queues that can be returned is
            1,000. If you specify a value for the optional <code>QueueNamePrefix</code> parameter,
            only queues with a name that begins with the specified value are returned.
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ListQueuesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ListQueuesRequest.#ctor(System.String)">
            <summary>
            Instantiates ListQueuesRequest with the parameterized properties
            </summary>
            <param name="queueNamePrefix">A string to use for filtering the list results. Only those queues whose name begins with the specified string are returned. Queue names are case-sensitive.</param>
        </member>
        <member name="P:Amazon.SQS.Model.ListQueuesRequest.QueueNamePrefix">
            <summary>
            Gets and sets the property QueueNamePrefix. 
            <para>
            A string to use for filtering the list results. Only those queues whose name begins
            with the specified string are returned.
            </para>
             
            <para>
            Queue names are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ListQueuesResponse">
            <summary>
            A list of your queues.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ListQueuesResponse.QueueUrls">
            <summary>
            Gets and sets the property QueueUrls. 
            <para>
            A list of queue URLs, up to 1,000 entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.Message">
            <summary>
            An Amazon SQS message.
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.Message.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
             <code>SenderId</code>, <code>SentTimestamp</code>, <code>ApproximateReceiveCount</code>,
            and/or <code>ApproximateFirstReceiveTimestamp</code>. <code>SentTimestamp</code> and
            <code>ApproximateFirstReceiveTimestamp</code> are each returned as an integer representing
            the <a href="http://en.wikipedia.org/wiki/Unix_time">epoch time</a> in milliseconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.Body">
            <summary>
            Gets and sets the property Body. 
            <para>
            The message's contents (not URL-encoded).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.MD5OfBody">
            <summary>
            Gets and sets the property MD5OfBody. 
            <para>
            An MD5 digest of the non-URL-encoded message body string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.MD5OfMessageAttributes">
            <summary>
            Gets and sets the property MD5OfMessageAttributes. 
            <para>
            An MD5 digest of the non-URL-encoded message attribute string. You can use this attribute
            to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the
            message before creating the MD5 digest. For information on MD5, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.MessageAttributes">
            <summary>
            Gets and sets the property MessageAttributes. 
            <para>
            Each message attribute consists of a <code>Name</code>, <code>Type</code>, and <code>Value</code>.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-attributes.html#message-attributes-items-validation">Message
            Attribute Items and Validation</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
            A unique identifier for the message. A <code>MessageId</code>is considered unique
            across all AWS accounts for an extended period of time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.ReceiptHandle">
            <summary>
            Gets and sets the property ReceiptHandle. 
            <para>
            An identifier associated with the act of receiving the message. A new receipt handle
            is returned every time you receive a message. When deleting a message, you provide
            the last received receipt handle to delete the message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.MessageAttributeValue">
            <summary>
            The user-specified message attribute value. For string data types, the <code>Value</code>
            attribute has the same restrictions on the content as the message body. For more information,
            see <code> <a>SendMessage</a> </code>.
            
             
            <para>
             <code>Name</code>, <code>type</code>, <code>value</code> and the message body must
            not be empty or null. All parts of the message attribute, including <code>Name</code>,
            <code>Type</code>, and <code>Value</code>, are part of the message size restriction
            (256 KB or 262,144 bytes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.MessageAttributeValue.BinaryListValues">
            <summary>
            Gets and sets the property BinaryListValues. 
            <para>
            Not implemented. Reserved for future use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.MessageAttributeValue.BinaryValue">
            <summary>
            Gets and sets the property BinaryValue. 
            <para>
            Binary type attributes can store any binary data, such as compressed data, encrypted
            data, or images.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.MessageAttributeValue.DataType">
            <summary>
            Gets and sets the property DataType. 
            <para>
            Amazon SQS supports the following logical data types: <code>String</code>, <code>Number</code>,
            and <code>Binary</code>. For the <code>Number</code> data type, you must use <code>StringValue</code>.
            </para>
             
            <para>
            You can also append custom labels. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-attributes.html#message-attributes-data-types-validation">Message
            Attribute Data Types and Validation</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.MessageAttributeValue.StringListValues">
            <summary>
            Gets and sets the property StringListValues. 
            <para>
            Not implemented. Reserved for future use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.MessageAttributeValue.StringValue">
            <summary>
            Gets and sets the property StringValue. 
            <para>
            Strings are Unicode with UTF-8 binary encoding. For a list of code values, see <a
            href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">ASCII Printable
            Characters</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.MessageNotInflightException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.MessageNotInflightException.#ctor(System.String)">
            <summary>
            Constructs a new MessageNotInflightException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.MessageNotInflightException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MessageNotInflightException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.MessageNotInflightException.#ctor(System.Exception)">
            <summary>
            Construct instance of MessageNotInflightException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.MessageNotInflightException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MessageNotInflightException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.MessageNotInflightException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MessageNotInflightException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.MessageNotInflightException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MessageNotInflightException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.OverLimitException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.OverLimitException.#ctor(System.String)">
            <summary>
            Constructs a new OverLimitException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.OverLimitException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of OverLimitException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.OverLimitException.#ctor(System.Exception)">
            <summary>
            Construct instance of OverLimitException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.OverLimitException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OverLimitException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.OverLimitException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OverLimitException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.OverLimitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the OverLimitException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.PurgeQueueInProgressException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.PurgeQueueInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new PurgeQueueInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.PurgeQueueInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PurgeQueueInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.PurgeQueueInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of PurgeQueueInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.PurgeQueueInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PurgeQueueInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.PurgeQueueInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PurgeQueueInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.PurgeQueueInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PurgeQueueInProgressException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.PurgeQueueRequest">
            <summary>
            Container for the parameters to the PurgeQueue operation.
            Deletes the messages in a queue specified by the <code>QueueURL</code> parameter.
            
             <important> 
            <para>
            When you use the <code>PurgeQueue</code> action, you can't retrieve a message deleted
            from a queue.
            </para>
             </important> 
            <para>
            When you purge a queue, the message deletion process takes up to 60 seconds. All messages
            sent to the queue before calling the <code>PurgeQueue</code> action are deleted. Messages
            sent to the queue while it is being purged might be deleted. While the queue is being
            purged, messages sent to the queue before <code>PurgeQueue</code> is called might
            be received, but are deleted within the next minute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.PurgeQueueRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the queue from which the <code>PurgeQueue</code> action deletes messages.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.PurgeQueueResponse">
            <summary>
            This is the response object from the PurgeQueue operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.QueueDeletedRecentlyException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDeletedRecentlyException.#ctor(System.String)">
            <summary>
            Constructs a new QueueDeletedRecentlyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDeletedRecentlyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of QueueDeletedRecentlyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDeletedRecentlyException.#ctor(System.Exception)">
            <summary>
            Construct instance of QueueDeletedRecentlyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDeletedRecentlyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of QueueDeletedRecentlyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDeletedRecentlyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of QueueDeletedRecentlyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDeletedRecentlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the QueueDeletedRecentlyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.QueueDoesNotExistException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new QueueDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of QueueDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of QueueDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of QueueDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of QueueDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the QueueDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.QueueNameExistsException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.QueueNameExistsException.#ctor(System.String)">
            <summary>
            Constructs a new QueueNameExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueNameExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of QueueNameExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueNameExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of QueueNameExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueNameExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of QueueNameExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueNameExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of QueueNameExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.QueueNameExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the QueueNameExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.ReceiptHandleIsInvalidException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ReceiptHandleIsInvalidException.#ctor(System.String)">
            <summary>
            Constructs a new ReceiptHandleIsInvalidException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.ReceiptHandleIsInvalidException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ReceiptHandleIsInvalidException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.ReceiptHandleIsInvalidException.#ctor(System.Exception)">
            <summary>
            Construct instance of ReceiptHandleIsInvalidException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.ReceiptHandleIsInvalidException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReceiptHandleIsInvalidException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.ReceiptHandleIsInvalidException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReceiptHandleIsInvalidException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.ReceiptHandleIsInvalidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ReceiptHandleIsInvalidException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.ReceiveMessageRequest">
            <summary>
            Container for the parameters to the ReceiveMessage operation.
            Retrieves one or more messages (up to 10), from the specified queue. Using the <code>WaitTimeSeconds</code>
            parameter enables long-poll support. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html">Amazon
            SQS Long Polling</a> in the <i>Amazon SQS Developer Guide</i>. 
            
             
            <para>
            Short poll is the default behavior where a weighted random set of machines is sampled
            on a <code>ReceiveMessage</code> call. Thus, only the messages on the sampled machines
            are returned. If the number of messages in the queue is small (fewer than 1,000),
            you most likely get fewer messages than you requested per <code>ReceiveMessage</code>
            call. If the number of messages in the queue is extremely small, you might not receive
            any messages in a particular <code>ReceiveMessage</code> response. If this happens,
            repeat the request. 
            </para>
             
            <para>
            For each message returned, the response includes the following:
            </para>
             <ul> <li> 
            <para>
            The message body.
            </para>
             </li> <li> 
            <para>
            An MD5 digest of the message body. For information on MD5, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            </para>
             </li> <li> 
            <para>
            The <code>MessageId</code> you received when you sent the message to the queue.
            </para>
             </li> <li> 
            <para>
            The receipt handle.
            </para>
             </li> <li> 
            <para>
            The message attributes.
            </para>
             </li> <li> 
            <para>
            An MD5 digest of the message attributes.
            </para>
             </li> </ul> 
            <para>
            The receipt handle is the identifier you must provide when deleting the message. For
            more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-message-identifiers.html">Queue
            and Message Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            You can provide the <code>VisibilityTimeout</code> parameter in your request. The
            parameter is applied to the messages that Amazon SQS returns in the response. If you
            don't include the parameter, the overall visibility timeout for the queue is used
            for the returned messages. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             
            <para>
            A message that isn't deleted or a message whose visibility isn't extended before the
            visibility timeout expires counts as a failed receive. Depending on the configuration
            of the queue, the message might be sent to the dead letter queue.
            </para>
             <note> 
            <para>
            In the future, new attributes might be added. If you write code that calls this action,
            we recommend that you structure your code so that it can handle new attributes gracefully.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ReceiveMessageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ReceiveMessageRequest.#ctor(System.String)">
            <summary>
            Instantiates ReceiveMessageRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which messages are received. Queue URLs are case-sensitive.</param>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.AttributeNames">
            <summary>
            Gets and sets the property AttributeNames. 
            <para>
            A list of attributes that need to be returned along with each message. These attributes
            include:
            </para>
             <ul> <li> 
            <para>
             <code>All</code> - Returns all values.
            </para>
             </li> <li> 
            <para>
             <code>ApproximateFirstReceiveTimestamp</code> - Returns the time the message was
            first received from the queue (<a href="http://en.wikipedia.org/wiki/Unix_time">epoch
            time</a> in milliseconds).
            </para>
             </li> <li> 
            <para>
             <code>ApproximateReceiveCount</code> - Returns the number of times a message has
            been received from the queue but not deleted.
            </para>
             </li> <li> 
            <para>
             <code>SenderId</code> 
            </para>
             <ul> <li> 
            <para>
            For an IAM user, returns the IAM user ID, for example <code>ABCDEFGHI1JKLMNOPQ23R</code>.
            </para>
             </li> <li> 
            <para>
            For an IAM role, returns the IAM role ID, for example <code>ABCDE1F2GH3I4JK5LMNOP:i-a123b456</code>.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <code>SentTimestamp</code> - Returns the time the message was sent to the queue (<a
            href="http://en.wikipedia.org/wiki/Unix_time">epoch time</a> in milliseconds).
            </para>
             </li> <li> 
            <para>
             <code>MessageDeduplicationId</code> - Returns the value provided by the sender that
            calls the <code> <a>SendMessage</a> </code> action.
            </para>
             </li> <li> 
            <para>
             <code>MessageGroupId</code> - Returns the value provided by the sender that calls
            the <code> <a>SendMessage</a> </code> action. Messages with the same <code>MessageGroupId</code>
            are returned in sequence.
            </para>
             </li> <li> 
            <para>
             <code>SequenceNumber</code> - Returns the value provided by Amazon SQS.
            </para>
             </li> </ul> 
            <para>
            Any other valid special request parameters (such as the following) are ignored:
            </para>
             <ul> <li> 
            <para>
             <code>ApproximateNumberOfMessages</code> 
            </para>
             </li> <li> 
            <para>
             <code>ApproximateNumberOfMessagesDelayed</code> 
            </para>
             </li> <li> 
            <para>
             <code>ApproximateNumberOfMessagesNotVisible</code> 
            </para>
             </li> <li> 
            <para>
             <code>CreatedTimestamp</code> 
            </para>
             </li> <li> 
            <para>
             <code>ContentBasedDeduplication</code> 
            </para>
             </li> <li> 
            <para>
             <code>DelaySeconds</code> 
            </para>
             </li> <li> 
            <para>
             <code>FifoQueue</code> 
            </para>
             </li> <li> 
            <para>
             <code>LastModifiedTimestamp</code> 
            </para>
             </li> <li> 
            <para>
             <code>MaximumMessageSize</code> 
            </para>
             </li> <li> 
            <para>
             <code>MessageRetentionPeriod</code> 
            </para>
             </li> <li> 
            <para>
             <code>Policy</code> 
            </para>
             </li> <li> 
            <para>
             <code>QueueArn</code>, 
            </para>
             </li> <li> 
            <para>
             <code>ReceiveMessageWaitTimeSeconds</code> 
            </para>
             </li> <li> 
            <para>
             <code>RedrivePolicy</code> 
            </para>
             </li> <li> 
            <para>
             <code>VisibilityTimeout</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.MaxNumberOfMessages">
            <summary>
            Gets and sets the property MaxNumberOfMessages. 
            <para>
            The maximum number of messages to return. Amazon SQS never returns more messages than
            this value (however, fewer messages might be returned). Valid values are 1 to 10.
            Default is 1.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.MessageAttributeNames">
            <summary>
            Gets and sets the property MessageAttributeNames. 
            <para>
            The name of the message attribute, where <i>N</i> is the index.
            </para>
             <ul> <li> 
            <para>
            The name can contain alphanumeric characters and the underscore (<code>_</code>),
            hyphen (<code>-</code>), and period (<code>.</code>).
            </para>
             </li> <li> 
            <para>
            The name is case-sensitive and must be unique among all attribute names for the message.
            </para>
             </li> <li> 
            <para>
            The name must not start with AWS-reserved prefixes such as <code>AWS.</code> or <code>Amazon.</code>
            (or any casing variants).
            </para>
             </li> <li> 
            <para>
            The name must not start or end with a period (<code>.</code>), and it should not have
            periods in succession (<code>..</code>).
            </para>
             </li> <li> 
            <para>
            The name can be up to 256 characters long.
            </para>
             </li> </ul> 
            <para>
            When using <code>ReceiveMessage</code>, you can send a list of attribute names to
            receive, or you can return all of the attributes by specifying <code>All</code> or
            <code>.*</code> in your request. You can also use all message attributes starting
            with a prefix, for example <code>bar.*</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue from which messages are received.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.ReceiveRequestAttemptId">
            <summary>
            Gets and sets the property ReceiveRequestAttemptId. 
            <para>
            This parameter applies only to FIFO (first-in-first-out) queues.
            </para>
             
            <para>
            The token used for deduplication of <code>ReceiveMessage</code> calls. If a networking
            issue occurs after a <code>ReceiveMessage</code> action, and instead of a response
            you receive a generic error, you can retry the same action with an identical <code>ReceiveRequestAttemptId</code>
            to retrieve the same set of messages, even if their visibility timeout has not yet
            expired.
            </para>
             <ul> <li> 
            <para>
            You can use <code>ReceiveRequestAttemptId</code> only for 5 minutes after a <code>ReceiveMessage</code>
            action.
            </para>
             </li> <li> 
            <para>
            When you set <code>FifoQueue</code>, a caller of the <code>ReceiveMessage</code> action
            can provide a <code>ReceiveRequestAttemptId</code> explicitly.
            </para>
             </li> <li> 
            <para>
            If a caller of the <code>ReceiveMessage</code> action doesn't provide a <code>ReceiveRequestAttemptId</code>,
            Amazon SQS generates a <code>ReceiveRequestAttemptId</code>.
            </para>
             </li> <li> 
            <para>
            You can retry the <code>ReceiveMessage</code> action with the same <code>ReceiveRequestAttemptId</code>
            if none of the messages have been modified (deleted or had their visibility changes).
            </para>
             </li> <li> 
            <para>
            During a visibility timeout, subsequent calls with the same <code>ReceiveRequestAttemptId</code>
            return the same messages and receipt handles. If a retry occurs within the deduplication
            interval, it resets the visibility timeout. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon Simple Queue Service Developer Guide</i>.
            </para>
             <important> 
            <para>
            If a caller of the <code>ReceiveMessage</code> action is still processing messages
            when the visibility timeout expires and messages become visible, another worker reading
            from the same queue can receive the same messages and therefore process duplicates.
            Also, if a reader whose message processing time is longer than the visibility timeout
            tries to delete the processed messages, the action fails with an error.
            </para>
             
            <para>
            To mitigate this effect, ensure that your application observes a safe threshold before
            the visibility timeout expires and extend the visibility timeout as necessary.
            </para>
             </important> </li> <li> 
            <para>
            While messages with a particular <code>MessageGroupId</code> are invisible, no more
            messages belonging to the same <code>MessageGroupId</code> are returned until the
            visibility timeout expires. You can still receive messages with another <code>MessageGroupId</code>
            as long as it is also visible.
            </para>
             </li> <li> 
            <para>
            If a caller of <code>ReceiveMessage</code> can't track the <code>ReceiveRequestAttemptId</code>,
            no retries work until the original visibility timeout expires. As a result, delays
            might occur but the messages in the queue remain in a strict order.
            </para>
             </li> </ul> 
            <para>
            The length of <code>ReceiveRequestAttemptId</code> is 128 characters. <code>ReceiveRequestAttemptId</code>
            can contain alphanumeric characters (<code>a-z</code>, <code>A-Z</code>, <code>0-9</code>)
            and punctuation (<code>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</code>).
            </para>
             
            <para>
            For best practices of using <code>ReceiveRequestAttemptId</code>, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queue-recommendations.html#using-receiverequestattemptid-request-parameter">Using
            the ReceiveRequestAttemptId Request Parameter</a> in the <i>Amazon Simple Queue Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.VisibilityTimeout">
            <summary>
            Gets and sets the property VisibilityTimeout. 
            <para>
            The duration (in seconds) that the received messages are hidden from subsequent retrieve
            requests after being retrieved by a <code>ReceiveMessage</code> request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.WaitTimeSeconds">
            <summary>
            Gets and sets the property WaitTimeSeconds. 
            <para>
            The duration (in seconds) for which the call waits for a message to arrive in the
            queue before returning. If a message is available, the call returns sooner than <code>WaitTimeSeconds</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ReceiveMessageResponse">
            <summary>
            A list of received messages.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageResponse.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            A list of messages.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.RemovePermissionRequest">
            <summary>
            Container for the parameters to the RemovePermission operation.
            Revokes any permissions in the queue policy that matches the specified <code>Label</code>
            parameter. Only the owner of the queue can remove permissions.
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.RemovePermissionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.RemovePermissionRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates RemovePermissionRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue from which permissions are removed. Queue URLs are case-sensitive.</param>
            <param name="label">The identification of the permission to remove. This is the label added using the <code> <a>AddPermission</a> </code> action.</param>
        </member>
        <member name="P:Amazon.SQS.Model.RemovePermissionRequest.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            The identification of the permission to remove. This is the label added using the
            <code> <a>AddPermission</a> </code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.RemovePermissionRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue from which permissions are removed.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.RemovePermissionResponse">
            <summary>
            This is the response object from the RemovePermission operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageBatchRequest">
            <summary>
            Container for the parameters to the SendMessageBatch operation.
            Delivers up to ten messages to the specified queue. This is a batch version of <code>
            <a>SendMessage</a> </code>. For a FIFO queue, multiple messages within a single batch
            are enqueued in the order they are sent.
            
             
            <para>
            The result of sending each message is reported individually in the response. Because
            the batch request can result in a combination of successful and unsuccessful actions,
            you should check for batch errors even when the call returns an HTTP status code of
            <code>200</code>.
            </para>
             
            <para>
            The maximum allowed individual message size and the maximum total payload size (the
            sum of the individual lengths of all of the batched messages) are both 256 KB (262,144
            bytes).
            </para>
             <important> 
            <para>
            The following list shows the characters (in Unicode) that are allowed in your message,
            according to the W3C XML specification:
            </para>
             <ul> <li> 
            <para>
             <code>#x9</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xA</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x20</code> to <code>#xD7FF</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xE000</code> to <code>#xFFFD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x10000</code> to <code>#x10FFFF</code> 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            If you send any characters that aren't included in this list, your request is rejected.
            </para>
             </important> 
            <para>
            If you don't specify the <code>DelaySeconds</code> parameter for an entry, Amazon
            SQS uses the default value for the queue.
            </para>
             <note> 
            <para>
            Some actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:
            </para>
             
            <para>
             <code>&amp;Attribute.1=this</code> 
            </para>
             
            <para>
             <code>&amp;Attribute.2=that</code> 
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageBatchRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageBatchRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.SQS.Model.SendMessageBatchRequestEntry})">
            <summary>
            Instantiates SendMessageBatchRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to which batched messages are sent. Queue URLs are case-sensitive.</param>
            <param name="entries">A list of <code> <a>SendMessageBatchRequestEntry</a> </code> items.</param>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            A list of <code> <a>SendMessageBatchRequestEntry</a> </code> items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to which batched messages are sent.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageBatchRequestEntry">
            <summary>
            Contains the details of a single Amazon SQS message along with an <code>Id</code>.
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageBatchRequestEntry.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageBatchRequestEntry.#ctor(System.String,System.String)">
            <summary>
            Instantiates SendMessageBatchRequestEntry with the parameterized properties
            </summary>
            <param name="id">An identifier for a message in this batch used to communicate the result. <note> The <code>Id</code>s of a batch request need to be unique within a request </note></param>
            <param name="messageBody">The body of the message.</param>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequestEntry.DelaySeconds">
            <summary>
            Gets and sets the property DelaySeconds. 
            <para>
            The number of seconds for which a specific message is delayed. Valid values: 0 to
            900. Maximum: 15 minutes. Messages with a positive <code>DelaySeconds</code> value
            become available for processing after the delay period is finished. If you don't specify
            a value, the default value for the queue is applied. 
            </para>
             <note> 
            <para>
            When you set <code>FifoQueue</code>, you can't set <code>DelaySeconds</code> per message.
            You can set this parameter only on a queue level.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequestEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            An identifier for a message in this batch used to communicate the result.
            </para>
             <note> 
            <para>
            The <code>Id</code>s of a batch request need to be unique within a request
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequestEntry.MessageAttributes">
            <summary>
            Gets and sets the property MessageAttributes. 
            <para>
            Each message attribute consists of a <code>Name</code>, <code>Type</code>, and <code>Value</code>.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-attributes.html#message-attributes-items-validation">Message
            Attribute Items and Validation</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequestEntry.MessageBody">
            <summary>
            Gets and sets the property MessageBody. 
            <para>
            The body of the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequestEntry.MessageDeduplicationId">
            <summary>
            Gets and sets the property MessageDeduplicationId. 
            <para>
            This parameter applies only to FIFO (first-in-first-out) queues.
            </para>
             
            <para>
            The token used for deduplication of messages within a 5-minute minimum deduplication
            interval. If a message with a particular <code>MessageDeduplicationId</code> is sent
            successfully, subsequent messages with the same <code>MessageDeduplicationId</code>
            are accepted successfully but aren't delivered. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing">
            Exactly-Once Processing</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             <ul> <li> 
            <para>
            Every message must have a unique <code>MessageDeduplicationId</code>,
            </para>
             <ul> <li> 
            <para>
            You may provide a <code>MessageDeduplicationId</code> explicitly.
            </para>
             </li> <li> 
            <para>
            If you aren't able to provide a <code>MessageDeduplicationId</code> and you enable
            <code>ContentBasedDeduplication</code> for your queue, Amazon SQS uses a SHA-256 hash
            to generate the <code>MessageDeduplicationId</code> using the body of the message
            (but not the attributes of the message). 
            </para>
             </li> <li> 
            <para>
            If you don't provide a <code>MessageDeduplicationId</code> and the queue doesn't have
            <code>ContentBasedDeduplication</code> set, the action fails with an error.
            </para>
             </li> <li> 
            <para>
            If the queue has <code>ContentBasedDeduplication</code> set, your <code>MessageDeduplicationId</code>
            overrides the generated one.
            </para>
             </li> </ul> </li> <li> 
            <para>
            When <code>ContentBasedDeduplication</code> is in effect, messages with identical
            content sent within the deduplication interval are treated as duplicates and only
            one copy of the message is delivered.
            </para>
             </li> <li> 
            <para>
            You can also use <code>ContentBasedDeduplication</code> for messages with identical
            content to be treated as duplicates.
            </para>
             </li> <li> 
            <para>
            If you send one message with <code>ContentBasedDeduplication</code> enabled and then
            another message with a <code>MessageDeduplicationId</code> that is the same as the
            one generated for the first <code>MessageDeduplicationId</code>, the two messages
            are treated as duplicates and only one copy of the message is delivered. 
            </para>
             </li> </ul> <note> 
            <para>
            The <code>MessageDeduplicationId</code> is available to the recipient of the message
            (this can be useful for troubleshooting delivery issues).
            </para>
             
            <para>
            If a message is sent successfully but the acknowledgement is lost and the message
            is resent with the same <code>MessageDeduplicationId</code> after the deduplication
            interval, Amazon SQS can't detect duplicate messages.
            </para>
             </note> 
            <para>
            The length of <code>MessageDeduplicationId</code> is 128 characters. <code>MessageDeduplicationId</code>
            can contain alphanumeric characters (<code>a-z</code>, <code>A-Z</code>, <code>0-9</code>)
            and punctuation (<code>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</code>).
            </para>
             
            <para>
            For best practices of using <code>MessageDeduplicationId</code>, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queue-recommendations.html#using-messagededuplicationid-property">Using
            the MessageDeduplicationId Property</a> in the <i>Amazon Simple Queue Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequestEntry.MessageGroupId">
            <summary>
            Gets and sets the property MessageGroupId. 
            <para>
            This parameter applies only to FIFO (first-in-first-out) queues.
            </para>
             
            <para>
            The tag that specifies that a message belongs to a specific message group. Messages
            that belong to the same message group are processed in a FIFO manner (however, messages
            in different message groups might be processed out of order). To interleave multiple
            ordered streams within a single queue, use <code>MessageGroupId</code> values (for
            example, session data for multiple users). In this scenario, multiple readers can
            process the queue, but the session data of each user is processed in a FIFO fashion.
            </para>
             <ul> <li> 
            <para>
            You must associate a non-empty <code>MessageGroupId</code> with a message. If you
            don't provide a <code>MessageGroupId</code>, the action fails.
            </para>
             </li> <li> 
            <para>
             <code>ReceiveMessage</code> might return messages with multiple <code>MessageGroupId</code>
            values. For each <code>MessageGroupId</code>, the messages are sorted by time sent.
            The caller can't specify a <code>MessageGroupId</code>.
            </para>
             </li> </ul> 
            <para>
            The length of <code>MessageGroupId</code> is 128 characters. Valid values are alphanumeric
            characters and punctuation <code>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</code>.
            </para>
             
            <para>
            For best practices of using <code>MessageGroupId</code>, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queue-recommendations.html#using-messagegroupid-property">Using
            the MessageGroupId Property</a> in the <i>Amazon Simple Queue Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageBatchResponse">
            <summary>
            For each message in the batch, the response contains a <code> <a>SendMessageBatchResultEntry</a>
            </code> tag if the message succeeds or a <code> <a>BatchResultErrorEntry</a> </code>
            tag if the message fails.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResponse.Failed">
            <summary>
            Gets and sets the property Failed. 
            <para>
            A list of <code> <a>BatchResultErrorEntry</a> </code> items with error details about
            each message that can't be enqueued.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResponse.Successful">
            <summary>
            Gets and sets the property Successful. 
            <para>
            A list of <code> <a>SendMessageBatchResultEntry</a> </code> items.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageBatchResultEntry">
            <summary>
            Encloses a <code>MessageId</code> for a successfully-enqueued message in a <code>
            <a>SendMessageBatch</a> </code>.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResultEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            An identifier for the message in this batch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResultEntry.MD5OfMessageAttributes">
            <summary>
            Gets and sets the property MD5OfMessageAttributes. 
            <para>
            An MD5 digest of the non-URL-encoded message attribute string. You can use this attribute
            to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the
            message before creating the MD5 digest. For information on MD5, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResultEntry.MD5OfMessageBody">
            <summary>
            Gets and sets the property MD5OfMessageBody. 
            <para>
            An MD5 digest of the non-URL-encoded message attribute string. You can use this attribute
            to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the
            message before creating the MD5 digest. For information on MD5, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResultEntry.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
            An identifier for the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResultEntry.SequenceNumber">
            <summary>
            Gets and sets the property SequenceNumber. 
            <para>
            This parameter applies only to FIFO (first-in-first-out) queues.
            </para>
             
            <para>
            A large, non-consecutive number that Amazon SQS assigns to each message.
            </para>
             
            <para>
            The length of <code>SequenceNumber</code> is 128 bits. As <code>SequenceNumber</code>
            continues to increase for a particular <code>MessageGroupId</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageRequest">
            <summary>
            Container for the parameters to the SendMessage operation.
            Delivers a message to the specified queue.
            
             <important> 
            <para>
            The following list shows the characters (in Unicode) that are allowed in your message,
            according to the W3C XML specification:
            </para>
             <ul> <li> 
            <para>
             <code>#x9</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xA</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x20</code> to <code>#xD7FF</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xE000</code> to <code>#xFFFD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x10000</code> to <code>#x10FFFF</code> 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            If you send any characters that aren't included in this list, your request is rejected.
            </para>
             </important>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates SendMessageRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to which a message is sent. Queue URLs are case-sensitive.</param>
            <param name="messageBody">The message to send. The maximum string size is 256 KB. <important> The following list shows the characters (in Unicode) that are allowed in your message, according to the W3C XML specification: <ul> <li>  <code>#x9</code>  </li> <li>  <code>#xA</code>  </li> <li>  <code>#xD</code>  </li> <li>  <code>#x20</code> to <code>#xD7FF</code>  </li> <li>  <code>#xE000</code> to <code>#xFFFD</code>  </li> <li>  <code>#x10000</code> to <code>#x10FFFF</code>  </li> </ul> For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>. If you send any characters that aren't included in this list, your request is rejected. </important></param>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageRequest.DelaySeconds">
            <summary>
            Gets and sets the property DelaySeconds. 
            <para>
             The number of seconds to delay a specific message. Valid values: 0 to 900. Maximum:
            15 minutes. Messages with a positive <code>DelaySeconds</code> value become available
            for processing after the delay period is finished. If you don't specify a value, the
            default value for the queue applies. 
            </para>
             <note> 
            <para>
            When you set <code>FifoQueue</code>, you can't set <code>DelaySeconds</code> per message.
            You can set this parameter only on a queue level.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageRequest.MessageAttributes">
            <summary>
            Gets and sets the property MessageAttributes. 
            <para>
            Each message attribute consists of a <code>Name</code>, <code>Type</code>, and <code>Value</code>.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-attributes.html#message-attributes-items-validation">Message
            Attribute Items and Validation</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageRequest.MessageBody">
            <summary>
            Gets and sets the property MessageBody. 
            <para>
            The message to send. The maximum string size is 256 KB.
            </para>
             <important> 
            <para>
            The following list shows the characters (in Unicode) that are allowed in your message,
            according to the W3C XML specification:
            </para>
             <ul> <li> 
            <para>
             <code>#x9</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xA</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x20</code> to <code>#xD7FF</code> 
            </para>
             </li> <li> 
            <para>
             <code>#xE000</code> to <code>#xFFFD</code> 
            </para>
             </li> <li> 
            <para>
             <code>#x10000</code> to <code>#x10FFFF</code> 
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            If you send any characters that aren't included in this list, your request is rejected.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageRequest.MessageDeduplicationId">
            <summary>
            Gets and sets the property MessageDeduplicationId. 
            <para>
            This parameter applies only to FIFO (first-in-first-out) queues.
            </para>
             
            <para>
            The token used for deduplication of sent messages. If a message with a particular
            <code>MessageDeduplicationId</code> is sent successfully, any messages sent with the
            same <code>MessageDeduplicationId</code> are accepted successfully but aren't delivered
            during the 5-minute deduplication interval. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing">
            Exactly-Once Processing</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             <ul> <li> 
            <para>
            Every message must have a unique <code>MessageDeduplicationId</code>,
            </para>
             <ul> <li> 
            <para>
            You may provide a <code>MessageDeduplicationId</code> explicitly.
            </para>
             </li> <li> 
            <para>
            If you aren't able to provide a <code>MessageDeduplicationId</code> and you enable
            <code>ContentBasedDeduplication</code> for your queue, Amazon SQS uses a SHA-256 hash
            to generate the <code>MessageDeduplicationId</code> using the body of the message
            (but not the attributes of the message). 
            </para>
             </li> <li> 
            <para>
            If you don't provide a <code>MessageDeduplicationId</code> and the queue doesn't have
            <code>ContentBasedDeduplication</code> set, the action fails with an error.
            </para>
             </li> <li> 
            <para>
            If the queue has <code>ContentBasedDeduplication</code> set, your <code>MessageDeduplicationId</code>
            overrides the generated one.
            </para>
             </li> </ul> </li> <li> 
            <para>
            When <code>ContentBasedDeduplication</code> is in effect, messages with identical
            content sent within the deduplication interval are treated as duplicates and only
            one copy of the message is delivered.
            </para>
             </li> <li> 
            <para>
            You can also use <code>ContentBasedDeduplication</code> for messages with identical
            content to be treated as duplicates.
            </para>
             </li> <li> 
            <para>
            If you send one message with <code>ContentBasedDeduplication</code> enabled and then
            another message with a <code>MessageDeduplicationId</code> that is the same as the
            one generated for the first <code>MessageDeduplicationId</code>, the two messages
            are treated as duplicates and only one copy of the message is delivered. 
            </para>
             </li> </ul> <note> 
            <para>
            The <code>MessageDeduplicationId</code> is available to the recipient of the message
            (this can be useful for troubleshooting delivery issues).
            </para>
             
            <para>
            If a message is sent successfully but the acknowledgement is lost and the message
            is resent with the same <code>MessageDeduplicationId</code> after the deduplication
            interval, Amazon SQS can't detect duplicate messages.
            </para>
             </note> 
            <para>
            The length of <code>MessageDeduplicationId</code> is 128 characters. <code>MessageDeduplicationId</code>
            can contain alphanumeric characters (<code>a-z</code>, <code>A-Z</code>, <code>0-9</code>)
            and punctuation (<code>!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~</code>).
            </para>
             
            <para>
            For best practices of using <code>MessageDeduplicationId</code>, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queue-recommendations.html#using-messagededuplicationid-property">Using
            the MessageDeduplicationId Property</a> in the <i>Amazon Simple Queue Service Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageRequest.MessageGroupId">
            <summary>
            Gets and sets the property MessageGroupId. 
            <para>
            This parameter applies only to FIFO (first-in-first-out) queues.
            </para>
             
            <para>
            The tag that specifies that a message belongs to a specific message group. Messages
            that belong to the same message group are processed in a FIFO manner (however, messages
            in different message groups might be processed out of order). To interleave multiple
            ordered streams within a single queue, use <code>MessageGroupId</code> values (for
            example, session data for multiple users). In this scenario, multiple readers can
            process the queue, but the session data of each user is processed in a FIFO fashion.
            </para>
             <ul> <li> 
            <para>
            You must associate a non-empty <code>MessageGroupId</code> with a message. If you
            don't provide a <code>MessageGroupId</code>, the action fails.
            </para>
             </li> <li> 
            <para>
             <code>ReceiveMessage</code> might return messages with multiple <code>MessageGroupId</code>
            values. For each <code>MessageGroupId</code>, the messages are sorted by time sent.
            The caller can't specify a <code>MessageGroupId</code>.
            </para>
             </li> </ul> 
            <para>
            The length of <code>MessageGroupId</code> is 128 characters. Valid values are alphanumeric
            characters and punctuation <code>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</code>.
            </para>
             
            <para>
            For best practices of using <code>MessageGroupId</code>, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queue-recommendations.html#using-messagegroupid-property">Using
            the MessageGroupId Property</a> in the <i>Amazon Simple Queue Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to which a message is sent.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageResponse">
            <summary>
            The <code>MD5OfMessageBody</code> and <code>MessageId</code> elements.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageResponse.MD5OfMessageAttributes">
            <summary>
            Gets and sets the property MD5OfMessageAttributes. 
            <para>
            An MD5 digest of the non-URL-encoded message attribute string. You can use this attribute
            to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the
            message before creating the MD5 digest. For information on MD5, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageResponse.MD5OfMessageBody">
            <summary>
            Gets and sets the property MD5OfMessageBody. 
            <para>
            An MD5 digest of the non-URL-encoded message attribute string. You can use this attribute
            to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the
            message before creating the MD5 digest. For information on MD5, see <a href="https://www.ietf.org/rfc/rfc1321.txt">RFC1321</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageResponse.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
            An attribute containing the <code>MessageId</code> of the message sent to the queue.
            For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-message-identifiers.html">Queue
            and Message Identifiers</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageResponse.SequenceNumber">
            <summary>
            Gets and sets the property SequenceNumber. 
            <para>
            This parameter applies only to FIFO (first-in-first-out) queues.
            </para>
             
            <para>
            A large, non-consecutive number that Amazon SQS assigns to each message.
            </para>
             
            <para>
            The length of <code>SequenceNumber</code> is 128 bits. <code>SequenceNumber</code>
            continues to increase for a particular <code>MessageGroupId</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SetQueueAttributesRequest">
            <summary>
            Container for the parameters to the SetQueueAttributes operation.
            Sets the value of one or more queue attributes. When you change a queue's attributes,
            the change can take up to 60 seconds for most of the attributes to propagate throughout
            the Amazon SQS system. Changes made to the <code>MessageRetentionPeriod</code> attribute
            can take up to 15 minutes.
            
             <note> 
            <para>
            In the future, new attributes might be added. If you write code that calls this action,
            we recommend that you structure your code so that it can handle new attributes gracefully.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SetQueueAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SetQueueAttributesRequest.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Instantiates SetQueueAttributesRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue whose attributes are set. Queue URLs are case-sensitive.</param>
            <param name="attributes">A map of attributes to set. The following lists the names, descriptions, and values of the special request parameters that the <code>SetQueueAttributes</code> action uses: <ul> <li>  <code>DelaySeconds</code> - The number of seconds for which the delivery of all messages in the queue is delayed. Valid values: An integer from 0 to 900 (15 minutes). The default is 0 (zero).  </li> <li>  <code>MaximumMessageSize</code> - The limit of how many bytes a message can contain before Amazon SQS rejects it. Valid values: An integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256 KiB). The default is 262,144 (256 KiB).  </li> <li>  <code>MessageRetentionPeriod</code> - The number of seconds for which Amazon SQS retains a message. Valid values: An integer representing seconds, from 60 (1 minute) to 1,209,600 (14 days). The default is 345,600 (4 days).  </li> <li>  <code>Policy</code> - The queue's policy. A valid AWS policy. For more information about policy structure, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html">Overview of AWS IAM Policies</a> in the <i>Amazon IAM User Guide</i>.  </li> <li>  <code>ReceiveMessageWaitTimeSeconds</code> - The number of seconds for which a <code> <a>ReceiveMessage</a> </code> action waits for a message to arrive. Valid values: an integer from 0 to 20 (seconds). The default is 0.  </li> <li>  <code>RedrivePolicy</code> - The parameters for the dead letter queue functionality of the source queue. For more information about the redrive policy and dead letter queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>.  <note> The dead letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead letter queue of a standard queue must also be a standard queue. </note> </li> <li>  <code>VisibilityTimeout</code> - The visibility timeout for the queue. Valid values: an integer from 0 to 43,200 (12 hours). The default is 30. For more information about the visibility timeout, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility Timeout</a> in the <i>Amazon SQS Developer Guide</i>. </li> </ul> The following attribute applies only to <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html">FIFO (first-in-first-out) queues</a>: <ul> <li>  <code>ContentBasedDeduplication</code> - Enables content-based deduplication. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing">Exactly-Once Processing</a> in the <i>Amazon SQS Developer Guide</i>.  <ul> <li> Every message must have a unique <code>MessageDeduplicationId</code>, <ul> <li> You may provide a <code>MessageDeduplicationId</code> explicitly. </li> <li> If you aren't able to provide a <code>MessageDeduplicationId</code> and you enable <code>ContentBasedDeduplication</code> for your queue, Amazon SQS uses a SHA-256 hash to generate the <code>MessageDeduplicationId</code> using the body of the message (but not the attributes of the message).  </li> <li> If you don't provide a <code>MessageDeduplicationId</code> and the queue doesn't have <code>ContentBasedDeduplication</code> set, the action fails with an error. </li> <li> If the queue has <code>ContentBasedDeduplication</code> set, your <code>MessageDeduplicationId</code> overrides the generated one. </li> </ul> </li> <li> When <code>ContentBasedDeduplication</code> is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered. </li> <li> You can also use <code>ContentBasedDeduplication</code> for messages with identical content to be treated as duplicates. </li> <li> If you send one message with <code>ContentBasedDeduplication</code> enabled and then another message with a <code>MessageDeduplicationId</code> that is the same as the one generated for the first <code>MessageDeduplicationId</code>, the two messages are treated as duplicates and only one copy of the message is delivered.  </li> </ul> </li> </ul> Any other valid special request parameters (such as the following) are ignored: <ul> <li>  <code>ApproximateNumberOfMessages</code>  </li> <li>  <code>ApproximateNumberOfMessagesDelayed</code>  </li> <li>  <code>ApproximateNumberOfMessagesNotVisible</code>  </li> <li>  <code>CreatedTimestamp</code>  </li> <li>  <code>LastModifiedTimestamp</code>  </li> <li>  <code>QueueArn</code>  </li> </ul></param>
        </member>
        <member name="P:Amazon.SQS.Model.SetQueueAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of attributes to set.
            </para>
             
            <para>
            The following lists the names, descriptions, and values of the special request parameters
            that the <code>SetQueueAttributes</code> action uses:
            </para>
             <ul> <li> 
            <para>
             <code>DelaySeconds</code> - The number of seconds for which the delivery of all messages
            in the queue is delayed. Valid values: An integer from 0 to 900 (15 minutes). The
            default is 0 (zero). 
            </para>
             </li> <li> 
            <para>
             <code>MaximumMessageSize</code> - The limit of how many bytes a message can contain
            before Amazon SQS rejects it. Valid values: An integer from 1,024 bytes (1 KiB) up
            to 262,144 bytes (256 KiB). The default is 262,144 (256 KiB). 
            </para>
             </li> <li> 
            <para>
             <code>MessageRetentionPeriod</code> - The number of seconds for which Amazon SQS
            retains a message. Valid values: An integer representing seconds, from 60 (1 minute)
            to 1,209,600 (14 days). The default is 345,600 (4 days). 
            </para>
             </li> <li> 
            <para>
             <code>Policy</code> - The queue's policy. A valid AWS policy. For more information
            about policy structure, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html">Overview
            of AWS IAM Policies</a> in the <i>Amazon IAM User Guide</i>. 
            </para>
             </li> <li> 
            <para>
             <code>ReceiveMessageWaitTimeSeconds</code> - The number of seconds for which a <code>
            <a>ReceiveMessage</a> </code> action waits for a message to arrive. Valid values:
            an integer from 0 to 20 (seconds). The default is 0. 
            </para>
             </li> <li> 
            <para>
             <code>RedrivePolicy</code> - The parameters for the dead letter queue functionality
            of the source queue. For more information about the redrive policy and dead letter
            queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html">Using
            Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
             <note> 
            <para>
            The dead letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead
            letter queue of a standard queue must also be a standard queue.
            </para>
             </note> </li> <li> 
            <para>
             <code>VisibilityTimeout</code> - The visibility timeout for the queue. Valid values:
            an integer from 0 to 43,200 (12 hours). The default is 30. For more information about
            the visibility timeout, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
             </li> </ul> 
            <para>
            The following attribute applies only to <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html">FIFO
            (first-in-first-out) queues</a>:
            </para>
             <ul> <li> 
            <para>
             <code>ContentBasedDeduplication</code> - Enables content-based deduplication. For
            more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing">Exactly-Once
            Processing</a> in the <i>Amazon SQS Developer Guide</i>. 
            </para>
             <ul> <li> 
            <para>
            Every message must have a unique <code>MessageDeduplicationId</code>,
            </para>
             <ul> <li> 
            <para>
            You may provide a <code>MessageDeduplicationId</code> explicitly.
            </para>
             </li> <li> 
            <para>
            If you aren't able to provide a <code>MessageDeduplicationId</code> and you enable
            <code>ContentBasedDeduplication</code> for your queue, Amazon SQS uses a SHA-256 hash
            to generate the <code>MessageDeduplicationId</code> using the body of the message
            (but not the attributes of the message). 
            </para>
             </li> <li> 
            <para>
            If you don't provide a <code>MessageDeduplicationId</code> and the queue doesn't have
            <code>ContentBasedDeduplication</code> set, the action fails with an error.
            </para>
             </li> <li> 
            <para>
            If the queue has <code>ContentBasedDeduplication</code> set, your <code>MessageDeduplicationId</code>
            overrides the generated one.
            </para>
             </li> </ul> </li> <li> 
            <para>
            When <code>ContentBasedDeduplication</code> is in effect, messages with identical
            content sent within the deduplication interval are treated as duplicates and only
            one copy of the message is delivered.
            </para>
             </li> <li> 
            <para>
            You can also use <code>ContentBasedDeduplication</code> for messages with identical
            content to be treated as duplicates.
            </para>
             </li> <li> 
            <para>
            If you send one message with <code>ContentBasedDeduplication</code> enabled and then
            another message with a <code>MessageDeduplicationId</code> that is the same as the
            one generated for the first <code>MessageDeduplicationId</code>, the two messages
            are treated as duplicates and only one copy of the message is delivered. 
            </para>
             </li> </ul> </li> </ul> 
            <para>
            Any other valid special request parameters (such as the following) are ignored:
            </para>
             <ul> <li> 
            <para>
             <code>ApproximateNumberOfMessages</code> 
            </para>
             </li> <li> 
            <para>
             <code>ApproximateNumberOfMessagesDelayed</code> 
            </para>
             </li> <li> 
            <para>
             <code>ApproximateNumberOfMessagesNotVisible</code> 
            </para>
             </li> <li> 
            <para>
             <code>CreatedTimestamp</code> 
            </para>
             </li> <li> 
            <para>
             <code>LastModifiedTimestamp</code> 
            </para>
             </li> <li> 
            <para>
             <code>QueueArn</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SetQueueAttributesRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue whose attributes are set.
            </para>
             
            <para>
            Queue URLs are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SetQueueAttributesResponse">
            <summary>
            This is the response object from the SetQueueAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.TooManyEntriesInBatchRequestException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyEntriesInBatchRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.TooManyEntriesInBatchRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyEntriesInBatchRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.TooManyEntriesInBatchRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyEntriesInBatchRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.TooManyEntriesInBatchRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyEntriesInBatchRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.TooManyEntriesInBatchRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyEntriesInBatchRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.TooManyEntriesInBatchRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TooManyEntriesInBatchRequestException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.UnsupportedOperationException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.UnsupportedOperationException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedOperationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SQS.Model.UnsupportedOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.UnsupportedOperationException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.Model.UnsupportedOperationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.UnsupportedOperationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.Model.UnsupportedOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnsupportedOperationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionRequestMarshaller">
            <summary>
            AddPermission Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionRequestMarshaller.Marshall(Amazon.SQS.Model.AddPermissionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddPermission operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.BatchResultErrorEntryUnmarshaller">
            <summary>
            Response Unmarshaller for BatchResultErrorEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.BatchResultErrorEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.BatchResultErrorEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.BatchResultErrorEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchRequestMarshaller">
            <summary>
            ChangeMessageVisibilityBatch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchRequestMarshaller.Marshall(Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ChangeMessageVisibilityBatch operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for ChangeMessageVisibilityBatchResultEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResultEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityRequestMarshaller">
            <summary>
            ChangeMessageVisibility Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityRequestMarshaller.Marshall(Amazon.SQS.Model.ChangeMessageVisibilityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ChangeMessageVisibility operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueRequestMarshaller">
            <summary>
            CreateQueue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueRequestMarshaller.Marshall(Amazon.SQS.Model.CreateQueueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateQueue operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchRequestMarshaller">
            <summary>
            DeleteMessageBatch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchRequestMarshaller.Marshall(Amazon.SQS.Model.DeleteMessageBatchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMessageBatch operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMessageBatchResultEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResultEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageRequestMarshaller">
            <summary>
            DeleteMessage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageRequestMarshaller.Marshall(Amazon.SQS.Model.DeleteMessageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMessage operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueRequestMarshaller">
            <summary>
            DeleteQueue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueRequestMarshaller.Marshall(Amazon.SQS.Model.DeleteQueueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteQueue operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesRequestMarshaller">
            <summary>
            GetQueueAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesRequestMarshaller.Marshall(Amazon.SQS.Model.GetQueueAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetQueueAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlRequestMarshaller">
            <summary>
            GetQueueUrl Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlRequestMarshaller.Marshall(Amazon.SQS.Model.GetQueueUrlRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetQueueUrl operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesRequestMarshaller">
            <summary>
            ListDeadLetterSourceQueues Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesRequestMarshaller.Marshall(Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDeadLetterSourceQueues operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesRequestMarshaller">
            <summary>
            ListQueues Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesRequestMarshaller.Marshall(Amazon.SQS.Model.ListQueuesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListQueues operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.MessageAttributeValueUnmarshaller">
            <summary>
            Response Unmarshaller for MessageAttributeValue Object
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.MessageAttributeValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.MessageAttributeValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.MessageAttributeValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.MessageUnmarshaller">
            <summary>
            Response Unmarshaller for Message Object
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.MessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.MessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.MessageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueRequestMarshaller">
            <summary>
            PurgeQueue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueRequestMarshaller.Marshall(Amazon.SQS.Model.PurgeQueueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PurgeQueue operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageRequestMarshaller">
            <summary>
            ReceiveMessage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageRequestMarshaller.Marshall(Amazon.SQS.Model.ReceiveMessageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReceiveMessage operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller">
            <summary>
            RemovePermission Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller.Marshall(Amazon.SQS.Model.RemovePermissionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemovePermission operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchRequestMarshaller">
            <summary>
            SendMessageBatch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchRequestMarshaller.Marshall(Amazon.SQS.Model.SendMessageBatchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendMessageBatch operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for SendMessageBatchResultEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResultEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResultEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageRequestMarshaller">
            <summary>
            SendMessage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageRequestMarshaller.Marshall(Amazon.SQS.Model.SendMessageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendMessage operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesRequestMarshaller">
            <summary>
            SetQueueAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesRequestMarshaller.Marshall(Amazon.SQS.Model.SetQueueAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetQueueAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Util.SQSConstants">
            <summary>
            Common constants for SQS
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_ALL">
            <summary>
            Used in <c>GetQueueAttributes</c> to return all values.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_VISIBILITY_TIMEOUT">
            <summary>
            The length of time (in seconds) that a message received from a queue will be invisible to other receiving components when they ask to receive messages.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES">
            <summary>
            The approximate number of visible messages in a queue
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES_NOT_VISIBLE">
            <summary>
            The approximate number of messages that are not timed-out and not deleted.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES_DELAYED">
            <summary>
            The approximate number of messages that are delayed from delivery.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_CREATED_TIMESTAMP">
            <summary>
            The time when the queue was created (epoch time in seconds).
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_LAST_MODIFIED_TIMESTAMP">
            <summary>
            The time when the queue was last changed (epoch time in seconds).
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_QUEUE_ARN">
            <summary>
            The queue's Amazon resource name (ARN).
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_MAXIMUM_MESSAGE_SIZE">
            <summary>
            The limit of how many bytes a message can contain before Amazon SQS rejects it.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_MESSAGE_RETENTION_PERIOD">
            <summary>
            The number of seconds Amazon SQS retains a message.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_POLICY">
            <summary>
            The queue's policy.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_DELAY_SECONDS">
            <summary>
            The number of seconds to delay a message from being available to be processed.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_OLDEST_MESSAGE_AGE">
            <summary>
            The number of milliseconds the oldest message has been on the queue. 
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_RECEIEVE_MESSAGE_WAIT_TIME_SECONDS">
            <summary>
            The time for which a ReceiveMessage call will wait for a message to arrive. An integer from 0 to 20 (seconds). The default for this attribute is 0.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_REDRIVE_POLICY">
            <summary>
            The parameters for dead letter queue functionality of the source queue. For more information about RedrivePolicy and dead letter queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html">Using Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>.
            </summary>
        </member>
        <member name="T:Amazon.SQS.AmazonSQSConfig">
            <summary>
            Configuration for accessing Amazon SQS service
            </summary>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SQS.AmazonSQSConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SQS.AmazonSQSConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.SQS.AmazonSQSConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.SQS.AmazonSQSException">
            <summary>
             Common exception for the SQS service.
             </summary>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonSQSException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonSQSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonSQSException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSQSException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSQSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonSQSException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SQS.MessageSystemAttributeName">
            <summary>
            Constants used for properties of type MessageSystemAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.SQS.MessageSystemAttributeName.ApproximateFirstReceiveTimestamp">
            <summary>
            Constant ApproximateFirstReceiveTimestamp for MessageSystemAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.MessageSystemAttributeName.ApproximateReceiveCount">
            <summary>
            Constant ApproximateReceiveCount for MessageSystemAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.MessageSystemAttributeName.MessageDeduplicationId">
            <summary>
            Constant MessageDeduplicationId for MessageSystemAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.MessageSystemAttributeName.MessageGroupId">
            <summary>
            Constant MessageGroupId for MessageSystemAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.MessageSystemAttributeName.SenderId">
            <summary>
            Constant SenderId for MessageSystemAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.MessageSystemAttributeName.SentTimestamp">
            <summary>
            Constant SentTimestamp for MessageSystemAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.MessageSystemAttributeName.SequenceNumber">
            <summary>
            Constant SequenceNumber for MessageSystemAttributeName
            </summary>
        </member>
        <member name="M:Amazon.SQS.MessageSystemAttributeName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SQS.MessageSystemAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SQS.MessageSystemAttributeName.op_Implicit(System.String)~Amazon.SQS.MessageSystemAttributeName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.QueueAttributeName">
            <summary>
            Constants used for properties of type QueueAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.All">
            <summary>
            Constant All for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.ApproximateNumberOfMessages">
            <summary>
            Constant ApproximateNumberOfMessages for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.ApproximateNumberOfMessagesDelayed">
            <summary>
            Constant ApproximateNumberOfMessagesDelayed for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.ApproximateNumberOfMessagesNotVisible">
            <summary>
            Constant ApproximateNumberOfMessagesNotVisible for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.ContentBasedDeduplication">
            <summary>
            Constant ContentBasedDeduplication for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.CreatedTimestamp">
            <summary>
            Constant CreatedTimestamp for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.DelaySeconds">
            <summary>
            Constant DelaySeconds for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.FifoQueue">
            <summary>
            Constant FifoQueue for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.LastModifiedTimestamp">
            <summary>
            Constant LastModifiedTimestamp for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.MaximumMessageSize">
            <summary>
            Constant MaximumMessageSize for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.MessageRetentionPeriod">
            <summary>
            Constant MessageRetentionPeriod for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.Policy">
            <summary>
            Constant Policy for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.QueueArn">
            <summary>
            Constant QueueArn for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.ReceiveMessageWaitTimeSeconds">
            <summary>
            Constant ReceiveMessageWaitTimeSeconds for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.RedrivePolicy">
            <summary>
            Constant RedrivePolicy for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.VisibilityTimeout">
            <summary>
            Constant VisibilityTimeout for QueueAttributeName
            </summary>
        </member>
        <member name="M:Amazon.SQS.QueueAttributeName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SQS.QueueAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SQS.QueueAttributeName.op_Implicit(System.String)~Amazon.SQS.QueueAttributeName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SQS.AmazonSQSRequest">
            <summary>
            Base class for SQS operation requests.
            </summary>
        </member>
    </members>
</doc>
