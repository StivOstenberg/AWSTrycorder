<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.EC2</name>
    </assembly>
    <members>
        <member name="T:Amazon.EC2.AmazonEC2Client">
            <summary>
            Implementation for accessing AmazonEC2.
             
            <para> Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides resizable compute capacity in the cloud. It is designed to
            make web-scale computing easier for developers. </para> <para> Amazon EC2's simple web service interface allows you to obtain and configure
            capacity with minimal friction. It provides you with complete control of your computing resources and lets you run on Amazon's proven
            computing environment. Amazon EC2 reduces the time required to obtain and boot new server instances to minutes, allowing you to quickly
            scale capacity, both up and down, as your computing requirements change. Amazon EC2 changes the economics of computing by allowing you to
            pay only for capacity that you actually use. Amazon EC2 provides developers the tools to build failure resilient applications and isolate
            themselves from common failure scenarios. </para> <para> Visit http://aws.amazon.com/ec2/ for more information. </para>
            </summary>
             <summary>
             Implementation for accessing EC2
            
             Amazon Elastic Compute Cloud 
             <para>
             Amazon Elastic Compute Cloud (Amazon EC2) provides resizable computing capacity in
             the Amazon Web Services (AWS) cloud. Using Amazon EC2 eliminates your need to invest
             in hardware up front, so you can develop and deploy applications faster.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DryRun(Amazon.EC2.AmazonEC2Request)">
            <summary>
            Checks whether you have the required permissions for the action, without actually making the request.
            </summary>
            <param name="request">Request to do a dry run of.</param>
            <returns>Result of the dry run.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor">
             <summary>
             Constructs AmazonEC2Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonEC2Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(Amazon.EC2.AmazonEC2Config)">
             <summary>
             Constructs AmazonEC2Client with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonEC2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonEC2Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEC2Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.EC2.AmazonEC2Config)">
            <summary>
            Constructs AmazonEC2Client with AWS Credentials and an
            AmazonEC2Client Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonEC2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String,Amazon.EC2.AmazonEC2Config)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID, AWS Secret Key and an
            AmazonEC2Client Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonEC2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String,System.String,Amazon.EC2.AmazonEC2Config)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID, AWS Secret Key and an
            AmazonEC2Client Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonEC2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customize the pipeline
            </summary>
            <param name="pipeline"></param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AcceptReservedInstancesExchangeQuote(Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteRequest)">
            <summary>
            Purchases Convertible Reserved Instance offerings described in the <a>GetReservedInstancesExchangeQuote</a>
            call.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AcceptReservedInstancesExchangeQuote service method.</param>
            
            <returns>The response from the AcceptReservedInstancesExchangeQuote service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AcceptReservedInstancesExchangeQuoteAsync(Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AcceptReservedInstancesExchangeQuote operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AcceptReservedInstancesExchangeQuote operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AcceptVpcPeeringConnection(Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest)">
            <summary>
            Accept a VPC peering connection request. To accept a request, the VPC peering connection
            must be in the <code>pending-acceptance</code> state, and you must be the owner of
            the peer VPC. Use the <code>DescribeVpcPeeringConnections</code> request to view your
            outstanding VPC peering connection requests.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AcceptVpcPeeringConnection service method.</param>
            
            <returns>The response from the AcceptVpcPeeringConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AcceptVpcPeeringConnectionAsync(Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AcceptVpcPeeringConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AcceptVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AllocateAddress">
            <summary>
            Acquires an Elastic IP address.
            
             
            <para>
            An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the AllocateAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AllocateAddress(Amazon.EC2.Model.AllocateAddressRequest)">
            <summary>
            Acquires an Elastic IP address.
            
             
            <para>
            An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AllocateAddress service method.</param>
            
            <returns>The response from the AllocateAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AllocateAddressAsync(System.Threading.CancellationToken)">
            <summary>
            Acquires an Elastic IP address.
            
             
            <para>
            An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AllocateAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AllocateAddressAsync(Amazon.EC2.Model.AllocateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AllocateAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AllocateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AllocateHosts(Amazon.EC2.Model.AllocateHostsRequest)">
            <summary>
            Allocates a Dedicated Host to your account. At minimum you need to specify the instance
            size type, Availability Zone, and quantity of hosts you want to allocate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AllocateHosts service method.</param>
            
            <returns>The response from the AllocateHosts service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AllocateHostsAsync(Amazon.EC2.Model.AllocateHostsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AllocateHosts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AllocateHosts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssignPrivateIpAddresses(Amazon.EC2.Model.AssignPrivateIpAddressesRequest)">
            <summary>
            Assigns one or more secondary private IP addresses to the specified network interface.
            You can specify one or more specific secondary IP addresses, or you can specify the
            number of secondary IP addresses to be automatically assigned within the subnet's
            CIDR block range. The number of secondary IP addresses that you can assign to an instance
            varies by instance type. For information about instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information
            about Elastic IP addresses, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            AssignPrivateIpAddresses is available only in EC2-VPC.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssignPrivateIpAddresses service method.</param>
            
            <returns>The response from the AssignPrivateIpAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssignPrivateIpAddressesAsync(Amazon.EC2.Model.AssignPrivateIpAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssignPrivateIpAddresses operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssignPrivateIpAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssociateAddress(Amazon.EC2.Model.AssociateAddressRequest)">
            <summary>
            Associates an Elastic IP address with an instance or a network interface.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            [EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already
            associated with a different instance, it is disassociated from that instance and associated
            with the specified instance.
            </para>
             
            <para>
            [VPC in an EC2-Classic account] If you don't specify a private IP address, the Elastic
            IP address is associated with the primary IP address. If the Elastic IP address is
            already associated with a different instance or a network interface, you get an error
            unless you allow reassociation.
            </para>
             <important> 
            <para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error, and you may be charged for each time the Elastic IP address
            is remapped to the same instance. For more information, see the <i>Elastic IP Addresses</i>
            section of <a href="http://aws.amazon.com/ec2/pricing/">Amazon EC2 Pricing</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateAddress service method.</param>
            
            <returns>The response from the AssociateAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssociateAddressAsync(Amazon.EC2.Model.AssociateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssociateDhcpOptions(Amazon.EC2.Model.AssociateDhcpOptionsRequest)">
            <summary>
            Associates a set of DHCP options (that you've previously created) with the specified
            VPC, or associates no DHCP options with the VPC.
            
             
            <para>
            After you associate the options with the VPC, any existing instances and all new instances
            that you launch in that VPC use the options. You don't need to restart or relaunch
            the instances. They automatically pick up the changes within a few hours, depending
            on how frequently the instance renews its DHCP lease. You can explicitly renew the
            lease using the operating system on the instance.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateDhcpOptions service method.</param>
            
            <returns>The response from the AssociateDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssociateDhcpOptionsAsync(Amazon.EC2.Model.AssociateDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateDhcpOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssociateRouteTable(Amazon.EC2.Model.AssociateRouteTableRequest)">
            <summary>
            Associates a subnet with a route table. The subnet and route table must be in the
            same VPC. This association causes traffic originating from the subnet to be routed
            according to the routes in the route table. The action returns an association ID,
            which you need in order to disassociate the route table from the subnet later. A route
            table can be associated with multiple subnets.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateRouteTable service method.</param>
            
            <returns>The response from the AssociateRouteTable service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssociateRouteTableAsync(Amazon.EC2.Model.AssociateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateRouteTable operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachClassicLinkVpc(Amazon.EC2.Model.AttachClassicLinkVpcRequest)">
            <summary>
            Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of
            the VPC's security groups. You cannot link an EC2-Classic instance to more than one
            VPC at a time. You can only link an instance that's in the <code>running</code> state.
            An instance is automatically unlinked from a VPC when it's stopped - you can link
            it to the VPC again when you restart it.
            
             
            <para>
            After you've linked an instance, you cannot change the VPC security groups that are
            associated with it. To change the security groups, you must first unlink the instance,
            and then link it again.
            </para>
             
            <para>
            Linking your instance to a VPC is sometimes referred to as <i>attaching</i> your instance.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachClassicLinkVpc service method.</param>
            
            <returns>The response from the AttachClassicLinkVpc service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachClassicLinkVpcAsync(Amazon.EC2.Model.AttachClassicLinkVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachClassicLinkVpc operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachClassicLinkVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachInternetGateway(Amazon.EC2.Model.AttachInternetGatewayRequest)">
            <summary>
            Attaches an Internet gateway to a VPC, enabling connectivity between the Internet
            and the VPC. For more information about your VPC and Internet gateway, see the <a
            href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon Virtual Private
            Cloud User Guide</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachInternetGateway service method.</param>
            
            <returns>The response from the AttachInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachInternetGatewayAsync(Amazon.EC2.Model.AttachInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachInternetGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachNetworkInterface(Amazon.EC2.Model.AttachNetworkInterfaceRequest)">
            <summary>
            Attaches a network interface to an instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachNetworkInterface service method.</param>
            
            <returns>The response from the AttachNetworkInterface service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachNetworkInterfaceAsync(Amazon.EC2.Model.AttachNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachNetworkInterface operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachVolume(Amazon.EC2.Model.AttachVolumeRequest)">
            <summary>
            Attaches an EBS volume to a running or stopped instance and exposes it to the instance
            with the specified device name.
            
             
            <para>
            Encrypted EBS volumes may only be attached to instances that support Amazon EBS encryption.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For a list of supported device names, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching
            an EBS Volume to an Instance</a>. Any device names that aren't reserved for instance
            store volumes can be used for EBS volumes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon
            EC2 Instance Store</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            If a volume has an AWS Marketplace product code:
            </para>
             <ul> <li> 
            <para>
            The volume can be attached only to a stopped instance.
            </para>
             </li> <li> 
            <para>
            AWS Marketplace product codes are copied from the volume to the instance.
            </para>
             </li> <li> 
            <para>
            You must be subscribed to the product.
            </para>
             </li> <li> 
            <para>
            The instance type and operating system of the instance must support the product. For
            example, you can't detach a volume from a Windows instance and attach it to a Linux
            instance.
            </para>
             </li> </ul> 
            <para>
            For an overview of the AWS Marketplace, see <a href="https://aws.amazon.com/marketplace/help/200900000">Introducing
            AWS Marketplace</a>.
            </para>
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching
            Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachVolume service method.</param>
            
            <returns>The response from the AttachVolume service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachVolumeAsync(Amazon.EC2.Model.AttachVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachVolume operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachVpnGateway(Amazon.EC2.Model.AttachVpnGatewayRequest)">
            <summary>
            Attaches a virtual private gateway to a VPC. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachVpnGateway service method.</param>
            
            <returns>The response from the AttachVpnGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachVpnGatewayAsync(Amazon.EC2.Model.AttachVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachVpnGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AuthorizeSecurityGroupEgress(Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest)">
            <summary>
            [EC2-VPC only] Adds one or more egress rules to a security group for use with a VPC.
            Specifically, this action permits instances to send traffic to one or more destination
            CIDR IP address ranges, or to one or more destination security groups for the same
            VPC. This action doesn't apply to security groups for use in EC2-Classic. For more
            information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            
             <important> 
            <para>
            You can have up to 50 rules per security group (covering both ingress and egress rules).
            </para>
             </important> 
            <para>
            Each rule consists of the protocol (for example, TCP), plus either a CIDR range or
            a source group. For the TCP and UDP protocols, you must also specify the destination
            port or port range. For the ICMP protocol, you must also specify the ICMP type and
            code. You can use -1 for the type or code to mean all types or all codes.
            </para>
             
            <para>
            Rule changes are propagated to affected instances as quickly as possible. However,
            a small delay might occur.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupEgress service method.</param>
            
            <returns>The response from the AuthorizeSecurityGroupEgress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AuthorizeSecurityGroupEgressAsync(Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AuthorizeSecurityGroupEgress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupEgress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AuthorizeSecurityGroupIngress(Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest)">
            <summary>
            Adds one or more ingress rules to a security group.
            
             <important> 
            <para>
            EC2-Classic: You can have up to 100 rules per group.
            </para>
             
            <para>
            EC2-VPC: You can have up to 50 rules per group (covering both ingress and egress rules).
            </para>
             </important> 
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
             
            <para>
            [EC2-Classic] This action gives one or more CIDR IP address ranges permission to access
            a security group in your account, or gives one or more security groups (called the
            <i>source groups</i>) permission to access a security group for your account. A source
            group can be for your own AWS account, or another.
            </para>
             
            <para>
            [EC2-VPC] This action gives one or more CIDR IP address ranges permission to access
            a security group in your VPC, or gives one or more other security groups (called the
            <i>source groups</i>) permission to access a security group for your VPC. The security
            groups must all be for the same VPC.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupIngress service method.</param>
            
            <returns>The response from the AuthorizeSecurityGroupIngress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AuthorizeSecurityGroupIngressAsync(Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AuthorizeSecurityGroupIngress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupIngress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.BundleInstance(Amazon.EC2.Model.BundleInstanceRequest)">
            <summary>
            Bundles an Amazon instance store-backed Windows instance.
            
             
            <para>
            During bundling, only the root device volume (C:\) is bundled. Data on other instance
            store volumes is not preserved.
            </para>
             <note> 
            <para>
            This action is not applicable for Linux/Unix instances or Windows instances that are
            backed by Amazon EBS.
            </para>
             </note> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Creating_InstanceStoreBacked_WinAMI.html">Creating
            an Instance Store-Backed Windows AMI</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BundleInstance service method.</param>
            
            <returns>The response from the BundleInstance service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.BundleInstanceAsync(Amazon.EC2.Model.BundleInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BundleInstance operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BundleInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelBundleTask(Amazon.EC2.Model.CancelBundleTaskRequest)">
            <summary>
            Cancels a bundling operation for an instance store-backed Windows instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelBundleTask service method.</param>
            
            <returns>The response from the CancelBundleTask service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelBundleTaskAsync(Amazon.EC2.Model.CancelBundleTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelBundleTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelBundleTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelConversionTask(Amazon.EC2.Model.CancelConversionTaskRequest)">
            <summary>
            Cancels an active conversion task. The task can be the import of an instance or volume.
            The action removes all artifacts of the conversion, including a partially uploaded
            volume or instance. If the conversion is complete or is in the process of transferring
            the final disk image, the command fails and returns an exception.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing
            a Virtual Machine Using the Amazon EC2 CLI</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelConversionTask service method.</param>
            
            <returns>The response from the CancelConversionTask service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelConversionTaskAsync(Amazon.EC2.Model.CancelConversionTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelConversionTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelConversionTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelExportTask(Amazon.EC2.Model.CancelExportTaskRequest)">
            <summary>
            Cancels an active export task. The request removes all artifacts of the export, including
            any partially-created Amazon S3 objects. If the export task is complete or is in the
            process of transferring the final disk image, the command fails and returns an error.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelExportTask service method.</param>
            
            <returns>The response from the CancelExportTask service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelExportTaskAsync(Amazon.EC2.Model.CancelExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelExportTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelImportTask(Amazon.EC2.Model.CancelImportTaskRequest)">
            <summary>
            Cancels an in-process import virtual machine or import snapshot task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelImportTask service method.</param>
            
            <returns>The response from the CancelImportTask service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelImportTaskAsync(Amazon.EC2.Model.CancelImportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelImportTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelImportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelReservedInstancesListing(Amazon.EC2.Model.CancelReservedInstancesListingRequest)">
            <summary>
            Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelReservedInstancesListing service method.</param>
            
            <returns>The response from the CancelReservedInstancesListing service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelReservedInstancesListingAsync(Amazon.EC2.Model.CancelReservedInstancesListingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelReservedInstancesListing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelReservedInstancesListing operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelSpotFleetRequests(Amazon.EC2.Model.CancelSpotFleetRequestsRequest)">
            <summary>
            Cancels the specified Spot fleet requests.
            
             
            <para>
            After you cancel a Spot fleet request, the Spot fleet launches no new Spot instances.
            You must specify whether the Spot fleet should also terminate its Spot instances.
            If you terminate the instances, the Spot fleet request enters the <code>cancelled_terminating</code>
            state. Otherwise, the Spot fleet request enters the <code>cancelled_running</code>
            state and the instances continue to run until they are interrupted or you terminate
            them manually.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelSpotFleetRequests service method.</param>
            
            <returns>The response from the CancelSpotFleetRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelSpotFleetRequestsAsync(Amazon.EC2.Model.CancelSpotFleetRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelSpotFleetRequests operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelSpotFleetRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelSpotInstanceRequests(Amazon.EC2.Model.CancelSpotInstanceRequestsRequest)">
            <summary>
            Cancels one or more Spot instance requests. Spot instances are instances that Amazon
            EC2 starts on your behalf when the bid price that you specify exceeds the current
            Spot price. Amazon EC2 periodically sets the Spot price based on available Spot instance
            capacity and current Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             <important> 
            <para>
            Canceling a Spot instance request does not terminate running Spot instances associated
            with the request.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelSpotInstanceRequests service method.</param>
            
            <returns>The response from the CancelSpotInstanceRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelSpotInstanceRequestsAsync(Amazon.EC2.Model.CancelSpotInstanceRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelSpotInstanceRequests operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelSpotInstanceRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ConfirmProductInstance(Amazon.EC2.Model.ConfirmProductInstanceRequest)">
            <summary>
            Determines whether a product code is associated with an instance. This action can
            only be used by the owner of the product code. It is useful when a product code owner
            needs to verify whether another user's instance is eligible for support.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmProductInstance service method.</param>
            
            <returns>The response from the ConfirmProductInstance service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ConfirmProductInstanceAsync(Amazon.EC2.Model.ConfirmProductInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmProductInstance operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmProductInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CopyImage(Amazon.EC2.Model.CopyImageRequest)">
            <summary>
            Initiates the copy of an AMI from the specified source region to the current region.
            You specify the destination region by using its endpoint when making the request.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html">Copying
            AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyImage service method.</param>
            
            <returns>The response from the CopyImage service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CopyImageAsync(Amazon.EC2.Model.CopyImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CopySnapshot(Amazon.EC2.Model.CopySnapshotRequest)">
            <summary>
            Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can
            copy the snapshot within the same region or from one region to another. You can use
            the snapshot to create EBS volumes or Amazon Machine Images (AMIs). The snapshot is
            copied to the regional endpoint that you send the HTTP request to.
            
             
            <para>
            Copies of encrypted EBS snapshots remain encrypted. Copies of unencrypted snapshots
            remain unencrypted, unless the <code>Encrypted</code> flag is specified during the
            snapshot copy operation. By default, encrypted snapshot copies use the default AWS
            Key Management Service (AWS KMS) customer master key (CMK); however, you can specify
            a non-default CMK with the <code>KmsKeyId</code> parameter. 
            </para>
             <note> 
            <para>
            To copy an encrypted snapshot that has been shared from another account, you must
            have permissions for the CMK used to encrypt the snapshot.
            </para>
             </note> <note> 
            <para>
            Snapshots created by the CopySnapshot action have an arbitrary volume ID that should
            not be used for any purpose.
            </para>
             </note> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html">Copying
            an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopySnapshot service method.</param>
            
            <returns>The response from the CopySnapshot service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CopySnapshotAsync(Amazon.EC2.Model.CopySnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopySnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopySnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateCustomerGateway(Amazon.EC2.Model.CreateCustomerGatewayRequest)">
            <summary>
            Provides information to AWS about your VPN customer gateway device. The customer gateway
            is the appliance at your end of the VPN connection. (The device on the AWS side of
            the VPN connection is the virtual private gateway.) You must provide the Internet-routable
            IP address of the customer gateway's external interface. The IP address must be static
            and may be behind a device performing network address translation (NAT).
            
             
            <para>
            For devices that use Border Gateway Protocol (BGP), you can also provide the device's
            BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network.
            If you don't have an ASN already, you can use a private ASN (in the 64512 - 65534
            range).
            </para>
             <note> 
            <para>
            Amazon EC2 supports all 2-byte ASN numbers in the range of 1 - 65534, with the exception
            of 7224, which is reserved in the <code>us-east-1</code> region, and 9059, which is
            reserved in the <code>eu-west-1</code> region.
            </para>
             </note> 
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
             <important> 
            <para>
            You cannot create more than one customer gateway with the same VPN type, IP address,
            and BGP ASN parameter values. If you run an identical request more than one time,
            the first request creates the customer gateway, and subsequent requests return information
            about the existing customer gateway. The subsequent requests do not create new customer
            gateway resources.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCustomerGateway service method.</param>
            
            <returns>The response from the CreateCustomerGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateCustomerGatewayAsync(Amazon.EC2.Model.CreateCustomerGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateCustomerGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateCustomerGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateDhcpOptions(Amazon.EC2.Model.CreateDhcpOptionsRequest)">
            <summary>
            Creates a set of DHCP options for your VPC. After creating the set, you must associate
            it with the VPC, causing all existing and new instances that you launch in the VPC
            to use this set of DHCP options. The following are the individual DHCP options you
            can specify. For more information about the options, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC
            2132</a>.
            
             <ul> <li> 
            <para>
             <code>domain-name-servers</code> - The IP addresses of up to four domain name servers,
            or AmazonProvidedDNS. The default DHCP option set specifies AmazonProvidedDNS. If
            specifying more than one domain name server, specify the IP addresses in a single
            parameter, separated by commas. If you want your instance to receive a custom DNS
            hostname as specified in <code>domain-name</code>, you must set <code>domain-name-servers</code>
            to a custom DNS server.
            </para>
             </li> <li> 
            <para>
             <code>domain-name</code> - If you're using AmazonProvidedDNS in "us-east-1", specify
            "ec2.internal". If you're using AmazonProvidedDNS in another region, specify "region.compute.internal"
            (for example, "ap-northeast-1.compute.internal"). Otherwise, specify a domain name
            (for example, "MyCompany.com"). This value is used to complete unqualified DNS hostnames.
            <b>Important</b>: Some Linux operating systems accept multiple domain names separated
            by spaces. However, Windows and other Linux operating systems treat the value as a
            single domain, which results in unexpected behavior. If your DHCP options set is associated
            with a VPC that has instances with multiple operating systems, specify only one domain
            name.
            </para>
             </li> <li> 
            <para>
             <code>ntp-servers</code> - The IP addresses of up to four Network Time Protocol (NTP)
            servers.
            </para>
             </li> <li> 
            <para>
             <code>netbios-name-servers</code> - The IP addresses of up to four NetBIOS name servers.
            </para>
             </li> <li> 
            <para>
             <code>netbios-node-type</code> - The NetBIOS node type (1, 2, 4, or 8). We recommend
            that you specify 2 (broadcast and multicast are not currently supported). For more
            information about these node types, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC
            2132</a>.
            </para>
             </li> </ul> 
            <para>
            Your VPC automatically starts out with a set of DHCP options that includes only a
            DNS server that we provide (AmazonProvidedDNS). If you create a set of options, and
            if your VPC has an Internet gateway, make sure to set the <code>domain-name-servers</code>
            option either to <code>AmazonProvidedDNS</code> or to a domain name server of your
            choice. For more information about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDhcpOptions service method.</param>
            
            <returns>The response from the CreateDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateDhcpOptionsAsync(Amazon.EC2.Model.CreateDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateDhcpOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateFlowLogs(Amazon.EC2.Model.CreateFlowLogsRequest)">
            <summary>
            Creates one or more flow logs to capture IP traffic for a specific network interface,
            subnet, or VPC. Flow logs are delivered to a specified log group in Amazon CloudWatch
            Logs. If you specify a VPC or subnet in the request, a log stream is created in CloudWatch
            Logs for each network interface in the subnet or VPC. Log streams can include information
            about accepted and rejected traffic to a network interface. You can view the data
            in your log streams using Amazon CloudWatch Logs.
            
             
            <para>
            In your request, you must also specify an IAM role that has permission to publish
            logs to CloudWatch Logs.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateFlowLogs service method.</param>
            
            <returns>The response from the CreateFlowLogs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateFlowLogsAsync(Amazon.EC2.Model.CreateFlowLogsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateFlowLogs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateFlowLogs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateImage(Amazon.EC2.Model.CreateImageRequest)">
            <summary>
            Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either
            running or stopped.
            
             
            <para>
            If you customized your instance with instance store volumes or EBS volumes in addition
            to the root device volume, the new AMI contains block device mapping information for
            those volumes. When you launch an instance from this new AMI, the instance automatically
            launches with those additional volumes.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html">Creating
            Amazon EBS-Backed Linux AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateImage service method.</param>
            
            <returns>The response from the CreateImage service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateImageAsync(Amazon.EC2.Model.CreateImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateInstanceExportTask(Amazon.EC2.Model.CreateInstanceExportTaskRequest)">
            <summary>
            Exports a running or stopped instance to an S3 bucket.
            
             
            <para>
            For information about the supported operating systems, image formats, and known limitations
            for the types of instances you can export, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmexport.html">Exporting
            an Instance as a VM Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateInstanceExportTask service method.</param>
            
            <returns>The response from the CreateInstanceExportTask service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateInstanceExportTaskAsync(Amazon.EC2.Model.CreateInstanceExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateInstanceExportTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInstanceExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateInternetGateway">
            <summary>
            Creates an Internet gateway for use with a VPC. After creating the Internet gateway,
            you attach it to a VPC using <a>AttachInternetGateway</a>.
            
             
            <para>
            For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon
            Virtual Private Cloud User Guide</a>.
            </para>
            </summary>
            
            <returns>The response from the CreateInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateInternetGateway(Amazon.EC2.Model.CreateInternetGatewayRequest)">
            <summary>
            Creates an Internet gateway for use with a VPC. After creating the Internet gateway,
            you attach it to a VPC using <a>AttachInternetGateway</a>.
            
             
            <para>
            For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon
            Virtual Private Cloud User Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateInternetGateway service method.</param>
            
            <returns>The response from the CreateInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateInternetGatewayAsync(System.Threading.CancellationToken)">
            <summary>
            Creates an Internet gateway for use with a VPC. After creating the Internet gateway,
            you attach it to a VPC using <a>AttachInternetGateway</a>.
            
             
            <para>
            For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon
            Virtual Private Cloud User Guide</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateInternetGatewayAsync(Amazon.EC2.Model.CreateInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateInternetGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateKeyPair(Amazon.EC2.Model.CreateKeyPairRequest)">
            <summary>
            Creates a 2048-bit RSA key pair with the specified name. Amazon EC2 stores the public
            key and displays the private key for you to save to a file. The private key is returned
            as an unencrypted PEM encoded PKCS#8 private key. If a key with the specified name
            already exists, Amazon EC2 returns an error.
            
             
            <para>
            You can have up to five thousand key pairs per region.
            </para>
             
            <para>
            The key pair returned to you is available only in the region in which you create it.
            To create a key pair that is available in all regions, use <a>ImportKeyPair</a>.
            </para>
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateKeyPair service method.</param>
            
            <returns>The response from the CreateKeyPair service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateKeyPairAsync(Amazon.EC2.Model.CreateKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateKeyPair operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateNatGateway(Amazon.EC2.Model.CreateNatGatewayRequest)">
            <summary>
            Creates a NAT gateway in the specified subnet. A NAT gateway can be used to enable
            instances in a private subnet to connect to the Internet. This action creates a network
            interface in the specified subnet with a private IP address from the IP address range
            of the subnet. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">NAT
            Gateways</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNatGateway service method.</param>
            
            <returns>The response from the CreateNatGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateNatGatewayAsync(Amazon.EC2.Model.CreateNatGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNatGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNatGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateNetworkAcl(Amazon.EC2.Model.CreateNetworkAclRequest)">
            <summary>
            Creates a network ACL in a VPC. Network ACLs provide an optional layer of security
            (in addition to security groups) for the instances in your VPC.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAcl service method.</param>
            
            <returns>The response from the CreateNetworkAcl service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateNetworkAclAsync(Amazon.EC2.Model.CreateNetworkAclRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkAcl operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAcl operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateNetworkAclEntry(Amazon.EC2.Model.CreateNetworkAclEntryRequest)">
            <summary>
            Creates an entry (a rule) in a network ACL with the specified rule number. Each network
            ACL has a set of numbered ingress rules and a separate set of numbered egress rules.
            When determining whether a packet should be allowed in or out of a subnet associated
            with the ACL, we process the entries in the ACL according to the rule numbers, in
            ascending order. Each network ACL has a set of ingress rules and a separate set of
            egress rules.
            
             
            <para>
            We recommend that you leave room between the rule numbers (for example, 100, 110,
            120, ...), and not number them one right after the other (for example, 101, 102, 103,
            ...). This makes it easier to add a rule between existing ones without having to renumber
            the rules.
            </para>
             
            <para>
            After you add an entry, you can't modify it; you must either replace it, or create
            an entry and delete the old one.
            </para>
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAclEntry service method.</param>
            
            <returns>The response from the CreateNetworkAclEntry service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateNetworkAclEntryAsync(Amazon.EC2.Model.CreateNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkAclEntry operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateNetworkInterface(Amazon.EC2.Model.CreateNetworkInterfaceRequest)">
            <summary>
            Creates a network interface in the specified subnet.
            
             
            <para>
            For more information about network interfaces, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic
            Network Interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNetworkInterface service method.</param>
            
            <returns>The response from the CreateNetworkInterface service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateNetworkInterfaceAsync(Amazon.EC2.Model.CreateNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkInterface operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreatePlacementGroup(Amazon.EC2.Model.CreatePlacementGroupRequest)">
            <summary>
            Creates a placement group that you launch cluster instances into. You must give the
            group a name that's unique within the scope of your account.
            
             
            <para>
            For more information about placement groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePlacementGroup service method.</param>
            
            <returns>The response from the CreatePlacementGroup service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreatePlacementGroupAsync(Amazon.EC2.Model.CreatePlacementGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreatePlacementGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePlacementGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateReservedInstancesListing(Amazon.EC2.Model.CreateReservedInstancesListingRequest)">
            <summary>
            Creates a listing for Amazon EC2 Standard Reserved Instances to be sold in the Reserved
            Instance Marketplace. You can submit one Standard Reserved Instance listing at a time.
            To get a list of your Standard Reserved Instances, you can use the <a>DescribeReservedInstances</a>
            operation.
            
             
            <para>
            The Reserved Instance Marketplace matches sellers who want to resell Standard Reserved
            Instance capacity that they no longer need with buyers who want to purchase additional
            capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace
            work like any other Reserved Instances.
            </para>
             
            <para>
            To sell your Standard Reserved Instances, you must first register as a seller in the
            Reserved Instance Marketplace. After completing the registration process, you can
            create a Reserved Instance Marketplace listing of some or all of your Standard Reserved
            Instances, and specify the upfront price to receive for them. Your Standard Reserved
            Instance listings then become available for purchase. To view the details of your
            Standard Reserved Instance listing, you can use the <a>DescribeReservedInstancesListings</a>
            operation.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateReservedInstancesListing service method.</param>
            
            <returns>The response from the CreateReservedInstancesListing service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateReservedInstancesListingAsync(Amazon.EC2.Model.CreateReservedInstancesListingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateReservedInstancesListing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateReservedInstancesListing operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateRoute(Amazon.EC2.Model.CreateRouteRequest)">
            <summary>
            Creates a route in a route table within a VPC.
            
             
            <para>
            You must specify one of the following targets: Internet gateway or virtual private
            gateway, NAT instance, NAT gateway, VPC peering connection, or network interface.
            </para>
             
            <para>
            When determining how to route traffic, we use the route with the most specific match.
            For example, let's say the traffic is destined for <code>192.0.2.3</code>, and the
            route table includes the following two routes:
            </para>
             <ul> <li> 
            <para>
             <code>192.0.2.0/24</code> (goes to some target A)
            </para>
             </li> <li> 
            <para>
             <code>192.0.2.0/28</code> (goes to some target B)
            </para>
             </li> </ul> 
            <para>
            Both routes apply to the traffic destined for <code>192.0.2.3</code>. However, the
            second route in the list covers a smaller number of IP addresses and is therefore
            more specific, so we use that route to determine where to target the traffic.
            </para>
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRoute service method.</param>
            
            <returns>The response from the CreateRoute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateRouteAsync(Amazon.EC2.Model.CreateRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateRoute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateRouteTable(Amazon.EC2.Model.CreateRouteTableRequest)">
            <summary>
            Creates a route table for the specified VPC. After you create a route table, you can
            add routes and associate the table with a subnet.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRouteTable service method.</param>
            
            <returns>The response from the CreateRouteTable service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateRouteTableAsync(Amazon.EC2.Model.CreateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateRouteTable operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSecurityGroup(Amazon.EC2.Model.CreateSecurityGroupRequest)">
            <summary>
            Creates a security group.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             <important> 
            <para>
            EC2-Classic: You can have up to 500 security groups.
            </para>
             
            <para>
            EC2-VPC: You can create up to 500 security groups per VPC.
            </para>
             </important> 
            <para>
            When you create a security group, you specify a friendly name of your choice. You
            can have a security group for use in EC2-Classic with the same name as a security
            group for use in a VPC. However, you can't have two security groups for use in EC2-Classic
            with the same name or two security groups for use in a VPC with the same name.
            </para>
             
            <para>
            You have a default security group for use in EC2-Classic and a default security group
            for use in your VPC. If you don't specify a security group when you launch an instance,
            the instance is launched into the appropriate default security group. A default security
            group includes a default rule that grants instances unrestricted network access to
            each other.
            </para>
             
            <para>
            You can add or remove rules from your security groups using <a>AuthorizeSecurityGroupIngress</a>,
            <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupIngress</a>, and <a>RevokeSecurityGroupEgress</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSecurityGroup service method.</param>
            
            <returns>The response from the CreateSecurityGroup service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSecurityGroupAsync(Amazon.EC2.Model.CreateSecurityGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSecurityGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSecurityGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSnapshot(Amazon.EC2.Model.CreateSnapshotRequest)">
            <summary>
            Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots
            for backups, to make copies of EBS volumes, and to save data before shutting down
            an instance.
            
             
            <para>
            When a snapshot is created, any AWS Marketplace product codes that are associated
            with the source volume are propagated to the snapshot.
            </para>
             
            <para>
            You can take a snapshot of an attached volume that is in use. However, snapshots only
            capture data that has been written to your EBS volume at the time the snapshot command
            is issued; this may exclude any data that has been cached by any applications or the
            operating system. If you can pause any file systems on the volume long enough to take
            a snapshot, your snapshot should be complete. However, if you cannot pause all file
            writes to the volume, you should unmount the volume from within the instance, issue
            the snapshot command, and then remount the volume to ensure a consistent and complete
            snapshot. You may remount and use your volume while the snapshot status is <code>pending</code>.
            </para>
             
            <para>
            To create a snapshot for EBS volumes that serve as root devices, you should stop the
            instance before taking the snapshot.
            </para>
             
            <para>
            Snapshots that are taken from encrypted volumes are automatically encrypted. Volumes
            that are created from encrypted snapshots are also automatically encrypted. Your encrypted
            volumes and any associated snapshots always remain protected.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html">Amazon
            Elastic Block Store</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot service method.</param>
            
            <returns>The response from the CreateSnapshot service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSnapshotAsync(Amazon.EC2.Model.CreateSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSpotDatafeedSubscription(Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest)">
            <summary>
            Creates a data feed for Spot instances, enabling you to view Spot instance usage logs.
            You can create one data feed per AWS account. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSpotDatafeedSubscription service method.</param>
            
            <returns>The response from the CreateSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSpotDatafeedSubscription operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSubnet(Amazon.EC2.Model.CreateSubnetRequest)">
            <summary>
            Creates a subnet in an existing VPC.
            
             
            <para>
            When you create each subnet, you provide the VPC ID and the CIDR block you want for
            the subnet. After you create a subnet, you can't change its CIDR block. The subnet's
            CIDR block can be the same as the VPC's CIDR block (assuming you want only a single
            subnet in the VPC), or a subset of the VPC's CIDR block. If you create more than one
            subnet in a VPC, the subnets' CIDR blocks must not overlap. The smallest subnet (and
            VPC) you can create uses a /28 netmask (16 IP addresses), and the largest uses a /16
            netmask (65,536 IP addresses).
            </para>
             <important> 
            <para>
            AWS reserves both the first four and the last IP address in each subnet's CIDR block.
            They're not available for use.
            </para>
             </important> 
            <para>
            If you add more than one subnet to a VPC, they're set up in a star topology with a
            logical router in the middle.
            </para>
             
            <para>
            If you launch an instance in a VPC using an Amazon EBS-backed AMI, the IP address
            doesn't change if you stop and restart the instance (unlike a similar instance launched
            outside a VPC, which gets a new IP address when restarted). It's therefore possible
            to have a subnet with no running instances (they're all stopped), but no remaining
            IP addresses available.
            </para>
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSubnet service method.</param>
            
            <returns>The response from the CreateSubnet service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSubnetAsync(Amazon.EC2.Model.CreateSubnetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSubnet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSubnet operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateTags(Amazon.EC2.Model.CreateTagsRequest)">
            <summary>
            Adds or overwrites one or more tags for the specified Amazon EC2 resource or resources.
            Each resource can have a maximum of 50 tags. Each tag consists of a key and optional
            value. Tag keys must be unique per resource.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more
            information about creating IAM policies that control users' access to resources based
            on tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-iam-actions-resources.html">Supported
            Resource-Level Permissions for Amazon EC2 API Actions</a> in the <i>Amazon Elastic
            Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTags service method.</param>
            
            <returns>The response from the CreateTags service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateTagsAsync(Amazon.EC2.Model.CreateTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVolume(Amazon.EC2.Model.CreateVolumeRequest)">
            <summary>
            Creates an EBS volume that can be attached to an instance in the same Availability
            Zone. The volume is created in the regional endpoint that you send the HTTP request
            to. For more information see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html">Regions
            and Endpoints</a>.
            
             
            <para>
            You can create a new empty volume or restore a volume from an EBS snapshot. Any AWS
            Marketplace product codes from the snapshot are propagated to the volume.
            </para>
             
            <para>
            You can create encrypted volumes with the <code>Encrypted</code> parameter. Encrypted
            volumes may only be attached to instances that support Amazon EBS encryption. Volumes
            that are created from encrypted snapshots are also automatically encrypted. For more
            information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html">Creating
            or Restoring an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVolume service method.</param>
            
            <returns>The response from the CreateVolume service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVolumeAsync(Amazon.EC2.Model.CreateVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVolume operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpc(Amazon.EC2.Model.CreateVpcRequest)">
            <summary>
            Creates a VPC with the specified CIDR block.
            
             
            <para>
            The smallest VPC you can create uses a /28 netmask (16 IP addresses), and the largest
            uses a /16 netmask (65,536 IP addresses). To help you decide how big to make your
            VPC, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             
            <para>
            By default, each instance you launch in the VPC has the default DHCP options, which
            includes only a default DNS server that we provide (AmazonProvidedDNS). For more information
            about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             
            <para>
            You can specify the instance tenancy value for the VPC when you create it. You can't
            change this value for the VPC after you create it. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/dedicated-instance.html.html">Dedicated
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpc service method.</param>
            
            <returns>The response from the CreateVpc service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpcAsync(Amazon.EC2.Model.CreateVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpc operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpcEndpoint(Amazon.EC2.Model.CreateVpcEndpointRequest)">
            <summary>
            Creates a VPC endpoint for a specified AWS service. An endpoint enables you to create
            a private connection between your VPC and another AWS service in your account. You
            can specify an endpoint policy to attach to the endpoint that will control access
            to the service from your VPC. You can also specify the VPC route tables that use the
            endpoint.
            
             
            <para>
            Currently, only endpoints to Amazon S3 are supported.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpcEndpoint service method.</param>
            
            <returns>The response from the CreateVpcEndpoint service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpcEndpointAsync(Amazon.EC2.Model.CreateVpcEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpcEndpoint operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpcEndpoint operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpcPeeringConnection(Amazon.EC2.Model.CreateVpcPeeringConnectionRequest)">
            <summary>
            Requests a VPC peering connection between two VPCs: a requester VPC that you own and
            a peer VPC with which to create the connection. The peer VPC can belong to another
            AWS account. The requester VPC and peer VPC cannot have overlapping CIDR blocks.
            
             
            <para>
            The owner of the peer VPC must accept the peering request to activate the peering
            connection. The VPC peering connection request expires after 7 days, after which it
            cannot be accepted or rejected.
            </para>
             
            <para>
            A <code>CreateVpcPeeringConnection</code> request between VPCs with overlapping CIDR
            blocks results in the VPC peering connection having a status of <code>failed</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpcPeeringConnection service method.</param>
            
            <returns>The response from the CreateVpcPeeringConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpcPeeringConnectionAsync(Amazon.EC2.Model.CreateVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpcPeeringConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpnConnection(Amazon.EC2.Model.CreateVpnConnectionRequest)">
            <summary>
            Creates a VPN connection between an existing virtual private gateway and a VPN customer
            gateway. The only supported connection type is <code>ipsec.1</code>.
            
             
            <para>
            The response includes information that you need to give to your network administrator
            to configure your customer gateway.
            </para>
             <important> 
            <para>
            We strongly recommend that you use HTTPS when calling this operation because the response
            contains sensitive cryptographic information for configuring your customer gateway.
            </para>
             </important> 
            <para>
            If you decide to shut down your VPN connection for any reason and later create a new
            VPN connection, you must reconfigure your customer gateway with the new information
            returned from this call.
            </para>
             
            <para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error.
            </para>
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnection service method.</param>
            
            <returns>The response from the CreateVpnConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpnConnectionAsync(Amazon.EC2.Model.CreateVpnConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpnConnectionRoute(Amazon.EC2.Model.CreateVpnConnectionRouteRequest)">
            <summary>
            Creates a static route associated with a VPN connection between an existing virtual
            private gateway and a VPN customer gateway. The static route allows traffic to be
            routed from the virtual private gateway to the VPN customer gateway.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnectionRoute service method.</param>
            
            <returns>The response from the CreateVpnConnectionRoute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpnConnectionRouteAsync(Amazon.EC2.Model.CreateVpnConnectionRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnConnectionRoute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnectionRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpnGateway(Amazon.EC2.Model.CreateVpnGatewayRequest)">
            <summary>
            Creates a virtual private gateway. A virtual private gateway is the endpoint on the
            VPC side of your VPN connection. You can create a virtual private gateway before creating
            the VPC itself.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpnGateway service method.</param>
            
            <returns>The response from the CreateVpnGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpnGatewayAsync(Amazon.EC2.Model.CreateVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteCustomerGateway(Amazon.EC2.Model.DeleteCustomerGatewayRequest)">
            <summary>
            Deletes the specified customer gateway. You must delete the VPN connection before
            you can delete the customer gateway.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCustomerGateway service method.</param>
            
            <returns>The response from the DeleteCustomerGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteCustomerGatewayAsync(Amazon.EC2.Model.DeleteCustomerGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCustomerGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCustomerGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteDhcpOptions(Amazon.EC2.Model.DeleteDhcpOptionsRequest)">
            <summary>
            Deletes the specified set of DHCP options. You must disassociate the set of DHCP options
            before you can delete it. You can disassociate the set of DHCP options by associating
            either a new set of options or the default set of options with the VPC.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDhcpOptions service method.</param>
            
            <returns>The response from the DeleteDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteDhcpOptionsAsync(Amazon.EC2.Model.DeleteDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDhcpOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteFlowLogs(Amazon.EC2.Model.DeleteFlowLogsRequest)">
            <summary>
            Deletes one or more flow logs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFlowLogs service method.</param>
            
            <returns>The response from the DeleteFlowLogs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteFlowLogsAsync(Amazon.EC2.Model.DeleteFlowLogsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteFlowLogs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteFlowLogs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteInternetGateway(Amazon.EC2.Model.DeleteInternetGatewayRequest)">
            <summary>
            Deletes the specified Internet gateway. You must detach the Internet gateway from
            the VPC before you can delete it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteInternetGateway service method.</param>
            
            <returns>The response from the DeleteInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteInternetGatewayAsync(Amazon.EC2.Model.DeleteInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteInternetGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteKeyPair(Amazon.EC2.Model.DeleteKeyPairRequest)">
            <summary>
            Deletes the specified key pair, by removing the public key from Amazon EC2.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteKeyPair service method.</param>
            
            <returns>The response from the DeleteKeyPair service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteKeyPairAsync(Amazon.EC2.Model.DeleteKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteKeyPair operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteNatGateway(Amazon.EC2.Model.DeleteNatGatewayRequest)">
            <summary>
            Deletes the specified NAT gateway. Deleting a NAT gateway disassociates its Elastic
            IP address, but does not release the address from your account. Deleting a NAT gateway
            does not delete any NAT gateway routes in your route tables.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNatGateway service method.</param>
            
            <returns>The response from the DeleteNatGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteNatGatewayAsync(Amazon.EC2.Model.DeleteNatGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNatGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNatGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteNetworkAcl(Amazon.EC2.Model.DeleteNetworkAclRequest)">
            <summary>
            Deletes the specified network ACL. You can't delete the ACL if it's associated with
            any subnets. You can't delete the default network ACL.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAcl service method.</param>
            
            <returns>The response from the DeleteNetworkAcl service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteNetworkAclAsync(Amazon.EC2.Model.DeleteNetworkAclRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkAcl operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAcl operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteNetworkAclEntry(Amazon.EC2.Model.DeleteNetworkAclEntryRequest)">
            <summary>
            Deletes the specified ingress or egress entry (rule) from the specified network ACL.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAclEntry service method.</param>
            
            <returns>The response from the DeleteNetworkAclEntry service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteNetworkAclEntryAsync(Amazon.EC2.Model.DeleteNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkAclEntry operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteNetworkInterface(Amazon.EC2.Model.DeleteNetworkInterfaceRequest)">
            <summary>
            Deletes the specified network interface. You must detach the network interface before
            you can delete it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkInterface service method.</param>
            
            <returns>The response from the DeleteNetworkInterface service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteNetworkInterfaceAsync(Amazon.EC2.Model.DeleteNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkInterface operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeletePlacementGroup(Amazon.EC2.Model.DeletePlacementGroupRequest)">
            <summary>
            Deletes the specified placement group. You must terminate all instances in the placement
            group before you can delete the placement group. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePlacementGroup service method.</param>
            
            <returns>The response from the DeletePlacementGroup service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeletePlacementGroupAsync(Amazon.EC2.Model.DeletePlacementGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeletePlacementGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePlacementGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteRoute(Amazon.EC2.Model.DeleteRouteRequest)">
            <summary>
            Deletes the specified route from the specified route table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRoute service method.</param>
            
            <returns>The response from the DeleteRoute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteRouteAsync(Amazon.EC2.Model.DeleteRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRoute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteRouteTable(Amazon.EC2.Model.DeleteRouteTableRequest)">
            <summary>
            Deletes the specified route table. You must disassociate the route table from any
            subnets before you can delete it. You can't delete the main route table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRouteTable service method.</param>
            
            <returns>The response from the DeleteRouteTable service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteRouteTableAsync(Amazon.EC2.Model.DeleteRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRouteTable operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSecurityGroup(Amazon.EC2.Model.DeleteSecurityGroupRequest)">
            <summary>
            Deletes a security group.
            
             
            <para>
            If you attempt to delete a security group that is associated with an instance, or
            is referenced by another security group, the operation fails with <code>InvalidGroup.InUse</code>
            in EC2-Classic or <code>DependencyViolation</code> in EC2-VPC.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSecurityGroup service method.</param>
            
            <returns>The response from the DeleteSecurityGroup service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSecurityGroupAsync(Amazon.EC2.Model.DeleteSecurityGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSecurityGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSecurityGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSnapshot(Amazon.EC2.Model.DeleteSnapshotRequest)">
            <summary>
            Deletes the specified snapshot.
            
             
            <para>
            When you make periodic snapshots of a volume, the snapshots are incremental, and only
            the blocks on the device that have changed since your last snapshot are saved in the
            new snapshot. When you delete a snapshot, only the data not needed for any other snapshot
            is removed. So regardless of which prior snapshots have been deleted, all active snapshots
            will have access to all the information needed to restore the volume.
            </para>
             
            <para>
            You cannot delete a snapshot of the root device of an EBS volume used by a registered
            AMI. You must first de-register the AMI before you can delete the snapshot.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html">Deleting
            an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot service method.</param>
            
            <returns>The response from the DeleteSnapshot service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSnapshotAsync(Amazon.EC2.Model.DeleteSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSpotDatafeedSubscription">
            <summary>
            Deletes the data feed for Spot instances.
            </summary>
            
            <returns>The response from the DeleteSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSpotDatafeedSubscription(Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionRequest)">
            <summary>
            Deletes the data feed for Spot instances.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSpotDatafeedSubscription service method.</param>
            
            <returns>The response from the DeleteSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSpotDatafeedSubscriptionAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes the data feed for Spot instances.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSpotDatafeedSubscription operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSubnet(Amazon.EC2.Model.DeleteSubnetRequest)">
            <summary>
            Deletes the specified subnet. You must terminate all running instances in the subnet
            before you can delete the subnet.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubnet service method.</param>
            
            <returns>The response from the DeleteSubnet service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSubnetAsync(Amazon.EC2.Model.DeleteSubnetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSubnet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSubnet operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteTags(Amazon.EC2.Model.DeleteTagsRequest)">
            <summary>
            Deletes the specified set of tags from the specified set of resources. This call is
            designed to follow a <code>DescribeTags</code> request.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTags service method.</param>
            
            <returns>The response from the DeleteTags service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteTagsAsync(Amazon.EC2.Model.DeleteTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVolume(Amazon.EC2.Model.DeleteVolumeRequest)">
            <summary>
            Deletes the specified EBS volume. The volume must be in the <code>available</code>
            state (not attached to an instance).
            
             <note> 
            <para>
            The volume may remain in the <code>deleting</code> state for several minutes.
            </para>
             </note> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html">Deleting
            an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVolume service method.</param>
            
            <returns>The response from the DeleteVolume service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVolumeAsync(Amazon.EC2.Model.DeleteVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVolume operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpc(Amazon.EC2.Model.DeleteVpcRequest)">
            <summary>
            Deletes the specified VPC. You must detach or delete all gateways and resources that
            are associated with the VPC before you can delete it. For example, you must terminate
            all instances running in the VPC, delete all security groups associated with the VPC
            (except the default one), delete all route tables associated with the VPC (except
            the default one), and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpc service method.</param>
            
            <returns>The response from the DeleteVpc service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpcAsync(Amazon.EC2.Model.DeleteVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpc operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpcEndpoints(Amazon.EC2.Model.DeleteVpcEndpointsRequest)">
            <summary>
            Deletes one or more specified VPC endpoints. Deleting the endpoint also deletes the
            endpoint routes in the route tables that were associated with the endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpcEndpoints service method.</param>
            
            <returns>The response from the DeleteVpcEndpoints service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpcEndpointsAsync(Amazon.EC2.Model.DeleteVpcEndpointsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpcEndpoints operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpcEndpoints operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpcPeeringConnection(Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest)">
            <summary>
            Deletes a VPC peering connection. Either the owner of the requester VPC or the owner
            of the peer VPC can delete the VPC peering connection if it's in the <code>active</code>
            state. The owner of the requester VPC can delete a VPC peering connection in the <code>pending-acceptance</code>
            state.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpcPeeringConnection service method.</param>
            
            <returns>The response from the DeleteVpcPeeringConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpcPeeringConnectionAsync(Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpcPeeringConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpnConnection(Amazon.EC2.Model.DeleteVpnConnectionRequest)">
            <summary>
            Deletes the specified VPN connection.
            
             
            <para>
            If you're deleting the VPC and its associated components, we recommend that you detach
            the virtual private gateway from the VPC and delete the VPC before deleting the VPN
            connection. If you believe that the tunnel credentials for your VPN connection have
            been compromised, you can delete the VPN connection and create a new one that has
            new keys, without needing to delete the VPC or virtual private gateway. If you create
            a new VPN connection, you must reconfigure the customer gateway using the new configuration
            information returned with the new VPN connection ID.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnection service method.</param>
            
            <returns>The response from the DeleteVpnConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpnConnectionAsync(Amazon.EC2.Model.DeleteVpnConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpnConnectionRoute(Amazon.EC2.Model.DeleteVpnConnectionRouteRequest)">
            <summary>
            Deletes the specified static route associated with a VPN connection between an existing
            virtual private gateway and a VPN customer gateway. The static route allows traffic
            to be routed from the virtual private gateway to the VPN customer gateway.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnectionRoute service method.</param>
            
            <returns>The response from the DeleteVpnConnectionRoute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpnConnectionRouteAsync(Amazon.EC2.Model.DeleteVpnConnectionRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnConnectionRoute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnectionRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpnGateway(Amazon.EC2.Model.DeleteVpnGatewayRequest)">
            <summary>
            Deletes the specified virtual private gateway. We recommend that before you delete
            a virtual private gateway, you detach it from the VPC and delete the VPN connection.
            Note that you don't need to delete the virtual private gateway if you plan to delete
            and recreate the VPN connection between your VPC and your network.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpnGateway service method.</param>
            
            <returns>The response from the DeleteVpnGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpnGatewayAsync(Amazon.EC2.Model.DeleteVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeregisterImage(Amazon.EC2.Model.DeregisterImageRequest)">
            <summary>
            Deregisters the specified AMI. After you deregister an AMI, it can't be used to launch
            new instances.
            
             
            <para>
            This command does not delete the AMI.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterImage service method.</param>
            
            <returns>The response from the DeregisterImage service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeregisterImageAsync(Amazon.EC2.Model.DeregisterImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeregisterImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAccountAttributes">
            <summary>
            Describes attributes of your AWS account. The following are the supported account
            attributes:
            
             <ul> <li> 
            <para>
             <code>supported-platforms</code>: Indicates whether your account can launch instances
            into EC2-Classic and EC2-VPC, or only into EC2-VPC.
            </para>
             </li> <li> 
            <para>
             <code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.
            </para>
             </li> <li> 
            <para>
             <code>max-instances</code>: The maximum number of On-Demand instances that you can
            run.
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-security-groups-per-interface</code>: The maximum number of security
            groups that you can assign to a network interface.
            </para>
             </li> <li> 
            <para>
             <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you
            can allocate for use with EC2-Classic. 
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that
            you can allocate for use with EC2-VPC.
            </para>
             </li> </ul>
            </summary>
            
            <returns>The response from the DescribeAccountAttributes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAccountAttributes(Amazon.EC2.Model.DescribeAccountAttributesRequest)">
            <summary>
            Describes attributes of your AWS account. The following are the supported account
            attributes:
            
             <ul> <li> 
            <para>
             <code>supported-platforms</code>: Indicates whether your account can launch instances
            into EC2-Classic and EC2-VPC, or only into EC2-VPC.
            </para>
             </li> <li> 
            <para>
             <code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.
            </para>
             </li> <li> 
            <para>
             <code>max-instances</code>: The maximum number of On-Demand instances that you can
            run.
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-security-groups-per-interface</code>: The maximum number of security
            groups that you can assign to a network interface.
            </para>
             </li> <li> 
            <para>
             <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you
            can allocate for use with EC2-Classic. 
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that
            you can allocate for use with EC2-VPC.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAccountAttributes service method.</param>
            
            <returns>The response from the DescribeAccountAttributes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAccountAttributesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes attributes of your AWS account. The following are the supported account
            attributes:
            
             <ul> <li> 
            <para>
             <code>supported-platforms</code>: Indicates whether your account can launch instances
            into EC2-Classic and EC2-VPC, or only into EC2-VPC.
            </para>
             </li> <li> 
            <para>
             <code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.
            </para>
             </li> <li> 
            <para>
             <code>max-instances</code>: The maximum number of On-Demand instances that you can
            run.
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-security-groups-per-interface</code>: The maximum number of security
            groups that you can assign to a network interface.
            </para>
             </li> <li> 
            <para>
             <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you
            can allocate for use with EC2-Classic. 
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that
            you can allocate for use with EC2-VPC.
            </para>
             </li> </ul>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAccountAttributes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAccountAttributesAsync(Amazon.EC2.Model.DescribeAccountAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAccountAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAccountAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAddresses">
            <summary>
            Describes one or more of your Elastic IP addresses.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAddresses(Amazon.EC2.Model.DescribeAddressesRequest)">
            <summary>
            Describes one or more of your Elastic IP addresses.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAddresses service method.</param>
            
            <returns>The response from the DescribeAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAddressesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your Elastic IP addresses.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAddressesAsync(Amazon.EC2.Model.DescribeAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAddresses operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAvailabilityZones">
            <summary>
            Describes one or more of the Availability Zones that are available to you. The results
            include zones only for the region you're currently using. If there is an event impacting
            an Availability Zone, you can use this request to view the state and any provided
            message for that Availability Zone.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions
            and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeAvailabilityZones service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAvailabilityZones(Amazon.EC2.Model.DescribeAvailabilityZonesRequest)">
            <summary>
            Describes one or more of the Availability Zones that are available to you. The results
            include zones only for the region you're currently using. If there is an event impacting
            an Availability Zone, you can use this request to view the state and any provided
            message for that Availability Zone.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions
            and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAvailabilityZones service method.</param>
            
            <returns>The response from the DescribeAvailabilityZones service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAvailabilityZonesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of the Availability Zones that are available to you. The results
            include zones only for the region you're currently using. If there is an event impacting
            an Availability Zone, you can use this request to view the state and any provided
            message for that Availability Zone.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions
            and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAvailabilityZones service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAvailabilityZonesAsync(Amazon.EC2.Model.DescribeAvailabilityZonesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAvailabilityZones operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAvailabilityZones operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeBundleTasks">
            <summary>
            Describes one or more of your bundling tasks.
            
             <note> 
            <para>
            Completed bundle tasks are listed for only a limited time. If your bundle task is
            no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code>
            with the Amazon S3 bucket name and image manifest name you provided to the bundle
            task.
            </para>
             </note>
            </summary>
            
            <returns>The response from the DescribeBundleTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeBundleTasks(Amazon.EC2.Model.DescribeBundleTasksRequest)">
            <summary>
            Describes one or more of your bundling tasks.
            
             <note> 
            <para>
            Completed bundle tasks are listed for only a limited time. If your bundle task is
            no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code>
            with the Amazon S3 bucket name and image manifest name you provided to the bundle
            task.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeBundleTasks service method.</param>
            
            <returns>The response from the DescribeBundleTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeBundleTasksAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your bundling tasks.
            
             <note> 
            <para>
            Completed bundle tasks are listed for only a limited time. If your bundle task is
            no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code>
            with the Amazon S3 bucket name and image manifest name you provided to the bundle
            task.
            </para>
             </note>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeBundleTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeBundleTasksAsync(Amazon.EC2.Model.DescribeBundleTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeBundleTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeBundleTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeClassicLinkInstances(Amazon.EC2.Model.DescribeClassicLinkInstancesRequest)">
            <summary>
            Describes one or more of your linked EC2-Classic instances. This request only returns
            information about EC2-Classic instances linked to a VPC through ClassicLink; you cannot
            use this request to return information about other instances.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClassicLinkInstances service method.</param>
            
            <returns>The response from the DescribeClassicLinkInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeClassicLinkInstancesAsync(Amazon.EC2.Model.DescribeClassicLinkInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeClassicLinkInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeClassicLinkInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeConversionTasks">
            <summary>
            Describes one or more of your conversion tasks. For more information, see the <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/">VM
            Import/Export User Guide</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
            
            <returns>The response from the DescribeConversionTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeConversionTasks(Amazon.EC2.Model.DescribeConversionTasksRequest)">
            <summary>
            Describes one or more of your conversion tasks. For more information, see the <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/">VM
            Import/Export User Guide</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConversionTasks service method.</param>
            
            <returns>The response from the DescribeConversionTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeConversionTasksAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your conversion tasks. For more information, see the <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/">VM
            Import/Export User Guide</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeConversionTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeConversionTasksAsync(Amazon.EC2.Model.DescribeConversionTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeConversionTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeConversionTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeCustomerGateways">
            <summary>
            Describes one or more of your VPN customer gateways.
            
             
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeCustomerGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeCustomerGateways(Amazon.EC2.Model.DescribeCustomerGatewaysRequest)">
            <summary>
            Describes one or more of your VPN customer gateways.
            
             
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCustomerGateways service method.</param>
            
            <returns>The response from the DescribeCustomerGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeCustomerGatewaysAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your VPN customer gateways.
            
             
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCustomerGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeCustomerGatewaysAsync(Amazon.EC2.Model.DescribeCustomerGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeCustomerGateways operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeCustomerGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeDhcpOptions">
            <summary>
            Describes one or more of your DHCP options sets.
            
             
            <para>
            For more information about DHCP options sets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeDhcpOptions(Amazon.EC2.Model.DescribeDhcpOptionsRequest)">
            <summary>
            Describes one or more of your DHCP options sets.
            
             
            <para>
            For more information about DHCP options sets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDhcpOptions service method.</param>
            
            <returns>The response from the DescribeDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeDhcpOptionsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your DHCP options sets.
            
             
            <para>
            For more information about DHCP options sets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeDhcpOptionsAsync(Amazon.EC2.Model.DescribeDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDhcpOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeExportTasks">
            <summary>
            Describes one or more of your export tasks.
            </summary>
            
            <returns>The response from the DescribeExportTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeExportTasks(Amazon.EC2.Model.DescribeExportTasksRequest)">
            <summary>
            Describes one or more of your export tasks.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks service method.</param>
            
            <returns>The response from the DescribeExportTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeExportTasksAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your export tasks.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeExportTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeExportTasksAsync(Amazon.EC2.Model.DescribeExportTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeExportTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeFlowLogs(Amazon.EC2.Model.DescribeFlowLogsRequest)">
            <summary>
            Describes one or more flow logs. To view the information in your flow logs (the log
            streams for the network interfaces), you must use the CloudWatch Logs console or the
            CloudWatch Logs API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeFlowLogs service method.</param>
            
            <returns>The response from the DescribeFlowLogs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeFlowLogsAsync(Amazon.EC2.Model.DescribeFlowLogsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeFlowLogs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeFlowLogs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeHostReservationOfferings(Amazon.EC2.Model.DescribeHostReservationOfferingsRequest)">
            <summary>
            Describes the Dedicated Host Reservations that are available to purchase.
            
             
            <para>
            The results describe all the Dedicated Host Reservation offerings, including offerings
            that may not match the instance family and region of your Dedicated Hosts. When purchasing
            an offering, ensure that the the instance family and region of the offering matches
            that of the Dedicated Host/s it will be associated with. For an overview of supported
            instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated
            Hosts Overview</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeHostReservationOfferings service method.</param>
            
            <returns>The response from the DescribeHostReservationOfferings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeHostReservationOfferingsAsync(Amazon.EC2.Model.DescribeHostReservationOfferingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeHostReservationOfferings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeHostReservationOfferings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeHostReservations(Amazon.EC2.Model.DescribeHostReservationsRequest)">
            <summary>
            Describes Dedicated Host Reservations which are associated with Dedicated Hosts in
            your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeHostReservations service method.</param>
            
            <returns>The response from the DescribeHostReservations service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeHostReservationsAsync(Amazon.EC2.Model.DescribeHostReservationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeHostReservations operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeHostReservations operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeHosts(Amazon.EC2.Model.DescribeHostsRequest)">
            <summary>
            Describes one or more of your Dedicated Hosts.
            
             
            <para>
            The results describe only the Dedicated Hosts in the region you're currently using.
            All listed instances consume capacity on your Dedicated Host. Dedicated Hosts that
            have recently been released will be listed with the state <code>released</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeHosts service method.</param>
            
            <returns>The response from the DescribeHosts service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeHostsAsync(Amazon.EC2.Model.DescribeHostsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeHosts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeHosts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeIdentityIdFormat(Amazon.EC2.Model.DescribeIdentityIdFormatRequest)">
            <summary>
            Describes the ID format settings for resources for the specified IAM user, IAM role,
            or root user. For example, you can view the resource types that are enabled for longer
            IDs. This request only returns information about resource types whose ID formats can
            be modified; it does not return information about other resource types. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            
             
            <para>
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>. 
            </para>
             
            <para>
            These settings apply to the principal specified in the request. They do not apply
            to the principal that makes the request.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityIdFormat service method.</param>
            
            <returns>The response from the DescribeIdentityIdFormat service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeIdentityIdFormatAsync(Amazon.EC2.Model.DescribeIdentityIdFormatRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeIdentityIdFormat operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityIdFormat operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeIdFormat(Amazon.EC2.Model.DescribeIdFormatRequest)">
            <summary>
            Describes the ID format settings for your resources on a per-region basis, for example,
            to view which resource types are enabled for longer IDs. This request only returns
            information about resource types whose ID formats can be modified; it does not return
            information about other resource types.
            
             
            <para>
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>. 
            </para>
             
            <para>
            These settings apply to the IAM user who makes the request; they do not apply to the
            entire AWS account. By default, an IAM user defaults to the same settings as the root
            user, unless they explicitly override the settings by running the <a>ModifyIdFormat</a>
            command. Resources created with longer IDs are visible to all IAM users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdFormat service method.</param>
            
            <returns>The response from the DescribeIdFormat service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeIdFormatAsync(Amazon.EC2.Model.DescribeIdFormatRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeIdFormat operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeIdFormat operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImageAttribute(Amazon.EC2.Model.DescribeImageAttributeRequest)">
            <summary>
            Describes the specified attribute of the specified AMI. You can specify only one attribute
            at a time.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImageAttribute service method.</param>
            
            <returns>The response from the DescribeImageAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImageAttributeAsync(Amazon.EC2.Model.DescribeImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImageAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImages">
            <summary>
            Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images
            available to you include public images, private images that you own, and private images
            owned by other AWS accounts but for which you have explicit launch permissions.
            
             <note> 
            <para>
            Deregistered images are included in the returned results for an unspecified interval
            after deregistration.
            </para>
             </note>
            </summary>
            
            <returns>The response from the DescribeImages service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImages(Amazon.EC2.Model.DescribeImagesRequest)">
            <summary>
            Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images
            available to you include public images, private images that you own, and private images
            owned by other AWS accounts but for which you have explicit launch permissions.
            
             <note> 
            <para>
            Deregistered images are included in the returned results for an unspecified interval
            after deregistration.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImages service method.</param>
            
            <returns>The response from the DescribeImages service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImagesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images
            available to you include public images, private images that you own, and private images
            owned by other AWS accounts but for which you have explicit launch permissions.
            
             <note> 
            <para>
            Deregistered images are included in the returned results for an unspecified interval
            after deregistration.
            </para>
             </note>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeImages service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImagesAsync(Amazon.EC2.Model.DescribeImagesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImages operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImages operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImportImageTasks(Amazon.EC2.Model.DescribeImportImageTasksRequest)">
            <summary>
            Displays details about an import virtual machine or import snapshot tasks that are
            already created.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImportImageTasks service method.</param>
            
            <returns>The response from the DescribeImportImageTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImportImageTasksAsync(Amazon.EC2.Model.DescribeImportImageTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImportImageTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImportImageTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImportSnapshotTasks(Amazon.EC2.Model.DescribeImportSnapshotTasksRequest)">
            <summary>
            Describes your import snapshot tasks.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImportSnapshotTasks service method.</param>
            
            <returns>The response from the DescribeImportSnapshotTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImportSnapshotTasksAsync(Amazon.EC2.Model.DescribeImportSnapshotTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImportSnapshotTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImportSnapshotTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstanceAttribute(Amazon.EC2.Model.DescribeInstanceAttributeRequest)">
            <summary>
            Describes the specified attribute of the specified instance. You can specify only
            one attribute at a time. Valid attribute values are: <code>instanceType</code> | <code>kernel</code>
            | <code>ramdisk</code> | <code>userData</code> | <code>disableApiTermination</code>
            | <code>instanceInitiatedShutdownBehavior</code> | <code>rootDeviceName</code> | <code>blockDeviceMapping</code>
            | <code>productCodes</code> | <code>sourceDestCheck</code> | <code>groupSet</code>
            | <code>ebsOptimized</code> | <code>sriovNetSupport</code>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceAttribute service method.</param>
            
            <returns>The response from the DescribeInstanceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstanceAttributeAsync(Amazon.EC2.Model.DescribeInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstanceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstances">
            <summary>
            Describes one or more of your instances.
            
             
            <para>
            If you specify one or more instance IDs, Amazon EC2 returns information for those
            instances. If you do not specify instance IDs, Amazon EC2 returns information for
            all relevant instances. If you specify an instance ID that is not valid, an error
            is returned. If you specify an instance that you do not own, it is not included in
            the returned results.
            </para>
             
            <para>
            Recently terminated instances might appear in the returned results. This interval
            is usually less than one hour.
            </para>
             
            <para>
            If you describe instances in the rare case where an Availability Zone is experiencing
            a service disruption and you specify instance IDs that are in the affected zone, or
            do not specify any instance IDs at all, the call fails. If you describe instances
            and specify only instance IDs that are in an unaffected zone, the call works normally.
            </para>
            </summary>
            
            <returns>The response from the DescribeInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstances(Amazon.EC2.Model.DescribeInstancesRequest)">
            <summary>
            Describes one or more of your instances.
            
             
            <para>
            If you specify one or more instance IDs, Amazon EC2 returns information for those
            instances. If you do not specify instance IDs, Amazon EC2 returns information for
            all relevant instances. If you specify an instance ID that is not valid, an error
            is returned. If you specify an instance that you do not own, it is not included in
            the returned results.
            </para>
             
            <para>
            Recently terminated instances might appear in the returned results. This interval
            is usually less than one hour.
            </para>
             
            <para>
            If you describe instances in the rare case where an Availability Zone is experiencing
            a service disruption and you specify instance IDs that are in the affected zone, or
            do not specify any instance IDs at all, the call fails. If you describe instances
            and specify only instance IDs that are in an unaffected zone, the call works normally.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInstances service method.</param>
            
            <returns>The response from the DescribeInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstancesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your instances.
            
             
            <para>
            If you specify one or more instance IDs, Amazon EC2 returns information for those
            instances. If you do not specify instance IDs, Amazon EC2 returns information for
            all relevant instances. If you specify an instance ID that is not valid, an error
            is returned. If you specify an instance that you do not own, it is not included in
            the returned results.
            </para>
             
            <para>
            Recently terminated instances might appear in the returned results. This interval
            is usually less than one hour.
            </para>
             
            <para>
            If you describe instances in the rare case where an Availability Zone is experiencing
            a service disruption and you specify instance IDs that are in the affected zone, or
            do not specify any instance IDs at all, the call fails. If you describe instances
            and specify only instance IDs that are in an unaffected zone, the call works normally.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstancesAsync(Amazon.EC2.Model.DescribeInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstanceStatus">
            <summary>
            Describes the status of one or more instances. By default, only running instances
            are described, unless specified otherwise.
            
             
            <para>
            Instance status includes the following components:
            </para>
             <ul> <li> 
            <para>
             <b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances
            to identify hardware and software issues. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status
            Checks for Your Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting
            Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or
            terminate) for your instances related to hardware issues, software updates, or system
            maintenance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled
            Events for Your Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Instance state</b> - You can manage your instances from the moment you launch
            them through their termination. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> </ul>
            </summary>
            
            <returns>The response from the DescribeInstanceStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstanceStatus(Amazon.EC2.Model.DescribeInstanceStatusRequest)">
            <summary>
            Describes the status of one or more instances. By default, only running instances
            are described, unless specified otherwise.
            
             
            <para>
            Instance status includes the following components:
            </para>
             <ul> <li> 
            <para>
             <b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances
            to identify hardware and software issues. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status
            Checks for Your Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting
            Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or
            terminate) for your instances related to hardware issues, software updates, or system
            maintenance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled
            Events for Your Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Instance state</b> - You can manage your instances from the moment you launch
            them through their termination. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceStatus service method.</param>
            
            <returns>The response from the DescribeInstanceStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstanceStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the status of one or more instances. By default, only running instances
            are described, unless specified otherwise.
            
             
            <para>
            Instance status includes the following components:
            </para>
             <ul> <li> 
            <para>
             <b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances
            to identify hardware and software issues. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status
            Checks for Your Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting
            Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or
            terminate) for your instances related to hardware issues, software updates, or system
            maintenance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled
            Events for Your Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Instance state</b> - You can manage your instances from the moment you launch
            them through their termination. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> </ul>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInstanceStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstanceStatusAsync(Amazon.EC2.Model.DescribeInstanceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstanceStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInternetGateways">
            <summary>
            Describes one or more of your Internet gateways.
            </summary>
            
            <returns>The response from the DescribeInternetGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInternetGateways(Amazon.EC2.Model.DescribeInternetGatewaysRequest)">
            <summary>
            Describes one or more of your Internet gateways.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInternetGateways service method.</param>
            
            <returns>The response from the DescribeInternetGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInternetGatewaysAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your Internet gateways.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInternetGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInternetGatewaysAsync(Amazon.EC2.Model.DescribeInternetGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInternetGateways operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInternetGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeKeyPairs">
            <summary>
            Describes one or more of your key pairs.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeKeyPairs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeKeyPairs(Amazon.EC2.Model.DescribeKeyPairsRequest)">
            <summary>
            Describes one or more of your key pairs.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeKeyPairs service method.</param>
            
            <returns>The response from the DescribeKeyPairs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeKeyPairsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your key pairs.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeKeyPairs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeKeyPairsAsync(Amazon.EC2.Model.DescribeKeyPairsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeKeyPairs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeKeyPairs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeMovingAddresses(Amazon.EC2.Model.DescribeMovingAddressesRequest)">
            <summary>
            Describes your Elastic IP addresses that are being moved to the EC2-VPC platform,
            or that are being restored to the EC2-Classic platform. This request does not return
            information about any other Elastic IP addresses in your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMovingAddresses service method.</param>
            
            <returns>The response from the DescribeMovingAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeMovingAddressesAsync(Amazon.EC2.Model.DescribeMovingAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeMovingAddresses operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMovingAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNatGateways(Amazon.EC2.Model.DescribeNatGatewaysRequest)">
            <summary>
            Describes one or more of the your NAT gateways.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNatGateways service method.</param>
            
            <returns>The response from the DescribeNatGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNatGatewaysAsync(Amazon.EC2.Model.DescribeNatGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNatGateways operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNatGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkAcls">
            <summary>
            Describes one or more of your network ACLs.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeNetworkAcls service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkAcls(Amazon.EC2.Model.DescribeNetworkAclsRequest)">
            <summary>
            Describes one or more of your network ACLs.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkAcls service method.</param>
            
            <returns>The response from the DescribeNetworkAcls service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkAclsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your network ACLs.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeNetworkAcls service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkAclsAsync(Amazon.EC2.Model.DescribeNetworkAclsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkAcls operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkAcls operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkInterfaceAttribute(Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest)">
            <summary>
            Describes a network interface attribute. You can specify only one attribute at a time.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaceAttribute service method.</param>
            
            <returns>The response from the DescribeNetworkInterfaceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkInterfaceAttributeAsync(Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkInterfaceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkInterfaces">
            <summary>
            Describes one or more of your network interfaces.
            </summary>
            
            <returns>The response from the DescribeNetworkInterfaces service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkInterfaces(Amazon.EC2.Model.DescribeNetworkInterfacesRequest)">
            <summary>
            Describes one or more of your network interfaces.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaces service method.</param>
            
            <returns>The response from the DescribeNetworkInterfaces service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkInterfacesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your network interfaces.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeNetworkInterfaces service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkInterfacesAsync(Amazon.EC2.Model.DescribeNetworkInterfacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkInterfaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribePlacementGroups">
            <summary>
            Describes one or more of your placement groups. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            
            <returns>The response from the DescribePlacementGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribePlacementGroups(Amazon.EC2.Model.DescribePlacementGroupsRequest)">
            <summary>
            Describes one or more of your placement groups. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePlacementGroups service method.</param>
            
            <returns>The response from the DescribePlacementGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribePlacementGroupsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your placement groups. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePlacementGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribePlacementGroupsAsync(Amazon.EC2.Model.DescribePlacementGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribePlacementGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribePlacementGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribePrefixLists(Amazon.EC2.Model.DescribePrefixListsRequest)">
            <summary>
            Describes available AWS services in a prefix list format, which includes the prefix
            list name and prefix list ID of the service and the IP address range for the service.
            A prefix list ID is required for creating an outbound security group rule that allows
            traffic from a VPC to access an AWS service through a VPC endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePrefixLists service method.</param>
            
            <returns>The response from the DescribePrefixLists service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribePrefixListsAsync(Amazon.EC2.Model.DescribePrefixListsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribePrefixLists operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribePrefixLists operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeRegions">
            <summary>
            Describes one or more regions that are currently available to you.
            
             
            <para>
            For a list of the regions supported by Amazon EC2, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">Regions
            and Endpoints</a>.
            </para>
            </summary>
            
            <returns>The response from the DescribeRegions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeRegions(Amazon.EC2.Model.DescribeRegionsRequest)">
            <summary>
            Describes one or more regions that are currently available to you.
            
             
            <para>
            For a list of the regions supported by Amazon EC2, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">Regions
            and Endpoints</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRegions service method.</param>
            
            <returns>The response from the DescribeRegions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeRegionsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more regions that are currently available to you.
            
             
            <para>
            For a list of the regions supported by Amazon EC2, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">Regions
            and Endpoints</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRegions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeRegionsAsync(Amazon.EC2.Model.DescribeRegionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeRegions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeRegions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstances">
            <summary>
            Describes one or more of the Reserved Instances that you purchased.
            
             
            <para>
            For more information about Reserved Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeReservedInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstances(Amazon.EC2.Model.DescribeReservedInstancesRequest)">
            <summary>
            Describes one or more of the Reserved Instances that you purchased.
            
             
            <para>
            For more information about Reserved Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstances service method.</param>
            
            <returns>The response from the DescribeReservedInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of the Reserved Instances that you purchased.
            
             
            <para>
            For more information about Reserved Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeReservedInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesAsync(Amazon.EC2.Model.DescribeReservedInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesListings">
            <summary>
            Describes your account's Reserved Instance listings in the Reserved Instance Marketplace.
            
             
            <para>
            The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance
            capacity that they no longer need with buyers who want to purchase additional capacity.
            Reserved Instances bought and sold through the Reserved Instance Marketplace work
            like any other Reserved Instances.
            </para>
             
            <para>
            As a seller, you choose to list some or all of your Reserved Instances, and you specify
            the upfront price to receive for them. Your Reserved Instances are then listed in
            the Reserved Instance Marketplace and are available for purchase.
            </para>
             
            <para>
            As a buyer, you specify the configuration of the Reserved Instance to purchase, and
            the Marketplace matches what you're searching for with what's available. The Marketplace
            first sells the lowest priced Reserved Instances to you, and continues to sell available
            Reserved Instance listings to you until your demand is met. You are charged based
            on the total price of all of the listings that you purchase.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeReservedInstancesListings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesListings(Amazon.EC2.Model.DescribeReservedInstancesListingsRequest)">
            <summary>
            Describes your account's Reserved Instance listings in the Reserved Instance Marketplace.
            
             
            <para>
            The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance
            capacity that they no longer need with buyers who want to purchase additional capacity.
            Reserved Instances bought and sold through the Reserved Instance Marketplace work
            like any other Reserved Instances.
            </para>
             
            <para>
            As a seller, you choose to list some or all of your Reserved Instances, and you specify
            the upfront price to receive for them. Your Reserved Instances are then listed in
            the Reserved Instance Marketplace and are available for purchase.
            </para>
             
            <para>
            As a buyer, you specify the configuration of the Reserved Instance to purchase, and
            the Marketplace matches what you're searching for with what's available. The Marketplace
            first sells the lowest priced Reserved Instances to you, and continues to sell available
            Reserved Instance listings to you until your demand is met. You are charged based
            on the total price of all of the listings that you purchase.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesListings service method.</param>
            
            <returns>The response from the DescribeReservedInstancesListings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesListingsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes your account's Reserved Instance listings in the Reserved Instance Marketplace.
            
             
            <para>
            The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance
            capacity that they no longer need with buyers who want to purchase additional capacity.
            Reserved Instances bought and sold through the Reserved Instance Marketplace work
            like any other Reserved Instances.
            </para>
             
            <para>
            As a seller, you choose to list some or all of your Reserved Instances, and you specify
            the upfront price to receive for them. Your Reserved Instances are then listed in
            the Reserved Instance Marketplace and are available for purchase.
            </para>
             
            <para>
            As a buyer, you specify the configuration of the Reserved Instance to purchase, and
            the Marketplace matches what you're searching for with what's available. The Marketplace
            first sells the lowest priced Reserved Instances to you, and continues to sell available
            Reserved Instance listings to you until your demand is met. You are charged based
            on the total price of all of the listings that you purchase.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeReservedInstancesListings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesListingsAsync(Amazon.EC2.Model.DescribeReservedInstancesListingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesListings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesListings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesModifications">
            <summary>
            Describes the modifications made to your Reserved Instances. If no parameter is specified,
            information about all your Reserved Instances modification requests is returned. If
            a modification ID is specified, only information about the specific modification is
            returned.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
            </summary>
            
            <returns>The response from the DescribeReservedInstancesModifications service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesModifications(Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest)">
            <summary>
            Describes the modifications made to your Reserved Instances. If no parameter is specified,
            information about all your Reserved Instances modification requests is returned. If
            a modification ID is specified, only information about the specific modification is
            returned.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesModifications service method.</param>
            
            <returns>The response from the DescribeReservedInstancesModifications service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesModificationsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the modifications made to your Reserved Instances. If no parameter is specified,
            information about all your Reserved Instances modification requests is returned. If
            a modification ID is specified, only information about the specific modification is
            returned.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeReservedInstancesModifications service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesModificationsAsync(Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesModifications operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesModifications operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesOfferings">
            <summary>
            Describes Reserved Instance offerings that are available for purchase. With Reserved
            Instances, you purchase the right to launch instances for a period of time. During
            that time period, you do not receive insufficient capacity errors, and you pay a lower
            usage rate than the rate charged for On-Demand instances for the actual time used.
            
             
            <para>
            If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace,
            they will be excluded from these results. This is to ensure that you do not purchase
            your own Reserved Instances.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeReservedInstancesOfferings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesOfferings(Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest)">
            <summary>
            Describes Reserved Instance offerings that are available for purchase. With Reserved
            Instances, you purchase the right to launch instances for a period of time. During
            that time period, you do not receive insufficient capacity errors, and you pay a lower
            usage rate than the rate charged for On-Demand instances for the actual time used.
            
             
            <para>
            If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace,
            they will be excluded from these results. This is to ensure that you do not purchase
            your own Reserved Instances.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesOfferings service method.</param>
            
            <returns>The response from the DescribeReservedInstancesOfferings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesOfferingsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes Reserved Instance offerings that are available for purchase. With Reserved
            Instances, you purchase the right to launch instances for a period of time. During
            that time period, you do not receive insufficient capacity errors, and you pay a lower
            usage rate than the rate charged for On-Demand instances for the actual time used.
            
             
            <para>
            If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace,
            they will be excluded from these results. This is to ensure that you do not purchase
            your own Reserved Instances.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeReservedInstancesOfferings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesOfferingsAsync(Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesOfferings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesOfferings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeRouteTables">
            <summary>
            Describes one or more of your route tables.
            
             
            <para>
            Each subnet in your VPC must be associated with a route table. If a subnet is not
            explicitly associated with any route table, it is implicitly associated with the main
            route table. This command does not return the subnet ID for implicit associations.
            </para>
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeRouteTables service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeRouteTables(Amazon.EC2.Model.DescribeRouteTablesRequest)">
            <summary>
            Describes one or more of your route tables.
            
             
            <para>
            Each subnet in your VPC must be associated with a route table. If a subnet is not
            explicitly associated with any route table, it is implicitly associated with the main
            route table. This command does not return the subnet ID for implicit associations.
            </para>
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRouteTables service method.</param>
            
            <returns>The response from the DescribeRouteTables service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeRouteTablesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your route tables.
            
             
            <para>
            Each subnet in your VPC must be associated with a route table. If a subnet is not
            explicitly associated with any route table, it is implicitly associated with the main
            route table. This command does not return the subnet ID for implicit associations.
            </para>
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRouteTables service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeRouteTablesAsync(Amazon.EC2.Model.DescribeRouteTablesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeRouteTables operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeRouteTables operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeScheduledInstanceAvailability(Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest)">
            <summary>
            Finds available schedules that meet the specified criteria.
            
             
            <para>
            You can search for an available schedule no more than 3 months in advance. You must
            meet the minimum required duration of 1,200 hours per year. For example, the minimum
            daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum
            monthly schedule is 100 hours.
            </para>
             
            <para>
            After you find a schedule that meets your needs, call <a>PurchaseScheduledInstances</a>
            to purchase Scheduled Instances with that schedule.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeScheduledInstanceAvailability service method.</param>
            
            <returns>The response from the DescribeScheduledInstanceAvailability service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeScheduledInstanceAvailabilityAsync(Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeScheduledInstanceAvailability operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeScheduledInstanceAvailability operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeScheduledInstances(Amazon.EC2.Model.DescribeScheduledInstancesRequest)">
            <summary>
            Describes one or more of your Scheduled Instances.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeScheduledInstances service method.</param>
            
            <returns>The response from the DescribeScheduledInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeScheduledInstancesAsync(Amazon.EC2.Model.DescribeScheduledInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeScheduledInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeScheduledInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSecurityGroupReferences(Amazon.EC2.Model.DescribeSecurityGroupReferencesRequest)">
            <summary>
            [EC2-VPC only] Describes the VPCs on the other side of a VPC peering connection that
            are referencing the security groups you've specified in this request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityGroupReferences service method.</param>
            
            <returns>The response from the DescribeSecurityGroupReferences service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSecurityGroupReferencesAsync(Amazon.EC2.Model.DescribeSecurityGroupReferencesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSecurityGroupReferences operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityGroupReferences operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSecurityGroups">
            <summary>
            Describes one or more of your security groups.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeSecurityGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSecurityGroups(Amazon.EC2.Model.DescribeSecurityGroupsRequest)">
            <summary>
            Describes one or more of your security groups.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityGroups service method.</param>
            
            <returns>The response from the DescribeSecurityGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSecurityGroupsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your security groups.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSecurityGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSecurityGroupsAsync(Amazon.EC2.Model.DescribeSecurityGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSecurityGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSnapshotAttribute(Amazon.EC2.Model.DescribeSnapshotAttributeRequest)">
            <summary>
            Describes the specified attribute of the specified snapshot. You can specify only
            one attribute at a time.
            
             
            <para>
            For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshotAttribute service method.</param>
            
            <returns>The response from the DescribeSnapshotAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSnapshotAttributeAsync(Amazon.EC2.Model.DescribeSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshotAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSnapshots">
            <summary>
            Describes one or more of the EBS snapshots available to you. Available snapshots include
            public snapshots available for any AWS account to launch, private snapshots that you
            own, and private snapshots owned by another AWS account but for which you've been
            given explicit create volume permissions.
            
             
            <para>
            The create volume permissions fall into the following categories:
            </para>
             <ul> <li> 
            <para>
             <i>public</i>: The owner of the snapshot granted create volume permissions for the
            snapshot to the <code>all</code> group. All AWS accounts have create volume permissions
            for these snapshots.
            </para>
             </li> <li> 
            <para>
             <i>explicit</i>: The owner of the snapshot granted create volume permissions to a
            specific AWS account.
            </para>
             </li> <li> 
            <para>
             <i>implicit</i>: An AWS account has implicit create volume permissions for all snapshots
            it owns.
            </para>
             </li> </ul> 
            <para>
            The list of snapshots returned can be modified by specifying snapshot IDs, snapshot
            owners, or AWS accounts with create volume permissions. If no options are specified,
            Amazon EC2 returns all snapshots for which you have create volume permissions.
            </para>
             
            <para>
            If you specify one or more snapshot IDs, only snapshots that have the specified IDs
            are returned. If you specify an invalid snapshot ID, an error is returned. If you
            specify a snapshot ID for which you do not have access, it is not included in the
            returned results.
            </para>
             
            <para>
            If you specify one or more snapshot owners using the <code>OwnerIds</code> option,
            only snapshots from the specified owners and for which you have access are returned.
            The results can include the AWS account IDs of the specified owners, <code>amazon</code>
            for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.
            </para>
             
            <para>
            If you specify a list of restorable users, only snapshots with create snapshot permissions
            for those users are returned. You can specify AWS account IDs (if you own the snapshots),
            <code>self</code> for snapshots for which you own or have explicit permissions, or
            <code>all</code> for public snapshots.
            </para>
             
            <para>
            If you are describing a long list of snapshots, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeSnapshots</code> request to
            retrieve the remaining results.
            </para>
             
            <para>
            For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeSnapshots service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSnapshots(Amazon.EC2.Model.DescribeSnapshotsRequest)">
            <summary>
            Describes one or more of the EBS snapshots available to you. Available snapshots include
            public snapshots available for any AWS account to launch, private snapshots that you
            own, and private snapshots owned by another AWS account but for which you've been
            given explicit create volume permissions.
            
             
            <para>
            The create volume permissions fall into the following categories:
            </para>
             <ul> <li> 
            <para>
             <i>public</i>: The owner of the snapshot granted create volume permissions for the
            snapshot to the <code>all</code> group. All AWS accounts have create volume permissions
            for these snapshots.
            </para>
             </li> <li> 
            <para>
             <i>explicit</i>: The owner of the snapshot granted create volume permissions to a
            specific AWS account.
            </para>
             </li> <li> 
            <para>
             <i>implicit</i>: An AWS account has implicit create volume permissions for all snapshots
            it owns.
            </para>
             </li> </ul> 
            <para>
            The list of snapshots returned can be modified by specifying snapshot IDs, snapshot
            owners, or AWS accounts with create volume permissions. If no options are specified,
            Amazon EC2 returns all snapshots for which you have create volume permissions.
            </para>
             
            <para>
            If you specify one or more snapshot IDs, only snapshots that have the specified IDs
            are returned. If you specify an invalid snapshot ID, an error is returned. If you
            specify a snapshot ID for which you do not have access, it is not included in the
            returned results.
            </para>
             
            <para>
            If you specify one or more snapshot owners using the <code>OwnerIds</code> option,
            only snapshots from the specified owners and for which you have access are returned.
            The results can include the AWS account IDs of the specified owners, <code>amazon</code>
            for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.
            </para>
             
            <para>
            If you specify a list of restorable users, only snapshots with create snapshot permissions
            for those users are returned. You can specify AWS account IDs (if you own the snapshots),
            <code>self</code> for snapshots for which you own or have explicit permissions, or
            <code>all</code> for public snapshots.
            </para>
             
            <para>
            If you are describing a long list of snapshots, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeSnapshots</code> request to
            retrieve the remaining results.
            </para>
             
            <para>
            For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots service method.</param>
            
            <returns>The response from the DescribeSnapshots service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSnapshotsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of the EBS snapshots available to you. Available snapshots include
            public snapshots available for any AWS account to launch, private snapshots that you
            own, and private snapshots owned by another AWS account but for which you've been
            given explicit create volume permissions.
            
             
            <para>
            The create volume permissions fall into the following categories:
            </para>
             <ul> <li> 
            <para>
             <i>public</i>: The owner of the snapshot granted create volume permissions for the
            snapshot to the <code>all</code> group. All AWS accounts have create volume permissions
            for these snapshots.
            </para>
             </li> <li> 
            <para>
             <i>explicit</i>: The owner of the snapshot granted create volume permissions to a
            specific AWS account.
            </para>
             </li> <li> 
            <para>
             <i>implicit</i>: An AWS account has implicit create volume permissions for all snapshots
            it owns.
            </para>
             </li> </ul> 
            <para>
            The list of snapshots returned can be modified by specifying snapshot IDs, snapshot
            owners, or AWS accounts with create volume permissions. If no options are specified,
            Amazon EC2 returns all snapshots for which you have create volume permissions.
            </para>
             
            <para>
            If you specify one or more snapshot IDs, only snapshots that have the specified IDs
            are returned. If you specify an invalid snapshot ID, an error is returned. If you
            specify a snapshot ID for which you do not have access, it is not included in the
            returned results.
            </para>
             
            <para>
            If you specify one or more snapshot owners using the <code>OwnerIds</code> option,
            only snapshots from the specified owners and for which you have access are returned.
            The results can include the AWS account IDs of the specified owners, <code>amazon</code>
            for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.
            </para>
             
            <para>
            If you specify a list of restorable users, only snapshots with create snapshot permissions
            for those users are returned. You can specify AWS account IDs (if you own the snapshots),
            <code>self</code> for snapshots for which you own or have explicit permissions, or
            <code>all</code> for public snapshots.
            </para>
             
            <para>
            If you are describing a long list of snapshots, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeSnapshots</code> request to
            retrieve the remaining results.
            </para>
             
            <para>
            For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSnapshots service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSnapshotsAsync(Amazon.EC2.Model.DescribeSnapshotsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshots operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotDatafeedSubscription">
            <summary>
            Describes the data feed for Spot instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            
            <returns>The response from the DescribeSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotDatafeedSubscription(Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionRequest)">
            <summary>
            Describes the data feed for Spot instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotDatafeedSubscription service method.</param>
            
            <returns>The response from the DescribeSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotDatafeedSubscriptionAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the data feed for Spot instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotDatafeedSubscription operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotFleetInstances(Amazon.EC2.Model.DescribeSpotFleetInstancesRequest)">
            <summary>
            Describes the running instances for the specified Spot fleet.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetInstances service method.</param>
            
            <returns>The response from the DescribeSpotFleetInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotFleetInstancesAsync(Amazon.EC2.Model.DescribeSpotFleetInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotFleetInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotFleetRequestHistory(Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest)">
            <summary>
            Describes the events for the specified Spot fleet request during the specified time.
            
             
            <para>
            Spot fleet events are delayed by up to 30 seconds before they can be described. This
            ensures that you can query by the last evaluated time and not miss a recorded event.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetRequestHistory service method.</param>
            
            <returns>The response from the DescribeSpotFleetRequestHistory service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotFleetRequestHistoryAsync(Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotFleetRequestHistory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetRequestHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotFleetRequests(Amazon.EC2.Model.DescribeSpotFleetRequestsRequest)">
            <summary>
            Describes your Spot fleet requests.
            
             
            <para>
            Spot fleet requests are deleted 48 hours after they are canceled and their instances
            are terminated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetRequests service method.</param>
            
            <returns>The response from the DescribeSpotFleetRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotFleetRequestsAsync(Amazon.EC2.Model.DescribeSpotFleetRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotFleetRequests operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotInstanceRequests">
            <summary>
            Describes the Spot instance requests that belong to your account. Spot instances are
            instances that Amazon EC2 launches when the bid price that you specify exceeds the
            current Spot price. Amazon EC2 periodically sets the Spot price based on available
            Spot instance capacity and current Spot instance requests. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot instance
            by examining the response. If the status of the Spot instance is <code>fulfilled</code>,
            the instance ID appears in the response and contains the identifier of the instance.
            Alternatively, you can use <a>DescribeInstances</a> with a filter to look for instances
            where the instance lifecycle is <code>spot</code>.
            </para>
             
            <para>
            Spot instance requests are deleted 4 hours after they are canceled and their instances
            are terminated.
            </para>
            </summary>
            
            <returns>The response from the DescribeSpotInstanceRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotInstanceRequests(Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest)">
            <summary>
            Describes the Spot instance requests that belong to your account. Spot instances are
            instances that Amazon EC2 launches when the bid price that you specify exceeds the
            current Spot price. Amazon EC2 periodically sets the Spot price based on available
            Spot instance capacity and current Spot instance requests. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot instance
            by examining the response. If the status of the Spot instance is <code>fulfilled</code>,
            the instance ID appears in the response and contains the identifier of the instance.
            Alternatively, you can use <a>DescribeInstances</a> with a filter to look for instances
            where the instance lifecycle is <code>spot</code>.
            </para>
             
            <para>
            Spot instance requests are deleted 4 hours after they are canceled and their instances
            are terminated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotInstanceRequests service method.</param>
            
            <returns>The response from the DescribeSpotInstanceRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotInstanceRequestsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the Spot instance requests that belong to your account. Spot instances are
            instances that Amazon EC2 launches when the bid price that you specify exceeds the
            current Spot price. Amazon EC2 periodically sets the Spot price based on available
            Spot instance capacity and current Spot instance requests. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot instance
            by examining the response. If the status of the Spot instance is <code>fulfilled</code>,
            the instance ID appears in the response and contains the identifier of the instance.
            Alternatively, you can use <a>DescribeInstances</a> with a filter to look for instances
            where the instance lifecycle is <code>spot</code>.
            </para>
             
            <para>
            Spot instance requests are deleted 4 hours after they are canceled and their instances
            are terminated.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSpotInstanceRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotInstanceRequestsAsync(Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotInstanceRequests operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotInstanceRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotPriceHistory">
            <summary>
            Describes the Spot price history. The prices returned are listed in chronological
            order, from the oldest to the most recent, for up to the past 90 days. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot
            Instance Pricing History</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            When you specify a start and end time, this operation returns the prices of the instance
            types within the time range that you specified and the time when the price changed.
            The price is valid within the time period that you specified; the response merely
            indicates the last time that the price changed.
            </para>
            </summary>
            
            <returns>The response from the DescribeSpotPriceHistory service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotPriceHistory(Amazon.EC2.Model.DescribeSpotPriceHistoryRequest)">
            <summary>
            Describes the Spot price history. The prices returned are listed in chronological
            order, from the oldest to the most recent, for up to the past 90 days. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot
            Instance Pricing History</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            When you specify a start and end time, this operation returns the prices of the instance
            types within the time range that you specified and the time when the price changed.
            The price is valid within the time period that you specified; the response merely
            indicates the last time that the price changed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotPriceHistory service method.</param>
            
            <returns>The response from the DescribeSpotPriceHistory service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotPriceHistoryAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the Spot price history. The prices returned are listed in chronological
            order, from the oldest to the most recent, for up to the past 90 days. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot
            Instance Pricing History</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            When you specify a start and end time, this operation returns the prices of the instance
            types within the time range that you specified and the time when the price changed.
            The price is valid within the time period that you specified; the response merely
            indicates the last time that the price changed.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSpotPriceHistory service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotPriceHistoryAsync(Amazon.EC2.Model.DescribeSpotPriceHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotPriceHistory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotPriceHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeStaleSecurityGroups(Amazon.EC2.Model.DescribeStaleSecurityGroupsRequest)">
            <summary>
            [EC2-VPC only] Describes the stale security group rules for security groups in a specified
            VPC. Rules are stale when they reference a deleted security group in a peer VPC, or
            a security group in a peer VPC for which the VPC peering connection has been deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeStaleSecurityGroups service method.</param>
            
            <returns>The response from the DescribeStaleSecurityGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeStaleSecurityGroupsAsync(Amazon.EC2.Model.DescribeStaleSecurityGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeStaleSecurityGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeStaleSecurityGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSubnets">
            <summary>
            Describes one or more of your subnets.
            
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeSubnets service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSubnets(Amazon.EC2.Model.DescribeSubnetsRequest)">
            <summary>
            Describes one or more of your subnets.
            
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSubnets service method.</param>
            
            <returns>The response from the DescribeSubnets service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSubnetsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your subnets.
            
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSubnets service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSubnetsAsync(Amazon.EC2.Model.DescribeSubnetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSubnets operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSubnets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeTags">
            <summary>
            Describes one or more of the tags for your EC2 resources.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeTags service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeTags(Amazon.EC2.Model.DescribeTagsRequest)">
            <summary>
            Describes one or more of the tags for your EC2 resources.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTags service method.</param>
            
            <returns>The response from the DescribeTags service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeTagsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of the tags for your EC2 resources.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTags service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeTagsAsync(Amazon.EC2.Model.DescribeTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumeAttribute(Amazon.EC2.Model.DescribeVolumeAttributeRequest)">
            <summary>
            Describes the specified attribute of the specified volume. You can specify only one
            attribute at a time.
            
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeAttribute service method.</param>
            
            <returns>The response from the DescribeVolumeAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumeAttributeAsync(Amazon.EC2.Model.DescribeVolumeAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumeAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumes">
            <summary>
            Describes the specified EBS volumes.
            
             
            <para>
            If you are describing a long list of volumes, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve
            the remaining results.
            </para>
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeVolumes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumes(Amazon.EC2.Model.DescribeVolumesRequest)">
            <summary>
            Describes the specified EBS volumes.
            
             
            <para>
            If you are describing a long list of volumes, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve
            the remaining results.
            </para>
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVolumes service method.</param>
            
            <returns>The response from the DescribeVolumes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the specified EBS volumes.
            
             
            <para>
            If you are describing a long list of volumes, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve
            the remaining results.
            </para>
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVolumes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumesAsync(Amazon.EC2.Model.DescribeVolumesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumeStatus">
            <summary>
            Describes the status of the specified volumes. Volume status provides the result of
            the checks performed on your volumes to determine events that can impair the performance
            of your volumes. The performance of a volume can be affected if an issue occurs on
            the volume's underlying host. If the volume's underlying host experiences a power
            outage or system issue, after the system is restored, there could be data inconsistencies
            on the volume. Volume events notify you if this occurs. Volume actions notify you
            if any action needs to be taken in response to the event.
            
             
            <para>
            The <code>DescribeVolumeStatus</code> operation provides the following information
            about the specified volumes:
            </para>
             
            <para>
             <i>Status</i>: Reflects the current status of the volume. The possible values are
            <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>.
            If all checks pass, the overall status of the volume is <code>ok</code>. If the check
            fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>,
            then the checks may still be taking place on your volume at the time. We recommend
            that you retry the request. For more information on volume status, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring
            the Status of Your Volumes</a>.
            </para>
             
            <para>
             <i>Events</i>: Reflect the cause of a volume status and may require you to take action.
            For example, if your volume returns an <code>impaired</code> status, then the volume
            event might be <code>potential-data-inconsistency</code>. This means that your volume
            has been affected by an issue with the underlying host, has all I/O operations disabled,
            and may have inconsistent data.
            </para>
             
            <para>
             <i>Actions</i>: Reflect the actions you may have to take in response to an event.
            For example, if the status of the volume is <code>impaired</code> and the volume event
            shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>.
            This means that you may want to enable the I/O operations for the volume by calling
            the <a>EnableVolumeIO</a> action and then check the volume for data consistency.
            </para>
             <note> 
            <para>
            Volume status is based on the volume status checks, and does not reflect the volume
            state. Therefore, volume status does not indicate volumes in the <code>error</code>
            state (for example, when a volume is incapable of accepting I/O.)
            </para>
             </note>
            </summary>
            
            <returns>The response from the DescribeVolumeStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumeStatus(Amazon.EC2.Model.DescribeVolumeStatusRequest)">
            <summary>
            Describes the status of the specified volumes. Volume status provides the result of
            the checks performed on your volumes to determine events that can impair the performance
            of your volumes. The performance of a volume can be affected if an issue occurs on
            the volume's underlying host. If the volume's underlying host experiences a power
            outage or system issue, after the system is restored, there could be data inconsistencies
            on the volume. Volume events notify you if this occurs. Volume actions notify you
            if any action needs to be taken in response to the event.
            
             
            <para>
            The <code>DescribeVolumeStatus</code> operation provides the following information
            about the specified volumes:
            </para>
             
            <para>
             <i>Status</i>: Reflects the current status of the volume. The possible values are
            <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>.
            If all checks pass, the overall status of the volume is <code>ok</code>. If the check
            fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>,
            then the checks may still be taking place on your volume at the time. We recommend
            that you retry the request. For more information on volume status, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring
            the Status of Your Volumes</a>.
            </para>
             
            <para>
             <i>Events</i>: Reflect the cause of a volume status and may require you to take action.
            For example, if your volume returns an <code>impaired</code> status, then the volume
            event might be <code>potential-data-inconsistency</code>. This means that your volume
            has been affected by an issue with the underlying host, has all I/O operations disabled,
            and may have inconsistent data.
            </para>
             
            <para>
             <i>Actions</i>: Reflect the actions you may have to take in response to an event.
            For example, if the status of the volume is <code>impaired</code> and the volume event
            shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>.
            This means that you may want to enable the I/O operations for the volume by calling
            the <a>EnableVolumeIO</a> action and then check the volume for data consistency.
            </para>
             <note> 
            <para>
            Volume status is based on the volume status checks, and does not reflect the volume
            state. Therefore, volume status does not indicate volumes in the <code>error</code>
            state (for example, when a volume is incapable of accepting I/O.)
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeStatus service method.</param>
            
            <returns>The response from the DescribeVolumeStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumeStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the status of the specified volumes. Volume status provides the result of
            the checks performed on your volumes to determine events that can impair the performance
            of your volumes. The performance of a volume can be affected if an issue occurs on
            the volume's underlying host. If the volume's underlying host experiences a power
            outage or system issue, after the system is restored, there could be data inconsistencies
            on the volume. Volume events notify you if this occurs. Volume actions notify you
            if any action needs to be taken in response to the event.
            
             
            <para>
            The <code>DescribeVolumeStatus</code> operation provides the following information
            about the specified volumes:
            </para>
             
            <para>
             <i>Status</i>: Reflects the current status of the volume. The possible values are
            <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>.
            If all checks pass, the overall status of the volume is <code>ok</code>. If the check
            fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>,
            then the checks may still be taking place on your volume at the time. We recommend
            that you retry the request. For more information on volume status, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring
            the Status of Your Volumes</a>.
            </para>
             
            <para>
             <i>Events</i>: Reflect the cause of a volume status and may require you to take action.
            For example, if your volume returns an <code>impaired</code> status, then the volume
            event might be <code>potential-data-inconsistency</code>. This means that your volume
            has been affected by an issue with the underlying host, has all I/O operations disabled,
            and may have inconsistent data.
            </para>
             
            <para>
             <i>Actions</i>: Reflect the actions you may have to take in response to an event.
            For example, if the status of the volume is <code>impaired</code> and the volume event
            shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>.
            This means that you may want to enable the I/O operations for the volume by calling
            the <a>EnableVolumeIO</a> action and then check the volume for data consistency.
            </para>
             <note> 
            <para>
            Volume status is based on the volume status checks, and does not reflect the volume
            state. Therefore, volume status does not indicate volumes in the <code>error</code>
            state (for example, when a volume is incapable of accepting I/O.)
            </para>
             </note>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVolumeStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumeStatusAsync(Amazon.EC2.Model.DescribeVolumeStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumeStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcAttribute(Amazon.EC2.Model.DescribeVpcAttributeRequest)">
            <summary>
            Describes the specified attribute of the specified VPC. You can specify only one attribute
            at a time.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcAttribute service method.</param>
            
            <returns>The response from the DescribeVpcAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcAttributeAsync(Amazon.EC2.Model.DescribeVpcAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcClassicLink(Amazon.EC2.Model.DescribeVpcClassicLinkRequest)">
            <summary>
            Describes the ClassicLink status of one or more VPCs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcClassicLink service method.</param>
            
            <returns>The response from the DescribeVpcClassicLink service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcClassicLinkAsync(Amazon.EC2.Model.DescribeVpcClassicLinkRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcClassicLink operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcClassicLink operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcClassicLinkDnsSupport(Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportRequest)">
            <summary>
            Describes the ClassicLink DNS support status of one or more VPCs. If enabled, the
            DNS hostname of a linked EC2-Classic instance resolves to its private IP address when
            addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname
            of an instance in a VPC resolves to its private IP address when addressed from a linked
            EC2-Classic instance. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcClassicLinkDnsSupport service method.</param>
            
            <returns>The response from the DescribeVpcClassicLinkDnsSupport service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcClassicLinkDnsSupportAsync(Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcClassicLinkDnsSupport operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcClassicLinkDnsSupport operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcEndpoints(Amazon.EC2.Model.DescribeVpcEndpointsRequest)">
            <summary>
            Describes one or more of your VPC endpoints.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcEndpoints service method.</param>
            
            <returns>The response from the DescribeVpcEndpoints service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcEndpointsAsync(Amazon.EC2.Model.DescribeVpcEndpointsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcEndpoints operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcEndpoints operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcEndpointServices(Amazon.EC2.Model.DescribeVpcEndpointServicesRequest)">
            <summary>
            Describes all supported AWS services that can be specified when creating a VPC endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcEndpointServices service method.</param>
            
            <returns>The response from the DescribeVpcEndpointServices service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcEndpointServicesAsync(Amazon.EC2.Model.DescribeVpcEndpointServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcEndpointServices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcEndpointServices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcPeeringConnections">
            <summary>
            Describes one or more of your VPC peering connections.
            </summary>
            
            <returns>The response from the DescribeVpcPeeringConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcPeeringConnections(Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest)">
            <summary>
            Describes one or more of your VPC peering connections.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcPeeringConnections service method.</param>
            
            <returns>The response from the DescribeVpcPeeringConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcPeeringConnectionsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your VPC peering connections.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVpcPeeringConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcPeeringConnectionsAsync(Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcPeeringConnections operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcPeeringConnections operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcs">
            <summary>
            Describes one or more of your VPCs.
            </summary>
            
            <returns>The response from the DescribeVpcs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcs(Amazon.EC2.Model.DescribeVpcsRequest)">
            <summary>
            Describes one or more of your VPCs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcs service method.</param>
            
            <returns>The response from the DescribeVpcs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your VPCs.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVpcs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcsAsync(Amazon.EC2.Model.DescribeVpcsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpnConnections">
            <summary>
            Describes one or more of your VPN connections.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeVpnConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpnConnections(Amazon.EC2.Model.DescribeVpnConnectionsRequest)">
            <summary>
            Describes one or more of your VPN connections.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpnConnections service method.</param>
            
            <returns>The response from the DescribeVpnConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpnConnectionsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your VPN connections.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVpnConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpnConnectionsAsync(Amazon.EC2.Model.DescribeVpnConnectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpnConnections operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpnConnections operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpnGateways">
            <summary>
            Describes one or more of your virtual private gateways.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            an IPsec Hardware VPN to Your VPC</a> in the <i>Amazon Virtual Private Cloud User
            Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeVpnGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpnGateways(Amazon.EC2.Model.DescribeVpnGatewaysRequest)">
            <summary>
            Describes one or more of your virtual private gateways.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            an IPsec Hardware VPN to Your VPC</a> in the <i>Amazon Virtual Private Cloud User
            Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpnGateways service method.</param>
            
            <returns>The response from the DescribeVpnGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpnGatewaysAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your virtual private gateways.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            an IPsec Hardware VPN to Your VPC</a> in the <i>Amazon Virtual Private Cloud User
            Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVpnGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpnGatewaysAsync(Amazon.EC2.Model.DescribeVpnGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpnGateways operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpnGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachClassicLinkVpc(Amazon.EC2.Model.DetachClassicLinkVpcRequest)">
            <summary>
            Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the instance has
            been unlinked, the VPC security groups are no longer associated with it. An instance
            is automatically unlinked from a VPC when it's stopped.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachClassicLinkVpc service method.</param>
            
            <returns>The response from the DetachClassicLinkVpc service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachClassicLinkVpcAsync(Amazon.EC2.Model.DetachClassicLinkVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachClassicLinkVpc operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachClassicLinkVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachInternetGateway(Amazon.EC2.Model.DetachInternetGatewayRequest)">
            <summary>
            Detaches an Internet gateway from a VPC, disabling connectivity between the Internet
            and the VPC. The VPC must not contain any running instances with Elastic IP addresses.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachInternetGateway service method.</param>
            
            <returns>The response from the DetachInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachInternetGatewayAsync(Amazon.EC2.Model.DetachInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachInternetGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachNetworkInterface(Amazon.EC2.Model.DetachNetworkInterfaceRequest)">
            <summary>
            Detaches a network interface from an instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachNetworkInterface service method.</param>
            
            <returns>The response from the DetachNetworkInterface service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachNetworkInterfaceAsync(Amazon.EC2.Model.DetachNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachNetworkInterface operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachVolume(Amazon.EC2.Model.DetachVolumeRequest)">
            <summary>
            Detaches an EBS volume from an instance. Make sure to unmount any file systems on
            the device within your operating system before detaching the volume. Failure to do
            so can result in the volume becoming stuck in the <code>busy</code> state while detaching.
            If this happens, detachment can be delayed indefinitely until you unmount the volume,
            force detachment, reboot the instance, or all three. If an EBS volume is the root
            device of an instance, it can't be detached while the instance is running. To detach
            the root volume, stop the instance first.
            
             
            <para>
            When a volume with an AWS Marketplace product code is detached from an instance, the
            product code is no longer associated with the instance.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html">Detaching
            an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachVolume service method.</param>
            
            <returns>The response from the DetachVolume service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachVolumeAsync(Amazon.EC2.Model.DetachVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachVolume operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachVpnGateway(Amazon.EC2.Model.DetachVpnGatewayRequest)">
            <summary>
            Detaches a virtual private gateway from a VPC. You do this if you're planning to turn
            off the VPC and not use it anymore. You can confirm a virtual private gateway has
            been completely detached from a VPC by describing the virtual private gateway (any
            attachments to the virtual private gateway are also described).
            
             
            <para>
            You must wait for the attachment's state to switch to <code>detached</code> before
            you can delete the VPC or attach a different VPC to the virtual private gateway.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachVpnGateway service method.</param>
            
            <returns>The response from the DetachVpnGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachVpnGatewayAsync(Amazon.EC2.Model.DetachVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachVpnGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisableVgwRoutePropagation(Amazon.EC2.Model.DisableVgwRoutePropagationRequest)">
            <summary>
            Disables a virtual private gateway (VGW) from propagating routes to a specified route
            table of a VPC.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableVgwRoutePropagation service method.</param>
            
            <returns>The response from the DisableVgwRoutePropagation service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisableVgwRoutePropagationAsync(Amazon.EC2.Model.DisableVgwRoutePropagationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableVgwRoutePropagation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableVgwRoutePropagation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisableVpcClassicLink(Amazon.EC2.Model.DisableVpcClassicLinkRequest)">
            <summary>
            Disables ClassicLink for a VPC. You cannot disable ClassicLink for a VPC that has
            EC2-Classic instances linked to it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableVpcClassicLink service method.</param>
            
            <returns>The response from the DisableVpcClassicLink service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisableVpcClassicLinkAsync(Amazon.EC2.Model.DisableVpcClassicLinkRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableVpcClassicLink operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableVpcClassicLink operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisableVpcClassicLinkDnsSupport(Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportRequest)">
            <summary>
            Disables ClassicLink DNS support for a VPC. If disabled, DNS hostnames resolve to
            public IP addresses when addressed between a linked EC2-Classic instance and instances
            in the VPC to which it's linked. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableVpcClassicLinkDnsSupport service method.</param>
            
            <returns>The response from the DisableVpcClassicLinkDnsSupport service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisableVpcClassicLinkDnsSupportAsync(Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableVpcClassicLinkDnsSupport operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableVpcClassicLinkDnsSupport operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisassociateAddress(Amazon.EC2.Model.DisassociateAddressRequest)">
            <summary>
            Disassociates an Elastic IP address from the instance or network interface it's associated
            with.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateAddress service method.</param>
            
            <returns>The response from the DisassociateAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisassociateAddressAsync(Amazon.EC2.Model.DisassociateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisassociateAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisassociateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisassociateRouteTable(Amazon.EC2.Model.DisassociateRouteTableRequest)">
            <summary>
            Disassociates a subnet from a route table.
            
             
            <para>
            After you perform this action, the subnet no longer uses the routes in the route table.
            Instead, it uses the routes in the VPC's main route table. For more information about
            route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateRouteTable service method.</param>
            
            <returns>The response from the DisassociateRouteTable service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisassociateRouteTableAsync(Amazon.EC2.Model.DisassociateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisassociateRouteTable operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisassociateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.EnableVgwRoutePropagation(Amazon.EC2.Model.EnableVgwRoutePropagationRequest)">
            <summary>
            Enables a virtual private gateway (VGW) to propagate routes to the specified route
            table of a VPC.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableVgwRoutePropagation service method.</param>
            
            <returns>The response from the EnableVgwRoutePropagation service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.EnableVgwRoutePropagationAsync(Amazon.EC2.Model.EnableVgwRoutePropagationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVgwRoutePropagation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVgwRoutePropagation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.EnableVolumeIO(Amazon.EC2.Model.EnableVolumeIORequest)">
            <summary>
            Enables I/O operations for a volume that had I/O operations disabled because the data
            on the volume was potentially inconsistent.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableVolumeIO service method.</param>
            
            <returns>The response from the EnableVolumeIO service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.EnableVolumeIOAsync(Amazon.EC2.Model.EnableVolumeIORequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVolumeIO operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVolumeIO operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.EnableVpcClassicLink(Amazon.EC2.Model.EnableVpcClassicLinkRequest)">
            <summary>
            Enables a VPC for ClassicLink. You can then link EC2-Classic instances to your ClassicLink-enabled
            VPC to allow communication over private IP addresses. You cannot enable your VPC for
            ClassicLink if any of your VPC's route tables have existing routes for address ranges
            within the <code>10.0.0.0/8</code> IP address range, excluding local routes for VPCs
            in the <code>10.0.0.0/16</code> and <code>10.1.0.0/16</code> IP address ranges. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableVpcClassicLink service method.</param>
            
            <returns>The response from the EnableVpcClassicLink service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.EnableVpcClassicLinkAsync(Amazon.EC2.Model.EnableVpcClassicLinkRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVpcClassicLink operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVpcClassicLink operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.EnableVpcClassicLinkDnsSupport(Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportRequest)">
            <summary>
            Enables a VPC to support DNS hostname resolution for ClassicLink. If enabled, the
            DNS hostname of a linked EC2-Classic instance resolves to its private IP address when
            addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname
            of an instance in a VPC resolves to its private IP address when addressed from a linked
            EC2-Classic instance. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableVpcClassicLinkDnsSupport service method.</param>
            
            <returns>The response from the EnableVpcClassicLinkDnsSupport service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.EnableVpcClassicLinkDnsSupportAsync(Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVpcClassicLinkDnsSupport operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVpcClassicLinkDnsSupport operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetConsoleOutput(Amazon.EC2.Model.GetConsoleOutputRequest)">
            <summary>
            Gets the console output for the specified instance.
            
             
            <para>
            Instances do not have a physical monitor through which you can view their console
            output. They also lack physical controls that allow you to power up, reboot, or shut
            them down. To allow these actions, we provide them through the Amazon EC2 API and
            command line interface.
            </para>
             
            <para>
            Instance console output is buffered and posted shortly after instance boot, reboot,
            and termination. Amazon EC2 preserves the most recent 64 KB output which is available
            for at least one hour after the most recent post.
            </para>
             
            <para>
            For Linux instances, the instance console output displays the exact console output
            that would normally be displayed on a physical monitor attached to a computer. This
            output is buffered because the instance produces it and then posts it to a store where
            the instance's owner can retrieve it.
            </para>
             
            <para>
            For Windows instances, the instance console output includes output from the EC2Config
            service.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetConsoleOutput service method.</param>
            
            <returns>The response from the GetConsoleOutput service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetConsoleOutputAsync(Amazon.EC2.Model.GetConsoleOutputRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetConsoleOutput operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetConsoleOutput operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetConsoleScreenshot(Amazon.EC2.Model.GetConsoleScreenshotRequest)">
            <summary>
            Retrieve a JPG-format screenshot of a running instance to help with troubleshooting.
            
             
            <para>
            The returned content is Base64-encoded.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetConsoleScreenshot service method.</param>
            
            <returns>The response from the GetConsoleScreenshot service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetConsoleScreenshotAsync(Amazon.EC2.Model.GetConsoleScreenshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetConsoleScreenshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetConsoleScreenshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetHostReservationPurchasePreview(Amazon.EC2.Model.GetHostReservationPurchasePreviewRequest)">
            <summary>
            Preview a reservation purchase with configurations that match those of your Dedicated
            Host. You must have active Dedicated Hosts in your account before you purchase a reservation.
            
             
            <para>
            This is a preview of the <a>PurchaseHostReservation</a> action and does not result
            in the offering being purchased.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetHostReservationPurchasePreview service method.</param>
            
            <returns>The response from the GetHostReservationPurchasePreview service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetHostReservationPurchasePreviewAsync(Amazon.EC2.Model.GetHostReservationPurchasePreviewRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetHostReservationPurchasePreview operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetHostReservationPurchasePreview operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetPasswordData(Amazon.EC2.Model.GetPasswordDataRequest)">
            <summary>
            Retrieves the encrypted administrator password for an instance running Windows.
            
             
            <para>
            The Windows password is generated at boot if the <code>EC2Config</code> service plugin,
            <code>Ec2SetPassword</code>, is enabled. This usually only happens the first time
            an AMI is launched, and then <code>Ec2SetPassword</code> is automatically disabled.
            The password is not generated for rebundled AMIs unless <code>Ec2SetPassword</code>
            is enabled before bundling.
            </para>
             
            <para>
            The password is encrypted using the key pair that you specified when you launched
            the instance. You must provide the corresponding key pair file.
            </para>
             
            <para>
            Password generation and encryption takes a few moments. We recommend that you wait
            up to 15 minutes after launching an instance before trying to retrieve the generated
            password.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPasswordData service method.</param>
            
            <returns>The response from the GetPasswordData service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetPasswordDataAsync(Amazon.EC2.Model.GetPasswordDataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetPasswordData operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPasswordData operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetReservedInstancesExchangeQuote(Amazon.EC2.Model.GetReservedInstancesExchangeQuoteRequest)">
            <summary>
            Returns details about the values and term of your specified Convertible Reserved Instances.
            When an offering ID is specified it returns information about whether the exchange
            is valid and can be performed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetReservedInstancesExchangeQuote service method.</param>
            
            <returns>The response from the GetReservedInstancesExchangeQuote service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetReservedInstancesExchangeQuoteAsync(Amazon.EC2.Model.GetReservedInstancesExchangeQuoteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetReservedInstancesExchangeQuote operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetReservedInstancesExchangeQuote operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportImage(Amazon.EC2.Model.ImportImageRequest)">
            <summary>
            Import single or multi-volume disk images or EBS snapshots into an Amazon Machine
            Image (AMI). For more information, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html">Importing
            a VM as an Image Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportImage service method.</param>
            
            <returns>The response from the ImportImage service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportImageAsync(Amazon.EC2.Model.ImportImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportInstance(Amazon.EC2.Model.ImportInstanceRequest)">
            <summary>
            Creates an import instance task using metadata from the specified disk image. <code>ImportInstance</code>
            only supports single-volume VMs. To import multi-volume VMs, use <a>ImportImage</a>.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing
            a Virtual Machine Using the Amazon EC2 CLI</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportInstance service method.</param>
            
            <returns>The response from the ImportInstance service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportInstanceAsync(Amazon.EC2.Model.ImportInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportInstance operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportKeyPair(Amazon.EC2.Model.ImportKeyPairRequest)">
            <summary>
            Imports the public key from an RSA key pair that you created with a third-party tool.
            Compare this with <a>CreateKeyPair</a>, in which AWS creates the key pair and gives
            the keys to you (AWS keeps a copy of the public key). With ImportKeyPair, you create
            the key pair and give AWS just the public key. The private key is never transferred
            between you and AWS.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportKeyPair service method.</param>
            
            <returns>The response from the ImportKeyPair service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportKeyPairAsync(Amazon.EC2.Model.ImportKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportKeyPair operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportSnapshot(Amazon.EC2.Model.ImportSnapshotRequest)">
            <summary>
            Imports a disk into an EBS snapshot.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportSnapshot service method.</param>
            
            <returns>The response from the ImportSnapshot service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportSnapshotAsync(Amazon.EC2.Model.ImportSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportVolume(Amazon.EC2.Model.ImportVolumeRequest)">
            <summary>
            Creates an import volume task using metadata from the specified disk image.For more
            information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/importing-your-volumes-into-amazon-ebs.html">Importing
            Disks to Amazon EBS</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportVolume service method.</param>
            
            <returns>The response from the ImportVolume service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportVolumeAsync(Amazon.EC2.Model.ImportVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportVolume operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyHosts(Amazon.EC2.Model.ModifyHostsRequest)">
            <summary>
            Modify the auto-placement setting of a Dedicated Host. When auto-placement is enabled,
            AWS will place instances that you launch with a tenancy of <code>host</code>, but
            without targeting a specific host ID, onto any available Dedicated Host in your account
            which has auto-placement enabled. When auto-placement is disabled, you need to provide
            a host ID if you want the instance to launch onto a specific host. If no host ID is
            provided, the instance will be launched onto a suitable host which has auto-placement
            enabled.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyHosts service method.</param>
            
            <returns>The response from the ModifyHosts service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyHostsAsync(Amazon.EC2.Model.ModifyHostsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyHosts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyHosts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyIdentityIdFormat(Amazon.EC2.Model.ModifyIdentityIdFormatRequest)">
            <summary>
            Modifies the ID format of a resource for a specified IAM user, IAM role, or the root
            user for an account; or all IAM users, IAM roles, and the root user for an account.
            You can specify that resources should receive longer IDs (17-character IDs) when they
            are created. 
            
             
            <para>
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
             
            <para>
            This setting applies to the principal specified in the request; it does not apply
            to the principal that makes the request. 
            </para>
             
            <para>
            Resources created with longer IDs are visible to all IAM roles and users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyIdentityIdFormat service method.</param>
            
            <returns>The response from the ModifyIdentityIdFormat service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyIdentityIdFormatAsync(Amazon.EC2.Model.ModifyIdentityIdFormatRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyIdentityIdFormat operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyIdentityIdFormat operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyIdFormat(Amazon.EC2.Model.ModifyIdFormatRequest)">
            <summary>
            Modifies the ID format for the specified resource on a per-region basis. You can specify
            that resources should receive longer IDs (17-character IDs) when they are created.
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>.
            
             
            <para>
            This setting applies to the IAM user who makes the request; it does not apply to the
            entire AWS account. By default, an IAM user defaults to the same settings as the root
            user. If you're using this action as the root user, then these settings apply to the
            entire account, unless an IAM user explicitly overrides these settings for themselves.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
             
            <para>
            Resources created with longer IDs are visible to all IAM roles and users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyIdFormat service method.</param>
            
            <returns>The response from the ModifyIdFormat service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyIdFormatAsync(Amazon.EC2.Model.ModifyIdFormatRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyIdFormat operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyIdFormat operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyImageAttribute(Amazon.EC2.Model.ModifyImageAttributeRequest)">
            <summary>
            Modifies the specified attribute of the specified AMI. You can specify only one attribute
            at a time.
            
             <note> 
            <para>
            AWS Marketplace product codes cannot be modified. Images with an AWS Marketplace product
            code cannot be made public.
            </para>
             </note> <note> 
            <para>
            The SriovNetSupport enhanced networking attribute cannot be changed using this command.
            Instead, enable SriovNetSupport on an instance and create an AMI from the instance.
            This will result in an image with SriovNetSupport enabled.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyImageAttribute service method.</param>
            
            <returns>The response from the ModifyImageAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyImageAttributeAsync(Amazon.EC2.Model.ModifyImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyImageAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyInstanceAttribute(Amazon.EC2.Model.ModifyInstanceAttributeRequest)">
            <summary>
            Modifies the specified attribute of the specified instance. You can specify only one
            attribute at a time.
            
             
            <para>
            To modify some attributes, the instance must be stopped. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html">Modifying
            Attributes of a Stopped Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyInstanceAttribute service method.</param>
            
            <returns>The response from the ModifyInstanceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyInstanceAttributeAsync(Amazon.EC2.Model.ModifyInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyInstanceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyInstancePlacement(Amazon.EC2.Model.ModifyInstancePlacementRequest)">
            <summary>
            Set the instance affinity value for a specific stopped instance and modify the instance
            tenancy setting.
            
             
            <para>
            Instance affinity is disabled by default. When instance affinity is <code>host</code>
            and it is not associated with a specific Dedicated Host, the next time it is launched
            it will automatically be associated with the host it lands on. This relationship will
            persist if the instance is stopped/started, or rebooted.
            </para>
             
            <para>
            You can modify the host ID associated with a stopped instance. If a stopped instance
            has a new host ID association, the instance will target that host when restarted.
            </para>
             
            <para>
            You can modify the tenancy of a stopped instance with a tenancy of <code>host</code>
            or <code>dedicated</code>.
            </para>
             
            <para>
            Affinity, hostID, and tenancy are not required parameters, but at least one of them
            must be specified in the request. Affinity and tenancy can be modified in the same
            request, but tenancy can only be modified on instances that are stopped.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyInstancePlacement service method.</param>
            
            <returns>The response from the ModifyInstancePlacement service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyInstancePlacementAsync(Amazon.EC2.Model.ModifyInstancePlacementRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyInstancePlacement operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyInstancePlacement operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyNetworkInterfaceAttribute(Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest)">
            <summary>
            Modifies the specified network interface attribute. You can specify only one attribute
            at a time.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyNetworkInterfaceAttribute service method.</param>
            
            <returns>The response from the ModifyNetworkInterfaceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyNetworkInterfaceAttributeAsync(Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyNetworkInterfaceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyReservedInstances(Amazon.EC2.Model.ModifyReservedInstancesRequest)">
            <summary>
            Modifies the Availability Zone, instance count, instance type, or network platform
            (EC2-Classic or EC2-VPC) of your Standard Reserved Instances. The Reserved Instances
            to be modified must be identical, except for Availability Zone, network platform,
            and instance type.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyReservedInstances service method.</param>
            
            <returns>The response from the ModifyReservedInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyReservedInstancesAsync(Amazon.EC2.Model.ModifyReservedInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyReservedInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyReservedInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifySnapshotAttribute(Amazon.EC2.Model.ModifySnapshotAttributeRequest)">
            <summary>
            Adds or removes permission settings for the specified snapshot. You may add or remove
            specified AWS account IDs from a snapshot's list of create volume permissions, but
            you cannot do both in a single API call. If you need to both add and remove account
            IDs for a snapshot, you must use multiple API calls.
            
             <note> 
            <para>
            Encrypted snapshots and snapshots with AWS Marketplace product codes cannot be made
            public. Snapshots encrypted with your default CMK cannot be shared with other accounts.
            </para>
             </note> 
            <para>
            For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing
            Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifySnapshotAttribute service method.</param>
            
            <returns>The response from the ModifySnapshotAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifySnapshotAttributeAsync(Amazon.EC2.Model.ModifySnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifySnapshotAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifySnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifySpotFleetRequest(Amazon.EC2.Model.ModifySpotFleetRequestRequest)">
            <summary>
            Modifies the specified Spot fleet request.
            
             
            <para>
            While the Spot fleet request is being modified, it is in the <code>modifying</code>
            state.
            </para>
             
            <para>
            To scale up your Spot fleet, increase its target capacity. The Spot fleet launches
            the additional Spot instances according to the allocation strategy for the Spot fleet
            request. If the allocation strategy is <code>lowestPrice</code>, the Spot fleet launches
            instances using the Spot pool with the lowest price. If the allocation strategy is
            <code>diversified</code>, the Spot fleet distributes the instances across the Spot
            pools.
            </para>
             
            <para>
            To scale down your Spot fleet, decrease its target capacity. First, the Spot fleet
            cancels any open bids that exceed the new target capacity. You can request that the
            Spot fleet terminate Spot instances until the size of the fleet no longer exceeds
            the new target capacity. If the allocation strategy is <code>lowestPrice</code>, the
            Spot fleet terminates the instances with the highest price per unit. If the allocation
            strategy is <code>diversified</code>, the Spot fleet terminates instances across the
            Spot pools. Alternatively, you can request that the Spot fleet keep the fleet at its
            current size, but not replace any Spot instances that are interrupted or that you
            terminate manually.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifySpotFleetRequest service method.</param>
            
            <returns>The response from the ModifySpotFleetRequest service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifySpotFleetRequestAsync(Amazon.EC2.Model.ModifySpotFleetRequestRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifySpotFleetRequest operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifySpotFleetRequest operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifySubnetAttribute(Amazon.EC2.Model.ModifySubnetAttributeRequest)">
            <summary>
            Modifies a subnet attribute.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifySubnetAttribute service method.</param>
            
            <returns>The response from the ModifySubnetAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifySubnetAttributeAsync(Amazon.EC2.Model.ModifySubnetAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifySubnetAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifySubnetAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyVolumeAttribute(Amazon.EC2.Model.ModifyVolumeAttributeRequest)">
            <summary>
            Modifies a volume attribute.
            
             
            <para>
            By default, all I/O operations for the volume are suspended when the data on the volume
            is determined to be potentially inconsistent, to prevent undetectable, latent data
            corruption. The I/O access to the volume can be resumed by first enabling I/O access
            and then checking the data consistency on your volume.
            </para>
             
            <para>
            You can change the default behavior to resume I/O operations. We recommend that you
            change this only for boot volumes or for volumes that are stateless or disposable.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyVolumeAttribute service method.</param>
            
            <returns>The response from the ModifyVolumeAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyVolumeAttributeAsync(Amazon.EC2.Model.ModifyVolumeAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVolumeAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVolumeAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyVpcAttribute(Amazon.EC2.Model.ModifyVpcAttributeRequest)">
            <summary>
            Modifies the specified attribute of the specified VPC.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyVpcAttribute service method.</param>
            
            <returns>The response from the ModifyVpcAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyVpcAttributeAsync(Amazon.EC2.Model.ModifyVpcAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVpcAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVpcAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyVpcEndpoint(Amazon.EC2.Model.ModifyVpcEndpointRequest)">
            <summary>
            Modifies attributes of a specified VPC endpoint. You can modify the policy associated
            with the endpoint, and you can add and remove route tables associated with the endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyVpcEndpoint service method.</param>
            
            <returns>The response from the ModifyVpcEndpoint service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyVpcEndpointAsync(Amazon.EC2.Model.ModifyVpcEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVpcEndpoint operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVpcEndpoint operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyVpcPeeringConnectionOptions(Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsRequest)">
            <summary>
            Modifies the VPC peering connection options on one side of a VPC peering connection.
            You can do the following:
            
             <ul> <li> 
            <para>
            Enable/disable communication over the peering connection between an EC2-Classic instance
            that's linked to your VPC (using ClassicLink) and instances in the peer VPC.
            </para>
             </li> <li> 
            <para>
            Enable/disable communication over the peering connection between instances in your
            VPC and an EC2-Classic instance that's linked to the peer VPC.
            </para>
             </li> <li> 
            <para>
            Enable/disable a local VPC to resolve public DNS hostnames to private IP addresses
            when queried from instances in the peer VPC.
            </para>
             </li> </ul> 
            <para>
            If the peered VPCs are in different accounts, each owner must initiate a separate
            request to modify the peering connection options, depending on whether their VPC was
            the requester or accepter for the VPC peering connection. If the peered VPCs are in
            the same account, you can modify the requester and accepter options in the same request.
            To confirm which VPC is the accepter and requester for a VPC peering connection, use
            the <a>DescribeVpcPeeringConnections</a> command.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyVpcPeeringConnectionOptions service method.</param>
            
            <returns>The response from the ModifyVpcPeeringConnectionOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyVpcPeeringConnectionOptionsAsync(Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVpcPeeringConnectionOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVpcPeeringConnectionOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.MonitorInstances(Amazon.EC2.Model.MonitorInstancesRequest)">
            <summary>
            Enables monitoring for a running instance. For more information about monitoring instances,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring
            Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MonitorInstances service method.</param>
            
            <returns>The response from the MonitorInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.MonitorInstancesAsync(Amazon.EC2.Model.MonitorInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the MonitorInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the MonitorInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.MoveAddressToVpc(Amazon.EC2.Model.MoveAddressToVpcRequest)">
            <summary>
            Moves an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform.
            The Elastic IP address must be allocated to your account for more than 24 hours, and
            it must not be associated with an instance. After the Elastic IP address is moved,
            it is no longer available for use in the EC2-Classic platform, unless you move it
            back using the <a>RestoreAddressToClassic</a> request. You cannot move an Elastic
            IP address that was originally allocated for use in the EC2-VPC platform to the EC2-Classic
            platform.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MoveAddressToVpc service method.</param>
            
            <returns>The response from the MoveAddressToVpc service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.MoveAddressToVpcAsync(Amazon.EC2.Model.MoveAddressToVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the MoveAddressToVpc operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the MoveAddressToVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.PurchaseHostReservation(Amazon.EC2.Model.PurchaseHostReservationRequest)">
            <summary>
            Purchase a reservation with configurations that match those of your Dedicated Host.
            You must have active Dedicated Hosts in your account before you purchase a reservation.
            This action results in the specified reservation being purchased and charged to your
            account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PurchaseHostReservation service method.</param>
            
            <returns>The response from the PurchaseHostReservation service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.PurchaseHostReservationAsync(Amazon.EC2.Model.PurchaseHostReservationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PurchaseHostReservation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurchaseHostReservation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.PurchaseReservedInstancesOffering(Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest)">
            <summary>
            Purchases a Reserved Instance for use with your account. With Reserved Instances,
            you pay a lower hourly rate compared to On-Demand instance pricing.
            
             
            <para>
            Use <a>DescribeReservedInstancesOfferings</a> to get a list of Reserved Instance offerings
            that match your specifications. After you've purchased a Reserved Instance, you can
            check for your new Reserved Instance with <a>DescribeReservedInstances</a>.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PurchaseReservedInstancesOffering service method.</param>
            
            <returns>The response from the PurchaseReservedInstancesOffering service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.PurchaseReservedInstancesOfferingAsync(Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PurchaseReservedInstancesOffering operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurchaseReservedInstancesOffering operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.PurchaseScheduledInstances(Amazon.EC2.Model.PurchaseScheduledInstancesRequest)">
            <summary>
            Purchases one or more Scheduled Instances with the specified schedule.
            
             
            <para>
            Scheduled Instances enable you to purchase Amazon EC2 compute capacity by the hour
            for a one-year term. Before you can purchase a Scheduled Instance, you must call <a>DescribeScheduledInstanceAvailability</a>
            to check for available schedules and obtain a purchase token. After you purchase a
            Scheduled Instance, you must call <a>RunScheduledInstances</a> during each scheduled
            time period.
            </para>
             
            <para>
            After you purchase a Scheduled Instance, you can't cancel, modify, or resell your
            purchase.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PurchaseScheduledInstances service method.</param>
            
            <returns>The response from the PurchaseScheduledInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.PurchaseScheduledInstancesAsync(Amazon.EC2.Model.PurchaseScheduledInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PurchaseScheduledInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurchaseScheduledInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RebootInstances(Amazon.EC2.Model.RebootInstancesRequest)">
            <summary>
            Requests a reboot of one or more instances. This operation is asynchronous; it only
            queues a request to reboot the specified instances. The operation succeeds if the
            instances are valid and belong to you. Requests to reboot terminated instances are
            ignored.
            
             
            <para>
            If an instance does not cleanly shut down within four minutes, Amazon EC2 performs
            a hard reboot.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Getting
            Console Output and Rebooting Instances</a> in the <i>Amazon Elastic Compute Cloud
            User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootInstances service method.</param>
            
            <returns>The response from the RebootInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RebootInstancesAsync(Amazon.EC2.Model.RebootInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RebootInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RebootInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RegisterImage(Amazon.EC2.Model.RegisterImageRequest)">
            <summary>
            Registers an AMI. When you're creating an AMI, this is the final step you must complete
            before you can launch an instance from the AMI. For more information about creating
            AMIs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html">Creating
            Your Own AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             <note> 
            <para>
            For Amazon EBS-backed instances, <a>CreateImage</a> creates and registers the AMI
            in a single request, so you don't have to register the AMI yourself.
            </para>
             </note> 
            <para>
            You can also use <code>RegisterImage</code> to create an Amazon EBS-backed Linux AMI
            from a snapshot of a root device volume. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_LaunchingInstanceFromSnapshot.html">Launching
            an Instance from a Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             <important> 
            <para>
            Some Linux distributions, such as Red Hat Enterprise Linux (RHEL) and SUSE Linux Enterprise
            Server (SLES), use the EC2 <code>billingProduct</code> code associated with an AMI
            to verify subscription status for package updates. Creating an AMI from an EBS snapshot
            does not maintain this billing code, and subsequent instances launched from such an
            AMI will not be able to connect to package update infrastructure.
            </para>
             
            <para>
            Similarly, although you can create a Windows AMI from a snapshot, you can't successfully
            launch an instance from the AMI.
            </para>
             
            <para>
            To create Windows AMIs or to create AMIs for Linux operating systems that must retain
            AMI billing codes to work properly, see <a>CreateImage</a>.
            </para>
             </important> 
            <para>
            If needed, you can deregister an AMI at any time. Any modifications you make to an
            AMI backed by an instance store volume invalidates its registration. If you make changes
            to an image, deregister the previous image and register the new image.
            </para>
             <note> 
            <para>
            You can't register an image where a secondary (non-root) snapshot has AWS Marketplace
            product codes.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterImage service method.</param>
            
            <returns>The response from the RegisterImage service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RegisterImageAsync(Amazon.EC2.Model.RegisterImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RegisterImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RegisterImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RejectVpcPeeringConnection(Amazon.EC2.Model.RejectVpcPeeringConnectionRequest)">
            <summary>
            Rejects a VPC peering connection request. The VPC peering connection must be in the
            <code>pending-acceptance</code> state. Use the <a>DescribeVpcPeeringConnections</a>
            request to view your outstanding VPC peering connection requests. To delete an active
            VPC peering connection, or to delete a VPC peering connection request that you initiated,
            use <a>DeleteVpcPeeringConnection</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RejectVpcPeeringConnection service method.</param>
            
            <returns>The response from the RejectVpcPeeringConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RejectVpcPeeringConnectionAsync(Amazon.EC2.Model.RejectVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RejectVpcPeeringConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RejectVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReleaseAddress(Amazon.EC2.Model.ReleaseAddressRequest)">
            <summary>
            Releases the specified Elastic IP address.
            
             
            <para>
            After releasing an Elastic IP address, it is released to the IP address pool and might
            be unavailable to you. Be sure to update your DNS records and any servers or devices
            that communicate with the address. If you attempt to release an Elastic IP address
            that you already released, you'll get an <code>AuthFailure</code> error if the address
            is already allocated to another AWS account.
            </para>
             
            <para>
            [EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates
            it from any instance that it's associated with. To disassociate an Elastic IP address
            without releasing it, use <a>DisassociateAddress</a>.
            </para>
             
            <para>
            [Nondefault VPC] You must use <a>DisassociateAddress</a> to disassociate the Elastic
            IP address before you try to release it. Otherwise, Amazon EC2 returns an error (<code>InvalidIPAddress.InUse</code>).
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReleaseAddress service method.</param>
            
            <returns>The response from the ReleaseAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReleaseAddressAsync(Amazon.EC2.Model.ReleaseAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReleaseAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReleaseAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReleaseHosts(Amazon.EC2.Model.ReleaseHostsRequest)">
            <summary>
            When you no longer want to use an On-Demand Dedicated Host it can be released. On-Demand
            billing is stopped and the host goes into <code>released</code> state. The host ID
            of Dedicated Hosts that have been released can no longer be specified in another request,
            e.g., ModifyHosts. You must stop or terminate all instances on a host before it can
            be released.
            
             
            <para>
            When Dedicated Hosts are released, it make take some time for them to stop counting
            toward your limit and you may receive capacity errors when trying to allocate new
            Dedicated hosts. Try waiting a few minutes, and then try again.
            </para>
             
            <para>
            Released hosts will still appear in a <a>DescribeHosts</a> response.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReleaseHosts service method.</param>
            
            <returns>The response from the ReleaseHosts service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReleaseHostsAsync(Amazon.EC2.Model.ReleaseHostsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReleaseHosts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReleaseHosts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceNetworkAclAssociation(Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest)">
            <summary>
            Changes which network ACL a subnet is associated with. By default when you create
            a subnet, it's automatically associated with the default network ACL. For more information
            about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclAssociation service method.</param>
            
            <returns>The response from the ReplaceNetworkAclAssociation service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceNetworkAclAssociationAsync(Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceNetworkAclAssociation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceNetworkAclEntry(Amazon.EC2.Model.ReplaceNetworkAclEntryRequest)">
            <summary>
            Replaces an entry (rule) in a network ACL. For more information about network ACLs,
            see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclEntry service method.</param>
            
            <returns>The response from the ReplaceNetworkAclEntry service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceNetworkAclEntryAsync(Amazon.EC2.Model.ReplaceNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceNetworkAclEntry operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceRoute(Amazon.EC2.Model.ReplaceRouteRequest)">
            <summary>
            Replaces an existing route within a route table in a VPC. You must provide only one
            of the following: Internet gateway or virtual private gateway, NAT instance, NAT gateway,
            VPC peering connection, or network interface.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplaceRoute service method.</param>
            
            <returns>The response from the ReplaceRoute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceRouteAsync(Amazon.EC2.Model.ReplaceRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceRoute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceRouteTableAssociation(Amazon.EC2.Model.ReplaceRouteTableAssociationRequest)">
            <summary>
            Changes the route table associated with a given subnet in a VPC. After the operation
            completes, the subnet uses the routes in the new route table it's associated with.
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            
             
            <para>
            You can also use ReplaceRouteTableAssociation to change which table is the main route
            table in the VPC. You just specify the main route table's association ID and the route
            table to be the new main route table.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplaceRouteTableAssociation service method.</param>
            
            <returns>The response from the ReplaceRouteTableAssociation service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceRouteTableAssociationAsync(Amazon.EC2.Model.ReplaceRouteTableAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceRouteTableAssociation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceRouteTableAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReportInstanceStatus(Amazon.EC2.Model.ReportInstanceStatusRequest)">
            <summary>
            Submits feedback about the status of an instance. The instance must be in the <code>running</code>
            state. If your experience with the instance differs from the instance status returned
            by <a>DescribeInstanceStatus</a>, use <a>ReportInstanceStatus</a> to report your experience
            with the instance. Amazon EC2 collects this information to improve the accuracy of
            status checks.
            
             
            <para>
            Use of this action does not change the value returned by <a>DescribeInstanceStatus</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReportInstanceStatus service method.</param>
            
            <returns>The response from the ReportInstanceStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReportInstanceStatusAsync(Amazon.EC2.Model.ReportInstanceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReportInstanceStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReportInstanceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RequestSpotFleet(Amazon.EC2.Model.RequestSpotFleetRequest)">
            <summary>
            Creates a Spot fleet request.
            
             
            <para>
            You can submit a single request that includes multiple launch specifications that
            vary by instance type, AMI, Availability Zone, or subnet.
            </para>
             
            <para>
            By default, the Spot fleet requests Spot instances in the Spot pool where the price
            per unit is the lowest. Each launch specification can include its own instance weighting
            that reflects the value of the instance type to your application workload.
            </para>
             
            <para>
            Alternatively, you can specify that the Spot fleet distribute the target capacity
            across the Spot pools included in its launch specifications. By ensuring that the
            Spot instances in your Spot fleet are in different Spot pools, you can improve the
            availability of your fleet.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html">Spot
            Fleet Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestSpotFleet service method.</param>
            
            <returns>The response from the RequestSpotFleet service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RequestSpotFleetAsync(Amazon.EC2.Model.RequestSpotFleetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RequestSpotFleet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RequestSpotFleet operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RequestSpotInstances(Amazon.EC2.Model.RequestSpotInstancesRequest)">
            <summary>
            Creates a Spot instance request. Spot instances are instances that Amazon EC2 launches
            when the bid price that you specify exceeds the current Spot price. Amazon EC2 periodically
            sets the Spot price based on available Spot Instance capacity and current Spot instance
            requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestSpotInstances service method.</param>
            
            <returns>The response from the RequestSpotInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RequestSpotInstancesAsync(Amazon.EC2.Model.RequestSpotInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RequestSpotInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RequestSpotInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetImageAttribute(Amazon.EC2.Model.ResetImageAttributeRequest)">
            <summary>
            Resets an attribute of an AMI to its default value.
            
             <note> 
            <para>
            The productCodes attribute can't be reset.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetImageAttribute service method.</param>
            
            <returns>The response from the ResetImageAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetImageAttributeAsync(Amazon.EC2.Model.ResetImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetImageAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetInstanceAttribute(Amazon.EC2.Model.ResetInstanceAttributeRequest)">
            <summary>
            Resets an attribute of an instance to its default value. To reset the <code>kernel</code>
            or <code>ramdisk</code>, the instance must be in a stopped state. To reset the <code>sourceDestCheck</code>,
            the instance can be either running or stopped.
            
             
            <para>
            The <code>sourceDestCheck</code> attribute controls whether source/destination checking
            is enabled. The default value is <code>true</code>, which means checking is enabled.
            This value must be <code>false</code> for a NAT instance to perform NAT. For more
            information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetInstanceAttribute service method.</param>
            
            <returns>The response from the ResetInstanceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetInstanceAttributeAsync(Amazon.EC2.Model.ResetInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetInstanceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetNetworkInterfaceAttribute(Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest)">
            <summary>
            Resets a network interface attribute. You can specify only one attribute at a time.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetNetworkInterfaceAttribute service method.</param>
            
            <returns>The response from the ResetNetworkInterfaceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetNetworkInterfaceAttributeAsync(Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetNetworkInterfaceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetSnapshotAttribute(Amazon.EC2.Model.ResetSnapshotAttributeRequest)">
            <summary>
            Resets permission settings for the specified snapshot.
            
             
            <para>
            For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing
            Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetSnapshotAttribute service method.</param>
            
            <returns>The response from the ResetSnapshotAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetSnapshotAttributeAsync(Amazon.EC2.Model.ResetSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetSnapshotAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetSnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RestoreAddressToClassic(Amazon.EC2.Model.RestoreAddressToClassicRequest)">
            <summary>
            Restores an Elastic IP address that was previously moved to the EC2-VPC platform back
            to the EC2-Classic platform. You cannot move an Elastic IP address that was originally
            allocated for use in EC2-VPC. The Elastic IP address must not be associated with an
            instance or network interface.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreAddressToClassic service method.</param>
            
            <returns>The response from the RestoreAddressToClassic service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RestoreAddressToClassicAsync(Amazon.EC2.Model.RestoreAddressToClassicRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RestoreAddressToClassic operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreAddressToClassic operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RevokeSecurityGroupEgress(Amazon.EC2.Model.RevokeSecurityGroupEgressRequest)">
            <summary>
            [EC2-VPC only] Removes one or more egress rules from a security group for EC2-VPC.
            This action doesn't apply to security groups for use in EC2-Classic. The values that
            you specify in the revoke request (for example, ports) must match the existing rule's
            values for the rule to be revoked.
            
             
            <para>
            Each rule consists of the protocol and the CIDR range or source security group. For
            the TCP and UDP protocols, you must also specify the destination port or range of
            ports. For the ICMP protocol, you must also specify the ICMP type and code.
            </para>
             
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupEgress service method.</param>
            
            <returns>The response from the RevokeSecurityGroupEgress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RevokeSecurityGroupEgressAsync(Amazon.EC2.Model.RevokeSecurityGroupEgressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RevokeSecurityGroupEgress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupEgress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RevokeSecurityGroupIngress(Amazon.EC2.Model.RevokeSecurityGroupIngressRequest)">
            <summary>
            Removes one or more ingress rules from a security group. The values that you specify
            in the revoke request (for example, ports) must match the existing rule's values for
            the rule to be removed.
            
             
            <para>
            Each rule consists of the protocol and the CIDR range or source security group. For
            the TCP and UDP protocols, you must also specify the destination port or range of
            ports. For the ICMP protocol, you must also specify the ICMP type and code.
            </para>
             
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupIngress service method.</param>
            
            <returns>The response from the RevokeSecurityGroupIngress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RevokeSecurityGroupIngressAsync(Amazon.EC2.Model.RevokeSecurityGroupIngressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RevokeSecurityGroupIngress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupIngress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RunInstances(Amazon.EC2.Model.RunInstancesRequest)">
            <summary>
            Launches the specified number of instances using an AMI for which you have permissions.
            
             
            <para>
            When you launch an instance, it enters the <code>pending</code> state. After the instance
            is ready for you, it enters the <code>running</code> state. To check the state of
            your instance, call <a>DescribeInstances</a>.
            </para>
             
            <para>
            To ensure faster instance launches, break up large requests into smaller batches.
            For example, create five separate launch requests for 100 instances each instead of
            one launch request for 500 instances.
            </para>
             
            <para>
            To tag your instance, ensure that it is <code>running</code> as <a>CreateTags</a>
            requires a resource ID. For more information about tagging, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Amazon EC2 Resources</a>.
            </para>
             
            <para>
            If you don't specify a security group when launching an instance, Amazon EC2 uses
            the default security group. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Security
            Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            [EC2-VPC only accounts] If you don't specify a subnet in the request, we choose a
            default subnet from your default VPC for you.
            </para>
             
            <para>
            [EC2-Classic accounts] If you're launching into EC2-Classic and you don't specify
            an Availability Zone, we choose one for you.
            </para>
             
            <para>
            Linux instances have access to the public key of the key pair at boot. You can use
            this key to provide secure access to the instance. Amazon EC2 public images use this
            feature to provide secure access without passwords. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            You can provide optional user data when launching an instance. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html">Instance
            Metadata</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            If any of the AMIs have a product code attached for which the user has not subscribed,
            <code>RunInstances</code> fails.
            </para>
             
            <para>
            Some instance types can only be launched into a VPC. If you do not have a default
            VPC, or if you do not specify a subnet ID in the request, <code>RunInstances</code>
            fails. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types">Instance
            Types Available Only in a VPC</a>.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html">What
            To Do If An Instance Immediately Terminates</a>, and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html">Troubleshooting
            Connecting to Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunInstances service method.</param>
            
            <returns>The response from the RunInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RunInstancesAsync(Amazon.EC2.Model.RunInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RunInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RunInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RunScheduledInstances(Amazon.EC2.Model.RunScheduledInstancesRequest)">
            <summary>
            Launches the specified Scheduled Instances.
            
             
            <para>
            Before you can launch a Scheduled Instance, you must purchase it and obtain an identifier
            using <a>PurchaseScheduledInstances</a>.
            </para>
             
            <para>
            You must launch a Scheduled Instance during its scheduled time period. You can't stop
            or reboot a Scheduled Instance, but you can terminate it as needed. If you terminate
            a Scheduled Instance before the current scheduled time period ends, you can launch
            it again after a few minutes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-scheduled-instances.html">Scheduled
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunScheduledInstances service method.</param>
            
            <returns>The response from the RunScheduledInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RunScheduledInstancesAsync(Amazon.EC2.Model.RunScheduledInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RunScheduledInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RunScheduledInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.StartInstances(Amazon.EC2.Model.StartInstancesRequest)">
            <summary>
            Starts an Amazon EBS-backed AMI that you've previously stopped.
            
             
            <para>
            Instances that use Amazon EBS volumes as their root devices can be quickly stopped
            and started. When an instance is stopped, the compute resources are released and you
            are not billed for hourly instance usage. However, your root partition Amazon EBS
            volume remains, continues to persist your data, and you are charged for Amazon EBS
            volume usage. You can restart your instance at any time. Each time you transition
            an instance from stopped to started, Amazon EC2 charges a full instance hour, even
            if transitions happen multiple times within a single hour.
            </para>
             
            <para>
            Before stopping an instance, make sure it is in a state from which it can be restarted.
            Stopping an instance does not preserve data stored in RAM.
            </para>
             
            <para>
            Performing this operation on an instance that uses an instance store as its root device
            returns an error.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stopping
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartInstances service method.</param>
            
            <returns>The response from the StartInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.StartInstancesAsync(Amazon.EC2.Model.StartInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.StopInstances(Amazon.EC2.Model.StopInstancesRequest)">
            <summary>
            Stops an Amazon EBS-backed instance.
            
             
            <para>
            We don't charge hourly usage for a stopped instance, or data transfer fees; however,
            your root partition Amazon EBS volume remains, continues to persist your data, and
            you are charged for Amazon EBS volume usage. Each time you transition an instance
            from stopped to started, Amazon EC2 charges a full instance hour, even if transitions
            happen multiple times within a single hour.
            </para>
             
            <para>
            You can't start or stop Spot instances, and you can't stop instance store-backed instances.
            </para>
             
            <para>
            When you stop an instance, we shut it down. You can restart your instance at any time.
            Before stopping an instance, make sure it is in a state from which it can be restarted.
            Stopping an instance does not preserve data stored in RAM.
            </para>
             
            <para>
            Stopping an instance is different to rebooting or terminating it. For example, when
            you stop an instance, the root device and any other devices attached to the instance
            persist. When you terminate an instance, the root device and any other devices attached
            during the instance launch are automatically deleted. For more information about the
            differences between rebooting, stopping, and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            When you stop an instance, we attempt to shut it down forcibly after a short while.
            If your instance appears stuck in the stopping state after a period of time, there
            may be an issue with the underlying host computer. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html">Troubleshooting
            Stopping Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopInstances service method.</param>
            
            <returns>The response from the StopInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.StopInstancesAsync(Amazon.EC2.Model.StopInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StopInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.TerminateInstances(Amazon.EC2.Model.TerminateInstancesRequest)">
            <summary>
            Shuts down one or more instances. This operation is idempotent; if you terminate an
            instance more than once, each call succeeds. 
            
             
            <para>
            If you specify multiple instances and the request fails (for example, because of a
            single incorrect instance ID), none of the instances are terminated.
            </para>
             
            <para>
            Terminated instances remain visible after termination (for approximately one hour).
            </para>
             
            <para>
            By default, Amazon EC2 deletes all EBS volumes that were attached when the instance
            launched. Volumes attached after instance launch continue running.
            </para>
             
            <para>
            You can stop, start, and terminate EBS-backed instances. You can only terminate instance
            store-backed instances. What happens to an instance differs if you stop it or terminate
            it. For example, when you stop an instance, the root device and any other devices
            attached to the instance persist. When you terminate an instance, any attached EBS
            volumes with the <code>DeleteOnTermination</code> block device mapping parameter set
            to <code>true</code> are automatically deleted. For more information about the differences
            between stopping and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html">Troubleshooting
            Terminating Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateInstances service method.</param>
            
            <returns>The response from the TerminateInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.TerminateInstancesAsync(Amazon.EC2.Model.TerminateInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TerminateInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TerminateInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.UnassignPrivateIpAddresses(Amazon.EC2.Model.UnassignPrivateIpAddressesRequest)">
            <summary>
            Unassigns one or more secondary private IP addresses from a network interface.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UnassignPrivateIpAddresses service method.</param>
            
            <returns>The response from the UnassignPrivateIpAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.UnassignPrivateIpAddressesAsync(Amazon.EC2.Model.UnassignPrivateIpAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnassignPrivateIpAddresses operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnassignPrivateIpAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.UnmonitorInstances(Amazon.EC2.Model.UnmonitorInstancesRequest)">
            <summary>
            Disables monitoring for a running instance. For more information about monitoring
            instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring
            Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UnmonitorInstances service method.</param>
            
            <returns>The response from the UnmonitorInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.UnmonitorInstancesAsync(Amazon.EC2.Model.UnmonitorInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnmonitorInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnmonitorInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.EC2.Internal.AmazonEC2PostMarshallHandler">
            <summary>
            Custom pipeline handler
            </summary>
        </member>
        <member name="M:Amazon.EC2.Internal.AmazonEC2PostMarshallHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.EC2.Internal.AmazonEC2PostMarshallHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.Internal.AmazonEC2PostMarshallHandler.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Custom pipeline handler
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.EC2.Internal.AmazonEC2PreMarshallHandler">
            <summary>
            Custom pipeline handler
            </summary>
        </member>
        <member name="M:Amazon.EC2.Internal.AmazonEC2PreMarshallHandler.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Construct instance of AmazonEC2PreMarshallHandler
            </summary>
            <param name="credentials"></param>
        </member>
        <member name="M:Amazon.EC2.Internal.AmazonEC2PreMarshallHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.EC2.Internal.AmazonEC2PreMarshallHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.Internal.AmazonEC2PreMarshallHandler.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Custom pipeline handler
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.EC2.Internal.AmazonEC2ResponseHandler">
            <summary>
            Custom pipeline handler.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Internal.AmazonEC2ResponseHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls the post invoke logic after calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.EC2.Internal.AmazonEC2ResponseHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls the and post invoke logic after calling the next handler 
            in the pipeline.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.Internal.AmazonEC2ResponseHandler.PostInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Custom pipeline handler
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.EC2.Internal.CustomMarshallTransformations">
            <summary>
            Custom type serializers for EC2
            </summary>
        </member>
        <member name="M:Amazon.EC2.Internal.CustomMarshallTransformations.ConvertDateTimeISOWithoutMilliseconds(System.DateTime)">
            <summary>
            Custom DateTime serializer for EC2.
            </summary>
            <param name="dateTime">The DateTime to serialize</param>
            <returns>ISO formatted string with no miliseconds</returns>
        </member>
        <member name="T:Amazon.EC2.Model.DryRunResponse">
            <summary>
            Returns information about the DryRun response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DryRunResponse.IsSuccessful">
            <summary>
            Flag that signals if you have the required permissions to execute the request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DryRunResponse.Message">
            <summary>
            Message associated with the response.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DryRunResponse.IsSetMessage">
            <summary>
            Checks if Message property is set
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.DryRunResponse.Error">
            <summary>
            Exception associated with the response, if there was one.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DryRunResponse.IsSetError">
            <summary>
            Checks if Error property is set
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.EbsBlockDevice">
            <summary>
            Describes a block device for an EBS volume.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the EBS volume is deleted on instance termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Indicates whether the EBS volume is encrypted. Encrypted Amazon EBS volumes may only
            be attached to instances that support Amazon EBS encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            The number of I/O operations per second (IOPS) that the volume supports. For <code>io1</code>,
            this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code>,
            this represents the baseline performance of the volume and the rate at which the volume
            accumulates I/O credits for bursting. For more information about General Purpose SSD
            baseline performance, I/O credits, and bursting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon
            EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            Constraint: Range is 100-20000 IOPS for <code>io1</code> volumes and 100-10000 IOPS
            for <code>gp2</code> volumes.
            </para>
             
            <para>
            Condition: This parameter is required for requests to create <code>io1</code> volumes;
            it is not used in requests to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>,
            or <code>standard</code> volumes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.VolumeSize">
            <summary>
            Gets and sets the property VolumeSize. 
            <para>
            The size of the volume, in GiB.
            </para>
             
            <para>
            Constraints: 1-16384 for General Purpose SSD (<code>gp2</code>), 4-16384 for Provisioned
            IOPS SSD (<code>io1</code>), 500-16384 for Throughput Optimized HDD (<code>st1</code>),
            500-16384 for Cold HDD (<code>sc1</code>), and 1-1024 for Magnetic (<code>standard</code>)
            volumes. If you specify a snapshot, the volume size must be equal to or larger than
            the snapshot size.
            </para>
             
            <para>
            Default: If you're creating the volume from a snapshot and don't specify a volume
            size, the default is the snapshot size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.VolumeType">
            <summary>
            Gets and sets the property VolumeType. 
            <para>
            The volume type: <code>gp2</code>, <code>io1</code>, <code>st1</code>, <code>sc1</code>,
            or <code>standard</code>.
            </para>
             
            <para>
            Default: <code>standard</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceLicenseSpecification">
            <summary>Instance License Specification
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceLicenseSpecification.Pool">
            <summary>
            Gets and sets the Pool property.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetPasswordDataResponse">
            <summary>
            Contains the output of GetPasswordData.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.GetPasswordDataResponse.GetDecryptedPassword(System.String)">
            <summary>
            Gets the decrypted password using the RSA private key which can be found in the
            PEM file for the key pair.
            </summary>
            <param name="rsaPrivateKey">The RSA private key from the PEM file</param>
            <returns>The decrypted password</returns>
        </member>
        <member name="P:Amazon.EC2.Model.GetPasswordDataResponse.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the Windows instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetPasswordDataResponse.PasswordData">
            <summary>
            Gets and sets the property PasswordData. 
            <para>
            The password of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetPasswordDataResponse.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time the data was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteRequest">
            <summary>
            Container for the parameters to the AcceptReservedInstancesExchangeQuote operation.
            Purchases Convertible Reserved Instance offerings described in the <a>GetReservedInstancesExchangeQuote</a>
            call.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteRequest.ReservedInstanceIds">
            <summary>
            Gets and sets the property ReservedInstanceIds. 
            <para>
            The IDs of the Convertible Reserved Instances that you want to exchange for other
            Convertible Reserved Instances of the same or higher value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteRequest.TargetConfigurations">
            <summary>
            Gets and sets the property TargetConfigurations. 
            <para>
            The configurations of the Convertible Reserved Instance offerings you are purchasing
            in this exchange.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteResponse">
            <summary>
            The result of the exchange and whether it was <code>successful</code>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteResponse.ExchangeId">
            <summary>
            Gets and sets the property ExchangeId. 
            <para>
            The ID of the successful exchange.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest">
            <summary>
            Container for the parameters to the AcceptVpcPeeringConnection operation.
            Accept a VPC peering connection request. To accept a request, the VPC peering connection
            must be in the <code>pending-acceptance</code> state, and you must be the owner of
            the peer VPC. Use the <code>DescribeVpcPeeringConnections</code> request to view your
            outstanding VPC peering connection requests.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AcceptVpcPeeringConnectionResponse">
            <summary>
            Contains the output of AcceptVpcPeeringConnection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AcceptVpcPeeringConnectionResponse.VpcPeeringConnection">
            <summary>
            Gets and sets the property VpcPeeringConnection. 
            <para>
            Information about the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AccountAttribute">
            <summary>
            Describes an account attribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AccountAttribute.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the account attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AccountAttribute.AttributeValues">
            <summary>
            Gets and sets the property AttributeValues. 
            <para>
            One or more values for the account attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AccountAttributeValue">
            <summary>
            Describes a value of an account attribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AccountAttributeValue.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            The value of the attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ActiveInstance">
            <summary>
            Describes a running instance in a Spot fleet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ActiveInstance.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ActiveInstance.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ActiveInstance.SpotInstanceRequestId">
            <summary>
            Gets and sets the property SpotInstanceRequestId. 
            <para>
            The ID of the Spot instance request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Address">
            <summary>
            Describes an Elastic IP address.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            The ID representing the allocation of the address for use with EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The ID representing the association of the address with an instance in a VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            Indicates whether this Elastic IP address is for use with instances in EC2-Classic
            (<code>standard</code>) or instances in a VPC (<code>vpc</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance that the address is associated with (if any).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.NetworkInterfaceOwnerId">
            <summary>
            Gets and sets the property NetworkInterfaceOwnerId. 
            <para>
            The ID of the AWS account that owns the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP address associated with the Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AllocateAddressRequest">
            <summary>
            Container for the parameters to the AllocateAddress operation.
            Acquires an Elastic IP address.
            
             
            <para>
            An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateAddressRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            Set to <code>vpc</code> to allocate the address for use with instances in a VPC.
            </para>
             
            <para>
            Default: The address is for use with instances in EC2-Classic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AllocateAddressResponse">
            <summary>
            Contains the output of AllocateAddress.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateAddressResponse.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            [EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic IP address
            for use with instances in a VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateAddressResponse.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            Indicates whether this Elastic IP address is for use with instances in EC2-Classic
            (<code>standard</code>) or instances in a VPC (<code>vpc</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateAddressResponse.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AllocateHostsRequest">
            <summary>
            Container for the parameters to the AllocateHosts operation.
            Allocates a Dedicated Host to your account. At minimum you need to specify the instance
            size type, Availability Zone, and quantity of hosts you want to allocate.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateHostsRequest.AutoPlacement">
            <summary>
            Gets and sets the property AutoPlacement. 
            <para>
            This is enabled by default. This property allows instances to be automatically placed
            onto available Dedicated Hosts, when you are launching instances without specifying
            a host ID.
            </para>
             
            <para>
            Default: Enabled
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateHostsRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the Dedicated Hosts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateHostsRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure idempotency of the request.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateHostsRequest.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            Specify the instance type that you want your Dedicated Hosts to be configured for.
            When you specify the instance type, that is the only instance type that you can launch
            onto that host.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateHostsRequest.Quantity">
            <summary>
            Gets and sets the property Quantity. 
            <para>
            The number of Dedicated Hosts you want to allocate to your account with these parameters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AllocateHostsResponse">
            <summary>
            Contains the output of AllocateHosts.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateHostsResponse.HostIds">
            <summary>
            Gets and sets the property HostIds. 
            <para>
            The ID of the allocated Dedicated Host. This is used when you want to launch an instance
            onto a specific host.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssignPrivateIpAddressesRequest">
            <summary>
            Container for the parameters to the AssignPrivateIpAddresses operation.
            Assigns one or more secondary private IP addresses to the specified network interface.
            You can specify one or more specific secondary IP addresses, or you can specify the
            number of secondary IP addresses to be automatically assigned within the subnet's
            CIDR block range. The number of secondary IP addresses that you can assign to an instance
            varies by instance type. For information about instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information
            about Elastic IP addresses, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            AssignPrivateIpAddresses is available only in EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssignPrivateIpAddressesRequest.AllowReassignment">
            <summary>
            Gets and sets the property AllowReassignment. 
            <para>
            Indicates whether to allow an IP address that is already assigned to another network
            interface or instance to be reassigned to the specified network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssignPrivateIpAddressesRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssignPrivateIpAddressesRequest.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            One or more IP addresses to be assigned as a secondary private IP address to the network
            interface. You can't specify this parameter when also specifying a number of secondary
            IP addresses.
            </para>
             
            <para>
            If you don't specify an IP address, Amazon EC2 automatically selects an IP address
            within the subnet range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssignPrivateIpAddressesRequest.SecondaryPrivateIpAddressCount">
            <summary>
            Gets and sets the property SecondaryPrivateIpAddressCount. 
            <para>
            The number of secondary IP addresses to assign to the network interface. You can't
            specify this parameter when also specifying private IP addresses.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssignPrivateIpAddressesResponse">
            <summary>
            This is the response object from the AssignPrivateIpAddresses operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateAddressRequest">
            <summary>
            Container for the parameters to the AssociateAddress operation.
            Associates an Elastic IP address with an instance or a network interface.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            [EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already
            associated with a different instance, it is disassociated from that instance and associated
            with the specified instance.
            </para>
             
            <para>
            [VPC in an EC2-Classic account] If you don't specify a private IP address, the Elastic
            IP address is associated with the primary IP address. If the Elastic IP address is
            already associated with a different instance or a network interface, you get an error
            unless you allow reassociation.
            </para>
             <important> 
            <para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error, and you may be charged for each time the Elastic IP address
            is remapped to the same instance. For more information, see the <i>Elastic IP Addresses</i>
            section of <a href="http://aws.amazon.com/ec2/pricing/">Amazon EC2 Pricing</a>.
            </para>
             </important>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AssociateAddressRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AssociateAddressRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates AssociateAddressRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance. This is required for EC2-Classic. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. The operation fails if you specify an instance ID unless exactly one network interface is attached.</param>
            <param name="publicIp">The Elastic IP address. This is required for EC2-Classic.</param>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            [EC2-VPC] The allocation ID. This is required for EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.AllowReassociation">
            <summary>
            Gets and sets the property AllowReassociation. 
            <para>
            [EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP
            address that is already associated with an instance or network interface to be reassociated
            with the specified instance or network interface. Otherwise, the operation fails.
            In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can
            specify false to ensure the operation fails if the Elastic IP address is already associated
            with another resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance. This is required for EC2-Classic. For EC2-VPC, you can specify
            either the instance ID or the network interface ID, but not both. The operation fails
            if you specify an instance ID unless exactly one network interface is attached.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            [EC2-VPC] The ID of the network interface. If the instance has more than one network
            interface, you must specify a network interface ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            [EC2-VPC] The primary or secondary private IP address to associate with the Elastic
            IP address. If no private IP address is specified, the Elastic IP address is associated
            with the primary private IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Elastic IP address. This is required for EC2-Classic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateAddressResponse">
            <summary>
            Contains the output of AssociateAddress.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressResponse.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            [EC2-VPC] The ID that represents the association of the Elastic IP address with an
            instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateDhcpOptionsRequest">
            <summary>
            Container for the parameters to the AssociateDhcpOptions operation.
            Associates a set of DHCP options (that you've previously created) with the specified
            VPC, or associates no DHCP options with the VPC.
            
             
            <para>
            After you associate the options with the VPC, any existing instances and all new instances
            that you launch in that VPC use the options. You don't need to restart or relaunch
            the instances. They automatically pick up the changes within a few hours, depending
            on how frequently the instance renews its DHCP lease. You can explicitly renew the
            lease using the operating system on the instance.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AssociateDhcpOptionsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AssociateDhcpOptionsRequest.#ctor(System.String)">
            <summary>
            Instantiates AssociateDhcpOptionsRequest with the parameterized properties
            </summary>
            <param name="vpcId">The ID of the VPC.</param>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateDhcpOptionsRequest.DhcpOptionsId">
            <summary>
            Gets and sets the property DhcpOptionsId. 
            <para>
            The ID of the DHCP options set, or <code>default</code> to associate no DHCP options
            with the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateDhcpOptionsRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateDhcpOptionsResponse">
            <summary>
            This is the response object from the AssociateDhcpOptions operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateRouteTableRequest">
            <summary>
            Container for the parameters to the AssociateRouteTable operation.
            Associates a subnet with a route table. The subnet and route table must be in the
            same VPC. This association causes traffic originating from the subnet to be routed
            according to the routes in the route table. The action returns an association ID,
            which you need in order to disassociate the route table from the subnet later. A route
            table can be associated with multiple subnets.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateRouteTableRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateRouteTableRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateRouteTableResponse">
            <summary>
            Contains the output of AssociateRouteTable.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateRouteTableResponse.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The route table association ID (needed to disassociate the route table).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachClassicLinkVpcRequest">
            <summary>
            Container for the parameters to the AttachClassicLinkVpc operation.
            Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of
            the VPC's security groups. You cannot link an EC2-Classic instance to more than one
            VPC at a time. You can only link an instance that's in the <code>running</code> state.
            An instance is automatically unlinked from a VPC when it's stopped - you can link
            it to the VPC again when you restart it.
            
             
            <para>
            After you've linked an instance, you cannot change the VPC security groups that are
            associated with it. To change the security groups, you must first unlink the instance,
            and then link it again.
            </para>
             
            <para>
            Linking your instance to a VPC is sometimes referred to as <i>attaching</i> your instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachClassicLinkVpcRequest.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The ID of one or more of the VPC's security groups. You cannot specify security groups
            from a different VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachClassicLinkVpcRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachClassicLinkVpcRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of a ClassicLink-enabled VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachClassicLinkVpcResponse">
            <summary>
            Contains the output of AttachClassicLinkVpc.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachClassicLinkVpcResponse.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachInternetGatewayRequest">
            <summary>
            Container for the parameters to the AttachInternetGateway operation.
            Attaches an Internet gateway to a VPC, enabling connectivity between the Internet
            and the VPC. For more information about your VPC and Internet gateway, see the <a
            href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon Virtual Private
            Cloud User Guide</a>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachInternetGatewayRequest.InternetGatewayId">
            <summary>
            Gets and sets the property InternetGatewayId. 
            <para>
            The ID of the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachInternetGatewayRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachInternetGatewayResponse">
            <summary>
            This is the response object from the AttachInternetGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachNetworkInterfaceRequest">
            <summary>
            Container for the parameters to the AttachNetworkInterface operation.
            Attaches a network interface to an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachNetworkInterfaceRequest.DeviceIndex">
            <summary>
            Gets and sets the property DeviceIndex. 
            <para>
            The index of the device for the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachNetworkInterfaceRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachNetworkInterfaceRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachNetworkInterfaceResponse">
            <summary>
            Contains the output of AttachNetworkInterface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachNetworkInterfaceResponse.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The ID of the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachVolumeRequest">
            <summary>
            Container for the parameters to the AttachVolume operation.
            Attaches an EBS volume to a running or stopped instance and exposes it to the instance
            with the specified device name.
            
             
            <para>
            Encrypted EBS volumes may only be attached to instances that support Amazon EBS encryption.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For a list of supported device names, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching
            an EBS Volume to an Instance</a>. Any device names that aren't reserved for instance
            store volumes can be used for EBS volumes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon
            EC2 Instance Store</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            If a volume has an AWS Marketplace product code:
            </para>
             <ul> <li> 
            <para>
            The volume can be attached only to a stopped instance.
            </para>
             </li> <li> 
            <para>
            AWS Marketplace product codes are copied from the volume to the instance.
            </para>
             </li> <li> 
            <para>
            You must be subscribed to the product.
            </para>
             </li> <li> 
            <para>
            The instance type and operating system of the instance must support the product. For
            example, you can't detach a volume from a Windows instance and attach it to a Linux
            instance.
            </para>
             </li> </ul> 
            <para>
            For an overview of the AWS Marketplace, see <a href="https://aws.amazon.com/marketplace/help/200900000">Introducing
            AWS Marketplace</a>.
            </para>
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching
            Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AttachVolumeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AttachVolumeRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates AttachVolumeRequest with the parameterized properties
            </summary>
            <param name="volumeId">The ID of the EBS volume. The volume and instance must be within the same Availability Zone.</param>
            <param name="instanceId">The ID of the instance.</param>
            <param name="device">The device name to expose to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</param>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVolumeRequest.Device">
            <summary>
            Gets and sets the property Device. 
            <para>
            The device name to expose to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVolumeRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVolumeRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the EBS volume. The volume and instance must be within the same Availability
            Zone.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachVolumeResponse">
            <summary>
            Contains the response data from the AttachVolume operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVolumeResponse.Attachment">
            <summary>
            Gets and sets the Attachment member
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachVpnGatewayRequest">
            <summary>
            Container for the parameters to the AttachVpnGateway operation.
            Attaches a virtual private gateway to a VPC. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AttachVpnGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AttachVpnGatewayRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates AttachVpnGatewayRequest with the parameterized properties
            </summary>
            <param name="vpnGatewayId">The ID of the virtual private gateway.</param>
            <param name="vpcId">The ID of the VPC.</param>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVpnGatewayRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVpnGatewayRequest.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachVpnGatewayResponse">
            <summary>
            Contains the output of AttachVpnGateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVpnGatewayResponse.VpcAttachment">
            <summary>
            Gets and sets the property VpcAttachment. 
            <para>
            Information about the attachment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest">
            <summary>
            Container for the parameters to the AuthorizeSecurityGroupEgress operation.
            [EC2-VPC only] Adds one or more egress rules to a security group for use with a VPC.
            Specifically, this action permits instances to send traffic to one or more destination
            CIDR IP address ranges, or to one or more destination security groups for the same
            VPC. This action doesn't apply to security groups for use in EC2-Classic. For more
            information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            
             <important> 
            <para>
            You can have up to 50 rules per security group (covering both ingress and egress rules).
            </para>
             </important> 
            <para>
            Each rule consists of the protocol (for example, TCP), plus either a CIDR range or
            a source group. For the TCP and UDP protocols, you must also specify the destination
            port or port range. For the ICMP protocol, you must also specify the ICMP type and
            code. You can use -1 for the type or code to mean all types or all codes.
            </para>
             
            <para>
            Rule changes are propagated to affected instances as quickly as possible. However,
            a small delay might occur.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest.IpPermissions">
            <summary>
            Gets and sets the property IpPermissions. 
            <para>
            A set of IP permissions. You can't specify a destination security group and a CIDR
            IP address range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AuthorizeSecurityGroupEgressResponse">
            <summary>
            This is the response object from the AuthorizeSecurityGroupEgress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest">
            <summary>
            Container for the parameters to the AuthorizeSecurityGroupIngress operation.
            Adds one or more ingress rules to a security group.
            
             <important> 
            <para>
            EC2-Classic: You can have up to 100 rules per group.
            </para>
             
            <para>
            EC2-VPC: You can have up to 50 rules per group (covering both ingress and egress rules).
            </para>
             </important> 
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
             
            <para>
            [EC2-Classic] This action gives one or more CIDR IP address ranges permission to access
            a security group in your account, or gives one or more security groups (called the
            <i>source groups</i>) permission to access a security group for your account. A source
            group can be for your own AWS account, or another.
            </para>
             
            <para>
            [EC2-VPC] This action gives one or more CIDR IP address ranges permission to access
            a security group in your VPC, or gives one or more other security groups (called the
            <i>source groups</i>) permission to access a security group for your VPC. The security
            groups must all be for the same VPC.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.EC2.Model.IpPermission})">
            <summary>
            Instantiates AuthorizeSecurityGroupIngressRequest with the parameterized properties
            </summary>
            <param name="groupName">[EC2-Classic, default VPC] The name of the security group.</param>
            <param name="ipPermissions">A set of IP permissions. Can be used to specify multiple rules in a single command.</param>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group. Required for a nondefault VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            [EC2-Classic, default VPC] The name of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest.IpPermissions">
            <summary>
            Gets and sets the property IpPermissions. 
            <para>
            A set of IP permissions. Can be used to specify multiple rules in a single command.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AuthorizeSecurityGroupIngressResponse">
            <summary>
            This is the response object from the AuthorizeSecurityGroupIngress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AvailabilityZone">
            <summary>
            Describes an Availability Zone.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailabilityZone.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            Any messages about the Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailabilityZone.RegionName">
            <summary>
            Gets and sets the property RegionName. 
            <para>
            The name of the region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailabilityZone.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailabilityZone.ZoneName">
            <summary>
            Gets and sets the property ZoneName. 
            <para>
            The name of the Availability Zone.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AvailabilityZoneMessage">
            <summary>
            Describes a message about an Availability Zone.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailabilityZoneMessage.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The message about the Availability Zone.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AvailableCapacity">
            <summary>
            The capacity information for instances launched onto the Dedicated Host.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailableCapacity.AvailableInstanceCapacity">
            <summary>
            Gets and sets the property AvailableInstanceCapacity. 
            <para>
            The total number of instances that the Dedicated Host supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailableCapacity.AvailableVCpus">
            <summary>
            Gets and sets the property AvailableVCpus. 
            <para>
            The number of vCPUs available on the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.BlockDeviceMapping">
            <summary>
            Describes a block device mapping.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BlockDeviceMapping.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BlockDeviceMapping.Ebs">
            <summary>
            Gets and sets the property Ebs. 
            <para>
            Parameters used to automatically set up EBS volumes when the instance is launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BlockDeviceMapping.NoDevice">
            <summary>
            Gets and sets the property NoDevice. 
            <para>
            Suppresses the specified device included in the block device mapping of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BlockDeviceMapping.VirtualName">
            <summary>
            Gets and sets the property VirtualName. 
            <para>
            The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered
            starting from 0. An instance type with 2 available instance store volumes can specify
            mappings for <code>ephemeral0</code> and <code>ephemeral1</code>.The number of available
            instance store volumes depends on the instance type. After you connect to the instance,
            you must mount the volume.
            </para>
             
            <para>
            Constraints: For M3 instances, you must specify instance store volumes in the block
            device mapping for the instance. When you launch an M3 instance, we ignore any instance
            store volumes specified in the block device mapping for the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.BundleInstanceRequest">
            <summary>
            Container for the parameters to the BundleInstance operation.
            Bundles an Amazon instance store-backed Windows instance.
            
             
            <para>
            During bundling, only the root device volume (C:\) is bundled. Data on other instance
            store volumes is not preserved.
            </para>
             <note> 
            <para>
            This action is not applicable for Linux/Unix instances or Windows instances that are
            backed by Amazon EBS.
            </para>
             </note> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Creating_InstanceStoreBacked_WinAMI.html">Creating
            an Instance Store-Backed Windows AMI</a>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.BundleInstanceRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.BundleInstanceRequest.#ctor(System.String,Amazon.EC2.Model.Storage)">
            <summary>
            Instantiates BundleInstanceRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance to bundle. Type: String Default: None Required: Yes</param>
            <param name="storage">The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.</param>
        </member>
        <member name="P:Amazon.EC2.Model.BundleInstanceRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance to bundle.
            </para>
             
            <para>
            Type: String
            </para>
             
            <para>
            Default: None
            </para>
             
            <para>
            Required: Yes
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleInstanceRequest.Storage">
            <summary>
            Gets and sets the property Storage. 
            <para>
            The bucket in which to store the AMI. You can specify a bucket that you already own
            or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that
            belongs to someone else, Amazon EC2 returns an error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.BundleInstanceResponse">
            <summary>
            Contains the output of BundleInstance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleInstanceResponse.BundleTask">
            <summary>
            Gets and sets the property BundleTask. 
            <para>
            Information about the bundle task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.BundleTask">
            <summary>
            Describes a bundle task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.BundleId">
            <summary>
            Gets and sets the property BundleId. 
            <para>
            The ID of the bundle task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.BundleTaskError">
            <summary>
            Gets and sets the property BundleTaskError. 
            <para>
            If the task fails, a description of the error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance associated with this bundle task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.Progress">
            <summary>
            Gets and sets the property Progress. 
            <para>
            The level of task completion, as a percent (for example, 20%).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time this task started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.Storage">
            <summary>
            Gets and sets the property Storage. 
            <para>
            The Amazon S3 storage locations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            The time of the most recent update for the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.BundleTaskError">
            <summary>
            Describes an error for <a>BundleInstance</a>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTaskError.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The error code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTaskError.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The error message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelBundleTaskRequest">
            <summary>
            Container for the parameters to the CancelBundleTask operation.
            Cancels a bundling operation for an instance store-backed Windows instance.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CancelBundleTaskRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CancelBundleTaskRequest.#ctor(System.String)">
            <summary>
            Instantiates CancelBundleTaskRequest with the parameterized properties
            </summary>
            <param name="bundleId">The ID of the bundle task.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CancelBundleTaskRequest.BundleId">
            <summary>
            Gets and sets the property BundleId. 
            <para>
            The ID of the bundle task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelBundleTaskResponse">
            <summary>
            Contains the output of CancelBundleTask.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelBundleTaskResponse.BundleTask">
            <summary>
            Gets and sets the property BundleTask. 
            <para>
            Information about the bundle task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelConversionTaskRequest">
            <summary>
            Container for the parameters to the CancelConversionTask operation.
            Cancels an active conversion task. The task can be the import of an instance or volume.
            The action removes all artifacts of the conversion, including a partially uploaded
            volume or instance. If the conversion is complete or is in the process of transferring
            the final disk image, the command fails and returns an exception.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing
            a Virtual Machine Using the Amazon EC2 CLI</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelConversionTaskRequest.ConversionTaskId">
            <summary>
            Gets and sets the property ConversionTaskId. 
            <para>
            The ID of the conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelConversionTaskRequest.ReasonMessage">
            <summary>
            Gets and sets the property ReasonMessage. 
            <para>
            The reason for canceling the conversion task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelConversionTaskResponse">
            <summary>
            This is the response object from the CancelConversionTask operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelExportTaskRequest">
            <summary>
            Container for the parameters to the CancelExportTask operation.
            Cancels an active export task. The request removes all artifacts of the export, including
            any partially-created Amazon S3 objects. If the export task is complete or is in the
            process of transferring the final disk image, the command fails and returns an error.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelExportTaskRequest.ExportTaskId">
            <summary>
            Gets and sets the property ExportTaskId. 
            <para>
            The ID of the export task. This is the ID returned by <code>CreateInstanceExportTask</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelExportTaskResponse">
            <summary>
            This is the response object from the CancelExportTask operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelImportTaskRequest">
            <summary>
            Container for the parameters to the CancelImportTask operation.
            Cancels an in-process import virtual machine or import snapshot task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelImportTaskRequest.CancelReason">
            <summary>
            Gets and sets the property CancelReason. 
            <para>
            The reason for canceling the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelImportTaskRequest.ImportTaskId">
            <summary>
            Gets and sets the property ImportTaskId. 
            <para>
            The ID of the import image or import snapshot task to be canceled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelImportTaskResponse">
            <summary>
            Contains the output for CancelImportTask.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelImportTaskResponse.ImportTaskId">
            <summary>
            Gets and sets the property ImportTaskId. 
            <para>
            The ID of the task being canceled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelImportTaskResponse.PreviousState">
            <summary>
            Gets and sets the property PreviousState. 
            <para>
            The current state of the task being canceled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelImportTaskResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the task being canceled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelledSpotInstanceRequest">
            <summary>
            Describes a request to cancel a Spot instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelledSpotInstanceRequest.SpotInstanceRequestId">
            <summary>
            Gets and sets the property SpotInstanceRequestId. 
            <para>
            The ID of the Spot instance request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelledSpotInstanceRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the Spot instance request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelReservedInstancesListingRequest">
            <summary>
            Container for the parameters to the CancelReservedInstancesListing operation.
            Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelReservedInstancesListingRequest.ReservedInstancesListingId">
            <summary>
            Gets and sets the property ReservedInstancesListingId. 
            <para>
            The ID of the Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelReservedInstancesListingResponse">
            <summary>
            Contains the output of CancelReservedInstancesListing.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelReservedInstancesListingResponse.ReservedInstancesListings">
            <summary>
            Gets and sets the property ReservedInstancesListings. 
            <para>
            The Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelSpotFleetRequestsError">
            <summary>
            Describes a Spot fleet error.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotFleetRequestsError.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The error code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotFleetRequestsError.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The description for the error code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelSpotFleetRequestsErrorItem">
            <summary>
            Describes a Spot fleet request that was not successfully canceled.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotFleetRequestsErrorItem.Error">
            <summary>
            Gets and sets the property Error. 
            <para>
            The error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotFleetRequestsErrorItem.SpotFleetRequestId">
            <summary>
            Gets and sets the property SpotFleetRequestId. 
            <para>
            The ID of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelSpotFleetRequestsRequest">
            <summary>
            Container for the parameters to the CancelSpotFleetRequests operation.
            Cancels the specified Spot fleet requests.
            
             
            <para>
            After you cancel a Spot fleet request, the Spot fleet launches no new Spot instances.
            You must specify whether the Spot fleet should also terminate its Spot instances.
            If you terminate the instances, the Spot fleet request enters the <code>cancelled_terminating</code>
            state. Otherwise, the Spot fleet request enters the <code>cancelled_running</code>
            state and the instances continue to run until they are interrupted or you terminate
            them manually.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotFleetRequestsRequest.SpotFleetRequestIds">
            <summary>
            Gets and sets the property SpotFleetRequestIds. 
            <para>
            The IDs of the Spot fleet requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotFleetRequestsRequest.TerminateInstances">
            <summary>
            Gets and sets the property TerminateInstances. 
            <para>
            Indicates whether to terminate instances for a Spot fleet request if it is canceled
            successfully.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelSpotFleetRequestsResponse">
            <summary>
            Contains the output of CancelSpotFleetRequests.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotFleetRequestsResponse.SuccessfulFleetRequests">
            <summary>
            Gets and sets the property SuccessfulFleetRequests. 
            <para>
            Information about the Spot fleet requests that are successfully canceled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotFleetRequestsResponse.UnsuccessfulFleetRequests">
            <summary>
            Gets and sets the property UnsuccessfulFleetRequests. 
            <para>
            Information about the Spot fleet requests that are not successfully canceled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelSpotFleetRequestsSuccessItem">
            <summary>
            Describes a Spot fleet request that was successfully canceled.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotFleetRequestsSuccessItem.CurrentSpotFleetRequestState">
            <summary>
            Gets and sets the property CurrentSpotFleetRequestState. 
            <para>
            The current state of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotFleetRequestsSuccessItem.PreviousSpotFleetRequestState">
            <summary>
            Gets and sets the property PreviousSpotFleetRequestState. 
            <para>
            The previous state of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotFleetRequestsSuccessItem.SpotFleetRequestId">
            <summary>
            Gets and sets the property SpotFleetRequestId. 
            <para>
            The ID of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelSpotInstanceRequestsRequest">
            <summary>
            Container for the parameters to the CancelSpotInstanceRequests operation.
            Cancels one or more Spot instance requests. Spot instances are instances that Amazon
            EC2 starts on your behalf when the bid price that you specify exceeds the current
            Spot price. Amazon EC2 periodically sets the Spot price based on available Spot instance
            capacity and current Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             <important> 
            <para>
            Canceling a Spot instance request does not terminate running Spot instances associated
            with the request.
            </para>
             </important>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CancelSpotInstanceRequestsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CancelSpotInstanceRequestsRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates CancelSpotInstanceRequestsRequest with the parameterized properties
            </summary>
            <param name="spotInstanceRequestIds">One or more Spot instance request IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotInstanceRequestsRequest.SpotInstanceRequestIds">
            <summary>
            Gets and sets the property SpotInstanceRequestIds. 
            <para>
            One or more Spot instance request IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelSpotInstanceRequestsResponse">
            <summary>
            Contains the output of CancelSpotInstanceRequests.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotInstanceRequestsResponse.CancelledSpotInstanceRequests">
            <summary>
            Gets and sets the property CancelledSpotInstanceRequests. 
            <para>
            One or more Spot instance requests.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ClassicLinkDnsSupport">
            <summary>
            Describes the ClassicLink DNS support status of a VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ClassicLinkDnsSupport.ClassicLinkDnsSupported">
            <summary>
            Gets and sets the property ClassicLinkDnsSupported. 
            <para>
            Indicates whether ClassicLink DNS support is enabled for the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ClassicLinkDnsSupport.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ClassicLinkInstance">
            <summary>
            Describes a linked EC2-Classic instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ClassicLinkInstance.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            A list of security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ClassicLinkInstance.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ClassicLinkInstance.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ClassicLinkInstance.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ClientData">
            <summary>
            Describes the client-specific data.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ClientData.Comment">
            <summary>
            Gets and sets the property Comment. 
            <para>
            A user-defined comment about the disk upload.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ClientData.UploadEnd">
            <summary>
            Gets and sets the property UploadEnd. 
            <para>
            The time that the disk upload ends.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ClientData.UploadSize">
            <summary>
            Gets and sets the property UploadSize. 
            <para>
            The size of the uploaded disk image, in GiB.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ClientData.UploadStart">
            <summary>
            Gets and sets the property UploadStart. 
            <para>
            The time that the disk upload starts.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ConfirmProductInstanceRequest">
            <summary>
            Container for the parameters to the ConfirmProductInstance operation.
            Determines whether a product code is associated with an instance. This action can
            only be used by the owner of the product code. It is useful when a product code owner
            needs to verify whether another user's instance is eligible for support.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ConfirmProductInstanceRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ConfirmProductInstanceRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates ConfirmProductInstanceRequest with the parameterized properties
            </summary>
            <param name="productCode">The product code. This must be a product code that you own.</param>
            <param name="instanceId">The ID of the instance.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ConfirmProductInstanceRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConfirmProductInstanceRequest.ProductCode">
            <summary>
            Gets and sets the property ProductCode. 
            <para>
            The product code. This must be a product code that you own.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ConfirmProductInstanceResponse">
            <summary>
            Contains the output of ConfirmProductInstance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConfirmProductInstanceResponse.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the instance owner. This is only present if the product code
            is attached to the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConfirmProductInstanceResponse.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            The return value of the request. Returns <code>true</code> if the specified product
            code is owned by the requester and associated with the specified instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ConversionTask">
            <summary>
            Describes a conversion task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.ConversionTaskId">
            <summary>
            Gets and sets the property ConversionTaskId. 
            <para>
            The ID of the conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.ExpirationTime">
            <summary>
            Gets and sets the property ExpirationTime. 
            <para>
            The time when the task expires. If the upload isn't complete before the expiration
            time, we automatically cancel the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.ImportInstance">
            <summary>
            Gets and sets the property ImportInstance. 
            <para>
            If the task is for importing an instance, this contains information about the import
            instance task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.ImportVolume">
            <summary>
            Gets and sets the property ImportVolume. 
            <para>
            If the task is for importing a volume, this contains information about the import
            volume task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message related to the conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CopyImageRequest">
            <summary>
            Container for the parameters to the CopyImage operation.
            Initiates the copy of an AMI from the specified source region to the current region.
            You specify the destination region by using its endpoint when making the request.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html">Copying
            AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure idempotency of the request.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the new AMI in the destination region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Specifies whether the destination snapshots of the copied image should be encrypted.
            The default CMK for EBS is used unless a non-default AWS Key Management Service (AWS
            KMS) CMK is specified with <code>KmsKeyId</code>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting
            the snapshots of an image during a copy operation. This parameter is only required
            if you want to use a non-default CMK; if this parameter is not specified, the default
            CMK for EBS is used. The ARN contains the <code>arn:aws:kms</code> namespace, followed
            by the region of the CMK, the AWS account ID of the CMK owner, the <code>key</code>
            namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.
            The specified CMK must exist in the region that the snapshot is being copied to. If
            a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be
            set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the new AMI in the destination region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.SourceImageId">
            <summary>
            Gets and sets the property SourceImageId. 
            <para>
            The ID of the AMI to copy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.SourceRegion">
            <summary>
            Gets and sets the property SourceRegion. 
            <para>
            The name of the region that contains the AMI to copy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CopyImageResponse">
            <summary>
            Contains the output of CopyImage.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageResponse.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the new AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CopySnapshotRequest">
            <summary>
            Container for the parameters to the CopySnapshot operation.
            Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can
            copy the snapshot within the same region or from one region to another. You can use
            the snapshot to create EBS volumes or Amazon Machine Images (AMIs). The snapshot is
            copied to the regional endpoint that you send the HTTP request to.
            
             
            <para>
            Copies of encrypted EBS snapshots remain encrypted. Copies of unencrypted snapshots
            remain unencrypted, unless the <code>Encrypted</code> flag is specified during the
            snapshot copy operation. By default, encrypted snapshot copies use the default AWS
            Key Management Service (AWS KMS) customer master key (CMK); however, you can specify
            a non-default CMK with the <code>KmsKeyId</code> parameter. 
            </para>
             <note> 
            <para>
            To copy an encrypted snapshot that has been shared from another account, you must
            have permissions for the CMK used to encrypt the snapshot.
            </para>
             </note> <note> 
            <para>
            Snapshots created by the CopySnapshot action have an arbitrary volume ID that should
            not be used for any purpose.
            </para>
             </note> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html">Copying
            an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the EBS snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.DestinationRegion">
            <summary>
            Gets and sets the property DestinationRegion. 
            <para>
            The destination region to use in the <code>PresignedUrl</code> parameter of a snapshot
            copy operation. This parameter is only valid for specifying the destination region
            in a <code>PresignedUrl</code> parameter, where it is required.
            </para>
             <note> 
            <para>
             <code>CopySnapshot</code> sends the snapshot copy to the regional endpoint that you
            send the HTTP request to, such as <code>ec2.us-east-1.amazonaws.com</code> (in the
            AWS CLI, this is specified with the <code>--region</code> parameter or the default
            region in your AWS configuration file).
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Specifies whether the destination snapshot should be encrypted. You can encrypt a
            copy of an unencrypted snapshot using this flag, but you cannot use it to create an
            unencrypted copy from an encrypted snapshot. Your default CMK for EBS is used unless
            a non-default AWS Key Management Service (AWS KMS) CMK is specified with <code>KmsKeyId</code>.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when creating
            the snapshot copy. This parameter is only required if you want to use a non-default
            CMK; if this parameter is not specified, the default CMK for EBS is used. The ARN
            contains the <code>arn:aws:kms</code> namespace, followed by the region of the CMK,
            the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the
            CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.
            The specified CMK must exist in the region that the snapshot is being copied to. If
            a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be
            set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.PresignedUrl">
            <summary>
            Gets and sets the property PresignedUrl. 
            <para>
            The pre-signed URL that facilitates copying an encrypted snapshot. This parameter
            is only required when copying an encrypted snapshot with the Amazon EC2 Query API;
            it is available as an optional parameter in all other cases. The <code>PresignedUrl</code>
            should use the snapshot source endpoint, the <code>CopySnapshot</code> action, and
            include the <code>SourceRegion</code>, <code>SourceSnapshotId</code>, and <code>DestinationRegion</code>
            parameters. The <code>PresignedUrl</code> must be signed using AWS Signature Version
            4. Because EBS snapshots are stored in Amazon S3, the signing algorithm for this parameter
            uses the same logic that is described in <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating
            Requests by Using Query Parameters (AWS Signature Version 4)</a> in the <i>Amazon
            Simple Storage Service API Reference</i>. An invalid or improperly signed <code>PresignedUrl</code>
            will cause the copy operation to fail asynchronously, and the snapshot will move to
            an <code>error</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.SourceRegion">
            <summary>
            Gets and sets the property SourceRegion. 
            <para>
            The ID of the region that contains the snapshot to be copied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.SourceSnapshotId">
            <summary>
            Gets and sets the property SourceSnapshotId. 
            <para>
            The ID of the EBS snapshot to copy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CopySnapshotResponse">
            <summary>
            Contains the output of CopySnapshot.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotResponse.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the new snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateCustomerGatewayRequest">
            <summary>
            Container for the parameters to the CreateCustomerGateway operation.
            Provides information to AWS about your VPN customer gateway device. The customer gateway
            is the appliance at your end of the VPN connection. (The device on the AWS side of
            the VPN connection is the virtual private gateway.) You must provide the Internet-routable
            IP address of the customer gateway's external interface. The IP address must be static
            and may be behind a device performing network address translation (NAT).
            
             
            <para>
            For devices that use Border Gateway Protocol (BGP), you can also provide the device's
            BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network.
            If you don't have an ASN already, you can use a private ASN (in the 64512 - 65534
            range).
            </para>
             <note> 
            <para>
            Amazon EC2 supports all 2-byte ASN numbers in the range of 1 - 65534, with the exception
            of 7224, which is reserved in the <code>us-east-1</code> region, and 9059, which is
            reserved in the <code>eu-west-1</code> region.
            </para>
             </note> 
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
             <important> 
            <para>
            You cannot create more than one customer gateway with the same VPN type, IP address,
            and BGP ASN parameter values. If you run an identical request more than one time,
            the first request creates the customer gateway, and subsequent requests return information
            about the existing customer gateway. The subsequent requests do not create new customer
            gateway resources.
            </para>
             </important>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateCustomerGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateCustomerGatewayRequest.#ctor(Amazon.EC2.GatewayType,System.String,System.Int32)">
            <summary>
            Instantiates CreateCustomerGatewayRequest with the parameterized properties
            </summary>
            <param name="type">The type of VPN connection that this customer gateway supports (<code>ipsec.1</code>).</param>
            <param name="publicIp">The Internet-routable IP address for the customer gateway's outside interface. The address must be static.</param>
            <param name="bgpAsn">For devices that support BGP, the customer gateway's BGP ASN. Default: 65000</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateCustomerGatewayRequest.BgpAsn">
            <summary>
            Gets and sets the property BgpAsn. 
            <para>
            For devices that support BGP, the customer gateway's BGP ASN.
            </para>
             
            <para>
            Default: 65000
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateCustomerGatewayRequest.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Internet-routable IP address for the customer gateway's outside interface. The
            address must be static.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateCustomerGatewayRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection that this customer gateway supports (<code>ipsec.1</code>).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateCustomerGatewayResponse">
            <summary>
            Contains the output of CreateCustomerGateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateCustomerGatewayResponse.CustomerGateway">
            <summary>
            Gets and sets the property CustomerGateway. 
            <para>
            Information about the customer gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateDhcpOptionsRequest">
            <summary>
            Container for the parameters to the CreateDhcpOptions operation.
            Creates a set of DHCP options for your VPC. After creating the set, you must associate
            it with the VPC, causing all existing and new instances that you launch in the VPC
            to use this set of DHCP options. The following are the individual DHCP options you
            can specify. For more information about the options, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC
            2132</a>.
            
             <ul> <li> 
            <para>
             <code>domain-name-servers</code> - The IP addresses of up to four domain name servers,
            or AmazonProvidedDNS. The default DHCP option set specifies AmazonProvidedDNS. If
            specifying more than one domain name server, specify the IP addresses in a single
            parameter, separated by commas. If you want your instance to receive a custom DNS
            hostname as specified in <code>domain-name</code>, you must set <code>domain-name-servers</code>
            to a custom DNS server.
            </para>
             </li> <li> 
            <para>
             <code>domain-name</code> - If you're using AmazonProvidedDNS in "us-east-1", specify
            "ec2.internal". If you're using AmazonProvidedDNS in another region, specify "region.compute.internal"
            (for example, "ap-northeast-1.compute.internal"). Otherwise, specify a domain name
            (for example, "MyCompany.com"). This value is used to complete unqualified DNS hostnames.
            <b>Important</b>: Some Linux operating systems accept multiple domain names separated
            by spaces. However, Windows and other Linux operating systems treat the value as a
            single domain, which results in unexpected behavior. If your DHCP options set is associated
            with a VPC that has instances with multiple operating systems, specify only one domain
            name.
            </para>
             </li> <li> 
            <para>
             <code>ntp-servers</code> - The IP addresses of up to four Network Time Protocol (NTP)
            servers.
            </para>
             </li> <li> 
            <para>
             <code>netbios-name-servers</code> - The IP addresses of up to four NetBIOS name servers.
            </para>
             </li> <li> 
            <para>
             <code>netbios-node-type</code> - The NetBIOS node type (1, 2, 4, or 8). We recommend
            that you specify 2 (broadcast and multicast are not currently supported). For more
            information about these node types, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC
            2132</a>.
            </para>
             </li> </ul> 
            <para>
            Your VPC automatically starts out with a set of DHCP options that includes only a
            DNS server that we provide (AmazonProvidedDNS). If you create a set of options, and
            if your VPC has an Internet gateway, make sure to set the <code>domain-name-servers</code>
            option either to <code>AmazonProvidedDNS</code> or to a domain name server of your
            choice. For more information about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateDhcpOptionsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateDhcpOptionsRequest.#ctor(System.Collections.Generic.List{Amazon.EC2.Model.DhcpConfiguration})">
            <summary>
            Instantiates CreateDhcpOptionsRequest with the parameterized properties
            </summary>
            <param name="dhcpConfigurations">A DHCP configuration option.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateDhcpOptionsRequest.DhcpConfigurations">
            <summary>
            Gets and sets the property DhcpConfigurations. 
            <para>
            A DHCP configuration option.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateDhcpOptionsResponse">
            <summary>
            Contains the output of CreateDhcpOptions.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateDhcpOptionsResponse.DhcpOptions">
            <summary>
            Gets and sets the property DhcpOptions. 
            <para>
            A set of DHCP options.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateFlowLogsRequest">
            <summary>
            Container for the parameters to the CreateFlowLogs operation.
            Creates one or more flow logs to capture IP traffic for a specific network interface,
            subnet, or VPC. Flow logs are delivered to a specified log group in Amazon CloudWatch
            Logs. If you specify a VPC or subnet in the request, a log stream is created in CloudWatch
            Logs for each network interface in the subnet or VPC. Log streams can include information
            about accepted and rejected traffic to a network interface. You can view the data
            in your log streams using Amazon CloudWatch Logs.
            
             
            <para>
            In your request, you must also specify an IAM role that has permission to publish
            logs to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateFlowLogsRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateFlowLogsRequest.DeliverLogsPermissionArn">
            <summary>
            Gets and sets the property DeliverLogsPermissionArn. 
            <para>
            The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateFlowLogsRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the CloudWatch log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateFlowLogsRequest.ResourceIds">
            <summary>
            Gets and sets the property ResourceIds. 
            <para>
            One or more subnet, network interface, or VPC IDs.
            </para>
             
            <para>
            Constraints: Maximum of 1000 resources
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateFlowLogsRequest.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of resource on which to create the flow log.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateFlowLogsRequest.TrafficType">
            <summary>
            Gets and sets the property TrafficType. 
            <para>
            The type of traffic to log.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateFlowLogsResponse">
            <summary>
            Contains the output of CreateFlowLogs.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateFlowLogsResponse.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateFlowLogsResponse.FlowLogIds">
            <summary>
            Gets and sets the property FlowLogIds. 
            <para>
            The IDs of the flow logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateFlowLogsResponse.Unsuccessful">
            <summary>
            Gets and sets the property Unsuccessful. 
            <para>
            Information about the flow logs that could not be created successfully.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateImageRequest">
            <summary>
            Container for the parameters to the CreateImage operation.
            Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either
            running or stopped.
            
             
            <para>
            If you customized your instance with instance store volumes or EBS volumes in addition
            to the root device volume, the new AMI contains block device mapping information for
            those volumes. When you launch an instance from this new AMI, the instance automatically
            launches with those additional volumes.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html">Creating
            Amazon EBS-Backed Linux AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateImageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateImageRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateImageRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance.</param>
            <param name="name">A name for the new image. Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageRequest.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            Information about one or more block device mappings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the new image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A name for the new image.
            </para>
             
            <para>
            Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]),
            spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@),
            or underscores(_)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageRequest.NoReboot">
            <summary>
            Gets and sets the property NoReboot. 
            <para>
            By default, Amazon EC2 attempts to shut down and reboot the instance before creating
            the image. If the 'No Reboot' option is set, Amazon EC2 doesn't shut down the instance
            before creating the image. When this option is used, file system integrity on the
            created image can't be guaranteed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateImageResponse">
            <summary>
            Contains the output of CreateImage.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageResponse.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the new AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateInstanceExportTaskRequest">
            <summary>
            Container for the parameters to the CreateInstanceExportTask operation.
            Exports a running or stopped instance to an S3 bucket.
            
             
            <para>
            For information about the supported operating systems, image formats, and known limitations
            for the types of instances you can export, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmexport.html">Exporting
            an Instance as a VM Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInstanceExportTaskRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the conversion task or the resource being exported. The maximum
            length is 255 bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInstanceExportTaskRequest.ExportToS3Task">
            <summary>
            Gets and sets the property ExportToS3Task. 
            <para>
            The format and location for an instance export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInstanceExportTaskRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInstanceExportTaskRequest.TargetEnvironment">
            <summary>
            Gets and sets the property TargetEnvironment. 
            <para>
            The target virtualization environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateInstanceExportTaskResponse">
            <summary>
            Contains the output for CreateInstanceExportTask.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInstanceExportTaskResponse.ExportTask">
            <summary>
            Gets and sets the property ExportTask. 
            <para>
            Information about the instance export task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateInternetGatewayRequest">
            <summary>
            Container for the parameters to the CreateInternetGateway operation.
            Creates an Internet gateway for use with a VPC. After creating the Internet gateway,
            you attach it to a VPC using <a>AttachInternetGateway</a>.
            
             
            <para>
            For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon
            Virtual Private Cloud User Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateInternetGatewayResponse">
            <summary>
            Contains the output of CreateInternetGateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInternetGatewayResponse.InternetGateway">
            <summary>
            Gets and sets the property InternetGateway. 
            <para>
            Information about the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateKeyPairRequest">
            <summary>
            Container for the parameters to the CreateKeyPair operation.
            Creates a 2048-bit RSA key pair with the specified name. Amazon EC2 stores the public
            key and displays the private key for you to save to a file. The private key is returned
            as an unencrypted PEM encoded PKCS#8 private key. If a key with the specified name
            already exists, Amazon EC2 returns an error.
            
             
            <para>
            You can have up to five thousand key pairs per region.
            </para>
             
            <para>
            The key pair returned to you is available only in the region in which you create it.
            To create a key pair that is available in all regions, use <a>ImportKeyPair</a>.
            </para>
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateKeyPairRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateKeyPairRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateKeyPairRequest with the parameterized properties
            </summary>
            <param name="keyName">A unique name for the key pair. Constraints: Up to 255 ASCII characters</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateKeyPairRequest.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            A unique name for the key pair.
            </para>
             
            <para>
            Constraints: Up to 255 ASCII characters
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateKeyPairResponse">
            <summary>
            Contains the response data from the CreateKeyPair operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateKeyPairResponse.KeyPair">
            <summary>
            Gets and sets the KeyPair member
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNatGatewayRequest">
            <summary>
            Container for the parameters to the CreateNatGateway operation.
            Creates a NAT gateway in the specified subnet. A NAT gateway can be used to enable
            instances in a private subnet to connect to the Internet. This action creates a network
            interface in the specified subnet with a private IP address from the IP address range
            of the subnet. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">NAT
            Gateways</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNatGatewayRequest.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            The allocation ID of an Elastic IP address to associate with the NAT gateway. If the
            Elastic IP address is associated with another resource, you must first disassociate
            it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNatGatewayRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.
            </para>
             
            <para>
            Constraint: Maximum 64 ASCII characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNatGatewayRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The subnet in which to create the NAT gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNatGatewayResponse">
            <summary>
            Contains the output of CreateNatGateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNatGatewayResponse.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned
            if a client token was provided in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNatGatewayResponse.NatGateway">
            <summary>
            Gets and sets the property NatGateway. 
            <para>
            Information about the NAT gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkAclEntryRequest">
            <summary>
            Container for the parameters to the CreateNetworkAclEntry operation.
            Creates an entry (a rule) in a network ACL with the specified rule number. Each network
            ACL has a set of numbered ingress rules and a separate set of numbered egress rules.
            When determining whether a packet should be allowed in or out of a subnet associated
            with the ACL, we process the entries in the ACL according to the rule numbers, in
            ascending order. Each network ACL has a set of ingress rules and a separate set of
            egress rules.
            
             
            <para>
            We recommend that you leave room between the rule numbers (for example, 100, 110,
            120, ...), and not number them one right after the other (for example, 101, 102, 103,
            ...). This makes it easier to add a rule between existing ones without having to renumber
            the rules.
            </para>
             
            <para>
            After you add an entry, you can't modify it; you must either replace it, or create
            an entry and delete the old one.
            </para>
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.Egress">
            <summary>
            Gets and sets the property Egress. 
            <para>
            Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.IcmpTypeCode">
            <summary>
            Gets and sets the property IcmpTypeCode. 
            <para>
            ICMP protocol: The ICMP type and code. Required if specifying ICMP for the protocol.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.PortRange">
            <summary>
            Gets and sets the property PortRange. 
            <para>
            TCP or UDP protocols: The range of ports the rule applies to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol. A value of -1 means all protocols.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.RuleAction">
            <summary>
            Gets and sets the property RuleAction. 
            <para>
            Indicates whether to allow or deny the traffic that matches the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.RuleNumber">
            <summary>
            Gets and sets the property RuleNumber. 
            <para>
            The rule number for the entry (for example, 100). ACL entries are processed in ascending
            order by rule number.
            </para>
             
            <para>
            Constraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved
            for internal use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkAclEntryResponse">
            <summary>
            This is the response object from the CreateNetworkAclEntry operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkAclRequest">
            <summary>
            Container for the parameters to the CreateNetworkAcl operation.
            Creates a network ACL in a VPC. Network ACLs provide an optional layer of security
            (in addition to security groups) for the instances in your VPC.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkAclResponse">
            <summary>
            Contains the output of CreateNetworkAcl.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclResponse.NetworkAcl">
            <summary>
            Gets and sets the property NetworkAcl. 
            <para>
            Information about the network ACL.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkInterfaceRequest">
            <summary>
            Container for the parameters to the CreateNetworkInterface operation.
            Creates a network interface in the specified subnet.
            
             
            <para>
            For more information about network interfaces, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic
            Network Interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The IDs of one or more security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The primary private IP address of the network interface. If you don't specify an IP
            address, Amazon EC2 selects one for you from the subnet range. If you specify an IP
            address, you cannot indicate any IP addresses specified in <code>privateIpAddresses</code>
            as primary (only one IP address can be designated as primary).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            One or more private IP addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.SecondaryPrivateIpAddressCount">
            <summary>
            Gets and sets the property SecondaryPrivateIpAddressCount. 
            <para>
            The number of secondary private IP addresses to assign to a network interface. When
            you specify a number of secondary IP addresses, Amazon EC2 selects these IP addresses
            within the subnet range. You can't specify this option and specify more than one private
            IP address using <code>privateIpAddresses</code>.
            </para>
             
            <para>
            The number of IP addresses you can assign to a network interface varies by instance
            type. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">Private
            IP Addresses Per ENI Per Instance Type</a> in the <i>Amazon Elastic Compute Cloud
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet to associate with the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkInterfaceResponse">
            <summary>
            Contains the output of CreateNetworkInterface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceResponse.NetworkInterface">
            <summary>
            Gets and sets the property NetworkInterface. 
            <para>
            Information about the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreatePlacementGroupRequest">
            <summary>
            Container for the parameters to the CreatePlacementGroup operation.
            Creates a placement group that you launch cluster instances into. You must give the
            group a name that's unique within the scope of your account.
            
             
            <para>
            For more information about placement groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreatePlacementGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreatePlacementGroupRequest.#ctor(System.String,Amazon.EC2.PlacementStrategy)">
            <summary>
            Instantiates CreatePlacementGroupRequest with the parameterized properties
            </summary>
            <param name="groupName">A name for the placement group. Constraints: Up to 255 ASCII characters</param>
            <param name="strategy">The placement strategy.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreatePlacementGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            A name for the placement group.
            </para>
             
            <para>
            Constraints: Up to 255 ASCII characters
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreatePlacementGroupRequest.Strategy">
            <summary>
            Gets and sets the property Strategy. 
            <para>
            The placement strategy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreatePlacementGroupResponse">
            <summary>
            This is the response object from the CreatePlacementGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateReservedInstancesListingRequest">
            <summary>
            Container for the parameters to the CreateReservedInstancesListing operation.
            Creates a listing for Amazon EC2 Standard Reserved Instances to be sold in the Reserved
            Instance Marketplace. You can submit one Standard Reserved Instance listing at a time.
            To get a list of your Standard Reserved Instances, you can use the <a>DescribeReservedInstances</a>
            operation.
            
             
            <para>
            The Reserved Instance Marketplace matches sellers who want to resell Standard Reserved
            Instance capacity that they no longer need with buyers who want to purchase additional
            capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace
            work like any other Reserved Instances.
            </para>
             
            <para>
            To sell your Standard Reserved Instances, you must first register as a seller in the
            Reserved Instance Marketplace. After completing the registration process, you can
            create a Reserved Instance Marketplace listing of some or all of your Standard Reserved
            Instances, and specify the upfront price to receive for them. Your Standard Reserved
            Instance listings then become available for purchase. To view the details of your
            Standard Reserved Instance listing, you can use the <a>DescribeReservedInstancesListings</a>
            operation.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateReservedInstancesListingRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure idempotency of your listings.
            This helps avoid duplicate listings. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateReservedInstancesListingRequest.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of instances that are a part of a Reserved Instance account to be listed
            in the Reserved Instance Marketplace. This number should be less than or equal to
            the instance count associated with the Reserved Instance ID specified in this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateReservedInstancesListingRequest.PriceSchedules">
            <summary>
            Gets and sets the property PriceSchedules. 
            <para>
            A list specifying the price of the Standard Reserved Instance for each month remaining
            in the Reserved Instance term.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateReservedInstancesListingRequest.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            The ID of the active Standard Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateReservedInstancesListingResponse">
            <summary>
            Contains the output of CreateReservedInstancesListing.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateReservedInstancesListingResponse.ReservedInstancesListings">
            <summary>
            Gets and sets the property ReservedInstancesListings. 
            <para>
            Information about the Standard Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateRouteRequest">
            <summary>
            Container for the parameters to the CreateRoute operation.
            Creates a route in a route table within a VPC.
            
             
            <para>
            You must specify one of the following targets: Internet gateway or virtual private
            gateway, NAT instance, NAT gateway, VPC peering connection, or network interface.
            </para>
             
            <para>
            When determining how to route traffic, we use the route with the most specific match.
            For example, let's say the traffic is destined for <code>192.0.2.3</code>, and the
            route table includes the following two routes:
            </para>
             <ul> <li> 
            <para>
             <code>192.0.2.0/24</code> (goes to some target A)
            </para>
             </li> <li> 
            <para>
             <code>192.0.2.0/28</code> (goes to some target B)
            </para>
             </li> </ul> 
            <para>
            Both routes apply to the traffic destined for <code>192.0.2.3</code>. However, the
            second route in the list covers a smaller number of IP addresses and is therefore
            more specific, so we use that route to determine where to target the traffic.
            </para>
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR address block used for the destination match. Routing decisions are based
            on the most specific match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of an Internet gateway or virtual private gateway attached to your VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of a NAT instance in your VPC. The operation fails if you specify an instance
            ID unless exactly one network interface is attached.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.NatGatewayId">
            <summary>
            Gets and sets the property NatGatewayId. 
            <para>
            The ID of a NAT gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of a network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table for the route.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of a VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateRouteResponse">
            <summary>
            Contains the output of CreateRoute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteResponse.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateRouteTableRequest">
            <summary>
            Container for the parameters to the CreateRouteTable operation.
            Creates a route table for the specified VPC. After you create a route table, you can
            add routes and associate the table with a subnet.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteTableRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateRouteTableResponse">
            <summary>
            Contains the output of CreateRouteTable.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteTableResponse.RouteTable">
            <summary>
            Gets and sets the property RouteTable. 
            <para>
            Information about the route table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSecurityGroupRequest">
            <summary>
            Container for the parameters to the CreateSecurityGroup operation.
            Creates a security group.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             <important> 
            <para>
            EC2-Classic: You can have up to 500 security groups.
            </para>
             
            <para>
            EC2-VPC: You can create up to 500 security groups per VPC.
            </para>
             </important> 
            <para>
            When you create a security group, you specify a friendly name of your choice. You
            can have a security group for use in EC2-Classic with the same name as a security
            group for use in a VPC. However, you can't have two security groups for use in EC2-Classic
            with the same name or two security groups for use in a VPC with the same name.
            </para>
             
            <para>
            You have a default security group for use in EC2-Classic and a default security group
            for use in your VPC. If you don't specify a security group when you launch an instance,
            the instance is launched into the appropriate default security group. A default security
            group includes a default rule that grants instances unrestricted network access to
            each other.
            </para>
             
            <para>
            You can add or remove rules from your security groups using <a>AuthorizeSecurityGroupIngress</a>,
            <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupIngress</a>, and <a>RevokeSecurityGroupEgress</a>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSecurityGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSecurityGroupRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateSecurityGroupRequest with the parameterized properties
            </summary>
            <param name="groupName">The name of the security group. Constraints: Up to 255 characters in length Constraints for EC2-Classic: ASCII characters Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</param>
            <param name="description">A description for the security group. This is informational only. Constraints: Up to 255 characters in length Constraints for EC2-Classic: ASCII characters Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSecurityGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the security group. This is informational only.
            </para>
             
            <para>
            Constraints: Up to 255 characters in length
            </para>
             
            <para>
            Constraints for EC2-Classic: ASCII characters
            </para>
             
            <para>
            Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSecurityGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the security group.
            </para>
             
            <para>
            Constraints: Up to 255 characters in length
            </para>
             
            <para>
            Constraints for EC2-Classic: ASCII characters
            </para>
             
            <para>
            Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSecurityGroupRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            [EC2-VPC] The ID of the VPC. Required for EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSecurityGroupResponse">
            <summary>
            Contains the output of CreateSecurityGroup.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSecurityGroupResponse.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSnapshotRequest">
            <summary>
            Container for the parameters to the CreateSnapshot operation.
            Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots
            for backups, to make copies of EBS volumes, and to save data before shutting down
            an instance.
            
             
            <para>
            When a snapshot is created, any AWS Marketplace product codes that are associated
            with the source volume are propagated to the snapshot.
            </para>
             
            <para>
            You can take a snapshot of an attached volume that is in use. However, snapshots only
            capture data that has been written to your EBS volume at the time the snapshot command
            is issued; this may exclude any data that has been cached by any applications or the
            operating system. If you can pause any file systems on the volume long enough to take
            a snapshot, your snapshot should be complete. However, if you cannot pause all file
            writes to the volume, you should unmount the volume from within the instance, issue
            the snapshot command, and then remount the volume to ensure a consistent and complete
            snapshot. You may remount and use your volume while the snapshot status is <code>pending</code>.
            </para>
             
            <para>
            To create a snapshot for EBS volumes that serve as root devices, you should stop the
            instance before taking the snapshot.
            </para>
             
            <para>
            Snapshots that are taken from encrypted volumes are automatically encrypted. Volumes
            that are created from encrypted snapshots are also automatically encrypted. Your encrypted
            volumes and any associated snapshots always remain protected.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html">Amazon
            Elastic Block Store</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSnapshotRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSnapshotRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateSnapshotRequest with the parameterized properties
            </summary>
            <param name="volumeId">The ID of the EBS volume.</param>
            <param name="description">A description for the snapshot.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSnapshotRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSnapshotRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the EBS volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSnapshotResponse">
            <summary>
            Contains the response data from the CreateSnapshot operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSnapshotResponse.Snapshot">
            <summary>
            Gets and sets the Snapshot member
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest">
            <summary>
            Container for the parameters to the CreateSpotDatafeedSubscription operation.
            Creates a data feed for Spot instances, enabling you to view Spot instance usage logs.
            You can create one data feed per AWS account. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateSpotDatafeedSubscriptionRequest with the parameterized properties
            </summary>
            <param name="bucket">The Amazon S3 bucket in which to store the Spot instance data feed.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The Amazon S3 bucket in which to store the Spot instance data feed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            A prefix for the data feed file names.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionResponse">
            <summary>
            Contains the output of CreateSpotDatafeedSubscription.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionResponse.SpotDatafeedSubscription">
            <summary>
            Gets and sets the property SpotDatafeedSubscription. 
            <para>
            The Spot instance data feed subscription.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSubnetRequest">
            <summary>
            Container for the parameters to the CreateSubnet operation.
            Creates a subnet in an existing VPC.
            
             
            <para>
            When you create each subnet, you provide the VPC ID and the CIDR block you want for
            the subnet. After you create a subnet, you can't change its CIDR block. The subnet's
            CIDR block can be the same as the VPC's CIDR block (assuming you want only a single
            subnet in the VPC), or a subset of the VPC's CIDR block. If you create more than one
            subnet in a VPC, the subnets' CIDR blocks must not overlap. The smallest subnet (and
            VPC) you can create uses a /28 netmask (16 IP addresses), and the largest uses a /16
            netmask (65,536 IP addresses).
            </para>
             <important> 
            <para>
            AWS reserves both the first four and the last IP address in each subnet's CIDR block.
            They're not available for use.
            </para>
             </important> 
            <para>
            If you add more than one subnet to a VPC, they're set up in a star topology with a
            logical router in the middle.
            </para>
             
            <para>
            If you launch an instance in a VPC using an Amazon EBS-backed AMI, the IP address
            doesn't change if you stop and restart the instance (unlike a similar instance launched
            outside a VPC, which gets a new IP address when restarted). It's therefore possible
            to have a subnet with no running instances (they're all stopped), but no remaining
            IP addresses available.
            </para>
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSubnetRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSubnetRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateSubnetRequest with the parameterized properties
            </summary>
            <param name="vpcId">The ID of the VPC.</param>
            <param name="cidrBlock">The network range for the subnet, in CIDR notation. For example, <code>10.0.0.0/24</code>.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSubnetRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the subnet.
            </para>
             
            <para>
            Default: AWS selects one for you. If you create more than one subnet in your VPC,
            we may not necessarily select a different zone for each subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSubnetRequest.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The network range for the subnet, in CIDR notation. For example, <code>10.0.0.0/24</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSubnetRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSubnetResponse">
            <summary>
            Contains the output of CreateSubnet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSubnetResponse.Subnet">
            <summary>
            Gets and sets the property Subnet. 
            <para>
            Information about the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateTagsRequest">
            <summary>
            Container for the parameters to the CreateTags operation.
            Adds or overwrites one or more tags for the specified Amazon EC2 resource or resources.
            Each resource can have a maximum of 50 tags. Each tag consists of a key and optional
            value. Tag keys must be unique per resource.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more
            information about creating IAM policies that control users' access to resources based
            on tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-iam-actions-resources.html">Supported
            Resource-Level Permissions for Amazon EC2 API Actions</a> in the <i>Amazon Elastic
            Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateTagsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateTagsRequest.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{Amazon.EC2.Model.Tag})">
            <summary>
            Instantiates CreateTagsRequest with the parameterized properties
            </summary>
            <param name="resources">The IDs of one or more resources to tag. For example, ami-1a2b3c4d.</param>
            <param name="tags">One or more tags. The <code>value</code> parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. </param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateTagsRequest.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            The IDs of one or more resources to tag. For example, ami-1a2b3c4d.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateTagsRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            One or more tags. The <code>value</code> parameter is required, but if you don't want
            the tag to have a value, specify the parameter with no value, and we set the value
            to an empty string. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateTagsResponse">
            <summary>
            This is the response object from the CreateTags operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVolumePermission">
            <summary>
            Describes the user or group to be added or removed from the permissions for a volume.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumePermission.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The specific group that is to be added or removed from a volume's list of create volume
            permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumePermission.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The specific AWS account ID that is to be added or removed from a volume's list of
            create volume permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVolumePermissionModifications">
            <summary>
            Describes modifications to the permissions for a volume.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumePermissionModifications.Add">
            <summary>
            Gets and sets the property Add. 
            <para>
            Adds a specific AWS account ID or group to a volume's list of create volume permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumePermissionModifications.Remove">
            <summary>
            Gets and sets the property Remove. 
            <para>
            Removes a specific AWS account ID or group from a volume's list of create volume permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVolumeRequest">
            <summary>
            Container for the parameters to the CreateVolume operation.
            Creates an EBS volume that can be attached to an instance in the same Availability
            Zone. The volume is created in the regional endpoint that you send the HTTP request
            to. For more information see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html">Regions
            and Endpoints</a>.
            
             
            <para>
            You can create a new empty volume or restore a volume from an EBS snapshot. Any AWS
            Marketplace product codes from the snapshot are propagated to the volume.
            </para>
             
            <para>
            You can create encrypted volumes with the <code>Encrypted</code> parameter. Encrypted
            volumes may only be attached to instances that support Amazon EBS encryption. Volumes
            that are created from encrypted snapshots are also automatically encrypted. For more
            information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html">Creating
            or Restoring an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVolumeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVolumeRequest.#ctor(System.String,System.Int32)">
            <summary>
            Instantiates CreateVolumeRequest with the parameterized properties
            </summary>
            <param name="availabilityZone">The Availability Zone in which to create the volume. Use <a>DescribeAvailabilityZones</a> to list the Availability Zones that are currently available to you.</param>
            <param name="size">The size of the volume, in GiBs. Constraints: 1-16384 for <code>gp2</code>, 4-16384 for <code>io1</code>, 500-16384 for <code>st1</code>, 500-16384 for <code>sc1</code>, and 1-1024 for <code>standard</code>. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size. Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</param>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVolumeRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateVolumeRequest with the parameterized properties
            </summary>
            <param name="availabilityZone">The Availability Zone in which to create the volume. Use <a>DescribeAvailabilityZones</a> to list the Availability Zones that are currently available to you.</param>
            <param name="snapshotId">The snapshot from which to create the volume.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone in which to create the volume. Use <a>DescribeAvailabilityZones</a>
            to list the Availability Zones that are currently available to you.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Specifies whether the volume should be encrypted. Encrypted Amazon EBS volumes may
            only be attached to instances that support Amazon EBS encryption. Volumes that are
            created from encrypted snapshots are automatically encrypted. There is no way to create
            an encrypted volume from an unencrypted snapshot or vice versa. If your AMI uses encrypted
            volumes, you can only launch it on supported instance types. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            Only valid for Provisioned IOPS SSD volumes. The number of I/O operations per second
            (IOPS) to provision for the volume, with a maximum ratio of 30 IOPS/GiB.
            </para>
             
            <para>
            Constraint: Range is 100 to 20000 for Provisioned IOPS SSD volumes 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK)
            to use when creating the encrypted volume. This parameter is only required if you
            want to use a non-default CMK; if this parameter is not specified, the default CMK
            for EBS is used. The ARN contains the <code>arn:aws:kms</code> namespace, followed
            by the region of the CMK, the AWS account ID of the CMK owner, the <code>key</code>
            namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.
            If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also
            be set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the volume, in GiBs.
            </para>
             
            <para>
            Constraints: 1-16384 for <code>gp2</code>, 4-16384 for <code>io1</code>, 500-16384
            for <code>st1</code>, 500-16384 for <code>sc1</code>, and 1-1024 for <code>standard</code>.
            If you specify a snapshot, the volume size must be equal to or larger than the snapshot
            size.
            </para>
             
            <para>
            Default: If you're creating the volume from a snapshot and don't specify a volume
            size, the default is the snapshot size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The snapshot from which to create the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.VolumeType">
            <summary>
            Gets and sets the property VolumeType. 
            <para>
            The volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code>
            for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code>
            for Cold HDD, or <code>standard</code> for Magnetic volumes.
            </para>
             
            <para>
            Default: <code>standard</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVolumeResponse">
            <summary>
            Contains the response data from the CreateVolume operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeResponse.Volume">
            <summary>
            Gets and sets the Volume member
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcEndpointRequest">
            <summary>
            Container for the parameters to the CreateVpcEndpoint operation.
            Creates a VPC endpoint for a specified AWS service. An endpoint enables you to create
            a private connection between your VPC and another AWS service in your account. You
            can specify an endpoint policy to attach to the endpoint that will control access
            to the service from your VPC. You can also specify the VPC route tables that use the
            endpoint.
            
             
            <para>
            Currently, only endpoints to Amazon S3 are supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcEndpointRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcEndpointRequest.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            A policy to attach to the endpoint that controls access to the service. The policy
            must be in valid JSON format. If this parameter is not specified, we attach a default
            policy that allows full access to the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcEndpointRequest.RouteTableIds">
            <summary>
            Gets and sets the property RouteTableIds. 
            <para>
            One or more route table IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcEndpointRequest.ServiceName">
            <summary>
            Gets and sets the property ServiceName. 
            <para>
            The AWS service name, in the form <code>com.amazonaws.<i>region</i>.<i>service</i>
            </code>. To get a list of available services, use the <a>DescribeVpcEndpointServices</a>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcEndpointRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC in which the endpoint will be used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcEndpointResponse">
            <summary>
            Contains the output of CreateVpcEndpoint.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcEndpointResponse.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcEndpointResponse.VpcEndpoint">
            <summary>
            Gets and sets the property VpcEndpoint. 
            <para>
            Information about the endpoint.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcPeeringConnectionRequest">
            <summary>
            Container for the parameters to the CreateVpcPeeringConnection operation.
            Requests a VPC peering connection between two VPCs: a requester VPC that you own and
            a peer VPC with which to create the connection. The peer VPC can belong to another
            AWS account. The requester VPC and peer VPC cannot have overlapping CIDR blocks.
            
             
            <para>
            The owner of the peer VPC must accept the peering request to activate the peering
            connection. The VPC peering connection request expires after 7 days, after which it
            cannot be accepted or rejected.
            </para>
             
            <para>
            A <code>CreateVpcPeeringConnection</code> request between VPCs with overlapping CIDR
            blocks results in the VPC peering connection having a status of <code>failed</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcPeeringConnectionRequest.PeerOwnerId">
            <summary>
            Gets and sets the property PeerOwnerId. 
            <para>
            The AWS account ID of the owner of the peer VPC.
            </para>
             
            <para>
            Default: Your AWS account ID
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcPeeringConnectionRequest.PeerVpcId">
            <summary>
            Gets and sets the property PeerVpcId. 
            <para>
            The ID of the VPC with which you are creating the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcPeeringConnectionRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the requester VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcPeeringConnectionResponse">
            <summary>
            Contains the output of CreateVpcPeeringConnection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcPeeringConnectionResponse.VpcPeeringConnection">
            <summary>
            Gets and sets the property VpcPeeringConnection. 
            <para>
            Information about the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcRequest">
            <summary>
            Container for the parameters to the CreateVpc operation.
            Creates a VPC with the specified CIDR block.
            
             
            <para>
            The smallest VPC you can create uses a /28 netmask (16 IP addresses), and the largest
            uses a /16 netmask (65,536 IP addresses). To help you decide how big to make your
            VPC, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             
            <para>
            By default, each instance you launch in the VPC has the default DHCP options, which
            includes only a default DNS server that we provide (AmazonProvidedDNS). For more information
            about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             
            <para>
            You can specify the instance tenancy value for the VPC when you create it. You can't
            change this value for the VPC after you create it. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/dedicated-instance.html.html">Dedicated
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpcRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpcRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateVpcRequest with the parameterized properties
            </summary>
            <param name="cidrBlock">The network range for the VPC, in CIDR notation. For example, <code>10.0.0.0/16</code>.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcRequest.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The network range for the VPC, in CIDR notation. For example, <code>10.0.0.0/16</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcRequest.InstanceTenancy">
            <summary>
            Gets and sets the property InstanceTenancy. 
            <para>
            The tenancy options for instances launched into the VPC. For <code>default</code>,
            instances are launched with shared tenancy by default. You can launch instances with
            any tenancy into a shared tenancy VPC. For <code>dedicated</code>, instances are launched
            as dedicated tenancy instances by default. You can only launch instances with a tenancy
            of <code>dedicated</code> or <code>host</code> into a dedicated tenancy VPC. 
            </para>
             
            <para>
             <b>Important:</b> The <code>host</code> value cannot be used with this parameter.
            Use the <code>default</code> or <code>dedicated</code> values only.
            </para>
             
            <para>
            Default: <code>default</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcResponse">
            <summary>
            Contains the output of CreateVpc.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcResponse.Vpc">
            <summary>
            Gets and sets the property Vpc. 
            <para>
            Information about the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnConnectionRequest">
            <summary>
            Container for the parameters to the CreateVpnConnection operation.
            Creates a VPN connection between an existing virtual private gateway and a VPN customer
            gateway. The only supported connection type is <code>ipsec.1</code>.
            
             
            <para>
            The response includes information that you need to give to your network administrator
            to configure your customer gateway.
            </para>
             <important> 
            <para>
            We strongly recommend that you use HTTPS when calling this operation because the response
            contains sensitive cryptographic information for configuring your customer gateway.
            </para>
             </important> 
            <para>
            If you decide to shut down your VPN connection for any reason and later create a new
            VPN connection, you must reconfigure your customer gateway with the new information
            returned from this call.
            </para>
             
            <para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error.
            </para>
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpnConnectionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpnConnectionRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates CreateVpnConnectionRequest with the parameterized properties
            </summary>
            <param name="type">The type of VPN connection (<code>ipsec.1</code>).</param>
            <param name="customerGatewayId">The ID of the customer gateway.</param>
            <param name="vpnGatewayId">The ID of the virtual private gateway.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRequest.CustomerGatewayId">
            <summary>
            Gets and sets the property CustomerGatewayId. 
            <para>
            The ID of the customer gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRequest.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            Indicates whether the VPN connection requires static routes. If you are creating a
            VPN connection for a device that does not support BGP, you must specify <code>true</code>.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection (<code>ipsec.1</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRequest.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnConnectionResponse">
            <summary>
            Contains the output of CreateVpnConnection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionResponse.VpnConnection">
            <summary>
            Gets and sets the property VpnConnection. 
            <para>
            Information about the VPN connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnConnectionRouteRequest">
            <summary>
            Container for the parameters to the CreateVpnConnectionRoute operation.
            Creates a static route associated with a VPN connection between an existing virtual
            private gateway and a VPN customer gateway. The static route allows traffic to be
            routed from the virtual private gateway to the VPN customer gateway.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRouteRequest.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR block associated with the local subnet of the customer network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRouteRequest.VpnConnectionId">
            <summary>
            Gets and sets the property VpnConnectionId. 
            <para>
            The ID of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnConnectionRouteResponse">
            <summary>
            This is the response object from the CreateVpnConnectionRoute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnGatewayRequest">
            <summary>
            Container for the parameters to the CreateVpnGateway operation.
            Creates a virtual private gateway. A virtual private gateway is the endpoint on the
            VPC side of your VPN connection. You can create a virtual private gateway before creating
            the VPC itself.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpnGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpnGatewayRequest.#ctor(Amazon.EC2.GatewayType)">
            <summary>
            Instantiates CreateVpnGatewayRequest with the parameterized properties
            </summary>
            <param name="type">The type of VPN connection this virtual private gateway supports.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnGatewayRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnGatewayRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection this virtual private gateway supports.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnGatewayResponse">
            <summary>
            Contains the output of CreateVpnGateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnGatewayResponse.VpnGateway">
            <summary>
            Gets and sets the property VpnGateway. 
            <para>
            Information about the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CustomerGateway">
            <summary>
            Describes a customer gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.BgpAsn">
            <summary>
            Gets and sets the property BgpAsn. 
            <para>
            The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.CustomerGatewayId">
            <summary>
            Gets and sets the property CustomerGatewayId. 
            <para>
            The ID of the customer gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The Internet-routable IP address of the customer gateway's outside interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the customer gateway (<code>pending | available | deleting |
            deleted</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the customer gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection the customer gateway supports (<code>ipsec.1</code>).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteCustomerGatewayRequest">
            <summary>
            Container for the parameters to the DeleteCustomerGateway operation.
            Deletes the specified customer gateway. You must delete the VPN connection before
            you can delete the customer gateway.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteCustomerGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteCustomerGatewayRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteCustomerGatewayRequest with the parameterized properties
            </summary>
            <param name="customerGatewayId">The ID of the customer gateway.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteCustomerGatewayRequest.CustomerGatewayId">
            <summary>
            Gets and sets the property CustomerGatewayId. 
            <para>
            The ID of the customer gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteCustomerGatewayResponse">
            <summary>
            This is the response object from the DeleteCustomerGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteDhcpOptionsRequest">
            <summary>
            Container for the parameters to the DeleteDhcpOptions operation.
            Deletes the specified set of DHCP options. You must disassociate the set of DHCP options
            before you can delete it. You can disassociate the set of DHCP options by associating
            either a new set of options or the default set of options with the VPC.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteDhcpOptionsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteDhcpOptionsRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteDhcpOptionsRequest with the parameterized properties
            </summary>
            <param name="dhcpOptionsId">The ID of the DHCP options set.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteDhcpOptionsRequest.DhcpOptionsId">
            <summary>
            Gets and sets the property DhcpOptionsId. 
            <para>
            The ID of the DHCP options set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteDhcpOptionsResponse">
            <summary>
            This is the response object from the DeleteDhcpOptions operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteFlowLogsRequest">
            <summary>
            Container for the parameters to the DeleteFlowLogs operation.
            Deletes one or more flow logs.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteFlowLogsRequest.FlowLogIds">
            <summary>
            Gets and sets the property FlowLogIds. 
            <para>
            One or more flow log IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteFlowLogsResponse">
            <summary>
            Contains the output of DeleteFlowLogs.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteFlowLogsResponse.Unsuccessful">
            <summary>
            Gets and sets the property Unsuccessful. 
            <para>
            Information about the flow logs that could not be deleted successfully.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteInternetGatewayRequest">
            <summary>
            Container for the parameters to the DeleteInternetGateway operation.
            Deletes the specified Internet gateway. You must detach the Internet gateway from
            the VPC before you can delete it.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteInternetGatewayRequest.InternetGatewayId">
            <summary>
            Gets and sets the property InternetGatewayId. 
            <para>
            The ID of the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteInternetGatewayResponse">
            <summary>
            This is the response object from the DeleteInternetGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteKeyPairRequest">
            <summary>
            Container for the parameters to the DeleteKeyPair operation.
            Deletes the specified key pair, by removing the public key from Amazon EC2.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteKeyPairRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteKeyPairRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteKeyPairRequest with the parameterized properties
            </summary>
            <param name="keyName">The name of the key pair.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteKeyPairRequest.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteKeyPairResponse">
            <summary>
            This is the response object from the DeleteKeyPair operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNatGatewayRequest">
            <summary>
            Container for the parameters to the DeleteNatGateway operation.
            Deletes the specified NAT gateway. Deleting a NAT gateway disassociates its Elastic
            IP address, but does not release the address from your account. Deleting a NAT gateway
            does not delete any NAT gateway routes in your route tables.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNatGatewayRequest.NatGatewayId">
            <summary>
            Gets and sets the property NatGatewayId. 
            <para>
            The ID of the NAT gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNatGatewayResponse">
            <summary>
            Contains the output of DeleteNatGateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNatGatewayResponse.NatGatewayId">
            <summary>
            Gets and sets the property NatGatewayId. 
            <para>
            The ID of the NAT gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkAclEntryRequest">
            <summary>
            Container for the parameters to the DeleteNetworkAclEntry operation.
            Deletes the specified ingress or egress entry (rule) from the specified network ACL.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkAclEntryRequest.Egress">
            <summary>
            Gets and sets the property Egress. 
            <para>
            Indicates whether the rule is an egress rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkAclEntryRequest.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkAclEntryRequest.RuleNumber">
            <summary>
            Gets and sets the property RuleNumber. 
            <para>
            The rule number of the entry to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkAclEntryResponse">
            <summary>
            This is the response object from the DeleteNetworkAclEntry operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkAclRequest">
            <summary>
            Container for the parameters to the DeleteNetworkAcl operation.
            Deletes the specified network ACL. You can't delete the ACL if it's associated with
            any subnets. You can't delete the default network ACL.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkAclRequest.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the network ACL.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkAclResponse">
            <summary>
            This is the response object from the DeleteNetworkAcl operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkInterfaceRequest">
            <summary>
            Container for the parameters to the DeleteNetworkInterface operation.
            Deletes the specified network interface. You must detach the network interface before
            you can delete it.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkInterfaceRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkInterfaceResponse">
            <summary>
            This is the response object from the DeleteNetworkInterface operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeletePlacementGroupRequest">
            <summary>
            Container for the parameters to the DeletePlacementGroup operation.
            Deletes the specified placement group. You must terminate all instances in the placement
            group before you can delete the placement group. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeletePlacementGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeletePlacementGroupRequest.#ctor(System.String)">
            <summary>
            Instantiates DeletePlacementGroupRequest with the parameterized properties
            </summary>
            <param name="groupName">The name of the placement group.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeletePlacementGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the placement group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeletePlacementGroupResponse">
            <summary>
            This is the response object from the DeletePlacementGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteRouteRequest">
            <summary>
            Container for the parameters to the DeleteRoute operation.
            Deletes the specified route from the specified route table.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteRouteRequest.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR range for the route. The value you specify must match the CIDR for the route
            exactly.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteRouteRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteRouteResponse">
            <summary>
            This is the response object from the DeleteRoute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteRouteTableRequest">
            <summary>
            Container for the parameters to the DeleteRouteTable operation.
            Deletes the specified route table. You must disassociate the route table from any
            subnets before you can delete it. You can't delete the main route table.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteRouteTableRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteRouteTableResponse">
            <summary>
            This is the response object from the DeleteRouteTable operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSecurityGroupRequest">
            <summary>
            Container for the parameters to the DeleteSecurityGroup operation.
            Deletes a security group.
            
             
            <para>
            If you attempt to delete a security group that is associated with an instance, or
            is referenced by another security group, the operation fails with <code>InvalidGroup.InUse</code>
            in EC2-Classic or <code>DependencyViolation</code> in EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSecurityGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSecurityGroupRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteSecurityGroupRequest with the parameterized properties
            </summary>
            <param name="groupName">[EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSecurityGroupRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group. Required for a nondefault VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSecurityGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            [EC2-Classic, default VPC] The name of the security group. You can specify either
            the security group name or the security group ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSecurityGroupResponse">
            <summary>
            This is the response object from the DeleteSecurityGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSnapshotRequest">
            <summary>
            Container for the parameters to the DeleteSnapshot operation.
            Deletes the specified snapshot.
            
             
            <para>
            When you make periodic snapshots of a volume, the snapshots are incremental, and only
            the blocks on the device that have changed since your last snapshot are saved in the
            new snapshot. When you delete a snapshot, only the data not needed for any other snapshot
            is removed. So regardless of which prior snapshots have been deleted, all active snapshots
            will have access to all the information needed to restore the volume.
            </para>
             
            <para>
            You cannot delete a snapshot of the root device of an EBS volume used by a registered
            AMI. You must first de-register the AMI before you can delete the snapshot.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html">Deleting
            an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSnapshotRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSnapshotRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteSnapshotRequest with the parameterized properties
            </summary>
            <param name="snapshotId">The ID of the EBS snapshot.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSnapshotRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the EBS snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSnapshotResponse">
            <summary>
            This is the response object from the DeleteSnapshot operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionRequest">
            <summary>
            Container for the parameters to the DeleteSpotDatafeedSubscription operation.
            Deletes the data feed for Spot instances.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionResponse">
            <summary>
            This is the response object from the DeleteSpotDatafeedSubscription operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSubnetRequest">
            <summary>
            Container for the parameters to the DeleteSubnet operation.
            Deletes the specified subnet. You must terminate all running instances in the subnet
            before you can delete the subnet.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSubnetRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSubnetRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteSubnetRequest with the parameterized properties
            </summary>
            <param name="subnetId">The ID of the subnet.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSubnetRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSubnetResponse">
            <summary>
            This is the response object from the DeleteSubnet operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteTagsRequest">
            <summary>
            Container for the parameters to the DeleteTags operation.
            Deletes the specified set of tags from the specified set of resources. This call is
            designed to follow a <code>DescribeTags</code> request.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteTagsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteTagsRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates DeleteTagsRequest with the parameterized properties
            </summary>
            <param name="resources">The ID of the resource. For example, ami-1a2b3c4d. You can specify more than one resource ID.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteTagsRequest.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            The ID of the resource. For example, ami-1a2b3c4d. You can specify more than one resource
            ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteTagsRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            One or more tags to delete. If you omit the <code>value</code> parameter, we delete
            the tag regardless of its value. If you specify this parameter with an empty string
            as the value, we delete the key only if its value is an empty string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteTagsResponse">
            <summary>
            This is the response object from the DeleteTags operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVolumeRequest">
            <summary>
            Container for the parameters to the DeleteVolume operation.
            Deletes the specified EBS volume. The volume must be in the <code>available</code>
            state (not attached to an instance).
            
             <note> 
            <para>
            The volume may remain in the <code>deleting</code> state for several minutes.
            </para>
             </note> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html">Deleting
            an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVolumeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVolumeRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteVolumeRequest with the parameterized properties
            </summary>
            <param name="volumeId">The ID of the volume.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVolumeRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVolumeResponse">
            <summary>
            This is the response object from the DeleteVolume operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpcEndpointsRequest">
            <summary>
            Container for the parameters to the DeleteVpcEndpoints operation.
            Deletes one or more specified VPC endpoints. Deleting the endpoint also deletes the
            endpoint routes in the route tables that were associated with the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpcEndpointsRequest.VpcEndpointIds">
            <summary>
            Gets and sets the property VpcEndpointIds. 
            <para>
            One or more endpoint IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpcEndpointsResponse">
            <summary>
            Contains the output of DeleteVpcEndpoints.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpcEndpointsResponse.Unsuccessful">
            <summary>
            Gets and sets the property Unsuccessful. 
            <para>
            Information about the endpoints that were not successfully deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest">
            <summary>
            Container for the parameters to the DeleteVpcPeeringConnection operation.
            Deletes a VPC peering connection. Either the owner of the requester VPC or the owner
            of the peer VPC can delete the VPC peering connection if it's in the <code>active</code>
            state. The owner of the requester VPC can delete a VPC peering connection in the <code>pending-acceptance</code>
            state.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpcPeeringConnectionResponse">
            <summary>
               Returns information about the DeleteVpcPeeringConnection response metadata.
               The DeleteVpcPeeringConnection operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpcRequest">
            <summary>
            Container for the parameters to the DeleteVpc operation.
            Deletes the specified VPC. You must detach or delete all gateways and resources that
            are associated with the VPC before you can delete it. For example, you must terminate
            all instances running in the VPC, delete all security groups associated with the VPC
            (except the default one), delete all route tables associated with the VPC (except
            the default one), and so on.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpcRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpcRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteVpcRequest with the parameterized properties
            </summary>
            <param name="vpcId">The ID of the VPC.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpcRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpcResponse">
            <summary>
            This is the response object from the DeleteVpc operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnConnectionRequest">
            <summary>
            Container for the parameters to the DeleteVpnConnection operation.
            Deletes the specified VPN connection.
            
             
            <para>
            If you're deleting the VPC and its associated components, we recommend that you detach
            the virtual private gateway from the VPC and delete the VPC before deleting the VPN
            connection. If you believe that the tunnel credentials for your VPN connection have
            been compromised, you can delete the VPN connection and create a new one that has
            new keys, without needing to delete the VPC or virtual private gateway. If you create
            a new VPN connection, you must reconfigure the customer gateway using the new configuration
            information returned with the new VPN connection ID.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpnConnectionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpnConnectionRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteVpnConnectionRequest with the parameterized properties
            </summary>
            <param name="vpnConnectionId">The ID of the VPN connection.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpnConnectionRequest.VpnConnectionId">
            <summary>
            Gets and sets the property VpnConnectionId. 
            <para>
            The ID of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnConnectionResponse">
            <summary>
            This is the response object from the DeleteVpnConnection operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnConnectionRouteRequest">
            <summary>
            Container for the parameters to the DeleteVpnConnectionRoute operation.
            Deletes the specified static route associated with a VPN connection between an existing
            virtual private gateway and a VPN customer gateway. The static route allows traffic
            to be routed from the virtual private gateway to the VPN customer gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpnConnectionRouteRequest.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR block associated with the local subnet of the customer network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpnConnectionRouteRequest.VpnConnectionId">
            <summary>
            Gets and sets the property VpnConnectionId. 
            <para>
            The ID of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnConnectionRouteResponse">
            <summary>
            This is the response object from the DeleteVpnConnectionRoute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnGatewayRequest">
            <summary>
            Container for the parameters to the DeleteVpnGateway operation.
            Deletes the specified virtual private gateway. We recommend that before you delete
            a virtual private gateway, you detach it from the VPC and delete the VPN connection.
            Note that you don't need to delete the virtual private gateway if you plan to delete
            and recreate the VPN connection between your VPC and your network.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpnGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpnGatewayRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteVpnGatewayRequest with the parameterized properties
            </summary>
            <param name="vpnGatewayId">The ID of the virtual private gateway.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpnGatewayRequest.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnGatewayResponse">
            <summary>
            This is the response object from the DeleteVpnGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeregisterImageRequest">
            <summary>
            Container for the parameters to the DeregisterImage operation.
            Deregisters the specified AMI. After you deregister an AMI, it can't be used to launch
            new instances.
            
             
            <para>
            This command does not delete the AMI.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeregisterImageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeregisterImageRequest.#ctor(System.String)">
            <summary>
            Instantiates DeregisterImageRequest with the parameterized properties
            </summary>
            <param name="imageId">The ID of the AMI.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeregisterImageRequest.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeregisterImageResponse">
            <summary>
            This is the response object from the DeregisterImage operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAccountAttributesRequest">
            <summary>
            Container for the parameters to the DescribeAccountAttributes operation.
            Describes attributes of your AWS account. The following are the supported account
            attributes:
            
             <ul> <li> 
            <para>
             <code>supported-platforms</code>: Indicates whether your account can launch instances
            into EC2-Classic and EC2-VPC, or only into EC2-VPC.
            </para>
             </li> <li> 
            <para>
             <code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.
            </para>
             </li> <li> 
            <para>
             <code>max-instances</code>: The maximum number of On-Demand instances that you can
            run.
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-security-groups-per-interface</code>: The maximum number of security
            groups that you can assign to a network interface.
            </para>
             </li> <li> 
            <para>
             <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you
            can allocate for use with EC2-Classic. 
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that
            you can allocate for use with EC2-VPC.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAccountAttributesRequest.AttributeNames">
            <summary>
            Gets and sets the property AttributeNames. 
            <para>
            One or more account attribute names.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAccountAttributesResponse">
            <summary>
            Contains the output of DescribeAccountAttributes.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAccountAttributesResponse.AccountAttributes">
            <summary>
            Gets and sets the property AccountAttributes. 
            <para>
            Information about one or more account attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAddressesRequest">
            <summary>
            Container for the parameters to the DescribeAddresses operation.
            Describes one or more of your Elastic IP addresses.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAddressesRequest.AllocationIds">
            <summary>
            Gets and sets the property AllocationIds. 
            <para>
            [EC2-VPC] One or more allocation IDs.
            </para>
             
            <para>
            Default: Describes all your Elastic IP addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAddressesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters. Filter names and values are case-sensitive.
            </para>
             <ul> <li> 
            <para>
             <code>allocation-id</code> - [EC2-VPC] The allocation ID for the address.
            </para>
             </li> <li> 
            <para>
             <code>association-id</code> - [EC2-VPC] The association ID for the address.
            </para>
             </li> <li> 
            <para>
             <code>domain</code> - Indicates whether the address is for use in EC2-Classic (<code>standard</code>)
            or in a VPC (<code>vpc</code>).
            </para>
             </li> <li> 
            <para>
             <code>instance-id</code> - The ID of the instance the address is associated with,
            if any.
            </para>
             </li> <li> 
            <para>
             <code>network-interface-id</code> - [EC2-VPC] The ID of the network interface that
            the address is associated with, if any.
            </para>
             </li> <li> 
            <para>
             <code>network-interface-owner-id</code> - The AWS account ID of the owner.
            </para>
             </li> <li> 
            <para>
             <code>private-ip-address</code> - [EC2-VPC] The private IP address associated with
            the Elastic IP address.
            </para>
             </li> <li> 
            <para>
             <code>public-ip</code> - The Elastic IP address.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAddressesRequest.PublicIps">
            <summary>
            Gets and sets the property PublicIps. 
            <para>
            [EC2-Classic] One or more Elastic IP addresses.
            </para>
             
            <para>
            Default: Describes all your Elastic IP addresses.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAddressesResponse">
            <summary>
            Contains the output of DescribeAddresses.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAddressesResponse.Addresses">
            <summary>
            Gets and sets the property Addresses. 
            <para>
            Information about one or more Elastic IP addresses.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAvailabilityZonesRequest">
            <summary>
            Container for the parameters to the DescribeAvailabilityZones operation.
            Describes one or more of the Availability Zones that are available to you. The results
            include zones only for the region you're currently using. If there is an event impacting
            an Availability Zone, you can use this request to view the state and any provided
            message for that Availability Zone.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions
            and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAvailabilityZonesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>message</code> - Information about the Availability Zone.
            </para>
             </li> <li> 
            <para>
             <code>region-name</code> - The name of the region for the Availability Zone (for
            example, <code>us-east-1</code>).
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the Availability Zone (<code>available</code> |
            <code>information</code> | <code>impaired</code> | <code>unavailable</code>).
            </para>
             </li> <li> 
            <para>
             <code>zone-name</code> - The name of the Availability Zone (for example, <code>us-east-1a</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAvailabilityZonesRequest.ZoneNames">
            <summary>
            Gets and sets the property ZoneNames. 
            <para>
            The names of one or more Availability Zones.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAvailabilityZonesResponse">
            <summary>
            Contains the output of DescribeAvailabiltyZones.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAvailabilityZonesResponse.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            Information about one or more Availability Zones.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeBundleTasksRequest">
            <summary>
            Container for the parameters to the DescribeBundleTasks operation.
            Describes one or more of your bundling tasks.
            
             <note> 
            <para>
            Completed bundle tasks are listed for only a limited time. If your bundle task is
            no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code>
            with the Amazon S3 bucket name and image manifest name you provided to the bundle
            task.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeBundleTasksRequest.BundleIds">
            <summary>
            Gets and sets the property BundleIds. 
            <para>
            One or more bundle task IDs.
            </para>
             
            <para>
            Default: Describes all your bundle tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeBundleTasksRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>bundle-id</code> - The ID of the bundle task.
            </para>
             </li> <li> 
            <para>
             <code>error-code</code> - If the task failed, the error code returned.
            </para>
             </li> <li> 
            <para>
             <code>error-message</code> - If the task failed, the error message returned.
            </para>
             </li> <li> 
            <para>
             <code>instance-id</code> - The ID of the instance.
            </para>
             </li> <li> 
            <para>
             <code>progress</code> - The level of task completion, as a percentage (for example,
            20%).
            </para>
             </li> <li> 
            <para>
             <code>s3-bucket</code> - The Amazon S3 bucket to store the AMI.
            </para>
             </li> <li> 
            <para>
             <code>s3-prefix</code> - The beginning of the AMI name.
            </para>
             </li> <li> 
            <para>
             <code>start-time</code> - The time the task started (for example, 2013-09-15T17:15:20.000Z).
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the task (<code>pending</code> | <code>waiting-for-shutdown</code>
            | <code>bundling</code> | <code>storing</code> | <code>cancelling</code> | <code>complete</code>
            | <code>failed</code>).
            </para>
             </li> <li> 
            <para>
             <code>update-time</code> - The time of the most recent update for the task.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeBundleTasksResponse">
            <summary>
            Contains the output of DescribeBundleTasks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeBundleTasksResponse.BundleTasks">
            <summary>
            Gets and sets the property BundleTasks. 
            <para>
            Information about one or more bundle tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeClassicLinkInstancesRequest">
            <summary>
            Container for the parameters to the DescribeClassicLinkInstances operation.
            Describes one or more of your linked EC2-Classic instances. This request only returns
            information about EC2-Classic instances linked to a VPC through ClassicLink; you cannot
            use this request to return information about other instances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeClassicLinkInstancesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>group-id</code> - The ID of a VPC security group that's associated with the
            instance.
            </para>
             </li> <li> 
            <para>
             <code>instance-id</code> - The ID of the instance.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>vpc-id</code> - The ID of the VPC that the instance is linked to.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeClassicLinkInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs. Must be instances linked to a VPC through ClassicLink.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeClassicLinkInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return for the request in a single page. The remaining
            results of the initial request can be seen by sending another request with the returned
            <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code>
            is given a value larger than 1000, only 1000 results are returned. You cannot specify
            this parameter and the instance IDs parameter in the same request.
            </para>
             
            <para>
            Constraint: If the value is greater than 1000, we return only 1000 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeClassicLinkInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to retrieve the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeClassicLinkInstancesResponse">
            <summary>
            Contains the output of DescribeClassicLinkInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeClassicLinkInstancesResponse.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
            Information about one or more linked EC2-Classic instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeClassicLinkInstancesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeConversionTasksRequest">
            <summary>
            Container for the parameters to the DescribeConversionTasks operation.
            Describes one or more of your conversion tasks. For more information, see the <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/">VM
            Import/Export User Guide</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeConversionTasksRequest.ConversionTaskIds">
            <summary>
            Gets and sets the property ConversionTaskIds. 
            <para>
            One or more conversion task IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeConversionTasksResponse">
            <summary>
            Contains the output for DescribeConversionTasks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeConversionTasksResponse.ConversionTasks">
            <summary>
            Gets and sets the property ConversionTasks. 
            <para>
            Information about the conversion tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeCustomerGatewaysRequest">
            <summary>
            Container for the parameters to the DescribeCustomerGateways operation.
            Describes one or more of your VPN customer gateways.
            
             
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeCustomerGatewaysRequest.CustomerGatewayIds">
            <summary>
            Gets and sets the property CustomerGatewayIds. 
            <para>
            One or more customer gateway IDs.
            </para>
             
            <para>
            Default: Describes all your customer gateways.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeCustomerGatewaysRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>bgp-asn</code> - The customer gateway's Border Gateway Protocol (BGP) Autonomous
            System Number (ASN).
            </para>
             </li> <li> 
            <para>
             <code>customer-gateway-id</code> - The ID of the customer gateway.
            </para>
             </li> <li> 
            <para>
             <code>ip-address</code> - The IP address of the customer gateway's Internet-routable
            external interface.
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the customer gateway (<code>pending</code> | <code>available</code>
            | <code>deleting</code> | <code>deleted</code>).
            </para>
             </li> <li> 
            <para>
             <code>type</code> - The type of customer gateway. Currently, the only supported type
            is <code>ipsec.1</code>.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeCustomerGatewaysResponse">
            <summary>
            Contains the output of DescribeCustomerGateways.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeCustomerGatewaysResponse.CustomerGateways">
            <summary>
            Gets and sets the property CustomerGateways. 
            <para>
            Information about one or more customer gateways.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeDhcpOptionsRequest">
            <summary>
            Container for the parameters to the DescribeDhcpOptions operation.
            Describes one or more of your DHCP options sets.
            
             
            <para>
            For more information about DHCP options sets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeDhcpOptionsRequest.DhcpOptionsIds">
            <summary>
            Gets and sets the property DhcpOptionsIds. 
            <para>
            The IDs of one or more DHCP options sets.
            </para>
             
            <para>
            Default: Describes all your DHCP options sets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeDhcpOptionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>dhcp-options-id</code> - The ID of a set of DHCP options.
            </para>
             </li> <li> 
            <para>
             <code>key</code> - The key for one of the options (for example, <code>domain-name</code>).
            </para>
             </li> <li> 
            <para>
             <code>value</code> - The value for one of the options.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeDhcpOptionsResponse">
            <summary>
            Contains the output of DescribeDhcpOptions.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeDhcpOptionsResponse.DhcpOptions">
            <summary>
            Gets and sets the property DhcpOptions. 
            <para>
            Information about one or more DHCP options sets.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeExportTasksRequest">
            <summary>
            Container for the parameters to the DescribeExportTasks operation.
            Describes one or more of your export tasks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeExportTasksRequest.ExportTaskIds">
            <summary>
            Gets and sets the property ExportTaskIds. 
            <para>
            One or more export task IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeExportTasksResponse">
            <summary>
            Contains the output for DescribeExportTasks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeExportTasksResponse.ExportTasks">
            <summary>
            Gets and sets the property ExportTasks. 
            <para>
            Information about the export tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeFlowLogsRequest">
            <summary>
            Container for the parameters to the DescribeFlowLogs operation.
            Describes one or more flow logs. To view the information in your flow logs (the log
            streams for the network interfaces), you must use the CloudWatch Logs console or the
            CloudWatch Logs API.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeFlowLogsRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>deliver-log-status</code> - The status of the logs delivery (<code>SUCCESS</code>
            | <code>FAILED</code>).
            </para>
             </li> <li> 
            <para>
             <code>flow-log-id</code> - The ID of the flow log.
            </para>
             </li> <li> 
            <para>
             <code>log-group-name</code> - The name of the log group.
            </para>
             </li> <li> 
            <para>
             <code>resource-id</code> - The ID of the VPC, subnet, or network interface.
            </para>
             </li> <li> 
            <para>
             <code>traffic-type</code> - The type of traffic (<code>ACCEPT</code> | <code>REJECT</code>
            | <code>ALL</code>)
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeFlowLogsRequest.FlowLogIds">
            <summary>
            Gets and sets the property FlowLogIds. 
            <para>
            One or more flow log IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeFlowLogsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the returned <code>NextToken</code>
            value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a
            value larger than 1000, only 1000 results are returned. You cannot specify this parameter
            and the flow log IDs parameter in the same request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeFlowLogsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to retrieve the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeFlowLogsResponse">
            <summary>
            Contains the output of DescribeFlowLogs.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeFlowLogsResponse.FlowLogs">
            <summary>
            Gets and sets the property FlowLogs. 
            <para>
            Information about the flow logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeFlowLogsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeHostReservationOfferingsRequest">
            <summary>
            Container for the parameters to the DescribeHostReservationOfferings operation.
            Describes the Dedicated Host Reservations that are available to purchase.
            
             
            <para>
            The results describe all the Dedicated Host Reservation offerings, including offerings
            that may not match the instance family and region of your Dedicated Hosts. When purchasing
            an offering, ensure that the the instance family and region of the offering matches
            that of the Dedicated Host/s it will be associated with. For an overview of supported
            instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated
            Hosts Overview</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationOfferingsRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>instance-family</code> - The instance family of the offering (e.g., <code>m4</code>).
            </para>
             </li> <li> 
            <para>
             <code>payment-option</code> - The payment option (<code>No Upfront</code> | <code>Partial
            Upfront</code> | <code>All Upfront</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationOfferingsRequest.MaxDuration">
            <summary>
            Gets and sets the property MaxDuration. 
            <para>
            This is the maximum duration of the reservation you'd like to purchase, specified
            in seconds. Reservations are available in one-year and three-year terms. The number
            of seconds specified must be the number of seconds in a year (365x24x60x60) times
            one of the supported durations (1 or 3). For example, specify 94608000 for three years.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationOfferingsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the returned <code>nextToken</code>
            value. This value can be between 5 and 500; if <code>maxResults</code> is given a
            larger value than 500, you will receive an error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationOfferingsRequest.MinDuration">
            <summary>
            Gets and sets the property MinDuration. 
            <para>
            This is the minimum duration of the reservation you'd like to purchase, specified
            in seconds. Reservations are available in one-year and three-year terms. The number
            of seconds specified must be the number of seconds in a year (365x24x60x60) times
            one of the supported durations (1 or 3). For example, specify 31536000 for one year.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationOfferingsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationOfferingsRequest.OfferingId">
            <summary>
            Gets and sets the property OfferingId. 
            <para>
            The ID of the reservation offering.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeHostReservationOfferingsResponse">
            <summary>
            This is the response object from the DescribeHostReservationOfferings operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationOfferingsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationOfferingsResponse.OfferingSet">
            <summary>
            Gets and sets the property OfferingSet. 
            <para>
            Information about the offerings.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeHostReservationsRequest">
            <summary>
            Container for the parameters to the DescribeHostReservations operation.
            Describes Dedicated Host Reservations which are associated with Dedicated Hosts in
            your account.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationsRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>instance-family</code> - The instance family (e.g., <code>m4</code>).
            </para>
             </li> <li> 
            <para>
             <code>payment-option</code> - The payment option (<code>No Upfront</code> | <code>Partial
            Upfront</code> | <code>All Upfront</code>).
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the reservation (<code>payment-pending</code> |
            <code>payment-failed</code> | <code>active</code> | <code>retired</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationsRequest.HostReservationIdSet">
            <summary>
            Gets and sets the property HostReservationIdSet. 
            <para>
            One or more host reservation IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the returned <code>nextToken</code>
            value. This value can be between 5 and 500; if <code>maxResults</code> is given a
            larger value than 500, you will receive an error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeHostReservationsResponse">
            <summary>
            This is the response object from the DescribeHostReservations operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationsResponse.HostReservationSet">
            <summary>
            Gets and sets the property HostReservationSet. 
            <para>
            Details about the reservation's configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostReservationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeHostsRequest">
            <summary>
            Container for the parameters to the DescribeHosts operation.
            Describes one or more of your Dedicated Hosts.
            
             
            <para>
            The results describe only the Dedicated Hosts in the region you're currently using.
            All listed instances consume capacity on your Dedicated Host. Dedicated Hosts that
            have recently been released will be listed with the state <code>released</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostsRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>instance-type</code> - The instance type size that the Dedicated Host is configured
            to support.
            </para>
             </li> <li> 
            <para>
             <code>auto-placement</code> - Whether auto-placement is enabled or disabled (<code>on</code>
            | <code>off</code>).
            </para>
             </li> <li> 
            <para>
             <code>host-reservation-id</code> - The ID of the reservation assigned to this host.
            </para>
             </li> <li> 
            <para>
             <code>client-token</code> - The idempotency token you provided when you launched
            the instance
            </para>
             </li> <li> 
            <para>
             <code>state</code>- The allocation state of the Dedicated Host (<code>available</code>
            | <code>under-assessment</code> | <code>permanent-failure</code> | <code>released</code>
            | <code>released-permanent-failure</code>).
            </para>
             </li> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone of the host.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostsRequest.HostIds">
            <summary>
            Gets and sets the property HostIds. 
            <para>
            The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return for the request in a single page. The remaining
            results can be seen by sending another request with the returned <code>nextToken</code>
            value. This value can be between 5 and 500; if <code>maxResults</code> is given a
            larger value than 500, you will receive an error. You cannot specify this parameter
            and the host IDs parameter in the same request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to retrieve the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeHostsResponse">
            <summary>
            Contains the output of DescribeHosts.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostsResponse.Hosts">
            <summary>
            Gets and sets the property Hosts. 
            <para>
            Information about the Dedicated Hosts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeHostsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeIdentityIdFormatRequest">
            <summary>
            Container for the parameters to the DescribeIdentityIdFormat operation.
            Describes the ID format settings for resources for the specified IAM user, IAM role,
            or root user. For example, you can view the resource types that are enabled for longer
            IDs. This request only returns information about resource types whose ID formats can
            be modified; it does not return information about other resource types. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            
             
            <para>
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>. 
            </para>
             
            <para>
            These settings apply to the principal specified in the request. They do not apply
            to the principal that makes the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeIdentityIdFormatRequest.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The ARN of the principal, which can be an IAM role, IAM user, or the root user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeIdentityIdFormatRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code>
            | <code>volume</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeIdentityIdFormatResponse">
            <summary>
            Contains the output of DescribeIdentityIdFormat.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeIdentityIdFormatResponse.Statuses">
            <summary>
            Gets and sets the property Statuses. 
            <para>
            Information about the ID format for the resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeIdFormatRequest">
            <summary>
            Container for the parameters to the DescribeIdFormat operation.
            Describes the ID format settings for your resources on a per-region basis, for example,
            to view which resource types are enabled for longer IDs. This request only returns
            information about resource types whose ID formats can be modified; it does not return
            information about other resource types.
            
             
            <para>
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>. 
            </para>
             
            <para>
            These settings apply to the IAM user who makes the request; they do not apply to the
            entire AWS account. By default, an IAM user defaults to the same settings as the root
            user, unless they explicitly override the settings by running the <a>ModifyIdFormat</a>
            command. Resources created with longer IDs are visible to all IAM users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeIdFormatRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code>
            | <code>volume</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeIdFormatResponse">
            <summary>
            Contains the output of DescribeIdFormat.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeIdFormatResponse.Statuses">
            <summary>
            Gets and sets the property Statuses. 
            <para>
            Information about the ID format for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImageAttributeRequest">
            <summary>
            Container for the parameters to the DescribeImageAttribute operation.
            Describes the specified attribute of the specified AMI. You can specify only one attribute
            at a time.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeImageAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeImageAttributeRequest.#ctor(System.String,Amazon.EC2.ImageAttributeName)">
            <summary>
            Instantiates DescribeImageAttributeRequest with the parameterized properties
            </summary>
            <param name="imageId">The ID of the AMI.</param>
            <param name="attribute">The AMI attribute.  <b>Note</b>: Depending on your account privileges, the <code>blockDeviceMapping</code> attribute may return a <code>Client.AuthFailure</code> error. If this happens, use <a>DescribeImages</a> to get information about the block device mapping for the AMI.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImageAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The AMI attribute.
            </para>
             
            <para>
             <b>Note</b>: Depending on your account privileges, the <code>blockDeviceMapping</code>
            attribute may return a <code>Client.AuthFailure</code> error. If this happens, use
            <a>DescribeImages</a> to get information about the block device mapping for the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImageAttributeRequest.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImageAttributeResponse">
            <summary>
            Contains the response data from the DescribeImageAttribute operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImageAttributeResponse.ImageAttribute">
            <summary>
            Gets and sets the ImageAttribute member
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImagesRequest">
            <summary>
            Container for the parameters to the DescribeImages operation.
            Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images
            available to you include public images, private images that you own, and private images
            owned by other AWS accounts but for which you have explicit launch permissions.
            
             <note> 
            <para>
            Deregistered images are included in the returned results for an unspecified interval
            after deregistration.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImagesRequest.ExecutableUsers">
            <summary>
            Gets and sets the property ExecutableUsers. 
            <para>
            Scopes the images by users with explicit launch permissions. Specify an AWS account
            ID, <code>self</code> (the sender of the request), or <code>all</code> (public AMIs).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImagesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>architecture</code> - The image architecture (<code>i386</code> | <code>x86_64</code>).
            </para>
             </li> <li> 
            <para>
             <code>block-device-mapping.delete-on-termination</code> - A Boolean value that indicates
            whether the Amazon EBS volume is deleted on instance termination.
            </para>
             </li> <li> 
            <para>
             <code>block-device-mapping.device-name</code> - The device name for the EBS volume
            (for example, <code>/dev/sdh</code>).
            </para>
             </li> <li> 
            <para>
             <code>block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the
            EBS volume.
            </para>
             </li> <li> 
            <para>
             <code>block-device-mapping.volume-size</code> - The volume size of the EBS volume,
            in GiB.
            </para>
             </li> <li> 
            <para>
             <code>block-device-mapping.volume-type</code> - The volume type of the EBS volume
            (<code>gp2</code> | <code>io1</code> | <code>st1 </code>| <code>sc1</code> | <code>standard</code>).
            </para>
             </li> <li> 
            <para>
             <code>description</code> - The description of the image (provided during image creation).
            </para>
             </li> <li> 
            <para>
             <code>hypervisor</code> - The hypervisor type (<code>ovm</code> | <code>xen</code>).
            </para>
             </li> <li> 
            <para>
             <code>image-id</code> - The ID of the image.
            </para>
             </li> <li> 
            <para>
             <code>image-type</code> - The image type (<code>machine</code> | <code>kernel</code>
            | <code>ramdisk</code>).
            </para>
             </li> <li> 
            <para>
             <code>is-public</code> - A Boolean that indicates whether the image is public.
            </para>
             </li> <li> 
            <para>
             <code>kernel-id</code> - The kernel ID.
            </para>
             </li> <li> 
            <para>
             <code>manifest-location</code> - The location of the image manifest.
            </para>
             </li> <li> 
            <para>
             <code>name</code> - The name of the AMI (provided during image creation).
            </para>
             </li> <li> 
            <para>
             <code>owner-alias</code> - String value from an Amazon-maintained list (<code>amazon</code>
            | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to
            be confused with the user-configured AWS account alias, which is set from the IAM
            console.
            </para>
             </li> <li> 
            <para>
             <code>owner-id</code> - The AWS account ID of the image owner.
            </para>
             </li> <li> 
            <para>
             <code>platform</code> - The platform. To only list Windows-based AMIs, use <code>windows</code>.
            </para>
             </li> <li> 
            <para>
             <code>product-code</code> - The product code.
            </para>
             </li> <li> 
            <para>
             <code>product-code.type</code> - The type of the product code (<code>devpay</code>
            | <code>marketplace</code>).
            </para>
             </li> <li> 
            <para>
             <code>ramdisk-id</code> - The RAM disk ID.
            </para>
             </li> <li> 
            <para>
             <code>root-device-name</code> - The name of the root device volume (for example,
            <code>/dev/sda1</code>).
            </para>
             </li> <li> 
            <para>
             <code>root-device-type</code> - The type of the root device volume (<code>ebs</code>
            | <code>instance-store</code>).
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the image (<code>available</code> | <code>pending</code>
            | <code>failed</code>).
            </para>
             </li> <li> 
            <para>
             <code>state-reason-code</code> - The reason code for the state change.
            </para>
             </li> <li> 
            <para>
             <code>state-reason-message</code> - The message for the state change.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the tag-value filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>virtualization-type</code> - The virtualization type (<code>paravirtual</code>
            | <code>hvm</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImagesRequest.ImageIds">
            <summary>
            Gets and sets the property ImageIds. 
            <para>
            One or more image IDs.
            </para>
             
            <para>
            Default: Describes all images available to you.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImagesRequest.Owners">
            <summary>
            Gets and sets the property Owners. 
            <para>
            Filters the images by the owner. Specify an AWS account ID, <code>self</code> (owner
            is the sender of the request), or an AWS owner alias (valid values are <code>amazon</code>
            | <code>aws-marketplace</code> | <code>microsoft</code>). Omitting this option returns
            all images for which you have launch permissions, regardless of ownership.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImagesResponse">
            <summary>
            Contains the output of DescribeImages.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImagesResponse.Images">
            <summary>
            Gets and sets the property Images. 
            <para>
            Information about one or more images.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImportImageTasksRequest">
            <summary>
            Container for the parameters to the DescribeImportImageTasks operation.
            Displays details about an import virtual machine or import snapshot tasks that are
            already created.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportImageTasksRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filter tasks using the <code>task-state</code> filter and one of the following values:
            active, completed, deleting, deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportImageTasksRequest.ImportTaskIds">
            <summary>
            Gets and sets the property ImportTaskIds. 
            <para>
            A list of import image task IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportImageTasksRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportImageTasksRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token that indicates the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImportImageTasksResponse">
            <summary>
            Contains the output for DescribeImportImageTasks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportImageTasksResponse.ImportImageTasks">
            <summary>
            Gets and sets the property ImportImageTasks. 
            <para>
            A list of zero or more import image tasks that are currently active or were completed
            or canceled in the previous 7 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportImageTasksResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to get the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImportSnapshotTasksRequest">
            <summary>
            Container for the parameters to the DescribeImportSnapshotTasks operation.
            Describes your import snapshot tasks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportSnapshotTasksRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportSnapshotTasksRequest.ImportTaskIds">
            <summary>
            Gets and sets the property ImportTaskIds. 
            <para>
            A list of import snapshot task IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportSnapshotTasksRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportSnapshotTasksRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token that indicates the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImportSnapshotTasksResponse">
            <summary>
            Contains the output for DescribeImportSnapshotTasks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportSnapshotTasksResponse.ImportSnapshotTasks">
            <summary>
            Gets and sets the property ImportSnapshotTasks. 
            <para>
            A list of zero or more import snapshot tasks that are currently active or were completed
            or canceled in the previous 7 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImportSnapshotTasksResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to get the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstanceAttributeRequest">
            <summary>
            Container for the parameters to the DescribeInstanceAttribute operation.
            Describes the specified attribute of the specified instance. You can specify only
            one attribute at a time. Valid attribute values are: <code>instanceType</code> | <code>kernel</code>
            | <code>ramdisk</code> | <code>userData</code> | <code>disableApiTermination</code>
            | <code>instanceInitiatedShutdownBehavior</code> | <code>rootDeviceName</code> | <code>blockDeviceMapping</code>
            | <code>productCodes</code> | <code>sourceDestCheck</code> | <code>groupSet</code>
            | <code>ebsOptimized</code> | <code>sriovNetSupport</code>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeInstanceAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeInstanceAttributeRequest.#ctor(System.String,Amazon.EC2.InstanceAttributeName)">
            <summary>
            Instantiates DescribeInstanceAttributeRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance.</param>
            <param name="attribute">The instance attribute. Note: The <code>enaSupport</code> attribute is not supported at this time.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The instance attribute.
            </para>
             
            <para>
            Note: The <code>enaSupport</code> attribute is not supported at this time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceAttributeRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstanceAttributeResponse">
            <summary>
            Contains the response data from the DescribeInstanceAttribute operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceAttributeResponse.InstanceAttribute">
            <summary>
            Gets and sets the InstanceAttribute member
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstancesRequest">
            <summary>
            Container for the parameters to the DescribeInstances operation.
            Describes one or more of your instances.
            
             
            <para>
            If you specify one or more instance IDs, Amazon EC2 returns information for those
            instances. If you do not specify instance IDs, Amazon EC2 returns information for
            all relevant instances. If you specify an instance ID that is not valid, an error
            is returned. If you specify an instance that you do not own, it is not included in
            the returned results.
            </para>
             
            <para>
            Recently terminated instances might appear in the returned results. This interval
            is usually less than one hour.
            </para>
             
            <para>
            If you describe instances in the rare case where an Availability Zone is experiencing
            a service disruption and you specify instance IDs that are in the affected zone, or
            do not specify any instance IDs at all, the call fails. If you describe instances
            and specify only instance IDs that are in an unaffected zone, the call works normally.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>affinity</code> - The affinity setting for an instance running on a Dedicated
            Host (<code>default</code> | <code>host</code>).
            </para>
             </li> <li> 
            <para>
             <code>architecture</code> - The instance architecture (<code>i386</code> | <code>x86_64</code>).
            </para>
             </li> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone of the instance.
            </para>
             </li> <li> 
            <para>
             <code>block-device-mapping.attach-time</code> - The attach time for an EBS volume
            mapped to the instance, for example, <code>2010-09-15T17:15:20.000Z</code>.
            </para>
             </li> <li> 
            <para>
             <code>block-device-mapping.delete-on-termination</code> - A Boolean that indicates
            whether the EBS volume is deleted on instance termination.
            </para>
             </li> <li> 
            <para>
             <code>block-device-mapping.device-name</code> - The device name for the EBS volume
            (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
            </para>
             </li> <li> 
            <para>
             <code>block-device-mapping.status</code> - The status for the EBS volume (<code>attaching</code>
            | <code>attached</code> | <code>detaching</code> | <code>detached</code>).
            </para>
             </li> <li> 
            <para>
             <code>block-device-mapping.volume-id</code> - The volume ID of the EBS volume.
            </para>
             </li> <li> 
            <para>
             <code>client-token</code> - The idempotency token you provided when you launched
            the instance.
            </para>
             </li> <li> 
            <para>
             <code>dns-name</code> - The public DNS name of the instance.
            </para>
             </li> <li> 
            <para>
             <code>group-id</code> - The ID of the security group for the instance. EC2-Classic
            only.
            </para>
             </li> <li> 
            <para>
             <code>group-name</code> - The name of the security group for the instance. EC2-Classic
            only.
            </para>
             </li> <li> 
            <para>
             <code>host-id</code> - The ID of the Dedicated Host on which the instance is running,
            if applicable.
            </para>
             </li> <li> 
            <para>
             <code>hypervisor</code> - The hypervisor type of the instance (<code>ovm</code> |
            <code>xen</code>).
            </para>
             </li> <li> 
            <para>
             <code>iam-instance-profile.arn</code> - The instance profile associated with the
            instance. Specified as an ARN.
            </para>
             </li> <li> 
            <para>
             <code>image-id</code> - The ID of the image used to launch the instance.
            </para>
             </li> <li> 
            <para>
             <code>instance-id</code> - The ID of the instance.
            </para>
             </li> <li> 
            <para>
             <code>instance-lifecycle</code> - Indicates whether this is a Spot Instance or a
            Scheduled Instance (<code>spot</code> | <code>scheduled</code>).
            </para>
             </li> <li> 
            <para>
             <code>instance-state-code</code> - The state of the instance, as a 16-bit unsigned
            integer. The high byte is an opaque internal value and should be ignored. The low
            byte is set based on the state represented. The valid values are: 0 (pending), 16
            (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).
            </para>
             </li> <li> 
            <para>
             <code>instance-state-name</code> - The state of the instance (<code>pending</code>
            | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code>
            | <code>stopped</code>).
            </para>
             </li> <li> 
            <para>
             <code>instance-type</code> - The type of instance (for example, <code>t2.micro</code>).
            </para>
             </li> <li> 
            <para>
             <code>instance.group-id</code> - The ID of the security group for the instance. 
            </para>
             </li> <li> 
            <para>
             <code>instance.group-name</code> - The name of the security group for the instance.
            
            </para>
             </li> <li> 
            <para>
             <code>ip-address</code> - The public IP address of the instance.
            </para>
             </li> <li> 
            <para>
             <code>kernel-id</code> - The kernel ID.
            </para>
             </li> <li> 
            <para>
             <code>key-name</code> - The name of the key pair used when the instance was launched.
            </para>
             </li> <li> 
            <para>
             <code>launch-index</code> - When launching multiple instances, this is the index
            for the instance in the launch group (for example, 0, 1, 2, and so on). 
            </para>
             </li> <li> 
            <para>
             <code>launch-time</code> - The time when the instance was launched.
            </para>
             </li> <li> 
            <para>
             <code>monitoring-state</code> - Indicates whether monitoring is enabled for the instance
            (<code>disabled</code> | <code>enabled</code>).
            </para>
             </li> <li> 
            <para>
             <code>owner-id</code> - The AWS account ID of the instance owner.
            </para>
             </li> <li> 
            <para>
             <code>placement-group-name</code> - The name of the placement group for the instance.
            </para>
             </li> <li> 
            <para>
             <code>platform</code> - The platform. Use <code>windows</code> if you have Windows
            instances; otherwise, leave blank.
            </para>
             </li> <li> 
            <para>
             <code>private-dns-name</code> - The private DNS name of the instance.
            </para>
             </li> <li> 
            <para>
             <code>private-ip-address</code> - The private IP address of the instance.
            </para>
             </li> <li> 
            <para>
             <code>product-code</code> - The product code associated with the AMI used to launch
            the instance.
            </para>
             </li> <li> 
            <para>
             <code>product-code.type</code> - The type of product code (<code>devpay</code> |
            <code>marketplace</code>).
            </para>
             </li> <li> 
            <para>
             <code>ramdisk-id</code> - The RAM disk ID.
            </para>
             </li> <li> 
            <para>
             <code>reason</code> - The reason for the current state of the instance (for example,
            shows "User Initiated [date]" when you stop or terminate the instance). Similar to
            the state-reason-code filter.
            </para>
             </li> <li> 
            <para>
             <code>requester-id</code> - The ID of the entity that launched the instance on your
            behalf (for example, AWS Management Console, Auto Scaling, and so on).
            </para>
             </li> <li> 
            <para>
             <code>reservation-id</code> - The ID of the instance's reservation. A reservation
            ID is created any time you launch an instance. A reservation ID has a one-to-one relationship
            with an instance launch request, but can be associated with more than one instance
            if you launch multiple instances using the same launch request. For example, if you
            launch one instance, you'll get one reservation ID. If you launch ten instances using
            the same launch request, you'll also get one reservation ID.
            </para>
             </li> <li> 
            <para>
             <code>root-device-name</code> - The name of the root device for the instance (for
            example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).
            </para>
             </li> <li> 
            <para>
             <code>root-device-type</code> - The type of root device that the instance uses (<code>ebs</code>
            | <code>instance-store</code>).
            </para>
             </li> <li> 
            <para>
             <code>source-dest-check</code> - Indicates whether the instance performs source/destination
            checking. A value of <code>true</code> means that checking is enabled, and <code>false</code>
            means checking is disabled. The value must be <code>false</code> for the instance
            to perform network address translation (NAT) in your VPC. 
            </para>
             </li> <li> 
            <para>
             <code>spot-instance-request-id</code> - The ID of the Spot instance request.
            </para>
             </li> <li> 
            <para>
             <code>state-reason-code</code> - The reason code for the state change.
            </para>
             </li> <li> 
            <para>
             <code>state-reason-message</code> - A message that describes the state change.
            </para>
             </li> <li> 
            <para>
             <code>subnet-id</code> - The ID of the subnet for the instance.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource, where <code>tag</code>:<i>key</i> is the tag's key. 
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> | <code>default</code>
            | <code>host</code>).
            </para>
             </li> <li> 
            <para>
             <code>virtualization-type</code> - The virtualization type of the instance (<code>paravirtual</code>
            | <code>hvm</code>).
            </para>
             </li> <li> 
            <para>
             <code>vpc-id</code> - The ID of the VPC that the instance is running in.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.description</code> - The description of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.subnet-id</code> - The ID of the subnet for the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.vpc-id</code> - The ID of the VPC for the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.network-interface-id</code> - The ID of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.owner-id</code> - The ID of the owner of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.availability-zone</code> - The Availability Zone for the
            network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.requester-id</code> - The requester ID for the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.requester-managed</code> - Indicates whether the network
            interface is being managed by AWS.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.status</code> - The status of the network interface (<code>available</code>)
            | <code>in-use</code>).
            </para>
             </li> <li> 
            <para>
             <code>network-interface.mac-address</code> - The MAC address of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.private-dns-name</code> - The private DNS name of the network
            interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.source-dest-check</code> - Whether the network interface
            performs source/destination checking. A value of <code>true</code> means checking
            is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code>
            for the network interface to perform network address translation (NAT) in your VPC.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.group-id</code> - The ID of a security group associated with
            the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.group-name</code> - The name of a security group associated
            with the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.attachment.attachment-id</code> - The ID of the interface
            attachment.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.attachment.instance-id</code> - The ID of the instance to
            which the network interface is attached.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.attachment.instance-owner-id</code> - The owner ID of the
            instance to which the network interface is attached.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.addresses.private-ip-address</code> - The private IP address
            associated with the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.attachment.device-index</code> - The device index to which
            the network interface is attached.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.attachment.status</code> - The status of the attachment (<code>attaching</code>
            | <code>attached</code> | <code>detaching</code> | <code>detached</code>).
            </para>
             </li> <li> 
            <para>
             <code>network-interface.attachment.attach-time</code> - The time that the network
            interface was attached to an instance.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.attachment.delete-on-termination</code> - Specifies whether
            the attachment is deleted when an instance is terminated.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.addresses.primary</code> - Specifies whether the IP address
            of the network interface is the primary private IP address.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.addresses.association.public-ip</code> - The ID of the association
            of an Elastic IP address with a network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.addresses.association.ip-owner-id</code> - The owner ID of
            the private IP address associated with the network interface.
            </para>
             </li> <li> 
            <para>
             <code>association.public-ip</code> - The address of the Elastic IP address bound
            to the network interface.
            </para>
             </li> <li> 
            <para>
             <code>association.ip-owner-id</code> - The owner of the Elastic IP address associated
            with the network interface.
            </para>
             </li> <li> 
            <para>
             <code>association.allocation-id</code> - The allocation ID returned when you allocated
            the Elastic IP address for your network interface.
            </para>
             </li> <li> 
            <para>
             <code>association.association-id</code> - The association ID returned when the network
            interface was associated with an IP address.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
             
            <para>
            Default: Describes all your instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value. This value
            can be between 5 and 1000. You cannot specify this parameter and the instance IDs
            parameter or tag filters in the same call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to request the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstancesResponse">
            <summary>
            Contains the output of DescribeInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesResponse.Reservations">
            <summary>
            Gets and sets the property Reservations. 
            <para>
            Zero or more reservations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstanceStatusRequest">
            <summary>
            Container for the parameters to the DescribeInstanceStatus operation.
            Describes the status of one or more instances. By default, only running instances
            are described, unless specified otherwise.
            
             
            <para>
            Instance status includes the following components:
            </para>
             <ul> <li> 
            <para>
             <b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances
            to identify hardware and software issues. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status
            Checks for Your Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting
            Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or
            terminate) for your instances related to hardware issues, software updates, or system
            maintenance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled
            Events for Your Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Instance state</b> - You can manage your instances from the moment you launch
            them through their termination. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone of the instance.
            </para>
             </li> <li> 
            <para>
             <code>event.code</code> - The code for the scheduled event (<code>instance-reboot</code>
            | <code>system-reboot</code> | <code>system-maintenance</code> | <code>instance-retirement</code>
            | <code>instance-stop</code>).
            </para>
             </li> <li> 
            <para>
             <code>event.description</code> - A description of the event.
            </para>
             </li> <li> 
            <para>
             <code>event.not-after</code> - The latest end time for the scheduled event (for example,
            <code>2014-09-15T17:15:20.000Z</code>).
            </para>
             </li> <li> 
            <para>
             <code>event.not-before</code> - The earliest start time for the scheduled event (for
            example, <code>2014-09-15T17:15:20.000Z</code>).
            </para>
             </li> <li> 
            <para>
             <code>instance-state-code</code> - The code for the instance state, as a 16-bit unsigned
            integer. The high byte is an opaque internal value and should be ignored. The low
            byte is set based on the state represented. The valid values are 0 (pending), 16 (running),
            32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).
            </para>
             </li> <li> 
            <para>
             <code>instance-state-name</code> - The state of the instance (<code>pending</code>
            | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code>
            | <code>stopped</code>).
            </para>
             </li> <li> 
            <para>
             <code>instance-status.reachability</code> - Filters on instance status where the
            name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code>
            | <code>insufficient-data</code>).
            </para>
             </li> <li> 
            <para>
             <code>instance-status.status</code> - The status of the instance (<code>ok</code>
            | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code>
            | <code>not-applicable</code>).
            </para>
             </li> <li> 
            <para>
             <code>system-status.reachability</code> - Filters on system status where the name
            is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code>
            | <code>insufficient-data</code>).
            </para>
             </li> <li> 
            <para>
             <code>system-status.status</code> - The system status of the instance (<code>ok</code>
            | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code>
            | <code>not-applicable</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusRequest.IncludeAllInstances">
            <summary>
            Gets and sets the property IncludeAllInstances. 
            <para>
            When <code>true</code>, includes the health status for all instances. When <code>false</code>,
            includes the health status for running instances only.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
             
            <para>
            Default: Describes all your instances.
            </para>
             
            <para>
            Constraints: Maximum 100 explicitly specified instance IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in a single call. To retrieve the remaining
            results, make another call with the returned <code>NextToken</code> value. This value
            can be between 5 and 1000. You cannot specify this parameter and the instance IDs
            parameter in the same call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to retrieve the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstanceStatusResponse">
            <summary>
            Contains the output of DescribeInstanceStatus.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusResponse.InstanceStatuses">
            <summary>
            Gets and sets the property InstanceStatuses. 
            <para>
            One or more instance status descriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInternetGatewaysRequest">
            <summary>
            Container for the parameters to the DescribeInternetGateways operation.
            Describes one or more of your Internet gateways.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInternetGatewaysRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>attachment.state</code> - The current state of the attachment between the gateway
            and the VPC (<code>available</code>). Present only if a VPC is attached.
            </para>
             </li> <li> 
            <para>
             <code>attachment.vpc-id</code> - The ID of an attached VPC.
            </para>
             </li> <li> 
            <para>
             <code>internet-gateway-id</code> - The ID of the Internet gateway.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInternetGatewaysRequest.InternetGatewayIds">
            <summary>
            Gets and sets the property InternetGatewayIds. 
            <para>
            One or more Internet gateway IDs.
            </para>
             
            <para>
            Default: Describes all your Internet gateways.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInternetGatewaysResponse">
            <summary>
            Contains the output of DescribeInternetGateways.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInternetGatewaysResponse.InternetGateways">
            <summary>
            Gets and sets the property InternetGateways. 
            <para>
            Information about one or more Internet gateways.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeKeyPairsRequest">
            <summary>
            Container for the parameters to the DescribeKeyPairs operation.
            Describes one or more of your key pairs.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeKeyPairsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>fingerprint</code> - The fingerprint of the key pair.
            </para>
             </li> <li> 
            <para>
             <code>key-name</code> - The name of the key pair.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeKeyPairsRequest.KeyNames">
            <summary>
            Gets and sets the property KeyNames. 
            <para>
            One or more key pair names.
            </para>
             
            <para>
            Default: Describes all your key pairs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeKeyPairsResponse">
            <summary>
            Contains the output of DescribeKeyPairs.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeKeyPairsResponse.KeyPairs">
            <summary>
            Gets and sets the property KeyPairs. 
            <para>
            Information about one or more key pairs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeMovingAddressesRequest">
            <summary>
            Container for the parameters to the DescribeMovingAddresses operation.
            Describes your Elastic IP addresses that are being moved to the EC2-VPC platform,
            or that are being restored to the EC2-Classic platform. This request does not return
            information about any other Elastic IP addresses in your account.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeMovingAddressesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>moving-status</code> - The status of the Elastic IP address (<code>MovingToVpc</code>
            | <code>RestoringToClassic</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeMovingAddressesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return for the request in a single page. The remaining
            results of the initial request can be seen by sending another request with the returned
            <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code>
            is given a value outside of this range, an error is returned.
            </para>
             
            <para>
            Default: If no value is provided, the default is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeMovingAddressesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeMovingAddressesRequest.PublicIps">
            <summary>
            Gets and sets the property PublicIps. 
            <para>
            One or more Elastic IP addresses.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeMovingAddressesResponse">
            <summary>
            Contains the output of DescribeMovingAddresses.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeMovingAddressesResponse.MovingAddressStatuses">
            <summary>
            Gets and sets the property MovingAddressStatuses. 
            <para>
            The status for each Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeMovingAddressesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNatGatewaysRequest">
            <summary>
            Container for the parameters to the DescribeNatGateways operation.
            Describes one or more of the your NAT gateways.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNatGatewaysRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>nat-gateway-id</code> - The ID of the NAT gateway.
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the NAT gateway (<code>pending</code> | <code>failed</code>
            | <code>available</code> | <code>deleting</code> | <code>deleted</code>).
            </para>
             </li> <li> 
            <para>
             <code>subnet-id</code> - The ID of the subnet in which the NAT gateway resides.
            </para>
             </li> <li> 
            <para>
             <code>vpc-id</code> - The ID of the VPC in which the NAT gateway resides.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNatGatewaysRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of items to return for this request. The request returns a token
            that you can specify in a subsequent call to get the next set of results.
            </para>
             
            <para>
            Constraint: If the value specified is greater than 1000, we return only 1000 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNatGatewaysRequest.NatGatewayIds">
            <summary>
            Gets and sets the property NatGatewayIds. 
            <para>
            One or more NAT gateway IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNatGatewaysRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to retrieve the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNatGatewaysResponse">
            <summary>
            Contains the output of DescribeNatGateways.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNatGatewaysResponse.NatGateways">
            <summary>
            Gets and sets the property NatGateways. 
            <para>
            Information about the NAT gateways.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNatGatewaysResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkAclsRequest">
            <summary>
            Container for the parameters to the DescribeNetworkAcls operation.
            Describes one or more of your network ACLs.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkAclsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>association.association-id</code> - The ID of an association ID for the ACL.
            </para>
             </li> <li> 
            <para>
             <code>association.network-acl-id</code> - The ID of the network ACL involved in the
            association.
            </para>
             </li> <li> 
            <para>
             <code>association.subnet-id</code> - The ID of the subnet involved in the association.
            </para>
             </li> <li> 
            <para>
             <code>default</code> - Indicates whether the ACL is the default network ACL for the
            VPC.
            </para>
             </li> <li> 
            <para>
             <code>entry.cidr</code> - The CIDR range specified in the entry.
            </para>
             </li> <li> 
            <para>
             <code>entry.egress</code> - Indicates whether the entry applies to egress traffic.
            </para>
             </li> <li> 
            <para>
             <code>entry.icmp.code</code> - The ICMP code specified in the entry, if any.
            </para>
             </li> <li> 
            <para>
             <code>entry.icmp.type</code> - The ICMP type specified in the entry, if any.
            </para>
             </li> <li> 
            <para>
             <code>entry.port-range.from</code> - The start of the port range specified in the
            entry. 
            </para>
             </li> <li> 
            <para>
             <code>entry.port-range.to</code> - The end of the port range specified in the entry.
            
            </para>
             </li> <li> 
            <para>
             <code>entry.protocol</code> - The protocol specified in the entry (<code>tcp</code>
            | <code>udp</code> | <code>icmp</code> or a protocol number).
            </para>
             </li> <li> 
            <para>
             <code>entry.rule-action</code> - Allows or denies the matching traffic (<code>allow</code>
            | <code>deny</code>).
            </para>
             </li> <li> 
            <para>
             <code>entry.rule-number</code> - The number of an entry (in other words, rule) in
            the ACL's set of entries.
            </para>
             </li> <li> 
            <para>
             <code>network-acl-id</code> - The ID of the network ACL.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>vpc-id</code> - The ID of the VPC for the network ACL.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkAclsRequest.NetworkAclIds">
            <summary>
            Gets and sets the property NetworkAclIds. 
            <para>
            One or more network ACL IDs.
            </para>
             
            <para>
            Default: Describes all your network ACLs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkAclsResponse">
            <summary>
            Contains the output of DescribeNetworkAcls.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkAclsResponse.NetworkAcls">
            <summary>
            Gets and sets the property NetworkAcls. 
            <para>
            Information about one or more network ACLs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest">
            <summary>
            Container for the parameters to the DescribeNetworkInterfaceAttribute operation.
            Describes a network interface attribute. You can specify only one attribute at a time.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The attribute of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse">
            <summary>
            Contains the output of DescribeNetworkInterfaceAttribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse.Attachment">
            <summary>
            Gets and sets the property Attachment. 
            <para>
            The attachment (if any) of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The security groups associated with the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Indicates whether source/destination checking is enabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkInterfacesRequest">
            <summary>
            Container for the parameters to the DescribeNetworkInterfaces operation.
            Describes one or more of your network interfaces.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfacesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>addresses.private-ip-address</code> - The private IP addresses associated with
            the network interface.
            </para>
             </li> <li> 
            <para>
             <code>addresses.primary</code> - Whether the private IP address is the primary IP
            address associated with the network interface. 
            </para>
             </li> <li> 
            <para>
             <code>addresses.association.public-ip</code> - The association ID returned when the
            network interface was associated with the Elastic IP address.
            </para>
             </li> <li> 
            <para>
             <code>addresses.association.owner-id</code> - The owner ID of the addresses associated
            with the network interface.
            </para>
             </li> <li> 
            <para>
             <code>association.association-id</code> - The association ID returned when the network
            interface was associated with an IP address.
            </para>
             </li> <li> 
            <para>
             <code>association.allocation-id</code> - The allocation ID returned when you allocated
            the Elastic IP address for your network interface.
            </para>
             </li> <li> 
            <para>
             <code>association.ip-owner-id</code> - The owner of the Elastic IP address associated
            with the network interface.
            </para>
             </li> <li> 
            <para>
             <code>association.public-ip</code> - The address of the Elastic IP address bound
            to the network interface.
            </para>
             </li> <li> 
            <para>
             <code>association.public-dns-name</code> - The public DNS name for the network interface.
            </para>
             </li> <li> 
            <para>
             <code>attachment.attachment-id</code> - The ID of the interface attachment.
            </para>
             </li> <li> 
            <para>
             <code>attachment.attach.time</code> - The time that the network interface was attached
            to an instance.
            </para>
             </li> <li> 
            <para>
             <code>attachment.delete-on-termination</code> - Indicates whether the attachment
            is deleted when an instance is terminated.
            </para>
             </li> <li> 
            <para>
             <code>attachment.device-index</code> - The device index to which the network interface
            is attached.
            </para>
             </li> <li> 
            <para>
             <code>attachment.instance-id</code> - The ID of the instance to which the network
            interface is attached.
            </para>
             </li> <li> 
            <para>
             <code>attachment.instance-owner-id</code> - The owner ID of the instance to which
            the network interface is attached.
            </para>
             </li> <li> 
            <para>
             <code>attachment.nat-gateway-id</code> - The ID of the NAT gateway to which the network
            interface is attached.
            </para>
             </li> <li> 
            <para>
             <code>attachment.status</code> - The status of the attachment (<code>attaching</code>
            | <code>attached</code> | <code>detaching</code> | <code>detached</code>).
            </para>
             </li> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>description</code> - The description of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>group-id</code> - The ID of a security group associated with the network interface.
            </para>
             </li> <li> 
            <para>
             <code>group-name</code> - The name of a security group associated with the network
            interface.
            </para>
             </li> <li> 
            <para>
             <code>mac-address</code> - The MAC address of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface-id</code> - The ID of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>owner-id</code> - The AWS account ID of the network interface owner.
            </para>
             </li> <li> 
            <para>
             <code>private-ip-address</code> - The private IP address or addresses of the network
            interface.
            </para>
             </li> <li> 
            <para>
             <code>private-dns-name</code> - The private DNS name of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>requester-id</code> - The ID of the entity that launched the instance on your
            behalf (for example, AWS Management Console, Auto Scaling, and so on).
            </para>
             </li> <li> 
            <para>
             <code>requester-managed</code> - Indicates whether the network interface is being
            managed by an AWS service (for example, AWS Management Console, Auto Scaling, and
            so on).
            </para>
             </li> <li> 
            <para>
             <code>source-desk-check</code> - Indicates whether the network interface performs
            source/destination checking. A value of <code>true</code> means checking is enabled,
            and <code>false</code> means checking is disabled. The value must be <code>false</code>
            for the network interface to perform network address translation (NAT) in your VPC.
            
            </para>
             </li> <li> 
            <para>
             <code>status</code> - The status of the network interface. If the network interface
            is not attached to an instance, the status is <code>available</code>; if a network
            interface is attached to an instance the status is <code>in-use</code>.
            </para>
             </li> <li> 
            <para>
             <code>subnet-id</code> - The ID of the subnet for the network interface.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>vpc-id</code> - The ID of the VPC for the network interface.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfacesRequest.NetworkInterfaceIds">
            <summary>
            Gets and sets the property NetworkInterfaceIds. 
            <para>
            One or more network interface IDs.
            </para>
             
            <para>
            Default: Describes all your network interfaces.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkInterfacesResponse">
            <summary>
            Contains the output of DescribeNetworkInterfaces.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfacesResponse.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            Information about one or more network interfaces.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribePlacementGroupsRequest">
            <summary>
            Container for the parameters to the DescribePlacementGroups operation.
            Describes one or more of your placement groups. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePlacementGroupsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>group-name</code> - The name of the placement group.
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the placement group (<code>pending</code> | <code>available</code>
            | <code>deleting</code> | <code>deleted</code>).
            </para>
             </li> <li> 
            <para>
             <code>strategy</code> - The strategy of the placement group (<code>cluster</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePlacementGroupsRequest.GroupNames">
            <summary>
            Gets and sets the property GroupNames. 
            <para>
            One or more placement group names.
            </para>
             
            <para>
            Default: Describes all your placement groups, or only those otherwise specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribePlacementGroupsResponse">
            <summary>
            Contains the output of DescribePlacementGroups.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePlacementGroupsResponse.PlacementGroups">
            <summary>
            Gets and sets the property PlacementGroups. 
            <para>
            One or more placement groups.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribePrefixListsRequest">
            <summary>
            Container for the parameters to the DescribePrefixLists operation.
            Describes available AWS services in a prefix list format, which includes the prefix
            list name and prefix list ID of the service and the IP address range for the service.
            A prefix list ID is required for creating an outbound security group rule that allows
            traffic from a VPC to access an AWS service through a VPC endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePrefixListsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>prefix-list-id</code>: The ID of a prefix list.
            </para>
             </li> <li> 
            <para>
             <code>prefix-list-name</code>: The name of a prefix list.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePrefixListsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of items to return for this request. The request returns a token
            that you can specify in a subsequent call to get the next set of results.
            </para>
             
            <para>
            Constraint: If the value specified is greater than 1000, we return only 1000 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePrefixListsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a prior
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePrefixListsRequest.PrefixListIds">
            <summary>
            Gets and sets the property PrefixListIds. 
            <para>
            One or more prefix list IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribePrefixListsResponse">
            <summary>
            Contains the output of DescribePrefixLists.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePrefixListsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use when requesting the next set of items. If there are no additional
            items to return, the string is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePrefixListsResponse.PrefixLists">
            <summary>
            Gets and sets the property PrefixLists. 
            <para>
            All available prefix lists.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeRegionsRequest">
            <summary>
            Container for the parameters to the DescribeRegions operation.
            Describes one or more regions that are currently available to you.
            
             
            <para>
            For a list of the regions supported by Amazon EC2, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">Regions
            and Endpoints</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRegionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>endpoint</code> - The endpoint of the region (for example, <code>ec2.us-east-1.amazonaws.com</code>).
            </para>
             </li> <li> 
            <para>
             <code>region-name</code> - The name of the region (for example, <code>us-east-1</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRegionsRequest.RegionNames">
            <summary>
            Gets and sets the property RegionNames. 
            <para>
            The names of one or more regions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeRegionsResponse">
            <summary>
            Contains the output of DescribeRegions.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRegionsResponse.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            Information about one or more regions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesListingsRequest">
            <summary>
            Container for the parameters to the DescribeReservedInstancesListings operation.
            Describes your account's Reserved Instance listings in the Reserved Instance Marketplace.
            
             
            <para>
            The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance
            capacity that they no longer need with buyers who want to purchase additional capacity.
            Reserved Instances bought and sold through the Reserved Instance Marketplace work
            like any other Reserved Instances.
            </para>
             
            <para>
            As a seller, you choose to list some or all of your Reserved Instances, and you specify
            the upfront price to receive for them. Your Reserved Instances are then listed in
            the Reserved Instance Marketplace and are available for purchase.
            </para>
             
            <para>
            As a buyer, you specify the configuration of the Reserved Instance to purchase, and
            the Marketplace matches what you're searching for with what's available. The Marketplace
            first sells the lowest priced Reserved Instances to you, and continues to sell available
            Reserved Instance listings to you until your demand is met. You are charged based
            on the total price of all of the listings that you purchase.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesListingsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>reserved-instances-id</code> - The ID of the Reserved Instances.
            </para>
             </li> <li> 
            <para>
             <code>reserved-instances-listing-id</code> - The ID of the Reserved Instances listing.
            </para>
             </li> <li> 
            <para>
             <code>status</code> - The status of the Reserved Instance listing (<code>pending</code>
            | <code>active</code> | <code>cancelled</code> | <code>closed</code>).
            </para>
             </li> <li> 
            <para>
             <code>status-message</code> - The reason for the status.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesListingsRequest.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            One or more Reserved Instance IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesListingsRequest.ReservedInstancesListingId">
            <summary>
            Gets and sets the property ReservedInstancesListingId. 
            <para>
            One or more Reserved Instance listing IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesListingsResponse">
            <summary>
            Contains the output of DescribeReservedInstancesListings.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesListingsResponse.ReservedInstancesListings">
            <summary>
            Gets and sets the property ReservedInstancesListings. 
            <para>
            Information about the Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest">
            <summary>
            Container for the parameters to the DescribeReservedInstancesModifications operation.
            Describes the modifications made to your Reserved Instances. If no parameter is specified,
            information about all your Reserved Instances modification requests is returned. If
            a modification ID is specified, only information about the specific modification is
            returned.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>client-token</code> - The idempotency token for the modification request.
            </para>
             </li> <li> 
            <para>
             <code>create-date</code> - The time when the modification request was created.
            </para>
             </li> <li> 
            <para>
             <code>effective-date</code> - The time when the modification becomes effective.
            </para>
             </li> <li> 
            <para>
             <code>modification-result.reserved-instances-id</code> - The ID for the Reserved
            Instances created as part of the modification request. This ID is only available when
            the status of the modification is <code>fulfilled</code>.
            </para>
             </li> <li> 
            <para>
             <code>modification-result.target-configuration.availability-zone</code> - The Availability
            Zone for the new Reserved Instances.
            </para>
             </li> <li> 
            <para>
             <code>modification-result.target-configuration.instance-count </code> - The number
            of new Reserved Instances.
            </para>
             </li> <li> 
            <para>
             <code>modification-result.target-configuration.instance-type</code> - The instance
            type of the new Reserved Instances.
            </para>
             </li> <li> 
            <para>
             <code>modification-result.target-configuration.platform</code> - The network platform
            of the new Reserved Instances (<code>EC2-Classic</code> | <code>EC2-VPC</code>).
            </para>
             </li> <li> 
            <para>
             <code>reserved-instances-id</code> - The ID of the Reserved Instances modified.
            </para>
             </li> <li> 
            <para>
             <code>reserved-instances-modification-id</code> - The ID of the modification request.
            </para>
             </li> <li> 
            <para>
             <code>status</code> - The status of the Reserved Instances modification request (<code>processing</code>
            | <code>fulfilled</code> | <code>failed</code>).
            </para>
             </li> <li> 
            <para>
             <code>status-message</code> - The reason for the status.
            </para>
             </li> <li> 
            <para>
             <code>update-date</code> - The time when the modification request was last updated.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to retrieve the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest.ReservedInstancesModificationIds">
            <summary>
            Gets and sets the property ReservedInstancesModificationIds. 
            <para>
            IDs for the submitted modification request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesModificationsResponse">
            <summary>
            Contains the output of DescribeReservedInstancesModifications.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesModificationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesModificationsResponse.ReservedInstancesModifications">
            <summary>
            Gets and sets the property ReservedInstancesModifications. 
            <para>
            The Reserved Instance modification information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest">
            <summary>
            Container for the parameters to the DescribeReservedInstancesOfferings operation.
            Describes Reserved Instance offerings that are available for purchase. With Reserved
            Instances, you purchase the right to launch instances for a period of time. During
            that time period, you do not receive insufficient capacity errors, and you pay a lower
            usage rate than the rate charged for On-Demand instances for the actual time used.
            
             
            <para>
            If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace,
            they will be excluded from these results. This is to ensure that you do not purchase
            your own Reserved Instances.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone in which the Reserved Instance can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone where the Reserved Instance
            can be used.
            </para>
             </li> <li> 
            <para>
             <code>duration</code> - The duration of the Reserved Instance (for example, one year
            or three years), in seconds (<code>31536000</code> | <code>94608000</code>).
            </para>
             </li> <li> 
            <para>
             <code>fixed-price</code> - The purchase price of the Reserved Instance (for example,
            9800.0).
            </para>
             </li> <li> 
            <para>
             <code>instance-type</code> - The instance type that is covered by the reservation.
            </para>
             </li> <li> 
            <para>
             <code>marketplace</code> - Set to <code>true</code> to show only Reserved Instance
            Marketplace offerings. When this filter is not used, which is the default behavior,
            all offerings from both AWS and the Reserved Instance Marketplace are listed.
            </para>
             </li> <li> 
            <para>
             <code>product-description</code> - The Reserved Instance product platform description.
            Instances that include <code>(Amazon VPC)</code> in the product platform description
            will only be displayed to EC2-Classic account holders and are for use with Amazon
            VPC. (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE
            Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code>
            | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows
            (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows
            with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code>
            | <code> Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL
            Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>)
            
            </para>
             </li> <li> 
            <para>
             <code>reserved-instances-offering-id</code> - The Reserved Instances offering ID.
            </para>
             </li> <li> 
            <para>
             <code>scope</code> - The scope of the Reserved Instance (<code>Availability Zone</code>
            or <code>Region</code>).
            </para>
             </li> <li> 
            <para>
             <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for
            example, 0.84).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.IncludeMarketplace">
            <summary>
            Gets and sets the property IncludeMarketplace. 
            <para>
            Include Reserved Instance Marketplace offerings in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.InstanceTenancy">
            <summary>
            Gets and sets the property InstanceTenancy. 
            <para>
            The tenancy of the instances covered by the reservation. A Reserved Instance with
            a tenancy of <code>dedicated</code> is applied to instances that run in a VPC on single-tenant
            hardware (i.e., Dedicated Instances).
            </para>
             
            <para>
            Default: <code>default</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type that the reservation will cover (for example, <code>m1.small</code>).
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.MaxDuration">
            <summary>
            Gets and sets the property MaxDuration. 
            <para>
            The maximum duration (in seconds) to filter when searching for offerings.
            </para>
             
            <para>
            Default: 94608000 (3 years)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.MaxInstanceCount">
            <summary>
            Gets and sets the property MaxInstanceCount. 
            <para>
            The maximum number of instances to filter when searching for offerings.
            </para>
             
            <para>
            Default: 20
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return for the request in a single page. The remaining
            results of the initial request can be seen by sending another request with the returned
            <code>NextToken</code> value. The maximum is 100.
            </para>
             
            <para>
            Default: 100
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.MinDuration">
            <summary>
            Gets and sets the property MinDuration. 
            <para>
            The minimum duration (in seconds) to filter when searching for offerings.
            </para>
             
            <para>
            Default: 2592000 (1 month)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to retrieve the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.OfferingClass">
            <summary>
            Gets and sets the property OfferingClass. 
            <para>
            The offering class of the Reserved Instance. Can be <code>standard</code> or <code>convertible</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.OfferingType">
            <summary>
            Gets and sets the property OfferingType. 
            <para>
            The Reserved Instance offering type. If you are using tools that predate the 2011-11-01
            API version, you only have access to the <code>Medium Utilization</code> Reserved
            Instance offering type. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.ProductDescription">
            <summary>
            Gets and sets the property ProductDescription. 
            <para>
            The Reserved Instance product platform description. Instances that include <code>(Amazon
            VPC)</code> in the description are for use with Amazon VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.ReservedInstancesOfferingIds">
            <summary>
            Gets and sets the property ReservedInstancesOfferingIds. 
            <para>
            One or more Reserved Instances offering IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesOfferingsResponse">
            <summary>
            Contains the output of DescribeReservedInstancesOfferings.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsResponse.ReservedInstancesOfferings">
            <summary>
            Gets and sets the property ReservedInstancesOfferings. 
            <para>
            A list of Reserved Instances offerings.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesRequest">
            <summary>
            Container for the parameters to the DescribeReservedInstances operation.
            Describes one or more of the Reserved Instances that you purchased.
            
             
            <para>
            For more information about Reserved Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone where the Reserved Instance
            can be used.
            </para>
             </li> <li> 
            <para>
             <code>duration</code> - The duration of the Reserved Instance (one year or three
            years), in seconds (<code>31536000</code> | <code>94608000</code>).
            </para>
             </li> <li> 
            <para>
             <code>end</code> - The time when the Reserved Instance expires (for example, 2015-08-07T11:54:42.000Z).
            </para>
             </li> <li> 
            <para>
             <code>fixed-price</code> - The purchase price of the Reserved Instance (for example,
            9800.0).
            </para>
             </li> <li> 
            <para>
             <code>instance-type</code> - The instance type that is covered by the reservation.
            </para>
             </li> <li> 
            <para>
             <code>scope</code> - The scope of the Reserved Instance (<code>Region</code> or <code>Availability
            Zone</code>).
            </para>
             </li> <li> 
            <para>
             <code>product-description</code> - The Reserved Instance product platform description.
            Instances that include <code>(Amazon VPC)</code> in the product platform description
            will only be displayed to EC2-Classic account holders and are for use with Amazon
            VPC (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code>
            | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red
            Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon
            VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL
            Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code>Windows
            with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code>
            | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>).
            </para>
             </li> <li> 
            <para>
             <code>reserved-instances-id</code> - The ID of the Reserved Instance.
            </para>
             </li> <li> 
            <para>
             <code>start</code> - The time at which the Reserved Instance purchase request was
            placed (for example, 2014-08-07T11:54:42.000Z).
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the Reserved Instance (<code>payment-pending</code>
            | <code>active</code> | <code>payment-failed</code> | <code>retired</code>).
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for
            example, 0.84).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesRequest.OfferingClass">
            <summary>
            Gets and sets the property OfferingClass. 
            <para>
            Describes whether the Reserved Instance is Standard or Convertible.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesRequest.OfferingType">
            <summary>
            Gets and sets the property OfferingType. 
            <para>
            The Reserved Instance offering type. If you are using tools that predate the 2011-11-01
            API version, you only have access to the <code>Medium Utilization</code> Reserved
            Instance offering type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesRequest.ReservedInstancesIds">
            <summary>
            Gets and sets the property ReservedInstancesIds. 
            <para>
            One or more Reserved Instance IDs.
            </para>
             
            <para>
            Default: Describes all your Reserved Instances, or only those otherwise specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesResponse">
            <summary>
            Contains the output for DescribeReservedInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesResponse.ReservedInstances">
            <summary>
            Gets and sets the property ReservedInstances. 
            <para>
            A list of Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeRouteTablesRequest">
            <summary>
            Container for the parameters to the DescribeRouteTables operation.
            Describes one or more of your route tables.
            
             
            <para>
            Each subnet in your VPC must be associated with a route table. If a subnet is not
            explicitly associated with any route table, it is implicitly associated with the main
            route table. This command does not return the subnet ID for implicit associations.
            </para>
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRouteTablesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>association.route-table-association-id</code> - The ID of an association ID
            for the route table.
            </para>
             </li> <li> 
            <para>
             <code>association.route-table-id</code> - The ID of the route table involved in the
            association.
            </para>
             </li> <li> 
            <para>
             <code>association.subnet-id</code> - The ID of the subnet involved in the association.
            </para>
             </li> <li> 
            <para>
             <code>association.main</code> - Indicates whether the route table is the main route
            table for the VPC (<code>true</code> | <code>false</code>).
            </para>
             </li> <li> 
            <para>
             <code>route-table-id</code> - The ID of the route table.
            </para>
             </li> <li> 
            <para>
             <code>route.destination-cidr-block</code> - The CIDR range specified in a route in
            the table.
            </para>
             </li> <li> 
            <para>
             <code>route.destination-prefix-list-id</code> - The ID (prefix) of the AWS service
            specified in a route in the table.
            </para>
             </li> <li> 
            <para>
             <code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.
            </para>
             </li> <li> 
            <para>
             <code>route.instance-id</code> - The ID of an instance specified in a route in the
            table.
            </para>
             </li> <li> 
            <para>
             <code>route.nat-gateway-id</code> - The ID of a NAT gateway.
            </para>
             </li> <li> 
            <para>
             <code>route.origin</code> - Describes how the route was created. <code>CreateRouteTable</code>
            indicates that the route was automatically created when the route table was created;
            <code>CreateRoute</code> indicates that the route was manually added to the route
            table; <code>EnableVgwRoutePropagation</code> indicates that the route was propagated
            by route propagation.
            </para>
             </li> <li> 
            <para>
             <code>route.state</code> - The state of a route in the route table (<code>active</code>
            | <code>blackhole</code>). The blackhole state indicates that the route's target isn't
            available (for example, the specified gateway isn't attached to the VPC, the specified
            NAT instance has been terminated, and so on).
            </para>
             </li> <li> 
            <para>
             <code>route.vpc-peering-connection-id</code> - The ID of a VPC peering connection
            specified in a route in the table.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>vpc-id</code> - The ID of the VPC for the route table.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRouteTablesRequest.RouteTableIds">
            <summary>
            Gets and sets the property RouteTableIds. 
            <para>
            One or more route table IDs.
            </para>
             
            <para>
            Default: Describes all your route tables.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeRouteTablesResponse">
            <summary>
            Contains the output of DescribeRouteTables.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRouteTablesResponse.RouteTables">
            <summary>
            Gets and sets the property RouteTables. 
            <para>
            Information about one or more route tables.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest">
            <summary>
            Container for the parameters to the DescribeScheduledInstanceAvailability operation.
            Finds available schedules that meet the specified criteria.
            
             
            <para>
            You can search for an available schedule no more than 3 months in advance. You must
            meet the minimum required duration of 1,200 hours per year. For example, the minimum
            daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum
            monthly schedule is 100 hours.
            </para>
             
            <para>
            After you find a schedule that meets your needs, call <a>PurchaseScheduledInstances</a>
            to purchase Scheduled Instances with that schedule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).
            </para>
             </li> <li> 
            <para>
             <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).
            </para>
             </li> <li> 
            <para>
             <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or
            <code>EC2-VPC</code>).
            </para>
             </li> <li> 
            <para>
             <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest.FirstSlotStartTimeRange">
            <summary>
            Gets and sets the property FirstSlotStartTimeRange. 
            <para>
            The time period for the first schedule to start.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in a single call. This value can be between
            5 and 300. The default value is 300. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest.MaxSlotDurationInHours">
            <summary>
            Gets and sets the property MaxSlotDurationInHours. 
            <para>
            The maximum available duration, in hours. This value must be greater than <code>MinSlotDurationInHours</code>
            and less than 1,720.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest.MinSlotDurationInHours">
            <summary>
            Gets and sets the property MinSlotDurationInHours. 
            <para>
            The minimum available duration, in hours. The minimum required duration is 1,200 hours
            per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule
            is 24 hours, and the minimum monthly schedule is 100 hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest.Recurrence">
            <summary>
            Gets and sets the property Recurrence. 
            <para>
            The schedule recurrence.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityResponse">
            <summary>
            Contains the output of DescribeScheduledInstanceAvailability.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token required to retrieve the next set of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityResponse.ScheduledInstanceAvailabilitySet">
            <summary>
            Gets and sets the property ScheduledInstanceAvailabilitySet. 
            <para>
            Information about the available Scheduled Instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeScheduledInstancesRequest">
            <summary>
            Container for the parameters to the DescribeScheduledInstances operation.
            Describes one or more of your Scheduled Instances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstancesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).
            </para>
             </li> <li> 
            <para>
             <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).
            </para>
             </li> <li> 
            <para>
             <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or
            <code>EC2-VPC</code>).
            </para>
             </li> <li> 
            <para>
             <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in a single call. This value can be between
            5 and 300. The default value is 100. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstancesRequest.ScheduledInstanceIds">
            <summary>
            Gets and sets the property ScheduledInstanceIds. 
            <para>
            One or more Scheduled Instance IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstancesRequest.SlotStartTimeRange">
            <summary>
            Gets and sets the property SlotStartTimeRange. 
            <para>
            The time period for the first schedule to start.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeScheduledInstancesResponse">
            <summary>
            Contains the output of DescribeScheduledInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstancesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token required to retrieve the next set of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeScheduledInstancesResponse.ScheduledInstanceSet">
            <summary>
            Gets and sets the property ScheduledInstanceSet. 
            <para>
            Information about the Scheduled Instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSecurityGroupReferencesRequest">
            <summary>
            Container for the parameters to the DescribeSecurityGroupReferences operation.
            [EC2-VPC only] Describes the VPCs on the other side of a VPC peering connection that
            are referencing the security groups you've specified in this request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSecurityGroupReferencesRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            One or more security group IDs in your account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSecurityGroupReferencesResponse">
            <summary>
            This is the response object from the DescribeSecurityGroupReferences operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSecurityGroupReferencesResponse.SecurityGroupReferenceSet">
            <summary>
            Gets and sets the property SecurityGroupReferenceSet. 
            <para>
            Information about the VPCs with the referencing security groups.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSecurityGroupsRequest">
            <summary>
            Container for the parameters to the DescribeSecurityGroups operation.
            Describes one or more of your security groups.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSecurityGroupsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters. If using multiple filters for rules, the results include security
            groups for which any combination of rules - not necessarily a single rule - match
            all filters.
            </para>
             <ul> <li> 
            <para>
             <code>description</code> - The description of the security group.
            </para>
             </li> <li> 
            <para>
             <code>egress.ip-permission.prefix-list-id</code> - The ID (prefix) of the AWS service
            to which the security group allows access.
            </para>
             </li> <li> 
            <para>
             <code>group-id</code> - The ID of the security group. 
            </para>
             </li> <li> 
            <para>
             <code>group-name</code> - The name of the security group.
            </para>
             </li> <li> 
            <para>
             <code>ip-permission.cidr</code> - A CIDR range that has been granted permission.
            </para>
             </li> <li> 
            <para>
             <code>ip-permission.from-port</code> - The start of port range for the TCP and UDP
            protocols, or an ICMP type number.
            </para>
             </li> <li> 
            <para>
             <code>ip-permission.group-id</code> - The ID of a security group that has been granted
            permission.
            </para>
             </li> <li> 
            <para>
             <code>ip-permission.group-name</code> - The name of a security group that has been
            granted permission.
            </para>
             </li> <li> 
            <para>
             <code>ip-permission.protocol</code> - The IP protocol for the permission (<code>tcp</code>
            | <code>udp</code> | <code>icmp</code> or a protocol number).
            </para>
             </li> <li> 
            <para>
             <code>ip-permission.to-port</code> - The end of port range for the TCP and UDP protocols,
            or an ICMP code.
            </para>
             </li> <li> 
            <para>
             <code>ip-permission.user-id</code> - The ID of an AWS account that has been granted
            permission.
            </para>
             </li> <li> 
            <para>
             <code>owner-id</code> - The AWS account ID of the owner of the security group.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the security group.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the security group.
            </para>
             </li> <li> 
            <para>
             <code>vpc-id</code> - The ID of the VPC specified when the security group was created.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSecurityGroupsRequest.GroupIds">
            <summary>
            Gets and sets the property GroupIds. 
            <para>
            One or more security group IDs. Required for security groups in a nondefault VPC.
            </para>
             
            <para>
            Default: Describes all your security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSecurityGroupsRequest.GroupNames">
            <summary>
            Gets and sets the property GroupNames. 
            <para>
            [EC2-Classic and default VPC only] One or more security group names. You can specify
            either the security group name or the security group ID. For security groups in a
            nondefault VPC, use the <code>group-name</code> filter to describe security groups
            by name.
            </para>
             
            <para>
            Default: Describes all your security groups.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSecurityGroupsResponse">
            <summary>
            Contains the output of DescribeSecurityGroups.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSecurityGroupsResponse.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            Information about one or more security groups.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSnapshotAttributeRequest">
            <summary>
            Container for the parameters to the DescribeSnapshotAttribute operation.
            Describes the specified attribute of the specified snapshot. You can specify only
            one attribute at a time.
            
             
            <para>
            For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeSnapshotAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeSnapshotAttributeRequest.#ctor(System.String,Amazon.EC2.SnapshotAttributeName)">
            <summary>
            Instantiates DescribeSnapshotAttributeRequest with the parameterized properties
            </summary>
            <param name="snapshotId">The ID of the EBS snapshot.</param>
            <param name="attribute">The snapshot attribute you would like to view.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The snapshot attribute you would like to view.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotAttributeRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the EBS snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSnapshotAttributeResponse">
            <summary>
            Contains the output of DescribeSnapshotAttribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotAttributeResponse.CreateVolumePermissions">
            <summary>
            Gets and sets the property CreateVolumePermissions. 
            <para>
            A list of permissions for creating volumes from the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotAttributeResponse.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            A list of product codes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotAttributeResponse.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the EBS snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSnapshotsRequest">
            <summary>
            Container for the parameters to the DescribeSnapshots operation.
            Describes one or more of the EBS snapshots available to you. Available snapshots include
            public snapshots available for any AWS account to launch, private snapshots that you
            own, and private snapshots owned by another AWS account but for which you've been
            given explicit create volume permissions.
            
             
            <para>
            The create volume permissions fall into the following categories:
            </para>
             <ul> <li> 
            <para>
             <i>public</i>: The owner of the snapshot granted create volume permissions for the
            snapshot to the <code>all</code> group. All AWS accounts have create volume permissions
            for these snapshots.
            </para>
             </li> <li> 
            <para>
             <i>explicit</i>: The owner of the snapshot granted create volume permissions to a
            specific AWS account.
            </para>
             </li> <li> 
            <para>
             <i>implicit</i>: An AWS account has implicit create volume permissions for all snapshots
            it owns.
            </para>
             </li> </ul> 
            <para>
            The list of snapshots returned can be modified by specifying snapshot IDs, snapshot
            owners, or AWS accounts with create volume permissions. If no options are specified,
            Amazon EC2 returns all snapshots for which you have create volume permissions.
            </para>
             
            <para>
            If you specify one or more snapshot IDs, only snapshots that have the specified IDs
            are returned. If you specify an invalid snapshot ID, an error is returned. If you
            specify a snapshot ID for which you do not have access, it is not included in the
            returned results.
            </para>
             
            <para>
            If you specify one or more snapshot owners using the <code>OwnerIds</code> option,
            only snapshots from the specified owners and for which you have access are returned.
            The results can include the AWS account IDs of the specified owners, <code>amazon</code>
            for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.
            </para>
             
            <para>
            If you specify a list of restorable users, only snapshots with create snapshot permissions
            for those users are returned. You can specify AWS account IDs (if you own the snapshots),
            <code>self</code> for snapshots for which you own or have explicit permissions, or
            <code>all</code> for public snapshots.
            </para>
             
            <para>
            If you are describing a long list of snapshots, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeSnapshots</code> request to
            retrieve the remaining results.
            </para>
             
            <para>
            For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>description</code> - A description of the snapshot.
            </para>
             </li> <li> 
            <para>
             <code>owner-alias</code> - Value from an Amazon-maintained list (<code>amazon</code>
            | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to
            be confused with the user-configured AWS account alias, which is set from the IAM
            consolew.
            </para>
             </li> <li> 
            <para>
             <code>owner-id</code> - The ID of the AWS account that owns the snapshot.
            </para>
             </li> <li> 
            <para>
             <code>progress</code> - The progress of the snapshot, as a percentage (for example,
            80%).
            </para>
             </li> <li> 
            <para>
             <code>snapshot-id</code> - The snapshot ID.
            </para>
             </li> <li> 
            <para>
             <code>start-time</code> - The time stamp when the snapshot was initiated.
            </para>
             </li> <li> 
            <para>
             <code>status</code> - The status of the snapshot (<code>pending</code> | <code>completed</code>
            | <code>error</code>).
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>volume-id</code> - The ID of the volume the snapshot is for.
            </para>
             </li> <li> 
            <para>
             <code>volume-size</code> - The size of the volume, in GiB.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of snapshot results returned by <code>DescribeSnapshots</code>
            in paginated output. When this parameter is used, <code>DescribeSnapshots</code> only
            returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>DescribeSnapshots</code> request with the returned <code>NextToken</code>
            value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a
            value larger than 1000, only 1000 results are returned. If this parameter is not used,
            then <code>DescribeSnapshots</code> returns all results. You cannot specify this parameter
            and the snapshot IDs parameter in the same request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>NextToken</code> value returned from a previous paginated <code>DescribeSnapshots</code>
            request where <code>MaxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>NextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsRequest.OwnerIds">
            <summary>
            Gets and sets the property OwnerIds. 
            <para>
            Returns the snapshots owned by the specified owner. Multiple owners can be specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsRequest.RestorableByUserIds">
            <summary>
            Gets and sets the property RestorableByUserIds. 
            <para>
            One or more AWS accounts IDs that can create volumes from the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsRequest.SnapshotIds">
            <summary>
            Gets and sets the property SnapshotIds. 
            <para>
            One or more snapshot IDs.
            </para>
             
            <para>
            Default: Describes snapshots for which you have launch permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSnapshotsResponse">
            <summary>
            Contains the output of DescribeSnapshots.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>NextToken</code> value to include in a future <code>DescribeSnapshots</code>
            request. When the results of a <code>DescribeSnapshots</code> request exceed <code>MaxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsResponse.Snapshots">
            <summary>
            Gets and sets the property Snapshots. 
            <para>
            Information about the snapshots.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionRequest">
            <summary>
            Container for the parameters to the DescribeSpotDatafeedSubscription operation.
            Describes the data feed for Spot instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionResponse">
            <summary>
            Contains the output of DescribeSpotDatafeedSubscription.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionResponse.SpotDatafeedSubscription">
            <summary>
            Gets and sets the property SpotDatafeedSubscription. 
            <para>
            The Spot instance data feed subscription.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotFleetInstancesRequest">
            <summary>
            Container for the parameters to the DescribeSpotFleetInstances operation.
            Describes the running instances for the specified Spot fleet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in a single call. Specify a value between
            1 and 1000. The default value is 1000. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetInstancesRequest.SpotFleetRequestId">
            <summary>
            Gets and sets the property SpotFleetRequestId. 
            <para>
            The ID of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotFleetInstancesResponse">
            <summary>
            Contains the output of DescribeSpotFleetInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetInstancesResponse.ActiveInstances">
            <summary>
            Gets and sets the property ActiveInstances. 
            <para>
            The running instances. Note that this list is refreshed periodically and might be
            out of date.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetInstancesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token required to retrieve the next set of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetInstancesResponse.SpotFleetRequestId">
            <summary>
            Gets and sets the property SpotFleetRequestId. 
            <para>
            The ID of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest">
            <summary>
            Container for the parameters to the DescribeSpotFleetRequestHistory operation.
            Describes the events for the specified Spot fleet request during the specified time.
            
             
            <para>
            Spot fleet events are delayed by up to 30 seconds before they can be described. This
            ensures that you can query by the last evaluated time and not miss a recorded event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The type of events to describe. By default, all events are described.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in a single call. Specify a value between
            1 and 1000. The default value is 1000. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest.SpotFleetRequestId">
            <summary>
            Gets and sets the property SpotFleetRequestId. 
            <para>
            The ID of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryResponse">
            <summary>
            Contains the output of DescribeSpotFleetRequestHistory.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryResponse.HistoryRecords">
            <summary>
            Gets and sets the property HistoryRecords. 
            <para>
            Information about the events in the history of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryResponse.LastEvaluatedTime">
            <summary>
            Gets and sets the property LastEvaluatedTime. 
            <para>
            The last date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            All records up to this time were retrieved.
            </para>
             
            <para>
            If <code>nextToken</code> indicates that there are more results, this value is not
            present.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token required to retrieve the next set of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryResponse.SpotFleetRequestId">
            <summary>
            Gets and sets the property SpotFleetRequestId. 
            <para>
            The ID of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestHistoryResponse.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotFleetRequestsRequest">
            <summary>
            Container for the parameters to the DescribeSpotFleetRequests operation.
            Describes your Spot fleet requests.
            
             
            <para>
            Spot fleet requests are deleted 48 hours after they are canceled and their instances
            are terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in a single call. Specify a value between
            1 and 1000. The default value is 1000. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestsRequest.SpotFleetRequestIds">
            <summary>
            Gets and sets the property SpotFleetRequestIds. 
            <para>
            The IDs of the Spot fleet requests.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotFleetRequestsResponse">
            <summary>
            Contains the output of DescribeSpotFleetRequests.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token required to retrieve the next set of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotFleetRequestsResponse.SpotFleetRequestConfigs">
            <summary>
            Gets and sets the property SpotFleetRequestConfigs. 
            <para>
            Information about the configuration of your Spot fleet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest">
            <summary>
            Container for the parameters to the DescribeSpotInstanceRequests operation.
            Describes the Spot instance requests that belong to your account. Spot instances are
            instances that Amazon EC2 launches when the bid price that you specify exceeds the
            current Spot price. Amazon EC2 periodically sets the Spot price based on available
            Spot instance capacity and current Spot instance requests. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot instance
            by examining the response. If the status of the Spot instance is <code>fulfilled</code>,
            the instance ID appears in the response and contains the identifier of the instance.
            Alternatively, you can use <a>DescribeInstances</a> with a filter to look for instances
            where the instance lifecycle is <code>spot</code>.
            </para>
             
            <para>
            Spot instance requests are deleted 4 hours after they are canceled and their instances
            are terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>availability-zone-group</code> - The Availability Zone group.
            </para>
             </li> <li> 
            <para>
             <code>create-time</code> - The time stamp when the Spot instance request was created.
            </para>
             </li> <li> 
            <para>
             <code>fault-code</code> - The fault code related to the request.
            </para>
             </li> <li> 
            <para>
             <code>fault-message</code> - The fault message related to the request.
            </para>
             </li> <li> 
            <para>
             <code>instance-id</code> - The ID of the instance that fulfilled the request.
            </para>
             </li> <li> 
            <para>
             <code>launch-group</code> - The Spot instance launch group.
            </para>
             </li> <li> 
            <para>
             <code>launch.block-device-mapping.delete-on-termination</code> - Indicates whether
            the Amazon EBS volume is deleted on instance termination.
            </para>
             </li> <li> 
            <para>
             <code>launch.block-device-mapping.device-name</code> - The device name for the Amazon
            EBS volume (for example, <code>/dev/sdh</code>).
            </para>
             </li> <li> 
            <para>
             <code>launch.block-device-mapping.snapshot-id</code> - The ID of the snapshot used
            for the Amazon EBS volume.
            </para>
             </li> <li> 
            <para>
             <code>launch.block-device-mapping.volume-size</code> - The size of the Amazon EBS
            volume, in GiB.
            </para>
             </li> <li> 
            <para>
             <code>launch.block-device-mapping.volume-type</code> - The type of the Amazon EBS
            volume: <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned
            IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code>for Cold
            HDD, or <code>standard</code> for Magnetic.
            </para>
             </li> <li> 
            <para>
             <code>launch.group-id</code> - The security group for the instance.
            </para>
             </li> <li> 
            <para>
             <code>launch.image-id</code> - The ID of the AMI.
            </para>
             </li> <li> 
            <para>
             <code>launch.instance-type</code> - The type of instance (for example, <code>m3.medium</code>).
            </para>
             </li> <li> 
            <para>
             <code>launch.kernel-id</code> - The kernel ID.
            </para>
             </li> <li> 
            <para>
             <code>launch.key-name</code> - The name of the key pair the instance launched with.
            </para>
             </li> <li> 
            <para>
             <code>launch.monitoring-enabled</code> - Whether monitoring is enabled for the Spot
            instance.
            </para>
             </li> <li> 
            <para>
             <code>launch.ramdisk-id</code> - The RAM disk ID.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.network-interface-id</code> - The ID of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.device-index</code> - The index of the device for the network
            interface attachment on the instance.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.subnet-id</code> - The ID of the subnet for the instance.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.description</code> - A description of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.private-ip-address</code> - The primary private IP address
            of the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.delete-on-termination</code> - Indicates whether the network
            interface is deleted when the instance is terminated.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.group-id</code> - The ID of the security group associated
            with the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.group-name</code> - The name of the security group associated
            with the network interface.
            </para>
             </li> <li> 
            <para>
             <code>network-interface.addresses.primary</code> - Indicates whether the IP address
            is the primary private IP address.
            </para>
             </li> <li> 
            <para>
             <code>product-description</code> - The product description associated with the instance
            (<code>Linux/UNIX</code> | <code>Windows</code>).
            </para>
             </li> <li> 
            <para>
             <code>spot-instance-request-id</code> - The Spot instance request ID.
            </para>
             </li> <li> 
            <para>
             <code>spot-price</code> - The maximum hourly price for any Spot instance launched
            to fulfill the request.
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the Spot instance request (<code>open</code> |
            <code>active</code> | <code>closed</code> | <code>cancelled</code> | <code>failed</code>).
            Spot bid status information can help you track your Amazon EC2 Spot instance requests.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot
            Bid Status</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
             </li> <li> 
            <para>
             <code>status-code</code> - The short code describing the most recent evaluation of
            your Spot instance request.
            </para>
             </li> <li> 
            <para>
             <code>status-message</code> - The message explaining the status of the Spot instance
            request.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>type</code> - The type of Spot instance request (<code>one-time</code> | <code>persistent</code>).
            </para>
             </li> <li> 
            <para>
             <code>launched-availability-zone</code> - The Availability Zone in which the bid
            is launched.
            </para>
             </li> <li> 
            <para>
             <code>valid-from</code> - The start date of the request.
            </para>
             </li> <li> 
            <para>
             <code>valid-until</code> - The end date of the request.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest.SpotInstanceRequestIds">
            <summary>
            Gets and sets the property SpotInstanceRequestIds. 
            <para>
            One or more Spot instance request IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotInstanceRequestsResponse">
            <summary>
            Contains the output of DescribeSpotInstanceRequests.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotInstanceRequestsResponse.SpotInstanceRequests">
            <summary>
            Gets and sets the property SpotInstanceRequests. 
            <para>
            One or more Spot instance requests.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest">
            <summary>
            Container for the parameters to the DescribeSpotPriceHistory operation.
            Describes the Spot price history. The prices returned are listed in chronological
            order, from the oldest to the most recent, for up to the past 90 days. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot
            Instance Pricing History</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            When you specify a start and end time, this operation returns the prices of the instance
            types within the time range that you specified and the time when the price changed.
            The price is valid within the time period that you specified; the response merely
            indicates the last time that the price changed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            Filters the results by the specified Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The date and time, up to the current date, from which to stop retrieving the price
            history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone for which prices should be
            returned.
            </para>
             </li> <li> 
            <para>
             <code>instance-type</code> - The type of instance (for example, <code>m3.medium</code>).
            </para>
             </li> <li> 
            <para>
             <code>product-description</code> - The product description for the Spot price (<code>Linux/UNIX</code>
            | <code>SUSE Linux</code> | <code>Windows</code> | <code>Linux/UNIX (Amazon VPC)</code>
            | <code>SUSE Linux (Amazon VPC)</code> | <code>Windows (Amazon VPC)</code>).
            </para>
             </li> <li> 
            <para>
             <code>spot-price</code> - The Spot price. The value must match exactly (or use wildcards;
            greater than or less than comparison is not supported).
            </para>
             </li> <li> 
            <para>
             <code>timestamp</code> - The timestamp of the Spot price history, in UTC format (for
            example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). You can
            use wildcards (* and ?). Greater than or less than comparison is not supported.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.InstanceTypes">
            <summary>
            Gets and sets the property InstanceTypes. 
            <para>
            Filters the results by the specified instance types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in a single call. Specify a value between
            1 and 1000. The default value is 1000. To retrieve the remaining results, make another
            call with the returned <code>NextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.ProductDescriptions">
            <summary>
            Gets and sets the property ProductDescriptions. 
            <para>
            Filters the results by the specified basic product descriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The date and time, up to the past 90 days, from which to start retrieving the price
            history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotPriceHistoryResponse">
            <summary>
            Contains the output of DescribeSpotPriceHistory.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token required to retrieve the next set of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryResponse.SpotPriceHistory">
            <summary>
            Gets and sets the property SpotPriceHistory. 
            <para>
            The historical Spot prices.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeStaleSecurityGroupsRequest">
            <summary>
            Container for the parameters to the DescribeStaleSecurityGroups operation.
            [EC2-VPC only] Describes the stale security group rules for security groups in a specified
            VPC. Rules are stale when they reference a deleted security group in a peer VPC, or
            a security group in a peer VPC for which the VPC peering connection has been deleted.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeStaleSecurityGroupsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of items to return for this request. The request returns a token
            that you can specify in a subsequent call to get the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeStaleSecurityGroupsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a prior
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeStaleSecurityGroupsRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeStaleSecurityGroupsResponse">
            <summary>
            This is the response object from the DescribeStaleSecurityGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeStaleSecurityGroupsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use when requesting the next set of items. If there are no additional
            items to return, the string is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeStaleSecurityGroupsResponse.StaleSecurityGroupSet">
            <summary>
            Gets and sets the property StaleSecurityGroupSet. 
            <para>
            Information about the stale security groups.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSubnetsRequest">
            <summary>
            Container for the parameters to the DescribeSubnets operation.
            Describes one or more of your subnets.
            
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSubnetsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>availabilityZone</code> - The Availability Zone for the subnet. You can also
            use <code>availability-zone</code> as the filter name.
            </para>
             </li> <li> 
            <para>
             <code>available-ip-address-count</code> - The number of IP addresses in the subnet
            that are available.
            </para>
             </li> <li> 
            <para>
             <code>cidrBlock</code> - The CIDR block of the subnet. The CIDR block you specify
            must exactly match the subnet's CIDR block for information to be returned for the
            subnet. You can also use <code>cidr</code> or <code>cidr-block</code> as the filter
            names.
            </para>
             </li> <li> 
            <para>
             <code>defaultForAz</code> - Indicates whether this is the default subnet for the
            Availability Zone. You can also use <code>default-for-az</code> as the filter name.
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).
            </para>
             </li> <li> 
            <para>
             <code>subnet-id</code> - The ID of the subnet.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>vpc-id</code> - The ID of the VPC for the subnet.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSubnetsRequest.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            One or more subnet IDs.
            </para>
             
            <para>
            Default: Describes all your subnets.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSubnetsResponse">
            <summary>
            Contains the output of DescribeSubnets.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSubnetsResponse.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            Information about one or more subnets.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeTagsRequest">
            <summary>
            Container for the parameters to the DescribeTags operation.
            Describes one or more of the tags for your EC2 resources.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeTagsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeTagsRequest.#ctor(System.Collections.Generic.List{Amazon.EC2.Model.Filter})">
            <summary>
            Instantiates DescribeTagsRequest with the parameterized properties
            </summary>
            <param name="filters">One or more filters. <ul> <li>  <code>key</code> - The tag key. </li> <li>  <code>resource-id</code> - The resource ID. </li> <li>  <code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dhcp-options</code> | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-interface</code> | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code> | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>). </li> <li>  <code>value</code> - The tag value. </li> </ul></param>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeTagsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>key</code> - The tag key.
            </para>
             </li> <li> 
            <para>
             <code>resource-id</code> - The resource ID.
            </para>
             </li> <li> 
            <para>
             <code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dhcp-options</code>
            | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code>
            | <code>network-interface</code> | <code>reserved-instances</code> | <code>route-table</code>
            | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code>
            | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpn-connection</code>
            | <code>vpn-gateway</code>).
            </para>
             </li> <li> 
            <para>
             <code>value</code> - The tag value.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeTagsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return in a single call. This value can be between
            5 and 1000. To retrieve the remaining results, make another call with the returned
            <code>NextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeTagsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to retrieve the next page of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeTagsResponse">
            <summary>
            Contains the output of DescribeTags.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeTagsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return..
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeTagsResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumeAttributeRequest">
            <summary>
            Container for the parameters to the DescribeVolumeAttribute operation.
            Describes the specified attribute of the specified volume. You can specify only one
            attribute at a time.
            
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The instance attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeAttributeRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumeAttributeResponse">
            <summary>
            Contains the output of DescribeVolumeAttribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeAttributeResponse.AutoEnableIO">
            <summary>
            Gets and sets the property AutoEnableIO. 
            <para>
            The state of <code>autoEnableIO</code> attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeAttributeResponse.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            A list of product codes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeAttributeResponse.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumesRequest">
            <summary>
            Container for the parameters to the DescribeVolumes operation.
            Describes the specified EBS volumes.
            
             
            <para>
            If you are describing a long list of volumes, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve
            the remaining results.
            </para>
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeVolumesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeVolumesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates DescribeVolumesRequest with the parameterized properties
            </summary>
            <param name="volumeIds">One or more volume IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>attachment.attach-time</code> - The time stamp when the attachment initiated.
            </para>
             </li> <li> 
            <para>
             <code>attachment.delete-on-termination</code> - Whether the volume is deleted on
            instance termination.
            </para>
             </li> <li> 
            <para>
             <code>attachment.device</code> - The device name that is exposed to the instance
            (for example, <code>/dev/sda1</code>).
            </para>
             </li> <li> 
            <para>
             <code>attachment.instance-id</code> - The ID of the instance the volume is attached
            to.
            </para>
             </li> <li> 
            <para>
             <code>attachment.status</code> - The attachment state (<code>attaching</code> | <code>attached</code>
            | <code>detaching</code> | <code>detached</code>).
            </para>
             </li> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone in which the volume was created.
            </para>
             </li> <li> 
            <para>
             <code>create-time</code> - The time stamp when the volume was created.
            </para>
             </li> <li> 
            <para>
             <code>encrypted</code> - The encryption status of the volume.
            </para>
             </li> <li> 
            <para>
             <code>size</code> - The size of the volume, in GiB.
            </para>
             </li> <li> 
            <para>
             <code>snapshot-id</code> - The snapshot from which the volume was created.
            </para>
             </li> <li> 
            <para>
             <code>status</code> - The status of the volume (<code>creating</code> | <code>available</code>
            | <code>in-use</code> | <code>deleting</code> | <code>deleted</code> | <code>error</code>).
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>volume-id</code> - The volume ID.
            </para>
             </li> <li> 
            <para>
             <code>volume-type</code> - The Amazon EBS volume type. This can be <code>gp2</code>
            for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code>
            for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or <code>standard</code>
            for Magnetic volumes.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of volume results returned by <code>DescribeVolumes</code> in paginated
            output. When this parameter is used, <code>DescribeVolumes</code> only returns <code>MaxResults</code>
            results in a single page along with a <code>NextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>DescribeVolumes</code>
            request with the returned <code>NextToken</code> value. This value can be between
            5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000
            results are returned. If this parameter is not used, then <code>DescribeVolumes</code>
            returns all results. You cannot specify this parameter and the volume IDs parameter
            in the same request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>NextToken</code> value returned from a previous paginated <code>DescribeVolumes</code>
            request where <code>MaxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>NextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumesRequest.VolumeIds">
            <summary>
            Gets and sets the property VolumeIds. 
            <para>
            One or more volume IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumesResponse">
            <summary>
            Contains the output of DescribeVolumes.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>NextToken</code> value to include in a future <code>DescribeVolumes</code>
            request. When the results of a <code>DescribeVolumes</code> request exceed <code>MaxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumesResponse.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            Information about the volumes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumeStatusRequest">
            <summary>
            Container for the parameters to the DescribeVolumeStatus operation.
            Describes the status of the specified volumes. Volume status provides the result of
            the checks performed on your volumes to determine events that can impair the performance
            of your volumes. The performance of a volume can be affected if an issue occurs on
            the volume's underlying host. If the volume's underlying host experiences a power
            outage or system issue, after the system is restored, there could be data inconsistencies
            on the volume. Volume events notify you if this occurs. Volume actions notify you
            if any action needs to be taken in response to the event.
            
             
            <para>
            The <code>DescribeVolumeStatus</code> operation provides the following information
            about the specified volumes:
            </para>
             
            <para>
             <i>Status</i>: Reflects the current status of the volume. The possible values are
            <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>.
            If all checks pass, the overall status of the volume is <code>ok</code>. If the check
            fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>,
            then the checks may still be taking place on your volume at the time. We recommend
            that you retry the request. For more information on volume status, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring
            the Status of Your Volumes</a>.
            </para>
             
            <para>
             <i>Events</i>: Reflect the cause of a volume status and may require you to take action.
            For example, if your volume returns an <code>impaired</code> status, then the volume
            event might be <code>potential-data-inconsistency</code>. This means that your volume
            has been affected by an issue with the underlying host, has all I/O operations disabled,
            and may have inconsistent data.
            </para>
             
            <para>
             <i>Actions</i>: Reflect the actions you may have to take in response to an event.
            For example, if the status of the volume is <code>impaired</code> and the volume event
            shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>.
            This means that you may want to enable the I/O operations for the volume by calling
            the <a>EnableVolumeIO</a> action and then check the volume for data consistency.
            </para>
             <note> 
            <para>
            Volume status is based on the volume status checks, and does not reflect the volume
            state. Therefore, volume status does not indicate volumes in the <code>error</code>
            state (for example, when a volume is incapable of accepting I/O.)
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>action.code</code> - The action code for the event (for example, <code>enable-volume-io</code>).
            </para>
             </li> <li> 
            <para>
             <code>action.description</code> - A description of the action.
            </para>
             </li> <li> 
            <para>
             <code>action.event-id</code> - The event ID associated with the action.
            </para>
             </li> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone of the instance.
            </para>
             </li> <li> 
            <para>
             <code>event.description</code> - A description of the event.
            </para>
             </li> <li> 
            <para>
             <code>event.event-id</code> - The event ID.
            </para>
             </li> <li> 
            <para>
             <code>event.event-type</code> - The event type (for <code>io-enabled</code>: <code>passed</code>
            | <code>failed</code>; for <code>io-performance</code>: <code>io-performance:degraded</code>
            | <code>io-performance:severely-degraded</code> | <code>io-performance:stalled</code>).
            </para>
             </li> <li> 
            <para>
             <code>event.not-after</code> - The latest end time for the event.
            </para>
             </li> <li> 
            <para>
             <code>event.not-before</code> - The earliest start time for the event.
            </para>
             </li> <li> 
            <para>
             <code>volume-status.details-name</code> - The cause for <code>volume-status.status</code>
            (<code>io-enabled</code> | <code>io-performance</code>).
            </para>
             </li> <li> 
            <para>
             <code>volume-status.details-status</code> - The status of <code>volume-status.details-name</code>
            (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>:
            <code>normal</code> | <code>degraded</code> | <code>severely-degraded</code> | <code>stalled</code>).
            </para>
             </li> <li> 
            <para>
             <code>volume-status.status</code> - The status of the volume (<code>ok</code> | <code>impaired</code>
            | <code>warning</code> | <code>insufficient-data</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of volume results returned by <code>DescribeVolumeStatus</code>
            in paginated output. When this parameter is used, the request only returns <code>MaxResults</code>
            results in a single page along with a <code>NextToken</code> response element. The
            remaining results of the initial request can be seen by sending another request with
            the returned <code>NextToken</code> value. This value can be between 5 and 1000; if
            <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned.
            If this parameter is not used, then <code>DescribeVolumeStatus</code> returns all
            results. You cannot specify this parameter and the volume IDs parameter in the same
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>NextToken</code> value to include in a future <code>DescribeVolumeStatus</code>
            request. When the results of the request exceed <code>MaxResults</code>, this value
            can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusRequest.VolumeIds">
            <summary>
            Gets and sets the property VolumeIds. 
            <para>
            One or more volume IDs.
            </para>
             
            <para>
            Default: Describes all your volumes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumeStatusResponse">
            <summary>
            Contains the output of DescribeVolumeStatus.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusResponse.VolumeStatuses">
            <summary>
            Gets and sets the property VolumeStatuses. 
            <para>
            A list of volumes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcAttributeRequest">
            <summary>
            Container for the parameters to the DescribeVpcAttribute operation.
            Describes the specified attribute of the specified VPC. You can specify only one attribute
            at a time.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The VPC attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcAttributeRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcAttributeResponse">
            <summary>
            Contains the output of DescribeVpcAttribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcAttributeResponse.EnableDnsHostnames">
            <summary>
            Gets and sets the property EnableDnsHostnames. 
            <para>
            Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute
            is <code>true</code>, instances in the VPC get DNS hostnames; otherwise, they do not.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcAttributeResponse.EnableDnsSupport">
            <summary>
            Gets and sets the property EnableDnsSupport. 
            <para>
            Indicates whether DNS resolution is enabled for the VPC. If this attribute is <code>true</code>,
            the Amazon DNS server resolves DNS hostnames for your instances to their corresponding
            IP addresses; otherwise, it does not.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcAttributeResponse.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportRequest">
            <summary>
            Container for the parameters to the DescribeVpcClassicLinkDnsSupport operation.
            Describes the ClassicLink DNS support status of one or more VPCs. If enabled, the
            DNS hostname of a linked EC2-Classic instance resolves to its private IP address when
            addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname
            of an instance in a VPC resolves to its private IP address when addressed from a linked
            EC2-Classic instance. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of items to return for this request. The request returns a token
            that you can specify in a subsequent call to get the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a prior
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportRequest.VpcIds">
            <summary>
            Gets and sets the property VpcIds. 
            <para>
            One or more VPC IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportResponse">
            <summary>
            Contains the output of DescribeVpcClassicLinkDnsSupport.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use when requesting the next set of items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportResponse.Vpcs">
            <summary>
            Gets and sets the property Vpcs. 
            <para>
            Information about the ClassicLink DNS support status of the VPCs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcClassicLinkRequest">
            <summary>
            Container for the parameters to the DescribeVpcClassicLink operation.
            Describes the ClassicLink status of one or more VPCs.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcClassicLinkRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>is-classic-link-enabled</code> - Whether the VPC is enabled for ClassicLink
            (<code>true</code> | <code>false</code>).
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcClassicLinkRequest.VpcIds">
            <summary>
            Gets and sets the property VpcIds. 
            <para>
            One or more VPCs for which you want to describe the ClassicLink status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcClassicLinkResponse">
            <summary>
            Contains the output of DescribeVpcClassicLink.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcClassicLinkResponse.Vpcs">
            <summary>
            Gets and sets the property Vpcs. 
            <para>
            The ClassicLink status of one or more VPCs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcEndpointServicesRequest">
            <summary>
            Container for the parameters to the DescribeVpcEndpointServices operation.
            Describes all supported AWS services that can be specified when creating a VPC endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcEndpointServicesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of items to return for this request. The request returns a token
            that you can specify in a subsequent call to get the next set of results.
            </para>
             
            <para>
            Constraint: If the value is greater than 1000, we return only 1000 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcEndpointServicesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a prior
            call.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcEndpointServicesResponse">
            <summary>
            Contains the output of DescribeVpcEndpointServices.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcEndpointServicesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use when requesting the next set of items. If there are no additional
            items to return, the string is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcEndpointServicesResponse.ServiceNames">
            <summary>
            Gets and sets the property ServiceNames. 
            <para>
            A list of supported AWS services.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcEndpointsRequest">
            <summary>
            Container for the parameters to the DescribeVpcEndpoints operation.
            Describes one or more of your VPC endpoints.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcEndpointsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>service-name</code>: The name of the AWS service.
            </para>
             </li> <li> 
            <para>
             <code>vpc-id</code>: The ID of the VPC in which the endpoint resides.
            </para>
             </li> <li> 
            <para>
             <code>vpc-endpoint-id</code>: The ID of the endpoint.
            </para>
             </li> <li> 
            <para>
             <code>vpc-endpoint-state</code>: The state of the endpoint. (<code>pending</code>
            | <code>available</code> | <code>deleting</code> | <code>deleted</code>)
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcEndpointsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of items to return for this request. The request returns a token
            that you can specify in a subsequent call to get the next set of results.
            </para>
             
            <para>
            Constraint: If the value is greater than 1000, we return only 1000 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcEndpointsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a prior
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcEndpointsRequest.VpcEndpointIds">
            <summary>
            Gets and sets the property VpcEndpointIds. 
            <para>
            One or more endpoint IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcEndpointsResponse">
            <summary>
            Contains the output of DescribeVpcEndpoints.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcEndpointsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use when requesting the next set of items. If there are no additional
            items to return, the string is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcEndpointsResponse.VpcEndpoints">
            <summary>
            Gets and sets the property VpcEndpoints. 
            <para>
            Information about the endpoints.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest">
            <summary>
            Container for the parameters to the DescribeVpcPeeringConnections operation.
            Describes one or more of your VPC peering connections.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>accepter-vpc-info.cidr-block</code> - The CIDR block of the peer VPC.
            </para>
             </li> <li> 
            <para>
             <code>accepter-vpc-info.owner-id</code> - The AWS account ID of the owner of the
            peer VPC.
            </para>
             </li> <li> 
            <para>
             <code>accepter-vpc-info.vpc-id</code> - The ID of the peer VPC.
            </para>
             </li> <li> 
            <para>
             <code>expiration-time</code> - The expiration date and time for the VPC peering connection.
            </para>
             </li> <li> 
            <para>
             <code>requester-vpc-info.cidr-block</code> - The CIDR block of the requester's VPC.
            </para>
             </li> <li> 
            <para>
             <code>requester-vpc-info.owner-id</code> - The AWS account ID of the owner of the
            requester VPC.
            </para>
             </li> <li> 
            <para>
             <code>requester-vpc-info.vpc-id</code> - The ID of the requester VPC.
            </para>
             </li> <li> 
            <para>
             <code>status-code</code> - The status of the VPC peering connection (<code>pending-acceptance</code>
            | <code>failed</code> | <code>expired</code> | <code>provisioning</code> | <code>active</code>
            | <code>deleted</code> | <code>rejected</code>).
            </para>
             </li> <li> 
            <para>
             <code>status-message</code> - A message that provides more information about the
            status of the VPC peering connection, if applicable.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>vpc-peering-connection-id</code> - The ID of the VPC peering connection.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest.VpcPeeringConnectionIds">
            <summary>
            Gets and sets the property VpcPeeringConnectionIds. 
            <para>
            One or more VPC peering connection IDs.
            </para>
             
            <para>
            Default: Describes all your VPC peering connections.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcPeeringConnectionsResponse">
            <summary>
            Contains the output of DescribeVpcPeeringConnections.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcPeeringConnectionsResponse.VpcPeeringConnections">
            <summary>
            Gets and sets the property VpcPeeringConnections. 
            <para>
            Information about the VPC peering connections.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcsRequest">
            <summary>
            Container for the parameters to the DescribeVpcs operation.
            Describes one or more of your VPCs.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>cidr</code> - The CIDR block of the VPC. The CIDR block you specify must exactly
            match the VPC's CIDR block for information to be returned for the VPC. Must contain
            the slash followed by one or two digits (for example, <code>/28</code>).
            </para>
             </li> <li> 
            <para>
             <code>dhcp-options-id</code> - The ID of a set of DHCP options.
            </para>
             </li> <li> 
            <para>
             <code>isDefault</code> - Indicates whether the VPC is the default VPC.
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>vpc-id</code> - The ID of the VPC.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcsRequest.VpcIds">
            <summary>
            Gets and sets the property VpcIds. 
            <para>
            One or more VPC IDs.
            </para>
             
            <para>
            Default: Describes all your VPCs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcsResponse">
            <summary>
            Contains the output of DescribeVpcs.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcsResponse.Vpcs">
            <summary>
            Gets and sets the property Vpcs. 
            <para>
            Information about one or more VPCs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpnConnectionsRequest">
            <summary>
            Container for the parameters to the DescribeVpnConnections operation.
            Describes one or more of your VPN connections.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnConnectionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>customer-gateway-configuration</code> - The configuration information for the
            customer gateway.
            </para>
             </li> <li> 
            <para>
             <code>customer-gateway-id</code> - The ID of a customer gateway associated with the
            VPN connection.
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code>
            | <code>deleting</code> | <code>deleted</code>).
            </para>
             </li> <li> 
            <para>
             <code>option.static-routes-only</code> - Indicates whether the connection has static
            routes only. Used for devices that do not support Border Gateway Protocol (BGP).
            </para>
             </li> <li> 
            <para>
             <code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds
            to the subnet used in a customer data center.
            </para>
             </li> <li> 
            <para>
             <code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP
            device.
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>type</code> - The type of VPN connection. Currently the only supported type
            is <code>ipsec.1</code>.
            </para>
             </li> <li> 
            <para>
             <code>vpn-connection-id</code> - The ID of the VPN connection.
            </para>
             </li> <li> 
            <para>
             <code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with
            the VPN connection.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnConnectionsRequest.VpnConnectionIds">
            <summary>
            Gets and sets the property VpnConnectionIds. 
            <para>
            One or more VPN connection IDs.
            </para>
             
            <para>
            Default: Describes your VPN connections.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpnConnectionsResponse">
            <summary>
            Contains the output of DescribeVpnConnections.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnConnectionsResponse.VpnConnections">
            <summary>
            Gets and sets the property VpnConnections. 
            <para>
            Information about one or more VPN connections.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpnGatewaysRequest">
            <summary>
            Container for the parameters to the DescribeVpnGateways operation.
            Describes one or more of your virtual private gateways.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            an IPsec Hardware VPN to Your VPC</a> in the <i>Amazon Virtual Private Cloud User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnGatewaysRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
             <code>attachment.state</code> - The current state of the attachment between the gateway
            and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code>
            | <code>detached</code>).
            </para>
             </li> <li> 
            <para>
             <code>attachment.vpc-id</code> - The ID of an attached VPC.
            </para>
             </li> <li> 
            <para>
             <code>availability-zone</code> - The Availability Zone for the virtual private gateway
            (if applicable).
            </para>
             </li> <li> 
            <para>
             <code>state</code> - The state of the virtual private gateway (<code>pending</code>
            | <code>available</code> | <code>deleting</code> | <code>deleted</code>).
            </para>
             </li> <li> 
            <para>
             <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
             <code>tag-key</code> - The key of a tag assigned to the resource. This filter is
            independent of the <code>tag-value</code> filter. For example, if you use both the
            filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned
            both the tag key Purpose (regardless of what the tag's value is), and the tag value
            X (regardless of what the tag's key is). If you want to list only resources where
            Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.
            </para>
             </li> <li> 
            <para>
             <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
             <code>type</code> - The type of virtual private gateway. Currently the only supported
            type is <code>ipsec.1</code>.
            </para>
             </li> <li> 
            <para>
             <code>vpn-gateway-id</code> - The ID of the virtual private gateway.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnGatewaysRequest.VpnGatewayIds">
            <summary>
            Gets and sets the property VpnGatewayIds. 
            <para>
            One or more virtual private gateway IDs.
            </para>
             
            <para>
            Default: Describes all your virtual private gateways.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpnGatewaysResponse">
            <summary>
            Contains the output of DescribeVpnGateways.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnGatewaysResponse.VpnGateways">
            <summary>
            Gets and sets the property VpnGateways. 
            <para>
            Information about one or more virtual private gateways.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachClassicLinkVpcRequest">
            <summary>
            Container for the parameters to the DetachClassicLinkVpc operation.
            Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the instance has
            been unlinked, the VPC security groups are no longer associated with it. An instance
            is automatically unlinked from a VPC when it's stopped.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachClassicLinkVpcRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance to unlink from the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachClassicLinkVpcRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC to which the instance is linked.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachClassicLinkVpcResponse">
            <summary>
            Contains the output of DetachClassicLinkVpc.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachClassicLinkVpcResponse.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachInternetGatewayRequest">
            <summary>
            Container for the parameters to the DetachInternetGateway operation.
            Detaches an Internet gateway from a VPC, disabling connectivity between the Internet
            and the VPC. The VPC must not contain any running instances with Elastic IP addresses.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachInternetGatewayRequest.InternetGatewayId">
            <summary>
            Gets and sets the property InternetGatewayId. 
            <para>
            The ID of the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachInternetGatewayRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachInternetGatewayResponse">
            <summary>
            This is the response object from the DetachInternetGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachNetworkInterfaceRequest">
            <summary>
            Container for the parameters to the DetachNetworkInterface operation.
            Detaches a network interface from an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachNetworkInterfaceRequest.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The ID of the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachNetworkInterfaceRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            Specifies whether to force a detachment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachNetworkInterfaceResponse">
            <summary>
            This is the response object from the DetachNetworkInterface operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachVolumeRequest">
            <summary>
            Container for the parameters to the DetachVolume operation.
            Detaches an EBS volume from an instance. Make sure to unmount any file systems on
            the device within your operating system before detaching the volume. Failure to do
            so can result in the volume becoming stuck in the <code>busy</code> state while detaching.
            If this happens, detachment can be delayed indefinitely until you unmount the volume,
            force detachment, reboot the instance, or all three. If an EBS volume is the root
            device of an instance, it can't be detached while the instance is running. To detach
            the root volume, stop the instance first.
            
             
            <para>
            When a volume with an AWS Marketplace product code is detached from an instance, the
            product code is no longer associated with the instance.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html">Detaching
            an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DetachVolumeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DetachVolumeRequest.#ctor(System.String)">
            <summary>
            Instantiates DetachVolumeRequest with the parameterized properties
            </summary>
            <param name="volumeId">The ID of the volume.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVolumeRequest.Device">
            <summary>
            Gets and sets the property Device. 
            <para>
            The device name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVolumeRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            Forces detachment if the previous detachment attempt did not occur cleanly (for example,
            logging into an instance, unmounting the volume, and detaching normally). This option
            can lead to data loss or a corrupted file system. Use this option only as a last resort
            to detach a volume from a failed instance. The instance won't have an opportunity
            to flush file system caches or file system metadata. If you use this option, you must
            perform file system check and repair procedures.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVolumeRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVolumeRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachVolumeResponse">
            <summary>
            Contains the response data from the DetachVolume operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVolumeResponse.Attachment">
            <summary>
            Gets and sets the Attachment member
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachVpnGatewayRequest">
            <summary>
            Container for the parameters to the DetachVpnGateway operation.
            Detaches a virtual private gateway from a VPC. You do this if you're planning to turn
            off the VPC and not use it anymore. You can confirm a virtual private gateway has
            been completely detached from a VPC by describing the virtual private gateway (any
            attachments to the virtual private gateway are also described).
            
             
            <para>
            You must wait for the attachment's state to switch to <code>detached</code> before
            you can delete the VPC or attach a different VPC to the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DetachVpnGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DetachVpnGatewayRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DetachVpnGatewayRequest with the parameterized properties
            </summary>
            <param name="vpnGatewayId">The ID of the virtual private gateway.</param>
            <param name="vpcId">The ID of the VPC.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVpnGatewayRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVpnGatewayRequest.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachVpnGatewayResponse">
            <summary>
            This is the response object from the DetachVpnGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DhcpConfiguration">
            <summary>
            Describes a DHCP configuration option.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DhcpConfiguration.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The name of a DHCP option.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DhcpConfiguration.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            One or more values for the DHCP option.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DhcpOptions">
            <summary>
            Describes a set of DHCP options.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DhcpOptions.DhcpConfigurations">
            <summary>
            Gets and sets the property DhcpConfigurations. 
            <para>
            One or more DHCP options in the set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DhcpOptions.DhcpOptionsId">
            <summary>
            Gets and sets the property DhcpOptionsId. 
            <para>
            The ID of the set of DHCP options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DhcpOptions.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the DHCP options set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisableVgwRoutePropagationRequest">
            <summary>
            Container for the parameters to the DisableVgwRoutePropagation operation.
            Disables a virtual private gateway (VGW) from propagating routes to a specified route
            table of a VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisableVgwRoutePropagationRequest.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisableVgwRoutePropagationRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisableVgwRoutePropagationResponse">
            <summary>
            This is the response object from the DisableVgwRoutePropagation operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportRequest">
            <summary>
            Container for the parameters to the DisableVpcClassicLinkDnsSupport operation.
            Disables ClassicLink DNS support for a VPC. If disabled, DNS hostnames resolve to
            public IP addresses when addressed between a linked EC2-Classic instance and instances
            in the VPC to which it's linked. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportResponse">
            <summary>
            Contains the output of DisableVpcClassicLinkDnsSupport.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportResponse.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisableVpcClassicLinkRequest">
            <summary>
            Container for the parameters to the DisableVpcClassicLink operation.
            Disables ClassicLink for a VPC. You cannot disable ClassicLink for a VPC that has
            EC2-Classic instances linked to it.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisableVpcClassicLinkRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisableVpcClassicLinkResponse">
            <summary>
            Contains the output of DisableVpcClassicLink.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisableVpcClassicLinkResponse.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisassociateAddressRequest">
            <summary>
            Container for the parameters to the DisassociateAddress operation.
            Disassociates an Elastic IP address from the instance or network interface it's associated
            with.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DisassociateAddressRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DisassociateAddressRequest.#ctor(System.String)">
            <summary>
            Instantiates DisassociateAddressRequest with the parameterized properties
            </summary>
            <param name="publicIp">[EC2-Classic] The Elastic IP address. Required for EC2-Classic.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DisassociateAddressRequest.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            [EC2-VPC] The association ID. Required for EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisassociateAddressRequest.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            [EC2-Classic] The Elastic IP address. Required for EC2-Classic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisassociateAddressResponse">
            <summary>
            This is the response object from the DisassociateAddress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisassociateRouteTableRequest">
            <summary>
            Container for the parameters to the DisassociateRouteTable operation.
            Disassociates a subnet from a route table.
            
             
            <para>
            After you perform this action, the subnet no longer uses the routes in the route table.
            Instead, it uses the routes in the VPC's main route table. For more information about
            route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisassociateRouteTableRequest.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The association ID representing the current association between the route table and
            subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisassociateRouteTableResponse">
            <summary>
            This is the response object from the DisassociateRouteTable operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DiskImage">
            <summary>
            Describes a disk image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImage.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImage.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            Information about the disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImage.Volume">
            <summary>
            Gets and sets the property Volume. 
            <para>
            Information about the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DiskImageDescription">
            <summary>
            Describes a disk image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDescription.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            The checksum computed for the disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDescription.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The disk image format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDescription.ImportManifestUrl">
            <summary>
            Gets and sets the property ImportManifestUrl. 
            <para>
            A presigned URL for the import manifest stored in Amazon S3. For information about
            creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication
            Alternative" section of the <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating
            REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.
            </para>
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDescription.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the disk image, in GiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DiskImageDetail">
            <summary>
            Describes a disk image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDetail.Bytes">
            <summary>
            Gets and sets the property Bytes. 
            <para>
            The size of the disk image, in GiB.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDetail.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The disk image format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDetail.ImportManifestUrl">
            <summary>
            Gets and sets the property ImportManifestUrl. 
            <para>
            A presigned URL for the import manifest stored in Amazon S3 and presented here as
            an Amazon S3 presigned URL. For information about creating a presigned URL for an
            Amazon S3 object, read the "Query String Request Authentication Alternative" section
            of the <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating
            REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.
            </para>
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DiskImageVolumeDescription">
            <summary>
            Describes a disk image volume.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageVolumeDescription.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The volume identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageVolumeDescription.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the volume, in GiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EbsInstanceBlockDevice">
            <summary>
            Describes a parameter used to set up an EBS volume in a block device mapping.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDevice.AttachTime">
            <summary>
            Gets and sets the property AttachTime. 
            <para>
            The time stamp when the attachment initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDevice.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the volume is deleted on instance termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDevice.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The attachment state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDevice.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the EBS volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EbsInstanceBlockDeviceSpecification">
            <summary>
            Describes information used to set up an EBS volume specified in a block device mapping.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDeviceSpecification.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the volume is deleted on instance termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDeviceSpecification.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the EBS volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVgwRoutePropagationRequest">
            <summary>
            Container for the parameters to the EnableVgwRoutePropagation operation.
            Enables a virtual private gateway (VGW) to propagate routes to the specified route
            table of a VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVgwRoutePropagationRequest.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVgwRoutePropagationRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVgwRoutePropagationResponse">
            <summary>
            This is the response object from the EnableVgwRoutePropagation operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVolumeIORequest">
            <summary>
            Container for the parameters to the EnableVolumeIO operation.
            Enables I/O operations for a volume that had I/O operations disabled because the data
            on the volume was potentially inconsistent.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVolumeIORequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVolumeIOResponse">
            <summary>
            This is the response object from the EnableVolumeIO operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportRequest">
            <summary>
            Container for the parameters to the EnableVpcClassicLinkDnsSupport operation.
            Enables a VPC to support DNS hostname resolution for ClassicLink. If enabled, the
            DNS hostname of a linked EC2-Classic instance resolves to its private IP address when
            addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname
            of an instance in a VPC resolves to its private IP address when addressed from a linked
            EC2-Classic instance. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportResponse">
            <summary>
            Contains the output of EnableVpcClassicLinkDnsSupport.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportResponse.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVpcClassicLinkRequest">
            <summary>
            Container for the parameters to the EnableVpcClassicLink operation.
            Enables a VPC for ClassicLink. You can then link EC2-Classic instances to your ClassicLink-enabled
            VPC to allow communication over private IP addresses. You cannot enable your VPC for
            ClassicLink if any of your VPC's route tables have existing routes for address ranges
            within the <code>10.0.0.0/8</code> IP address range, excluding local routes for VPCs
            in the <code>10.0.0.0/16</code> and <code>10.1.0.0/16</code> IP address ranges. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVpcClassicLinkRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVpcClassicLinkResponse">
            <summary>
            Contains the output of EnableVpcClassicLink.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVpcClassicLinkResponse.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EventInformation">
            <summary>
            Describes a Spot fleet event.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EventInformation.EventDescription">
            <summary>
            Gets and sets the property EventDescription. 
            <para>
            The description of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EventInformation.EventSubType">
            <summary>
            Gets and sets the property EventSubType. 
            <para>
            The event.
            </para>
             
            <para>
            The following are the <code>error</code> events.
            </para>
             <ul> <li> 
            <para>
             <code>iamFleetRoleInvalid</code> - The Spot fleet did not have the required permissions
            either to launch or terminate an instance.
            </para>
             </li> <li> 
            <para>
             <code>launchSpecTemporarilyBlacklisted</code> - The configuration is not valid and
            several attempts to launch instances have failed. For more information, see the description
            of the event.
            </para>
             </li> <li> 
            <para>
             <code>spotFleetRequestConfigurationInvalid</code> - The configuration is not valid.
            For more information, see the description of the event.
            </para>
             </li> <li> 
            <para>
             <code>spotInstanceCountLimitExceeded</code> - You've reached the limit on the number
            of Spot instances that you can launch.
            </para>
             </li> </ul> 
            <para>
            The following are the <code>fleetRequestChange</code> events.
            </para>
             <ul> <li> 
            <para>
             <code>active</code> - The Spot fleet has been validated and Amazon EC2 is attempting
            to maintain the target number of running Spot instances.
            </para>
             </li> <li> 
            <para>
             <code>cancelled</code> - The Spot fleet is canceled and has no running Spot instances.
            The Spot fleet will be deleted two days after its instances were terminated.
            </para>
             </li> <li> 
            <para>
             <code>cancelled_running</code> - The Spot fleet is canceled and will not launch additional
            Spot instances, but its existing Spot instances continue to run until they are interrupted
            or terminated.
            </para>
             </li> <li> 
            <para>
             <code>cancelled_terminating</code> - The Spot fleet is canceled and its Spot instances
            are terminating.
            </para>
             </li> <li> 
            <para>
             <code>expired</code> - The Spot fleet request has expired. A subsequent event indicates
            that the instances were terminated, if the request was created with <code>TerminateInstancesWithExpiration</code>
            set.
            </para>
             </li> <li> 
            <para>
             <code>modify_in_progress</code> - A request to modify the Spot fleet request was
            accepted and is in progress.
            </para>
             </li> <li> 
            <para>
             <code>modify_successful</code> - The Spot fleet request was modified.
            </para>
             </li> <li> 
            <para>
             <code>price_update</code> - The bid price for a launch configuration was adjusted
            because it was too high. This change is permanent.
            </para>
             </li> <li> 
            <para>
             <code>submitted</code> - The Spot fleet request is being evaluated and Amazon EC2
            is preparing to launch the target number of Spot instances.
            </para>
             </li> </ul> 
            <para>
            The following are the <code>instanceChange</code> events.
            </para>
             <ul> <li> 
            <para>
             <code>launched</code> - A bid was fulfilled and a new instance was launched.
            </para>
             </li> <li> 
            <para>
             <code>terminated</code> - An instance was terminated by the user.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EventInformation.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance. This information is available only for <code>instanceChange</code>
            events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ExportTask">
            <summary>
            Describes an instance export task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the resource being exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.ExportTaskId">
            <summary>
            Gets and sets the property ExportTaskId. 
            <para>
            The ID of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.ExportToS3Task">
            <summary>
            Gets and sets the property ExportToS3Task. 
            <para>
            Information about the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.InstanceExportDetails">
            <summary>
            Gets and sets the property InstanceExportDetails. 
            <para>
            Information about the instance to export.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message related to the export task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ExportToS3Task">
            <summary>
            Describes the format and location for an instance export task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3Task.ContainerFormat">
            <summary>
            Gets and sets the property ContainerFormat. 
            <para>
            The container format used to combine disk images with metadata (such as OVF). If absent,
            only the disk image is exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3Task.DiskImageFormat">
            <summary>
            Gets and sets the property DiskImageFormat. 
            <para>
            The format for the exported image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3Task.S3Bucket">
            <summary>
            Gets and sets the property S3Bucket. 
            <para>
            The S3 bucket for the destination image. The destination bucket must exist and grant
            WRITE and READ_ACP permissions to the AWS account <code>vm-import-export@amazon.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3Task.S3Key">
            <summary>
            Gets and sets the property S3Key. 
            <para>
            The encryption key for your S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ExportToS3TaskSpecification">
            <summary>
            Describes an instance export task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3TaskSpecification.ContainerFormat">
            <summary>
            Gets and sets the property ContainerFormat. 
            <para>
            The container format used to combine disk images with metadata (such as OVF). If absent,
            only the disk image is exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3TaskSpecification.DiskImageFormat">
            <summary>
            Gets and sets the property DiskImageFormat. 
            <para>
            The format for the exported image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3TaskSpecification.S3Bucket">
            <summary>
            Gets and sets the property S3Bucket. 
            <para>
            The S3 bucket for the destination image. The destination bucket must exist and grant
            WRITE and READ_ACP permissions to the AWS account <code>vm-import-export@amazon.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3TaskSpecification.S3Prefix">
            <summary>
            Gets and sets the property S3Prefix. 
            <para>
            The image is written to a single object in the S3 bucket at the S3 key s3prefix +
            exportTaskId + '.' + diskImageFormat.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Filter">
            <summary>
            A filter name and value pair that is used to return a more specific list of results.
            Filters can be used to match a set of resources by various criteria, such as tags,
            attributes, or IDs.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Filter.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Filter.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates Filter with the parameterized properties
            </summary>
            <param name="name">The name of the filter. Filter names are case-sensitive.</param>
            <param name="values">One or more filter values. Filter values are case-sensitive.</param>
        </member>
        <member name="M:Amazon.EC2.Model.Filter.#ctor(System.String)">
            <summary>
            Instantiates Filter with the parameterized properties
            </summary>
            <param name="name">The name of the filter. Filter names are case-sensitive.</param>
        </member>
        <member name="P:Amazon.EC2.Model.Filter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the filter. Filter names are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Filter.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            One or more filter values. Filter values are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.FlowLog">
            <summary>
            Describes a flow log.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.FlowLog.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The date and time the flow log was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.FlowLog.DeliverLogsErrorMessage">
            <summary>
            Gets and sets the property DeliverLogsErrorMessage. 
            <para>
            Information about the error that occurred. <code>Rate limited</code> indicates that
            CloudWatch logs throttling has been applied for one or more network interfaces, or
            that you've reached the limit on the number of CloudWatch Logs log groups that you
            can create. <code>Access error</code> indicates that the IAM role associated with
            the flow log does not have sufficient permissions to publish to CloudWatch Logs. <code>Unknown
            error</code> indicates an internal error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.FlowLog.DeliverLogsPermissionArn">
            <summary>
            Gets and sets the property DeliverLogsPermissionArn. 
            <para>
            The ARN of the IAM role that posts logs to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.FlowLog.DeliverLogsStatus">
            <summary>
            Gets and sets the property DeliverLogsStatus. 
            <para>
            The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.FlowLog.FlowLogId">
            <summary>
            Gets and sets the property FlowLogId. 
            <para>
            The flow log ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.FlowLog.FlowLogStatus">
            <summary>
            Gets and sets the property FlowLogStatus. 
            <para>
            The status of the flow log (<code>ACTIVE</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.FlowLog.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the flow log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.FlowLog.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The ID of the resource on which the flow log was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.FlowLog.TrafficType">
            <summary>
            Gets and sets the property TrafficType. 
            <para>
            The type of traffic captured for the flow log.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetConsoleOutputRequest">
            <summary>
            Container for the parameters to the GetConsoleOutput operation.
            Gets the console output for the specified instance.
            
             
            <para>
            Instances do not have a physical monitor through which you can view their console
            output. They also lack physical controls that allow you to power up, reboot, or shut
            them down. To allow these actions, we provide them through the Amazon EC2 API and
            command line interface.
            </para>
             
            <para>
            Instance console output is buffered and posted shortly after instance boot, reboot,
            and termination. Amazon EC2 preserves the most recent 64 KB output which is available
            for at least one hour after the most recent post.
            </para>
             
            <para>
            For Linux instances, the instance console output displays the exact console output
            that would normally be displayed on a physical monitor attached to a computer. This
            output is buffered because the instance produces it and then posts it to a store where
            the instance's owner can retrieve it.
            </para>
             
            <para>
            For Windows instances, the instance console output includes output from the EC2Config
            service.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.GetConsoleOutputRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.GetConsoleOutputRequest.#ctor(System.String)">
            <summary>
            Instantiates GetConsoleOutputRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance.</param>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleOutputRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetConsoleOutputResponse">
            <summary>
            Contains the output of GetConsoleOutput.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleOutputResponse.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleOutputResponse.Output">
            <summary>
            Gets and sets the property Output. 
            <para>
            The console output, Base64-encoded. If using a command line tool, the tool decodes
            the output for you.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleOutputResponse.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time the output was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetConsoleScreenshotRequest">
            <summary>
            Container for the parameters to the GetConsoleScreenshot operation.
            Retrieve a JPG-format screenshot of a running instance to help with troubleshooting.
            
             
            <para>
            The returned content is Base64-encoded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleScreenshotRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleScreenshotRequest.WakeUp">
            <summary>
            Gets and sets the property WakeUp. 
            <para>
            When set to <code>true</code>, acts as keystroke input and wakes up an instance that's
            in standby or "sleep" mode.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetConsoleScreenshotResponse">
            <summary>
            Contains the output of the request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleScreenshotResponse.ImageData">
            <summary>
            Gets and sets the property ImageData. 
            <para>
            The data that comprises the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleScreenshotResponse.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetHostReservationPurchasePreviewRequest">
            <summary>
            Container for the parameters to the GetHostReservationPurchasePreview operation.
            Preview a reservation purchase with configurations that match those of your Dedicated
            Host. You must have active Dedicated Hosts in your account before you purchase a reservation.
            
             
            <para>
            This is a preview of the <a>PurchaseHostReservation</a> action and does not result
            in the offering being purchased.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetHostReservationPurchasePreviewRequest.HostIdSet">
            <summary>
            Gets and sets the property HostIdSet. 
            <para>
            The ID/s of the Dedicated Host/s that the reservation will be associated with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetHostReservationPurchasePreviewRequest.OfferingId">
            <summary>
            Gets and sets the property OfferingId. 
            <para>
            The offering ID of the reservation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetHostReservationPurchasePreviewResponse">
            <summary>
            This is the response object from the GetHostReservationPurchasePreview operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetHostReservationPurchasePreviewResponse.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code>
            amounts are specified. At this time, the only supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetHostReservationPurchasePreviewResponse.Purchase">
            <summary>
            Gets and sets the property Purchase. 
            <para>
            The purchase information of the Dedicated Host Reservation and the Dedicated Hosts
            associated with it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetHostReservationPurchasePreviewResponse.TotalHourlyPrice">
            <summary>
            Gets and sets the property TotalHourlyPrice. 
            <para>
            The potential total hourly price of the reservation per hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetHostReservationPurchasePreviewResponse.TotalUpfrontPrice">
            <summary>
            Gets and sets the property TotalUpfrontPrice. 
            <para>
            The potential total upfront price. This is billed immediately.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetPasswordDataRequest">
            <summary>
            Container for the parameters to the GetPasswordData operation.
            Retrieves the encrypted administrator password for an instance running Windows.
            
             
            <para>
            The Windows password is generated at boot if the <code>EC2Config</code> service plugin,
            <code>Ec2SetPassword</code>, is enabled. This usually only happens the first time
            an AMI is launched, and then <code>Ec2SetPassword</code> is automatically disabled.
            The password is not generated for rebundled AMIs unless <code>Ec2SetPassword</code>
            is enabled before bundling.
            </para>
             
            <para>
            The password is encrypted using the key pair that you specified when you launched
            the instance. You must provide the corresponding key pair file.
            </para>
             
            <para>
            Password generation and encryption takes a few moments. We recommend that you wait
            up to 15 minutes after launching an instance before trying to retrieve the generated
            password.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.GetPasswordDataRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.GetPasswordDataRequest.#ctor(System.String)">
            <summary>
            Instantiates GetPasswordDataRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the Windows instance.</param>
        </member>
        <member name="P:Amazon.EC2.Model.GetPasswordDataRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the Windows instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteRequest">
            <summary>
            Container for the parameters to the GetReservedInstancesExchangeQuote operation.
            Returns details about the values and term of your specified Convertible Reserved Instances.
            When an offering ID is specified it returns information about whether the exchange
            is valid and can be performed.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteRequest.ReservedInstanceIds">
            <summary>
            Gets and sets the property ReservedInstanceIds. 
            <para>
            The ID/s of the Convertible Reserved Instances you want to exchange.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteRequest.TargetConfigurations">
            <summary>
            Gets and sets the property TargetConfigurations. 
            <para>
            The configuration requirements of the Convertible Reserved Instances you want in exchange
            for your current Convertible Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse">
            <summary>
            Contains the output of GetReservedInstancesExchangeQuote.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency of the transaction.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse.IsValidExchange">
            <summary>
            Gets and sets the property IsValidExchange. 
            <para>
            If <code>true</code>, the exchange is valid. If <code>false</code>, the exchange cannot
            be performed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse.OutputReservedInstancesWillExpireAt">
            <summary>
            Gets and sets the property OutputReservedInstancesWillExpireAt. 
            <para>
            The new end date of the reservation term.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse.PaymentDue">
            <summary>
            Gets and sets the property PaymentDue. 
            <para>
            The total true upfront charge for the exchange.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse.ReservedInstanceValueRollup">
            <summary>
            Gets and sets the property ReservedInstanceValueRollup.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse.ReservedInstanceValueSet">
            <summary>
            Gets and sets the property ReservedInstanceValueSet. 
            <para>
            The configuration of your Convertible Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse.TargetConfigurationValueRollup">
            <summary>
            Gets and sets the property TargetConfigurationValueRollup.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse.TargetConfigurationValueSet">
            <summary>
            Gets and sets the property TargetConfigurationValueSet. 
            <para>
            The values of the target Convertible Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetReservedInstancesExchangeQuoteResponse.ValidationFailureReason">
            <summary>
            Gets and sets the property ValidationFailureReason. 
            <para>
            Describes the reason why the exchange can not be completed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GroupIdentifier">
            <summary>
            Describes a security group.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GroupIdentifier.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GroupIdentifier.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the security group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.HistoryRecord">
            <summary>
            Describes an event in the history of the Spot fleet request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HistoryRecord.EventInformation">
            <summary>
            Gets and sets the property EventInformation. 
            <para>
            Information about the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HistoryRecord.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The event type.
            </para>
             <ul> <li> 
            <para>
             <code>error</code> - Indicates an error with the Spot fleet request.
            </para>
             </li> <li> 
            <para>
             <code>fleetRequestChange</code> - Indicates a change in the status or configuration
            of the Spot fleet request.
            </para>
             </li> <li> 
            <para>
             <code>instanceChange</code> - Indicates that an instance was launched or terminated.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HistoryRecord.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The date and time of the event, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Host">
            <summary>
            Describes the properties of the Dedicated Host.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Host.AutoPlacement">
            <summary>
            Gets and sets the property AutoPlacement. 
            <para>
            Whether auto-placement is on or off.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Host.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone of the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Host.AvailableCapacity">
            <summary>
            Gets and sets the property AvailableCapacity. 
            <para>
            The number of new instances that can be launched onto the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Host.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure idempotency of the request.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Host.HostId">
            <summary>
            Gets and sets the property HostId. 
            <para>
            The ID of the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Host.HostProperties">
            <summary>
            Gets and sets the property HostProperties. 
            <para>
            The hardware specifications of the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Host.HostReservationId">
            <summary>
            Gets and sets the property HostReservationId. 
            <para>
            The reservation ID of the Dedicated Host. This returns a <code>null</code> response
            if the Dedicated Host doesn't have an associated reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Host.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
            The IDs and instance type that are currently running on the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Host.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The Dedicated Host's state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.HostInstance">
            <summary>
            Describes an instance running on a Dedicated Host.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostInstance.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            the IDs of instances that are running on the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostInstance.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type size (for example, <code>m3.medium</code>) of the running instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.HostOffering">
            <summary>
            Details about the Dedicated Host Reservation offering.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostOffering.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency of the offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostOffering.Duration">
            <summary>
            Gets and sets the property Duration. 
            <para>
            The duration of the offering (in seconds).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostOffering.HourlyPrice">
            <summary>
            Gets and sets the property HourlyPrice. 
            <para>
            The hourly price of the offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostOffering.InstanceFamily">
            <summary>
            Gets and sets the property InstanceFamily. 
            <para>
            The instance family of the offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostOffering.OfferingId">
            <summary>
            Gets and sets the property OfferingId. 
            <para>
            The ID of the offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostOffering.PaymentOption">
            <summary>
            Gets and sets the property PaymentOption. 
            <para>
            The available payment option.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostOffering.UpfrontPrice">
            <summary>
            Gets and sets the property UpfrontPrice. 
            <para>
            The upfront price of the offering. Does not apply to No Upfront offerings.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.HostProperties">
            <summary>
            Describes properties of a Dedicated Host.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostProperties.Cores">
            <summary>
            Gets and sets the property Cores. 
            <para>
            The number of cores on the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostProperties.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type size that the Dedicated Host supports (for example, <code>m3.medium</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostProperties.Sockets">
            <summary>
            Gets and sets the property Sockets. 
            <para>
            The number of sockets on the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostProperties.TotalVCpus">
            <summary>
            Gets and sets the property TotalVCpus. 
            <para>
            The number of vCPUs on the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.HostReservation">
            <summary>
            Details about the Dedicated Host Reservation and associated Dedicated Hosts.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of Dedicated Hosts the reservation is associated with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency in which the <code>upfrontPrice</code> and <code>hourlyPrice</code> amounts
            are specified. At this time, the only supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.Duration">
            <summary>
            Gets and sets the property Duration. 
            <para>
            The length of the reservation's term, specified in seconds. Can be <code>31536000
            (1 year)</code> | <code>94608000 (3 years)</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.End">
            <summary>
            Gets and sets the property End. 
            <para>
            The date and time that the reservation ends.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.HostIdSet">
            <summary>
            Gets and sets the property HostIdSet. 
            <para>
            The IDs of the Dedicated Hosts associated with the reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.HostReservationId">
            <summary>
            Gets and sets the property HostReservationId. 
            <para>
            The ID of the reservation that specifies the associated Dedicated Hosts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.HourlyPrice">
            <summary>
            Gets and sets the property HourlyPrice. 
            <para>
            The hourly price of the reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.InstanceFamily">
            <summary>
            Gets and sets the property InstanceFamily. 
            <para>
            The instance family of the Dedicated Host Reservation. The instance family on the
            Dedicated Host must be the same in order for it to benefit from the reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.OfferingId">
            <summary>
            Gets and sets the property OfferingId. 
            <para>
            The ID of the reservation. This remains the same regardless of which Dedicated Hosts
            are associated with it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.PaymentOption">
            <summary>
            Gets and sets the property PaymentOption. 
            <para>
            The payment option selected for this reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.Start">
            <summary>
            Gets and sets the property Start. 
            <para>
            The date and time that the reservation started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.HostReservation.UpfrontPrice">
            <summary>
            Gets and sets the property UpfrontPrice. 
            <para>
            The upfront price of the reservation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.IamInstanceProfile">
            <summary>
            Describes an IAM instance profile.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IamInstanceProfile.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the instance profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IamInstanceProfile.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the instance profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.IamInstanceProfileSpecification">
            <summary>
            Describes an IAM instance profile.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IamInstanceProfileSpecification.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the instance profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IamInstanceProfileSpecification.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the instance profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.IcmpTypeCode">
            <summary>
            Describes the ICMP type and code.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IcmpTypeCode.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The ICMP type. A value of -1 means all types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IcmpTypeCode.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The ICMP code. A value of -1 means all codes for the specified ICMP type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.IdFormat">
            <summary>
            Describes the ID format for a resource.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IdFormat.Deadline">
            <summary>
            Gets and sets the property Deadline. 
            <para>
            The date in UTC at which you are permanently switched over to using longer IDs. If
            a deadline is not yet available for this resource type, this field is not returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IdFormat.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The type of resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IdFormat.UseLongIds">
            <summary>
            Gets and sets the property UseLongIds. 
            <para>
            Indicates whether longer IDs (17-character IDs) are enabled for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Image">
            <summary>
            Describes an image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            Any block device mapping entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date and time the image was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the AMI that was provided during image creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.EnaSupport">
            <summary>
            Gets and sets the property EnaSupport. 
            <para>
            Specifies whether enhanced networking with ENA is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Hypervisor">
            <summary>
            Gets and sets the property Hypervisor. 
            <para>
            The hypervisor type of the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.ImageLocation">
            <summary>
            Gets and sets the property ImageLocation. 
            <para>
            The location of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.ImageOwnerAlias">
            <summary>
            Gets and sets the property ImageOwnerAlias. 
            <para>
            The AWS account alias (for example, <code>amazon</code>, <code>self</code>) or the
            AWS account ID of the AMI owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.ImageType">
            <summary>
            Gets and sets the property ImageType. 
            <para>
            The type of image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The kernel associated with the image, if any. Only applicable for machine images.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the AMI that was provided during image creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the image owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The value is <code>Windows</code> for Windows AMIs; otherwise blank.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            Any product codes associated with the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Public">
            <summary>
            Gets and sets the property Public. 
            <para>
            Indicates whether the image has public launch permissions. The value is <code>true</code>
            if this image has public launch permissions or <code>false</code> if it has only implicit
            and explicit launch permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The RAM disk associated with the image, if any. Only applicable for machine images.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.RootDeviceName">
            <summary>
            Gets and sets the property RootDeviceName. 
            <para>
            The device name of the root device (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.RootDeviceType">
            <summary>
            Gets and sets the property RootDeviceType. 
            <para>
            The type of root device used by the AMI. The AMI can use an EBS volume or an instance
            store volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport. 
            <para>
            Specifies whether enhanced networking with the Intel 82599 Virtual Function interface
            is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the AMI. If the state is <code>available</code>, the image is
            successfully registered and can be used to launch an instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason for the state change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.VirtualizationType">
            <summary>
            Gets and sets the property VirtualizationType. 
            <para>
            The type of virtualization of the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImageAttribute">
            <summary>
            Describes an image attribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            One or more block device mapping entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The kernel ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.LaunchPermissions">
            <summary>
            Gets and sets the property LaunchPermissions. 
            <para>
            One or more launch permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            One or more product codes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The RAM disk ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport. 
            <para>
            Indicates whether enhanced networking with the Intel 82599 Virtual Function interface
            is enabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImageDiskContainer">
            <summary>
            Describes the disk container object for an import image task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageDiskContainer.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageDiskContainer.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The block device mapping for the disk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageDiskContainer.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The format of the disk image being imported.
            </para>
             
            <para>
            Valid values: <code>RAW</code> | <code>VHD</code> | <code>VMDK</code> | <code>OVA</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageDiskContainer.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the EBS snapshot to be used for importing the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageDiskContainer.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL to the Amazon S3-based disk image being imported. The URL can either be a
            https URL (https://..) or an Amazon S3 URL (s3://..)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageDiskContainer.UserBucket">
            <summary>
            Gets and sets the property UserBucket. 
            <para>
            The S3 bucket for the disk image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportImageRequest">
            <summary>
            Container for the parameters to the ImportImage operation.
            Import single or multi-volume disk images or EBS snapshots into an Amazon Machine
            Image (AMI). For more information, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html">Importing
            a VM as an Image Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageRequest.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the virtual machine.
            </para>
             
            <para>
            Valid values: <code>i386</code> | <code>x86_64</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageRequest.ClientData">
            <summary>
            Gets and sets the property ClientData. 
            <para>
            The client-specific data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            The token to enable idempotency for VM import requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description string for the import image task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageRequest.DiskContainers">
            <summary>
            Gets and sets the property DiskContainers. 
            <para>
            Information about the disk containers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageRequest.Hypervisor">
            <summary>
            Gets and sets the property Hypervisor. 
            <para>
            The target hypervisor platform.
            </para>
             
            <para>
            Valid values: <code>xen</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageRequest.LicenseType">
            <summary>
            Gets and sets the property LicenseType. 
            <para>
            The license type to be used for the Amazon Machine Image (AMI) after importing.
            </para>
             
            <para>
             <b>Note:</b> You may only use BYOL if you have existing licenses with rights to use
            these licenses in a third party cloud like AWS. For more information, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#prerequisites-image">Prerequisites</a>
            in the VM Import/Export User Guide.
            </para>
             
            <para>
            Valid values: <code>AWS</code> | <code>BYOL</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageRequest.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The operating system of the virtual machine.
            </para>
             
            <para>
            Valid values: <code>Windows</code> | <code>Linux</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageRequest.RoleName">
            <summary>
            Gets and sets the property RoleName. 
            <para>
            The name of the role to use when not using the default role, 'vmimport'.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportImageResponse">
            <summary>
            Contains the output for ImportImage.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageResponse.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the virtual machine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the import task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageResponse.Hypervisor">
            <summary>
            Gets and sets the property Hypervisor. 
            <para>
            The target hypervisor of the import task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageResponse.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the Amazon Machine Image (AMI) created by the import task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageResponse.ImportTaskId">
            <summary>
            Gets and sets the property ImportTaskId. 
            <para>
            The task ID of the import image task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageResponse.LicenseType">
            <summary>
            Gets and sets the property LicenseType. 
            <para>
            The license type of the virtual machine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageResponse.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The operating system of the virtual machine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageResponse.Progress">
            <summary>
            Gets and sets the property Progress. 
            <para>
            The progress of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageResponse.SnapshotDetails">
            <summary>
            Gets and sets the property SnapshotDetails. 
            <para>
            Information about the snapshots.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            A brief status of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            A detailed status message of the import task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportImageTask">
            <summary>
            Describes an import image task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageTask.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the virtual machine.
            </para>
             
            <para>
            Valid values: <code>i386</code> | <code>x86_64</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageTask.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the import task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageTask.Hypervisor">
            <summary>
            Gets and sets the property Hypervisor. 
            <para>
            The target hypervisor for the import task.
            </para>
             
            <para>
            Valid values: <code>xen</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageTask.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the Amazon Machine Image (AMI) of the imported virtual machine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageTask.ImportTaskId">
            <summary>
            Gets and sets the property ImportTaskId. 
            <para>
            The ID of the import image task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageTask.LicenseType">
            <summary>
            Gets and sets the property LicenseType. 
            <para>
            The license type of the virtual machine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageTask.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The description string for the import image task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageTask.Progress">
            <summary>
            Gets and sets the property Progress. 
            <para>
            The percentage of progress of the import image task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageTask.SnapshotDetails">
            <summary>
            Gets and sets the property SnapshotDetails. 
            <para>
            Information about the snapshots.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageTask.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            A brief status for the import image task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportImageTask.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            A descriptive status message for the import image task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportInstanceLaunchSpecification">
            <summary>
            Describes the launch specification for VM import.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.AdditionalInfo">
            <summary>
            Gets and sets the property AdditionalInfo. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.GroupIds">
            <summary>
            Gets and sets the property GroupIds. 
            <para>
            One or more security group IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.GroupNames">
            <summary>
            Gets and sets the property GroupNames. 
            <para>
            One or more security group names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.InstanceInitiatedShutdownBehavior">
            <summary>
            Gets and sets the property InstanceInitiatedShutdownBehavior. 
            <para>
            Indicates whether an instance stops or terminates when you initiate shutdown from
            the instance (using the operating system command for system shutdown).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type. For more information about the instance types that you can import,
            see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#vmimport-instance-types">Instance
            Types</a> in the VM Import/Export User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.Monitoring">
            <summary>
            Gets and sets the property Monitoring. 
            <para>
            Indicates whether monitoring is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.Placement">
            <summary>
            Gets and sets the property Placement. 
            <para>
            The placement information for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            [EC2-VPC] An available IP address from the IP address range of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            [EC2-VPC] The ID of the subnet in which to launch the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            The user data to make available to the instance. If you are using an AWS SDK or command
            line tool, Base64-encoding is performed for you, and you can load the text from a
            file. Otherwise, you must provide Base64-encoded text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportInstanceRequest">
            <summary>
            Container for the parameters to the ImportInstance operation.
            Creates an import instance task using metadata from the specified disk image. <code>ImportInstance</code>
            only supports single-volume VMs. To import multi-volume VMs, use <a>ImportImage</a>.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing
            a Virtual Machine Using the Amazon EC2 CLI</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the instance being imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceRequest.DiskImages">
            <summary>
            Gets and sets the property DiskImages. 
            <para>
            The disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceRequest.LaunchSpecification">
            <summary>
            Gets and sets the property LaunchSpecification. 
            <para>
            The launch specification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceRequest.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The instance operating system.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportInstanceResponse">
            <summary>
            Contains the output for ImportInstance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceResponse.ConversionTask">
            <summary>
            Gets and sets the property ConversionTask. 
            <para>
            Information about the conversion task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportInstanceTaskDetails">
            <summary>
            Describes an import instance task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceTaskDetails.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceTaskDetails.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceTaskDetails.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The instance operating system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceTaskDetails.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            One or more volumes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportInstanceVolumeDetailItem">
            <summary>
            Describes an import volume task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone where the resulting instance will reside.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.BytesConverted">
            <summary>
            Gets and sets the property BytesConverted. 
            <para>
            The number of bytes converted so far.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the import of this particular disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status information or errors related to the disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.Volume">
            <summary>
            Gets and sets the property Volume. 
            <para>
            The volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportKeyPairRequest">
            <summary>
            Container for the parameters to the ImportKeyPair operation.
            Imports the public key from an RSA key pair that you created with a third-party tool.
            Compare this with <a>CreateKeyPair</a>, in which AWS creates the key pair and gives
            the keys to you (AWS keeps a copy of the public key). With ImportKeyPair, you create
            the key pair and give AWS just the public key. The private key is never transferred
            between you and AWS.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ImportKeyPairRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ImportKeyPairRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates ImportKeyPairRequest with the parameterized properties
            </summary>
            <param name="keyName">A unique name for the key pair.</param>
            <param name="publicKeyMaterial">The public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ImportKeyPairRequest.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            A unique name for the key pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportKeyPairRequest.PublicKeyMaterial">
            <summary>
            Gets and sets the property PublicKeyMaterial. 
            <para>
            The public key. For API calls, the text must be base64-encoded. For command line tools,
            base64 encoding is performed for you.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportKeyPairResponse">
            <summary>
            Contains the output of ImportKeyPair.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportKeyPairResponse.KeyFingerprint">
            <summary>
            Gets and sets the property KeyFingerprint. 
            <para>
            The MD5 public key fingerprint as specified in section 4 of RFC 4716.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportKeyPairResponse.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The key pair name you provided.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportSnapshotRequest">
            <summary>
            Container for the parameters to the ImportSnapshot operation.
            Imports a disk into an EBS snapshot.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportSnapshotRequest.ClientData">
            <summary>
            Gets and sets the property ClientData. 
            <para>
            The client-specific data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportSnapshotRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Token to enable idempotency for VM import requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportSnapshotRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description string for the import snapshot task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportSnapshotRequest.DiskContainer">
            <summary>
            Gets and sets the property DiskContainer. 
            <para>
            Information about the disk container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportSnapshotRequest.RoleName">
            <summary>
            Gets and sets the property RoleName. 
            <para>
            The name of the role to use when not using the default role, 'vmimport'.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportSnapshotResponse">
            <summary>
            Contains the output for ImportSnapshot.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportSnapshotResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the import snapshot task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportSnapshotResponse.ImportTaskId">
            <summary>
            Gets and sets the property ImportTaskId. 
            <para>
            The ID of the import snapshot task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportSnapshotResponse.SnapshotTaskDetail">
            <summary>
            Gets and sets the property SnapshotTaskDetail. 
            <para>
            Information about the import snapshot task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportSnapshotTask">
            <summary>
            Describes an import snapshot task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportSnapshotTask.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the import snapshot task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportSnapshotTask.ImportTaskId">
            <summary>
            Gets and sets the property ImportTaskId. 
            <para>
            The ID of the import snapshot task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportSnapshotTask.SnapshotTaskDetail">
            <summary>
            Gets and sets the property SnapshotTaskDetail. 
            <para>
            Describes an import snapshot task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportVolumeRequest">
            <summary>
            Container for the parameters to the ImportVolume operation.
            Creates an import volume task using metadata from the specified disk image.For more
            information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/importing-your-volumes-into-amazon-ebs.html">Importing
            Disks to Amazon EBS</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the resulting EBS volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeRequest.Volume">
            <summary>
            Gets and sets the property Volume. 
            <para>
            The volume size.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportVolumeResponse">
            <summary>
            Contains the output for ImportVolume.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeResponse.ConversionTask">
            <summary>
            Gets and sets the property ConversionTask. 
            <para>
            Information about the conversion task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportVolumeTaskDetails">
            <summary>
            Describes an import volume task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeTaskDetails.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone where the resulting volume will reside.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeTaskDetails.BytesConverted">
            <summary>
            Gets and sets the property BytesConverted. 
            <para>
            The number of bytes converted so far.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeTaskDetails.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description you provided when starting the import volume task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeTaskDetails.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeTaskDetails.Volume">
            <summary>
            Gets and sets the property Volume. 
            <para>
            The volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Instance">
            <summary>
            Describes an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.AmiLaunchIndex">
            <summary>
            Gets and sets the property AmiLaunchIndex. 
            <para>
            The AMI launch index, which can be used to find this instance in the launch group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            Any block device mapping entries for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            The idempotency token you provided when you launched the instance, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Indicates whether the instance is optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal I/O performance. This optimization isn't available with all instance types.
            Additional usage charges apply when using an EBS Optimized instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.EnaSupport">
            <summary>
            Gets and sets the property EnaSupport. 
            <para>
            Specifies whether enhanced networking with ENA is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Hypervisor">
            <summary>
            Gets and sets the property Hypervisor. 
            <para>
            The hypervisor type of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.IamInstanceProfile">
            <summary>
            Gets and sets the property IamInstanceProfile. 
            <para>
            The IAM instance profile associated with the instance, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI used to launch the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.InstanceLifecycle">
            <summary>
            Gets and sets the property InstanceLifecycle. 
            <para>
            Indicates whether this is a Spot instance or a Scheduled Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The kernel associated with this instance, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair, if this instance was launched with an associated key pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.LaunchTime">
            <summary>
            Gets and sets the property LaunchTime. 
            <para>
            The time the instance was launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Monitoring">
            <summary>
            Gets and sets the property Monitoring. 
            <para>
            The monitoring information for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            [EC2-VPC] One or more network interfaces for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Placement">
            <summary>
            Gets and sets the property Placement. 
            <para>
            The location where the instance launched, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The value is <code>Windows</code> for Windows instances; otherwise blank.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.PrivateDnsName">
            <summary>
            Gets and sets the property PrivateDnsName. 
            <para>
            The private DNS name assigned to the instance. This DNS name can only be used inside
            the Amazon EC2 network. This name is not available until the instance enters the <code>running</code>
            state. For EC2-VPC, this name is only available if you've enabled DNS hostnames for
            your VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP address assigned to the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            The product codes attached to this instance, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.PublicDnsName">
            <summary>
            Gets and sets the property PublicDnsName. 
            <para>
            The public DNS name assigned to the instance. This name is not available until the
            instance enters the <code>running</code> state. For EC2-VPC, this name is only available
            if you've enabled DNS hostnames for your VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.PublicIpAddress">
            <summary>
            Gets and sets the property PublicIpAddress. 
            <para>
            The public IP address assigned to the instance, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The RAM disk associated with this instance, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.RootDeviceName">
            <summary>
            Gets and sets the property RootDeviceName. 
            <para>
            The root device name (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.RootDeviceType">
            <summary>
            Gets and sets the property RootDeviceType. 
            <para>
            The root device type used by the AMI. The AMI can use an EBS volume or an instance
            store volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            One or more security groups for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Specifies whether to enable an instance launched in a VPC to perform NAT. This controls
            whether source/destination checking is enabled on the instance. A value of <code>true</code>
            means checking is enabled, and <code>false</code> means checking is disabled. The
            value must be <code>false</code> for the instance to perform NAT. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.SpotInstanceRequestId">
            <summary>
            Gets and sets the property SpotInstanceRequestId. 
            <para>
            If the request is a Spot instance request, the ID of the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport. 
            <para>
            Specifies whether enhanced networking with the Intel 82599 Virtual Function interface
            is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason for the most recent state transition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.StateTransitionReason">
            <summary>
            Gets and sets the property StateTransitionReason. 
            <para>
            The reason for the most recent state transition. This might be an empty string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            [EC2-VPC] The ID of the subnet in which the instance is running.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.VirtualizationType">
            <summary>
            Gets and sets the property VirtualizationType. 
            <para>
            The virtualization type of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            [EC2-VPC] The ID of the VPC in which the instance is running.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceAttribute">
            <summary>
            Describes an instance attribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            The block device mapping of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.DisableApiTermination">
            <summary>
            Gets and sets the property DisableApiTermination. 
            <para>
            If the value is <code>true</code>, you can't terminate the instance through the Amazon
            EC2 console, CLI, or API; otherwise, you can.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Indicates whether the instance is optimized for EBS I/O.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.EnaSupport">
            <summary>
            Gets and sets the property EnaSupport. 
            <para>
            Indicates whether enhanced networking with ENA is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The security groups associated with the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.InstanceInitiatedShutdownBehavior">
            <summary>
            Gets and sets the property InstanceInitiatedShutdownBehavior. 
            <para>
            Indicates whether an instance stops or terminates when you initiate shutdown from
            the instance (using the operating system command for system shutdown).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The kernel ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            A list of product codes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The RAM disk ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.RootDeviceName">
            <summary>
            Gets and sets the property RootDeviceName. 
            <para>
            The name of the root device (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Indicates whether source/destination checking is enabled. A value of <code>true</code>
            means checking is enabled, and <code>false</code> means checking is disabled. This
            value must be <code>false</code> for a NAT instance to perform NAT.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport. 
            <para>
            Indicates whether enhanced networking with the Intel 82599 Virtual Function interface
            is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            The user data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceBlockDeviceMapping">
            <summary>
            Describes a block device mapping.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMapping.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMapping.Ebs">
            <summary>
            Gets and sets the property Ebs. 
            <para>
            Parameters used to automatically set up EBS volumes when the instance is launched.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification">
            <summary>
            Describes a block device mapping entry.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification.Ebs">
            <summary>
            Gets and sets the property Ebs. 
            <para>
            Parameters used to automatically set up EBS volumes when the instance is launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification.NoDevice">
            <summary>
            Gets and sets the property NoDevice. 
            <para>
            suppress the specified device included in the block device mapping.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification.VirtualName">
            <summary>
            Gets and sets the property VirtualName. 
            <para>
            The virtual device name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceCapacity">
            <summary>
            Information about the instance type that the Dedicated Host supports.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceCapacity.AvailableCapacity">
            <summary>
            Gets and sets the property AvailableCapacity. 
            <para>
            The number of instances that can still be launched onto the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceCapacity.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type size supported by the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceCapacity.TotalCapacity">
            <summary>
            Gets and sets the property TotalCapacity. 
            <para>
            The total number of instances that can be launched onto the Dedicated Host.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceCount">
            <summary>
            Describes a Reserved Instance listing state.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceCount.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of listed Reserved Instances in the state specified by the <code>state</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceCount.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The states of the listed Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceExportDetails">
            <summary>
            Describes an instance to export.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceExportDetails.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the resource being exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceExportDetails.TargetEnvironment">
            <summary>
            Gets and sets the property TargetEnvironment. 
            <para>
            The target virtualization environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceMonitoring">
            <summary>
            Describes the monitoring information of the instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceMonitoring.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceMonitoring.Monitoring">
            <summary>
            Gets and sets the property Monitoring. 
            <para>
            The monitoring information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceNetworkInterface">
            <summary>
            Describes a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.Association">
            <summary>
            Gets and sets the property Association. 
            <para>
            The association information for an Elastic IP associated with the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.Attachment">
            <summary>
            Gets and sets the property Attachment. 
            <para>
            The network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            One or more security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.MacAddress">
            <summary>
            Gets and sets the property MacAddress. 
            <para>
            The MAC address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The ID of the AWS account that created the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.PrivateDnsName">
            <summary>
            Gets and sets the property PrivateDnsName. 
            <para>
            The private DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The IP address of the network interface within the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            The private IP addresses associated with the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Indicates whether to validate network traffic to or from this network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceNetworkInterfaceAssociation">
            <summary>
            Describes association information for an Elastic IP address.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAssociation.IpOwnerId">
            <summary>
            Gets and sets the property IpOwnerId. 
            <para>
            The ID of the owner of the Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAssociation.PublicDnsName">
            <summary>
            Gets and sets the property PublicDnsName. 
            <para>
            The public DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAssociation.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The public IP address or Elastic IP address bound to the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment">
            <summary>
            Describes a network interface attachment.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The ID of the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment.AttachTime">
            <summary>
            Gets and sets the property AttachTime. 
            <para>
            The time stamp when the attachment initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the network interface is deleted when the instance is terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment.DeviceIndex">
            <summary>
            Gets and sets the property DeviceIndex. 
            <para>
            The index of the device on the instance for the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The attachment state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification">
            <summary>
            Describes a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.AssociatePublicIpAddress">
            <summary>
            Gets and sets the property AssociatePublicIpAddress. 
            <para>
            Indicates whether to assign a public IP address to an instance you launch in a VPC.
            The public IP address can only be assigned to a network interface for eth0, and can
            only be assigned to a new network interface, not an existing one. You cannot specify
            more than one network interface in the request. If launching into a default subnet,
            the default value is <code>true</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            If set to <code>true</code>, the interface is deleted when the instance is terminated.
            You can specify <code>true</code> only if creating a new network interface when launching
            an instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the network interface. Applies only if creating a network interface
            when launching an instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.DeviceIndex">
            <summary>
            Gets and sets the property DeviceIndex. 
            <para>
            The index of the device on the instance for the network interface attachment. If you
            are specifying a network interface in a <a>RunInstances</a> request, you must provide
            the device index.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The IDs of the security groups for the network interface. Applies only if creating
            a network interface when launching an instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP address of the network interface. Applies only if creating a network
            interface when launching an instance. You cannot specify this option if you're launching
            more than one instance in a <a>RunInstances</a> request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            One or more private IP addresses to assign to the network interface. Only one private
            IP address can be designated as primary. You cannot specify this option if you're
            launching more than one instance in a <a>RunInstances</a> request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.SecondaryPrivateIpAddressCount">
            <summary>
            Gets and sets the property SecondaryPrivateIpAddressCount. 
            <para>
            The number of secondary private IP addresses. You can't specify this option and specify
            more than one private IP address using the private IP addresses option. You cannot
            specify this option if you're launching more than one instance in a <a>RunInstances</a>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet associated with the network string. Applies only if creating
            a network interface when launching an instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstancePrivateIpAddress">
            <summary>
            Describes a private IP address.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstancePrivateIpAddress.Association">
            <summary>
            Gets and sets the property Association. 
            <para>
            The association information for an Elastic IP address for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstancePrivateIpAddress.Primary">
            <summary>
            Gets and sets the property Primary. 
            <para>
            Indicates whether this IP address is the primary private IP address of the network
            interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstancePrivateIpAddress.PrivateDnsName">
            <summary>
            Gets and sets the property PrivateDnsName. 
            <para>
            The private DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstancePrivateIpAddress.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP address of the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceState">
            <summary>
            Describes the current state of the instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceState.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The low byte represents the state. The high byte is an opaque internal value and should
            be ignored.
            </para>
             <ul> <li> 
            <para>
             <code>0</code> : <code>pending</code> 
            </para>
             </li> <li> 
            <para>
             <code>16</code> : <code>running</code> 
            </para>
             </li> <li> 
            <para>
             <code>32</code> : <code>shutting-down</code> 
            </para>
             </li> <li> 
            <para>
             <code>48</code> : <code>terminated</code> 
            </para>
             </li> <li> 
            <para>
             <code>64</code> : <code>stopping</code> 
            </para>
             </li> <li> 
            <para>
             <code>80</code> : <code>stopped</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceState.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The current state of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceStateChange">
            <summary>
            Describes an instance state change.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStateChange.CurrentState">
            <summary>
            Gets and sets the property CurrentState. 
            <para>
            The current state of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStateChange.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStateChange.PreviousState">
            <summary>
            Gets and sets the property PreviousState. 
            <para>
            The previous state of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceStatus">
            <summary>
            Describes the status of an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            Any scheduled events associated with the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.InstanceState">
            <summary>
            Gets and sets the property InstanceState. 
            <para>
            The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an
            instance be in the <code>running</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Reports impaired functionality that stems from issues internal to the instance, such
            as impaired reachability.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.SystemStatus">
            <summary>
            Gets and sets the property SystemStatus. 
            <para>
            Reports impaired functionality that stems from issues related to the systems that
            support an instance, such as hardware failures and network connectivity problems.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceStatusDetails">
            <summary>
            Describes the instance status.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusDetails.ImpairedSince">
            <summary>
            Gets and sets the property ImpairedSince. 
            <para>
            The time when a status check failed. For an instance that was launched and impaired,
            this is the time when the instance was launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The type of instance status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusDetails.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceStatusEvent">
            <summary>
            Describes a scheduled event for an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusEvent.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The event code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusEvent.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the event.
            </para>
             
            <para>
            After a scheduled event is completed, it can still be described for up to a week.
            If the event has been completed, this description starts with the following text:
            [Completed].
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusEvent.NotAfter">
            <summary>
            Gets and sets the property NotAfter. 
            <para>
            The latest scheduled end time for the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusEvent.NotBefore">
            <summary>
            Gets and sets the property NotBefore. 
            <para>
            The earliest scheduled start time for the event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceStatusSummary">
            <summary>
            Describes the status of an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusSummary.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            The system instance health or application instance health.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InternetGateway">
            <summary>
            Describes an Internet gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InternetGateway.Attachments">
            <summary>
            Gets and sets the property Attachments. 
            <para>
            Any VPCs attached to the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InternetGateway.InternetGatewayId">
            <summary>
            Gets and sets the property InternetGatewayId. 
            <para>
            The ID of the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InternetGateway.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InternetGatewayAttachment">
            <summary>
            Describes the attachment of a VPC to an Internet gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InternetGatewayAttachment.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InternetGatewayAttachment.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.IpPermission">
            <summary>
            Describes a security group rule.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IpPermission.FromPort">
            <summary>
            Gets and sets the property FromPort. 
            <para>
            The start of port range for the TCP and UDP protocols, or an ICMP type number. A value
            of <code>-1</code> indicates all ICMP types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IpPermission.IpProtocol">
            <summary>
            Gets and sets the property IpProtocol. 
            <para>
            The IP protocol name (for <code>tcp</code>, <code>udp</code>, and <code>icmp</code>)
            or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol
            Numbers</a>). 
            </para>
             
            <para>
            [EC2-VPC only] When you authorize or revoke security group rules, you can use <code>-1</code>
            to specify all.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IpPermission.IpRanges">
            <summary>
            Gets and sets the property IpRanges. 
            <para>
            One or more IP ranges.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IpPermission.PrefixListIds">
            <summary>
            Gets and sets the property PrefixListIds. 
            <para>
            (Valid for <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupEgress</a> and
            <a>DescribeSecurityGroups</a> only) One or more prefix list IDs for an AWS service.
            In an <a>AuthorizeSecurityGroupEgress</a> request, this is the AWS service that you
            want to access through a VPC endpoint from instances associated with the security
            group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IpPermission.ToPort">
            <summary>
            Gets and sets the property ToPort. 
            <para>
            The end of port range for the TCP and UDP protocols, or an ICMP code. A value of <code>-1</code>
            indicates all ICMP codes for the specified ICMP type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IpPermission.UserIdGroupPairs">
            <summary>
            Gets and sets the property UserIdGroupPairs. 
            <para>
            One or more security group and AWS account ID pairs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.KeyPair">
            <summary>
            Describes a key pair.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.KeyPair.KeyFingerprint">
            <summary>
            Gets and sets the property KeyFingerprint. 
            <para>
            The SHA-1 digest of the DER encoded private key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.KeyPair.KeyMaterial">
            <summary>
            Gets and sets the property KeyMaterial. 
            <para>
            An unencrypted PEM encoded RSA private key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.KeyPair.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.KeyPairInfo">
            <summary>
            Describes a key pair.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.KeyPairInfo.KeyFingerprint">
            <summary>
            Gets and sets the property KeyFingerprint. 
            <para>
            If you used <a>CreateKeyPair</a> to create the key pair, this is the SHA-1 digest
            of the DER encoded private key. If you used <a>ImportKeyPair</a> to provide AWS the
            public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.KeyPairInfo.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.LaunchPermission">
            <summary>
            Describes a launch permission.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchPermission.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchPermission.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The AWS account ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.LaunchPermissionModifications">
            <summary>
            Describes a launch permission modification.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchPermissionModifications.Add">
            <summary>
            Gets and sets the property Add. 
            <para>
            The AWS account ID to add to the list of launch permissions for the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchPermissionModifications.Remove">
            <summary>
            Gets and sets the property Remove. 
            <para>
            The AWS account ID to remove from the list of launch permissions for the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.LaunchSpecification">
            <summary>
            Describes the launch specification for an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.AddressingType">
            <summary>
            Gets and sets the property AddressingType. 
            <para>
            Deprecated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.AllSecurityGroups">
            <summary>
            Gets and sets the property AllSecurityGroups. 
            <para>
            One or more security groups. When requesting instances in a VPC, you must specify
            the IDs of the security groups. When requesting instances in EC2-Classic, you can
            specify the names or the IDs of the security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            One or more block device mapping entries.
            </para>
             
            <para>
            Although you can specify encrypted EBS volumes in this block device mapping for your
            Spot Instances, these volumes are not encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Indicates whether the instance is optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal EBS I/O performance. This optimization isn't available with all instance types.
            Additional usage charges apply when using an EBS Optimized instance.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.IamInstanceProfile">
            <summary>
            Gets and sets the property IamInstanceProfile. 
            <para>
            The IAM instance profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The ID of the kernel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.MonitoringEnabled">
            <summary>
            Gets and sets the property MonitoringEnabled.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            One or more network interfaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.Placement">
            <summary>
            Gets and sets the property Placement. 
            <para>
            The placement information for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The ID of the RAM disk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            One or more security group names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet in which to launch the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            The user data to make available to the instances. If you are using an AWS SDK or command
            line tool, Base64-encoding is performed for you, and you can load the text from a
            file. Otherwise, you must provide Base64-encoded text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyHostsRequest">
            <summary>
            Container for the parameters to the ModifyHosts operation.
            Modify the auto-placement setting of a Dedicated Host. When auto-placement is enabled,
            AWS will place instances that you launch with a tenancy of <code>host</code>, but
            without targeting a specific host ID, onto any available Dedicated Host in your account
            which has auto-placement enabled. When auto-placement is disabled, you need to provide
            a host ID if you want the instance to launch onto a specific host. If no host ID is
            provided, the instance will be launched onto a suitable host which has auto-placement
            enabled.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyHostsRequest.AutoPlacement">
            <summary>
            Gets and sets the property AutoPlacement. 
            <para>
            Specify whether to enable or disable auto-placement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyHostsRequest.HostIds">
            <summary>
            Gets and sets the property HostIds. 
            <para>
            The host IDs of the Dedicated Hosts you want to modify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyHostsResponse">
            <summary>
            Contains the output of ModifyHosts.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyHostsResponse.Successful">
            <summary>
            Gets and sets the property Successful. 
            <para>
            The IDs of the Dedicated Hosts that were successfully modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyHostsResponse.Unsuccessful">
            <summary>
            Gets and sets the property Unsuccessful. 
            <para>
            The IDs of the Dedicated Hosts that could not be modified. Check whether the setting
            you requested can be used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyIdentityIdFormatRequest">
            <summary>
            Container for the parameters to the ModifyIdentityIdFormat operation.
            Modifies the ID format of a resource for a specified IAM user, IAM role, or the root
            user for an account; or all IAM users, IAM roles, and the root user for an account.
            You can specify that resources should receive longer IDs (17-character IDs) when they
            are created. 
            
             
            <para>
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
             
            <para>
            This setting applies to the principal specified in the request; it does not apply
            to the principal that makes the request. 
            </para>
             
            <para>
            Resources created with longer IDs are visible to all IAM roles and users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyIdentityIdFormatRequest.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify
            <code>all</code> to modify the ID format for all IAM users, IAM roles, and the root
            user of the account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyIdentityIdFormatRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code>
            | <code>volume</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyIdentityIdFormatRequest.UseLongIds">
            <summary>
            Gets and sets the property UseLongIds. 
            <para>
            Indicates whether the resource should use longer IDs (17-character IDs)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyIdentityIdFormatResponse">
            <summary>
            This is the response object from the ModifyIdentityIdFormat operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyIdFormatRequest">
            <summary>
            Container for the parameters to the ModifyIdFormat operation.
            Modifies the ID format for the specified resource on a per-region basis. You can specify
            that resources should receive longer IDs (17-character IDs) when they are created.
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>.
            
             
            <para>
            This setting applies to the IAM user who makes the request; it does not apply to the
            entire AWS account. By default, an IAM user defaults to the same settings as the root
            user. If you're using this action as the root user, then these settings apply to the
            entire account, unless an IAM user explicitly overrides these settings for themselves.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
             
            <para>
            Resources created with longer IDs are visible to all IAM roles and users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyIdFormatRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code>
            | <code>volume</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyIdFormatRequest.UseLongIds">
            <summary>
            Gets and sets the property UseLongIds. 
            <para>
            Indicate whether the resource should use longer IDs (17-character IDs).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyIdFormatResponse">
            <summary>
            This is the response object from the ModifyIdFormat operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyImageAttributeRequest">
            <summary>
            Container for the parameters to the ModifyImageAttribute operation.
            Modifies the specified attribute of the specified AMI. You can specify only one attribute
            at a time.
            
             <note> 
            <para>
            AWS Marketplace product codes cannot be modified. Images with an AWS Marketplace product
            code cannot be made public.
            </para>
             </note> <note> 
            <para>
            The SriovNetSupport enhanced networking attribute cannot be changed using this command.
            Instead, enable SriovNetSupport on an instance and create an AMI from the instance.
            This will result in an image with SriovNetSupport enabled.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifyImageAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifyImageAttributeRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates ModifyImageAttributeRequest with the parameterized properties
            </summary>
            <param name="imageId">The ID of the AMI.</param>
            <param name="attribute">The name of the attribute to modify.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The name of the attribute to modify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.LaunchPermission">
            <summary>
            Gets and sets the property LaunchPermission. 
            <para>
            A launch permission modification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.OperationType">
            <summary>
            Gets and sets the property OperationType. 
            <para>
            The operation type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            One or more product codes. After you add a product code to an AMI, it can't be removed.
            This is only valid when modifying the <code>productCodes</code> attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.UserGroups">
            <summary>
            Gets and sets the property UserGroups. 
            <para>
            One or more user groups. This is only valid when modifying the <code>launchPermission</code>
            attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.UserIds">
            <summary>
            Gets and sets the property UserIds. 
            <para>
            One or more AWS account IDs. This is only valid when modifying the <code>launchPermission</code>
            attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the attribute being modified. This is only valid when modifying the <code>description</code>
            attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyImageAttributeResponse">
            <summary>
            This is the response object from the ModifyImageAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyInstanceAttributeRequest">
            <summary>
            Container for the parameters to the ModifyInstanceAttribute operation.
            Modifies the specified attribute of the specified instance. You can specify only one
            attribute at a time.
            
             
            <para>
            To modify some attributes, the instance must be stopped. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html">Modifying
            Attributes of a Stopped Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifyInstanceAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifyInstanceAttributeRequest.#ctor(System.String,Amazon.EC2.InstanceAttributeName)">
            <summary>
            Instantiates ModifyInstanceAttributeRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance.</param>
            <param name="attribute">The name of the attribute.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The name of the attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            Modifies the <code>DeleteOnTermination</code> attribute for volumes that are currently
            attached. The volume must be owned by the caller. If no value is specified for <code>DeleteOnTermination</code>,
            the default is <code>true</code> and the volume is deleted when the instance is terminated.
            </para>
             
            <para>
            To add instance store volumes to an Amazon EBS-backed instance, you must add them
            when you launch the instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM">Updating
            the Block Device Mapping when Launching an Instance</a> in the <i>Amazon Elastic Compute
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.DisableApiTermination">
            <summary>
            Gets and sets the property DisableApiTermination. 
            <para>
            If the value is <code>true</code>, you can't terminate the instance using the Amazon
            EC2 console, CLI, or API; otherwise, you can. You cannot use this paramater for Spot
            Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Specifies whether the instance is optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal EBS I/O performance. This optimization isn't available with all instance types.
            Additional usage charges apply when using an EBS Optimized instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.EnaSupport">
            <summary>
            Gets and sets the property EnaSupport. 
            <para>
            Set to <code>true</code> to enable enhanced networking with ENA for the instance.
            </para>
             
            <para>
            This option is supported only for HVM instances. Specifying this option with a PV
            instance can make it unreachable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            [EC2-VPC] Changes the security groups of the instance. You must specify at least one
            security group, even if it's just the default security group for the VPC. You must
            specify the security group ID, not the security group name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.InstanceInitiatedShutdownBehavior">
            <summary>
            Gets and sets the property InstanceInitiatedShutdownBehavior. 
            <para>
            Specifies whether an instance stops or terminates when you initiate shutdown from
            the instance (using the operating system command for system shutdown).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            Changes the instance type to the specified value. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a>. If the instance type is not valid, the error returned is <code>InvalidInstanceAttributeValue</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.Kernel">
            <summary>
            Gets and sets the property Kernel. 
            <para>
            Changes the instance's kernel to the specified value. We recommend that you use PV-GRUB
            instead of kernels and RAM disks. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.Ramdisk">
            <summary>
            Gets and sets the property Ramdisk. 
            <para>
            Changes the instance's RAM disk to the specified value. We recommend that you use
            PV-GRUB instead of kernels and RAM disks. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Specifies whether source/destination checking is enabled. A value of <code>true</code>
            means that checking is enabled, and <code>false</code> means checking is disabled.
            This value must be <code>false</code> for a NAT instance to perform NAT.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport. 
            <para>
            Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual
            Function interface for the instance.
            </para>
             
            <para>
            There is no way to disable enhanced networking with the Intel 82599 Virtual Function
            interface at this time.
            </para>
             
            <para>
            This option is supported only for HVM instances. Specifying this option with a PV
            instance can make it unreachable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            Changes the instance's user data to the specified value. If you are using an AWS SDK
            or command line tool, Base64-encoding is performed for you, and you can load the text
            from a file. Otherwise, you must provide Base64-encoded text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            A new value for the attribute. Use only with the <code>kernel</code>, <code>ramdisk</code>,
            <code>userData</code>, <code>disableApiTermination</code>, or <code>instanceInitiatedShutdownBehavior</code>
            attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyInstanceAttributeResponse">
            <summary>
            This is the response object from the ModifyInstanceAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyInstancePlacementRequest">
            <summary>
            Container for the parameters to the ModifyInstancePlacement operation.
            Set the instance affinity value for a specific stopped instance and modify the instance
            tenancy setting.
            
             
            <para>
            Instance affinity is disabled by default. When instance affinity is <code>host</code>
            and it is not associated with a specific Dedicated Host, the next time it is launched
            it will automatically be associated with the host it lands on. This relationship will
            persist if the instance is stopped/started, or rebooted.
            </para>
             
            <para>
            You can modify the host ID associated with a stopped instance. If a stopped instance
            has a new host ID association, the instance will target that host when restarted.
            </para>
             
            <para>
            You can modify the tenancy of a stopped instance with a tenancy of <code>host</code>
            or <code>dedicated</code>.
            </para>
             
            <para>
            Affinity, hostID, and tenancy are not required parameters, but at least one of them
            must be specified in the request. Affinity and tenancy can be modified in the same
            request, but tenancy can only be modified on instances that are stopped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstancePlacementRequest.Affinity">
            <summary>
            Gets and sets the property Affinity. 
            <para>
            The new affinity setting for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstancePlacementRequest.HostId">
            <summary>
            Gets and sets the property HostId. 
            <para>
            The ID of the Dedicated Host that the instance will have affinity with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstancePlacementRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance that you are modifying.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstancePlacementRequest.Tenancy">
            <summary>
            Gets and sets the property Tenancy. 
            <para>
            The tenancy of the instance that you are modifying.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyInstancePlacementResponse">
            <summary>
            Contains the output of ModifyInstancePlacement.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstancePlacementResponse.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            Is <code>true</code> if the request succeeds, and an error otherwise.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest">
            <summary>
            Container for the parameters to the ModifyNetworkInterfaceAttribute operation.
            Modifies the specified network interface attribute. You can specify only one attribute
            at a time.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest.Attachment">
            <summary>
            Gets and sets the property Attachment. 
            <para>
            Information about the interface attachment. If modifying the 'delete on termination'
            attribute, you must specify the ID of the interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            Changes the security groups for the network interface. The new set of groups you specify
            replaces the current set. You must specify at least one group, even if it's just the
            default security group in the VPC. You must specify the ID of the security group,
            not the name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Indicates whether source/destination checking is enabled. A value of <code>true</code>
            means checking is enabled, and <code>false</code> means checking is disabled. This
            value must be <code>false</code> for a NAT instance to perform NAT. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeResponse">
            <summary>
            This is the response object from the ModifyNetworkInterfaceAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyReservedInstancesRequest">
            <summary>
            Container for the parameters to the ModifyReservedInstances operation.
            Modifies the Availability Zone, instance count, instance type, or network platform
            (EC2-Classic or EC2-VPC) of your Standard Reserved Instances. The Reserved Instances
            to be modified must be identical, except for Availability Zone, network platform,
            and instance type.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyReservedInstancesRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique, case-sensitive token you provide to ensure idempotency of your modification
            request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyReservedInstancesRequest.ReservedInstancesIds">
            <summary>
            Gets and sets the property ReservedInstancesIds. 
            <para>
            The IDs of the Reserved Instances to modify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyReservedInstancesRequest.TargetConfigurations">
            <summary>
            Gets and sets the property TargetConfigurations. 
            <para>
            The configuration settings for the Reserved Instances to modify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyReservedInstancesResponse">
            <summary>
            Contains the output of ModifyReservedInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyReservedInstancesResponse.ReservedInstancesModificationId">
            <summary>
            Gets and sets the property ReservedInstancesModificationId. 
            <para>
            The ID for the modification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifySnapshotAttributeRequest">
            <summary>
            Container for the parameters to the ModifySnapshotAttribute operation.
            Adds or removes permission settings for the specified snapshot. You may add or remove
            specified AWS account IDs from a snapshot's list of create volume permissions, but
            you cannot do both in a single API call. If you need to both add and remove account
            IDs for a snapshot, you must use multiple API calls.
            
             <note> 
            <para>
            Encrypted snapshots and snapshots with AWS Marketplace product codes cannot be made
            public. Snapshots encrypted with your default CMK cannot be shared with other accounts.
            </para>
             </note> 
            <para>
            For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing
            Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifySnapshotAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifySnapshotAttributeRequest.#ctor(System.String,Amazon.EC2.SnapshotAttributeName,Amazon.EC2.OperationType)">
            <summary>
            Instantiates ModifySnapshotAttributeRequest with the parameterized properties
            </summary>
            <param name="snapshotId">The ID of the snapshot.</param>
            <param name="attribute">The snapshot attribute to modify. <note> Only volume creation permissions may be modified at the customer level. </note></param>
            <param name="operationType">The type of operation to perform to the attribute.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The snapshot attribute to modify.
            </para>
             <note> 
            <para>
            Only volume creation permissions may be modified at the customer level.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.CreateVolumePermission">
            <summary>
            Gets and sets the property CreateVolumePermission. 
            <para>
            A JSON representation of the snapshot attribute modification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.GroupNames">
            <summary>
            Gets and sets the property GroupNames. 
            <para>
            The group to modify for the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.OperationType">
            <summary>
            Gets and sets the property OperationType. 
            <para>
            The type of operation to perform to the attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.UserIds">
            <summary>
            Gets and sets the property UserIds. 
            <para>
            The account ID to modify for the snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifySnapshotAttributeResponse">
            <summary>
            This is the response object from the ModifySnapshotAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifySpotFleetRequestRequest">
            <summary>
            Container for the parameters to the ModifySpotFleetRequest operation.
            Modifies the specified Spot fleet request.
            
             
            <para>
            While the Spot fleet request is being modified, it is in the <code>modifying</code>
            state.
            </para>
             
            <para>
            To scale up your Spot fleet, increase its target capacity. The Spot fleet launches
            the additional Spot instances according to the allocation strategy for the Spot fleet
            request. If the allocation strategy is <code>lowestPrice</code>, the Spot fleet launches
            instances using the Spot pool with the lowest price. If the allocation strategy is
            <code>diversified</code>, the Spot fleet distributes the instances across the Spot
            pools.
            </para>
             
            <para>
            To scale down your Spot fleet, decrease its target capacity. First, the Spot fleet
            cancels any open bids that exceed the new target capacity. You can request that the
            Spot fleet terminate Spot instances until the size of the fleet no longer exceeds
            the new target capacity. If the allocation strategy is <code>lowestPrice</code>, the
            Spot fleet terminates the instances with the highest price per unit. If the allocation
            strategy is <code>diversified</code>, the Spot fleet terminates instances across the
            Spot pools. Alternatively, you can request that the Spot fleet keep the fleet at its
            current size, but not replace any Spot instances that are interrupted or that you
            terminate manually.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySpotFleetRequestRequest.ExcessCapacityTerminationPolicy">
            <summary>
            Gets and sets the property ExcessCapacityTerminationPolicy. 
            <para>
            Indicates whether running Spot instances should be terminated if the target capacity
            of the Spot fleet request is decreased below the current size of the Spot fleet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySpotFleetRequestRequest.SpotFleetRequestId">
            <summary>
            Gets and sets the property SpotFleetRequestId. 
            <para>
            The ID of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySpotFleetRequestRequest.TargetCapacity">
            <summary>
            Gets and sets the property TargetCapacity. 
            <para>
            The size of the fleet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifySpotFleetRequestResponse">
            <summary>
            Contains the output of ModifySpotFleetRequest.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySpotFleetRequestResponse.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            Is <code>true</code> if the request succeeds, and an error otherwise.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifySubnetAttributeRequest">
            <summary>
            Container for the parameters to the ModifySubnetAttribute operation.
            Modifies a subnet attribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySubnetAttributeRequest.MapPublicIpOnLaunch">
            <summary>
            Gets and sets the property MapPublicIpOnLaunch. 
            <para>
            Specify <code>true</code> to indicate that instances launched into the specified subnet
            should be assigned public IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySubnetAttributeRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifySubnetAttributeResponse">
            <summary>
            This is the response object from the ModifySubnetAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVolumeAttributeRequest">
            <summary>
            Container for the parameters to the ModifyVolumeAttribute operation.
            Modifies a volume attribute.
            
             
            <para>
            By default, all I/O operations for the volume are suspended when the data on the volume
            is determined to be potentially inconsistent, to prevent undetectable, latent data
            corruption. The I/O access to the volume can be resumed by first enabling I/O access
            and then checking the data consistency on your volume.
            </para>
             
            <para>
            You can change the default behavior to resume I/O operations. We recommend that you
            change this only for boot volumes or for volumes that are stateless or disposable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVolumeAttributeRequest.AutoEnableIO">
            <summary>
            Gets and sets the property AutoEnableIO. 
            <para>
            Indicates whether the volume should be auto-enabled for I/O operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVolumeAttributeRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVolumeAttributeResponse">
            <summary>
            This is the response object from the ModifyVolumeAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVpcAttributeRequest">
            <summary>
            Container for the parameters to the ModifyVpcAttribute operation.
            Modifies the specified attribute of the specified VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcAttributeRequest.EnableDnsHostnames">
            <summary>
            Gets and sets the property EnableDnsHostnames. 
            <para>
            Indicates whether the instances launched in the VPC get DNS hostnames. If enabled,
            instances in the VPC get DNS hostnames; otherwise, they do not.
            </para>
             
            <para>
            You cannot modify the DNS resolution and DNS hostnames attributes in the same request.
            Use separate requests for each attribute. You can only enable DNS hostnames if you've
            enabled DNS support.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcAttributeRequest.EnableDnsSupport">
            <summary>
            Gets and sets the property EnableDnsSupport. 
            <para>
            Indicates whether the DNS resolution is supported for the VPC. If enabled, queries
            to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved
            IP address at the base of the VPC network range "plus two" will succeed. If disabled,
            the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP
            addresses is not enabled.
            </para>
             
            <para>
            You cannot modify the DNS resolution and DNS hostnames attributes in the same request.
            Use separate requests for each attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcAttributeRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVpcAttributeResponse">
            <summary>
            This is the response object from the ModifyVpcAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVpcEndpointRequest">
            <summary>
            Container for the parameters to the ModifyVpcEndpoint operation.
            Modifies attributes of a specified VPC endpoint. You can modify the policy associated
            with the endpoint, and you can add and remove route tables associated with the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcEndpointRequest.AddRouteTableIds">
            <summary>
            Gets and sets the property AddRouteTableIds. 
            <para>
            One or more route tables IDs to associate with the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcEndpointRequest.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            A policy document to attach to the endpoint. The policy must be in valid JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcEndpointRequest.RemoveRouteTableIds">
            <summary>
            Gets and sets the property RemoveRouteTableIds. 
            <para>
            One or more route table IDs to disassociate from the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcEndpointRequest.ResetPolicy">
            <summary>
            Gets and sets the property ResetPolicy. 
            <para>
            Specify <code>true</code> to reset the policy document to the default policy. The
            default policy allows access to the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcEndpointRequest.VpcEndpointId">
            <summary>
            Gets and sets the property VpcEndpointId. 
            <para>
            The ID of the endpoint.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVpcEndpointResponse">
            <summary>
            Contains the output of ModifyVpcEndpoint.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsRequest">
            <summary>
            Container for the parameters to the ModifyVpcPeeringConnectionOptions operation.
            Modifies the VPC peering connection options on one side of a VPC peering connection.
            You can do the following:
            
             <ul> <li> 
            <para>
            Enable/disable communication over the peering connection between an EC2-Classic instance
            that's linked to your VPC (using ClassicLink) and instances in the peer VPC.
            </para>
             </li> <li> 
            <para>
            Enable/disable communication over the peering connection between instances in your
            VPC and an EC2-Classic instance that's linked to the peer VPC.
            </para>
             </li> <li> 
            <para>
            Enable/disable a local VPC to resolve public DNS hostnames to private IP addresses
            when queried from instances in the peer VPC.
            </para>
             </li> </ul> 
            <para>
            If the peered VPCs are in different accounts, each owner must initiate a separate
            request to modify the peering connection options, depending on whether their VPC was
            the requester or accepter for the VPC peering connection. If the peered VPCs are in
            the same account, you can modify the requester and accepter options in the same request.
            To confirm which VPC is the accepter and requester for a VPC peering connection, use
            the <a>DescribeVpcPeeringConnections</a> command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsRequest.AccepterPeeringConnectionOptions">
            <summary>
            Gets and sets the property AccepterPeeringConnectionOptions. 
            <para>
            The VPC peering connection options for the accepter VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsRequest.RequesterPeeringConnectionOptions">
            <summary>
            Gets and sets the property RequesterPeeringConnectionOptions. 
            <para>
            The VPC peering connection options for the requester VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsRequest.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsResponse">
            <summary>
            This is the response object from the ModifyVpcPeeringConnectionOptions operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsResponse.AccepterPeeringConnectionOptions">
            <summary>
            Gets and sets the property AccepterPeeringConnectionOptions. 
            <para>
            Information about the VPC peering connection options for the accepter VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsResponse.RequesterPeeringConnectionOptions">
            <summary>
            Gets and sets the property RequesterPeeringConnectionOptions. 
            <para>
            Information about the VPC peering connection options for the requester VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Monitoring">
            <summary>
            Describes the monitoring for the instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Monitoring.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Indicates whether monitoring is enabled for the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.MonitorInstancesRequest">
            <summary>
            Container for the parameters to the MonitorInstances operation.
            Enables monitoring for a running instance. For more information about monitoring instances,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring
            Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.MonitorInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.MonitorInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates MonitorInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.MonitorInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.MonitorInstancesResponse">
            <summary>
            Contains the output of MonitorInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.MonitorInstancesResponse.InstanceMonitorings">
            <summary>
            Gets and sets the property InstanceMonitorings. 
            <para>
            Monitoring information for one or more instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.MoveAddressToVpcRequest">
            <summary>
            Container for the parameters to the MoveAddressToVpc operation.
            Moves an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform.
            The Elastic IP address must be allocated to your account for more than 24 hours, and
            it must not be associated with an instance. After the Elastic IP address is moved,
            it is no longer available for use in the EC2-Classic platform, unless you move it
            back using the <a>RestoreAddressToClassic</a> request. You cannot move an Elastic
            IP address that was originally allocated for use in the EC2-VPC platform to the EC2-Classic
            platform.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.MoveAddressToVpcRequest.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.MoveAddressToVpcResponse">
            <summary>
            Contains the output of MoveAddressToVpc.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.MoveAddressToVpcResponse.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            The allocation ID for the Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.MoveAddressToVpcResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the move of the IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.MovingAddressStatus">
            <summary>
            Describes the status of a moving Elastic IP address.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.MovingAddressStatus.MoveStatus">
            <summary>
            Gets and sets the property MoveStatus. 
            <para>
            The status of the Elastic IP address that's being moved to the EC2-VPC platform, or
            restored to the EC2-Classic platform.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.MovingAddressStatus.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NatGateway">
            <summary>
            Describes a NAT gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGateway.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            The date and time the NAT gateway was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGateway.DeleteTime">
            <summary>
            Gets and sets the property DeleteTime. 
            <para>
            The date and time the NAT gateway was deleted, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGateway.FailureCode">
            <summary>
            Gets and sets the property FailureCode. 
            <para>
            If the NAT gateway could not be created, specifies the error code for the failure.
            (<code>InsufficientFreeAddressesInSubnet</code> | <code>Gateway.NotAttached</code>
            | <code>InvalidAllocationID.NotFound</code> | <code>Resource.AlreadyAssociated</code>
            | <code>InternalError</code> | <code>InvalidSubnetID.NotFound</code>)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGateway.FailureMessage">
            <summary>
            Gets and sets the property FailureMessage. 
            <para>
            If the NAT gateway could not be created, specifies the error message for the failure,
            that corresponds to the error code.
            </para>
             <ul> <li> 
            <para>
            For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free addresses to
            create this NAT gateway"
            </para>
             </li> <li> 
            <para>
            For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway attached"
            </para>
             </li> <li> 
            <para>
            For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx could not
            be associated with this NAT gateway"
            </para>
             </li> <li> 
            <para>
            For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx is already associated"
            </para>
             </li> <li> 
            <para>
            For InternalError: "Network interface eni-xxxxxxxx, created and used internally by
            this NAT gateway is in an invalid state. Please try again."
            </para>
             </li> <li> 
            <para>
            For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx does not exist
            or could not be found."
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGateway.NatGatewayAddresses">
            <summary>
            Gets and sets the property NatGatewayAddresses. 
            <para>
            Information about the IP addresses and network interface associated with the NAT gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGateway.NatGatewayId">
            <summary>
            Gets and sets the property NatGatewayId. 
            <para>
            The ID of the NAT gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGateway.ProvisionedBandwidth">
            <summary>
            Gets and sets the property ProvisionedBandwidth. 
            <para>
            Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented
            limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support
            Center</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGateway.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the NAT gateway.
            </para>
             <ul> <li> 
            <para>
             <code>pending</code>: The NAT gateway is being created and is not ready to process
            traffic.
            </para>
             </li> <li> 
            <para>
             <code>failed</code>: The NAT gateway could not be created. Check the <code>failureCode</code>
            and <code>failureMessage</code> fields for the reason.
            </para>
             </li> <li> 
            <para>
             <code>available</code>: The NAT gateway is able to process traffic. This status remains
            until you delete the NAT gateway, and does not indicate the health of the NAT gateway.
            </para>
             </li> <li> 
            <para>
             <code>deleting</code>: The NAT gateway is in the process of being terminated and
            may still be processing traffic.
            </para>
             </li> <li> 
            <para>
             <code>deleted</code>: The NAT gateway has been terminated and is no longer processing
            traffic.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGateway.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet in which the NAT gateway is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGateway.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC in which the NAT gateway is located.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NatGatewayAddress">
            <summary>
            Describes the IP addresses and network interface associated with a NAT gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGatewayAddress.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            The allocation ID of the Elastic IP address that's associated with the NAT gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGatewayAddress.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface associated with the NAT gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGatewayAddress.PrivateIp">
            <summary>
            Gets and sets the property PrivateIp. 
            <para>
            The private IP address associated with the Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NatGatewayAddress.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Elastic IP address associated with the NAT gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkAcl">
            <summary>
            Describes a network ACL.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.Associations">
            <summary>
            Gets and sets the property Associations. 
            <para>
            Any associations between the network ACL and one or more subnets
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            One or more entries (rules) in the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.IsDefault">
            <summary>
            Gets and sets the property IsDefault. 
            <para>
            Indicates whether this is the default network ACL for the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC for the network ACL.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkAclAssociation">
            <summary>
            Describes an association between a network ACL and a subnet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclAssociation.NetworkAclAssociationId">
            <summary>
            Gets and sets the property NetworkAclAssociationId. 
            <para>
            The ID of the association between a network ACL and a subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclAssociation.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclAssociation.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkAclEntry">
            <summary>
            Describes an entry in a network ACL.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The network range to allow or deny, in CIDR notation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.Egress">
            <summary>
            Gets and sets the property Egress. 
            <para>
            Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.IcmpTypeCode">
            <summary>
            Gets and sets the property IcmpTypeCode. 
            <para>
            ICMP protocol: The ICMP type and code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.PortRange">
            <summary>
            Gets and sets the property PortRange. 
            <para>
            TCP or UDP protocols: The range of ports the rule applies to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol. A value of <code>-1</code> means all protocols.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.RuleAction">
            <summary>
            Gets and sets the property RuleAction. 
            <para>
            Indicates whether to allow or deny the traffic that matches the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.RuleNumber">
            <summary>
            Gets and sets the property RuleNumber. 
            <para>
            The rule number for the entry. ACL entries are processed in ascending order by rule
            number.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkInterface">
            <summary>
            Describes a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.Association">
            <summary>
            Gets and sets the property Association. 
            <para>
            The association information for an Elastic IP associated with the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.Attachment">
            <summary>
            Gets and sets the property Attachment. 
            <para>
            The network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            Any security groups for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.InterfaceType">
            <summary>
            Gets and sets the property InterfaceType. 
            <para>
            The type of interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.MacAddress">
            <summary>
            Gets and sets the property MacAddress. 
            <para>
            The MAC address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the owner of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.PrivateDnsName">
            <summary>
            Gets and sets the property PrivateDnsName. 
            <para>
            The private DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The IP address of the network interface within the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            The private IP addresses associated with the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.RequesterId">
            <summary>
            Gets and sets the property RequesterId. 
            <para>
            The ID of the entity that launched the instance on your behalf (for example, AWS Management
            Console or Auto Scaling).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.RequesterManaged">
            <summary>
            Gets and sets the property RequesterManaged. 
            <para>
            Indicates whether the network interface is being managed by AWS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Indicates whether traffic to or from the instance is validated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.TagSet">
            <summary>
            Gets and sets the property TagSet. 
            <para>
            Any tags assigned to the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkInterfaceAssociation">
            <summary>
            Describes association information for an Elastic IP address.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAssociation.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            The allocation ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAssociation.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The association ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAssociation.IpOwnerId">
            <summary>
            Gets and sets the property IpOwnerId. 
            <para>
            The ID of the Elastic IP address owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAssociation.PublicDnsName">
            <summary>
            Gets and sets the property PublicDnsName. 
            <para>
            The public DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAssociation.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The address of the Elastic IP address bound to the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkInterfaceAttachment">
            <summary>
            Describes a network interface attachment.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The ID of the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.AttachTime">
            <summary>
            Gets and sets the property AttachTime. 
            <para>
            The timestamp indicating when the attachment initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the network interface is deleted when the instance is terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.DeviceIndex">
            <summary>
            Gets and sets the property DeviceIndex. 
            <para>
            The device index of the network interface attachment on the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.InstanceOwnerId">
            <summary>
            Gets and sets the property InstanceOwnerId. 
            <para>
            The AWS account ID of the owner of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The attachment state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkInterfaceAttachmentChanges">
            <summary>
            Describes an attachment change.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachmentChanges.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The ID of the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachmentChanges.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the network interface is deleted when the instance is terminated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkInterfacePrivateIpAddress">
            <summary>
            Describes the private IP address of a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfacePrivateIpAddress.Association">
            <summary>
            Gets and sets the property Association. 
            <para>
            The association information for an Elastic IP address associated with the network
            interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfacePrivateIpAddress.Primary">
            <summary>
            Gets and sets the property Primary. 
            <para>
            Indicates whether this IP address is the primary private IP address of the network
            interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfacePrivateIpAddress.PrivateDnsName">
            <summary>
            Gets and sets the property PrivateDnsName. 
            <para>
            The private DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfacePrivateIpAddress.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PeeringConnectionOptions">
            <summary>
            Describes the VPC peering connection options.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PeeringConnectionOptions.AllowDnsResolutionFromRemoteVpc">
            <summary>
            Gets and sets the property AllowDnsResolutionFromRemoteVpc. 
            <para>
            If true, enables a local VPC to resolve public DNS hostnames to private IP addresses
            when queried from instances in the peer VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PeeringConnectionOptions.AllowEgressFromLocalClassicLinkToRemoteVpc">
            <summary>
            Gets and sets the property AllowEgressFromLocalClassicLinkToRemoteVpc. 
            <para>
            If true, enables outbound communication from an EC2-Classic instance that's linked
            to a local VPC via ClassicLink to instances in a peer VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PeeringConnectionOptions.AllowEgressFromLocalVpcToRemoteClassicLink">
            <summary>
            Gets and sets the property AllowEgressFromLocalVpcToRemoteClassicLink. 
            <para>
            If true, enables outbound communication from instances in a local VPC to an EC2-Classic
            instance that's linked to a peer VPC via ClassicLink.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PeeringConnectionOptionsRequest">
            <summary>
            The VPC peering connection options.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PeeringConnectionOptionsRequest.AllowDnsResolutionFromRemoteVpc">
            <summary>
            Gets and sets the property AllowDnsResolutionFromRemoteVpc. 
            <para>
            If true, enables a local VPC to resolve public DNS hostnames to private IP addresses
            when queried from instances in the peer VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PeeringConnectionOptionsRequest.AllowEgressFromLocalClassicLinkToRemoteVpc">
            <summary>
            Gets and sets the property AllowEgressFromLocalClassicLinkToRemoteVpc. 
            <para>
            If true, enables outbound communication from an EC2-Classic instance that's linked
            to a local VPC via ClassicLink to instances in a peer VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PeeringConnectionOptionsRequest.AllowEgressFromLocalVpcToRemoteClassicLink">
            <summary>
            Gets and sets the property AllowEgressFromLocalVpcToRemoteClassicLink. 
            <para>
            If true, enables outbound communication from instances in a local VPC to an EC2-Classic
            instance that's linked to a peer VPC via ClassicLink.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Placement">
            <summary>
            Describes the placement for the instance.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Placement.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Placement.#ctor(System.String)">
            <summary>
            Instantiates Placement with the parameterized properties
            </summary>
            <param name="availabilityZone">The Availability Zone of the instance.</param>
        </member>
        <member name="P:Amazon.EC2.Model.Placement.Affinity">
            <summary>
            Gets and sets the property Affinity. 
            <para>
            The affinity setting for the instance on the Dedicated Host. This parameter is not
            supported for the <a>ImportInstance</a> command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Placement.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Placement.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the placement group the instance is in (for cluster compute instances).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Placement.HostId">
            <summary>
            Gets and sets the property HostId. 
            <para>
            The ID of the Dedicted host on which the instance resides. This parameter is not support
            for the <a>ImportInstance</a> command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Placement.Tenancy">
            <summary>
            Gets and sets the property Tenancy. 
            <para>
            The tenancy of the instance (if the instance is running in a VPC). An instance with
            a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code>
            tenancy is not supported for the <a>ImportInstance</a> command.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PlacementGroup">
            <summary>
            Describes a placement group.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.PlacementGroup.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.PlacementGroup.#ctor(System.String)">
            <summary>
            Instantiates PlacementGroup with the parameterized properties
            </summary>
            <param name="groupName">The name of the placement group.</param>
        </member>
        <member name="P:Amazon.EC2.Model.PlacementGroup.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the placement group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PlacementGroup.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the placement group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PlacementGroup.Strategy">
            <summary>
            Gets and sets the property Strategy. 
            <para>
            The placement strategy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PortRange">
            <summary>
            Describes a range of ports.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PortRange.From">
            <summary>
            Gets and sets the property From. 
            <para>
            The first port in the range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PortRange.To">
            <summary>
            Gets and sets the property To. 
            <para>
            The last port in the range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PrefixList">
            <summary>
            Describes prefixes for AWS services.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PrefixList.Cidrs">
            <summary>
            Gets and sets the property Cidrs. 
            <para>
            The IP address range of the AWS service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PrefixList.PrefixListId">
            <summary>
            Gets and sets the property PrefixListId. 
            <para>
            The ID of the prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PrefixList.PrefixListName">
            <summary>
            Gets and sets the property PrefixListName. 
            <para>
            The name of the prefix.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PrefixListId">
            <summary>
            The ID of the prefix.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PrefixListId.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the prefix.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PriceSchedule">
            <summary>
            Describes the price for a Reserved Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceSchedule.Active">
            <summary>
            Gets and sets the property Active. 
            <para>
            The current price schedule, as determined by the term remaining for the Reserved Instance
            in the listing.
            </para>
             
            <para>
            A specific price schedule is always in effect, but only one price schedule can be
            active at any time. Take, for example, a Reserved Instance listing that has five months
            remaining in its term. When you specify price schedules for five months and two months,
            this means that schedule 1, covering the first three months of the remaining term,
            will be active during months 5, 4, and 3. Then schedule 2, covering the last two months
            of the term, will be active for months 2 and 1.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceSchedule.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency for transacting the Reserved Instance resale. At this time, the only
            supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceSchedule.Price">
            <summary>
            Gets and sets the property Price. 
            <para>
            The fixed price for the term.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceSchedule.Term">
            <summary>
            Gets and sets the property Term. 
            <para>
            The number of months remaining in the reservation. For example, 2 is the second to
            the last month before the capacity reservation expires.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PriceScheduleSpecification">
            <summary>
            Describes the price for a Reserved Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceScheduleSpecification.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency for transacting the Reserved Instance resale. At this time, the only
            supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceScheduleSpecification.Price">
            <summary>
            Gets and sets the property Price. 
            <para>
            The fixed price for the term.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceScheduleSpecification.Term">
            <summary>
            Gets and sets the property Term. 
            <para>
            The number of months remaining in the reservation. For example, 2 is the second to
            the last month before the capacity reservation expires.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PricingDetail">
            <summary>
            Describes a Reserved Instance offering.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PricingDetail.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of reservations available for the price.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PricingDetail.Price">
            <summary>
            Gets and sets the property Price. 
            <para>
            The price per instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PrivateIpAddressSpecification">
            <summary>
            Describes a secondary private IP address for a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PrivateIpAddressSpecification.Primary">
            <summary>
            Gets and sets the property Primary. 
            <para>
            Indicates whether the private IP address is the primary private IP address. Only one
            IP address can be designated as primary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PrivateIpAddressSpecification.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP addresses.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ProductCode">
            <summary>
            Describes a product code.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ProductCode.ProductCodeId">
            <summary>
            Gets and sets the property ProductCodeId. 
            <para>
            The product code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ProductCode.ProductCodeType">
            <summary>
            Gets and sets the property ProductCodeType. 
            <para>
            The type of product code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PropagatingVgw">
            <summary>
            Describes a virtual private gateway propagating route.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PropagatingVgw.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of the virtual private gateway (VGW).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ProvisionedBandwidth">
            <summary>
            Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented
            limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support
            Center</a>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ProvisionedBandwidth.Provisioned">
            <summary>
            Gets and sets the property Provisioned. 
            <para>
            Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented
            limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support
            Center</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ProvisionedBandwidth.ProvisionTime">
            <summary>
            Gets and sets the property ProvisionTime. 
            <para>
            Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented
            limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support
            Center</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ProvisionedBandwidth.Requested">
            <summary>
            Gets and sets the property Requested. 
            <para>
            Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented
            limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support
            Center</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ProvisionedBandwidth.RequestTime">
            <summary>
            Gets and sets the property RequestTime. 
            <para>
            Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented
            limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support
            Center</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ProvisionedBandwidth.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented
            limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support
            Center</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Purchase">
            <summary>
            Describes the result of the purchase.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Purchase.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency in which the <code>UpfrontPrice</code> and <code>HourlyPrice</code> amounts
            are specified. At this time, the only supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Purchase.Duration">
            <summary>
            Gets and sets the property Duration. 
            <para>
            The duration of the reservation's term in seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Purchase.HostIdSet">
            <summary>
            Gets and sets the property HostIdSet. 
            <para>
            The IDs of the Dedicated Hosts associated with the reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Purchase.HostReservationId">
            <summary>
            Gets and sets the property HostReservationId. 
            <para>
            The ID of the reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Purchase.HourlyPrice">
            <summary>
            Gets and sets the property HourlyPrice. 
            <para>
            The hourly price of the reservation per hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Purchase.InstanceFamily">
            <summary>
            Gets and sets the property InstanceFamily. 
            <para>
            The instance family on the Dedicated Host that the reservation can be associated with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Purchase.PaymentOption">
            <summary>
            Gets and sets the property PaymentOption. 
            <para>
            The payment option for the reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Purchase.UpfrontPrice">
            <summary>
            Gets and sets the property UpfrontPrice. 
            <para>
            The upfront price of the reservation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PurchaseHostReservationRequest">
            <summary>
            Container for the parameters to the PurchaseHostReservation operation.
            Purchase a reservation with configurations that match those of your Dedicated Host.
            You must have active Dedicated Hosts in your account before you purchase a reservation.
            This action results in the specified reservation being purchased and charged to your
            account.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseHostReservationRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure idempotency of the request.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseHostReservationRequest.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency in which the <code>totalUpfrontPrice</code>, <code>LimitPrice</code>,
            and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported
            currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseHostReservationRequest.HostIdSet">
            <summary>
            Gets and sets the property HostIdSet. 
            <para>
            The ID/s of the Dedicated Host/s that the reservation will be associated with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseHostReservationRequest.LimitPrice">
            <summary>
            Gets and sets the property LimitPrice. 
            <para>
            The specified limit is checked against the total upfront cost of the reservation (calculated
            as the offering's upfront cost multiplied by the host count). If the total upfront
            cost is greater than the specified price limit, the request will fail. This is used
            to ensure that the purchase does not exceed the expected upfront cost of the purchase.
            At this time, the only supported currency is <code>USD</code>. For example, to indicate
            a limit price of USD 100, specify 100.00.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseHostReservationRequest.OfferingId">
            <summary>
            Gets and sets the property OfferingId. 
            <para>
            The ID of the offering.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PurchaseHostReservationResponse">
            <summary>
            This is the response object from the PurchaseHostReservation operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseHostReservationResponse.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure idempotency of the request.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseHostReservationResponse.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code>
            amounts are specified. At this time, the only supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseHostReservationResponse.Purchase">
            <summary>
            Gets and sets the property Purchase. 
            <para>
            Describes the details of the purchase.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseHostReservationResponse.TotalHourlyPrice">
            <summary>
            Gets and sets the property TotalHourlyPrice. 
            <para>
            The total hourly price of the reservation calculated per hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseHostReservationResponse.TotalUpfrontPrice">
            <summary>
            Gets and sets the property TotalUpfrontPrice. 
            <para>
            The total amount that will be charged to your account when you purchase the reservation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PurchaseRequest">
            <summary>
            Describes a request to purchase Scheduled Instances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseRequest.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseRequest.PurchaseToken">
            <summary>
            Gets and sets the property PurchaseToken. 
            <para>
            The purchase token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest">
            <summary>
            Container for the parameters to the PurchaseReservedInstancesOffering operation.
            Purchases a Reserved Instance for use with your account. With Reserved Instances,
            you pay a lower hourly rate compared to On-Demand instance pricing.
            
             
            <para>
            Use <a>DescribeReservedInstancesOfferings</a> to get a list of Reserved Instance offerings
            that match your specifications. After you've purchased a Reserved Instance, you can
            check for your new Reserved Instance with <a>DescribeReservedInstances</a>.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest.#ctor(System.String,System.Int32)">
            <summary>
            Instantiates PurchaseReservedInstancesOfferingRequest with the parameterized properties
            </summary>
            <param name="reservedInstancesOfferingId">The ID of the Reserved Instance offering to purchase.</param>
            <param name="instanceCount">The number of Reserved Instances to purchase.</param>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of Reserved Instances to purchase.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest.LimitPrice">
            <summary>
            Gets and sets the property LimitPrice. 
            <para>
            Specified for Reserved Instance Marketplace offerings to limit the total order and
            ensure that the Reserved Instances are not purchased at unexpected prices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest.ReservedInstancesOfferingId">
            <summary>
            Gets and sets the property ReservedInstancesOfferingId. 
            <para>
            The ID of the Reserved Instance offering to purchase.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PurchaseReservedInstancesOfferingResponse">
            <summary>
            Contains the output of PurchaseReservedInstancesOffering.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseReservedInstancesOfferingResponse.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            The IDs of the purchased Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PurchaseScheduledInstancesRequest">
            <summary>
            Container for the parameters to the PurchaseScheduledInstances operation.
            Purchases one or more Scheduled Instances with the specified schedule.
            
             
            <para>
            Scheduled Instances enable you to purchase Amazon EC2 compute capacity by the hour
            for a one-year term. Before you can purchase a Scheduled Instance, you must call <a>DescribeScheduledInstanceAvailability</a>
            to check for available schedules and obtain a purchase token. After you purchase a
            Scheduled Instance, you must call <a>RunScheduledInstances</a> during each scheduled
            time period.
            </para>
             
            <para>
            After you purchase a Scheduled Instance, you can't cancel, modify, or resell your
            purchase.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseScheduledInstancesRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that ensures the idempotency of the request. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseScheduledInstancesRequest.PurchaseRequests">
            <summary>
            Gets and sets the property PurchaseRequests. 
            <para>
            One or more purchase requests.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PurchaseScheduledInstancesResponse">
            <summary>
            Contains the output of PurchaseScheduledInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseScheduledInstancesResponse.ScheduledInstanceSet">
            <summary>
            Gets and sets the property ScheduledInstanceSet. 
            <para>
            Information about the Scheduled Instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RebootInstancesRequest">
            <summary>
            Container for the parameters to the RebootInstances operation.
            Requests a reboot of one or more instances. This operation is asynchronous; it only
            queues a request to reboot the specified instances. The operation succeeds if the
            instances are valid and belong to you. Requests to reboot terminated instances are
            ignored.
            
             
            <para>
            If an instance does not cleanly shut down within four minutes, Amazon EC2 performs
            a hard reboot.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Getting
            Console Output and Rebooting Instances</a> in the <i>Amazon Elastic Compute Cloud
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RebootInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RebootInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates RebootInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.RebootInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RebootInstancesResponse">
            <summary>
            This is the response object from the RebootInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RecurringCharge">
            <summary>
            Describes a recurring charge.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RecurringCharge.Amount">
            <summary>
            Gets and sets the property Amount. 
            <para>
            The amount of the recurring charge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RecurringCharge.Frequency">
            <summary>
            Gets and sets the property Frequency. 
            <para>
            The frequency of the recurring charge.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Region">
            <summary>
            Describes a region.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Region.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The region service endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Region.RegionName">
            <summary>
            Gets and sets the property RegionName. 
            <para>
            The name of the region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RegisterImageRequest">
            <summary>
            Container for the parameters to the RegisterImage operation.
            Registers an AMI. When you're creating an AMI, this is the final step you must complete
            before you can launch an instance from the AMI. For more information about creating
            AMIs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html">Creating
            Your Own AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             <note> 
            <para>
            For Amazon EBS-backed instances, <a>CreateImage</a> creates and registers the AMI
            in a single request, so you don't have to register the AMI yourself.
            </para>
             </note> 
            <para>
            You can also use <code>RegisterImage</code> to create an Amazon EBS-backed Linux AMI
            from a snapshot of a root device volume. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_LaunchingInstanceFromSnapshot.html">Launching
            an Instance from a Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             <important> 
            <para>
            Some Linux distributions, such as Red Hat Enterprise Linux (RHEL) and SUSE Linux Enterprise
            Server (SLES), use the EC2 <code>billingProduct</code> code associated with an AMI
            to verify subscription status for package updates. Creating an AMI from an EBS snapshot
            does not maintain this billing code, and subsequent instances launched from such an
            AMI will not be able to connect to package update infrastructure.
            </para>
             
            <para>
            Similarly, although you can create a Windows AMI from a snapshot, you can't successfully
            launch an instance from the AMI.
            </para>
             
            <para>
            To create Windows AMIs or to create AMIs for Linux operating systems that must retain
            AMI billing codes to work properly, see <a>CreateImage</a>.
            </para>
             </important> 
            <para>
            If needed, you can deregister an AMI at any time. Any modifications you make to an
            AMI backed by an instance store volume invalidates its registration. If you make changes
            to an image, deregister the previous image and register the new image.
            </para>
             <note> 
            <para>
            You can't register an image where a secondary (non-root) snapshot has AWS Marketplace
            product codes.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RegisterImageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RegisterImageRequest.#ctor(System.String)">
            <summary>
            Instantiates RegisterImageRequest with the parameterized properties
            </summary>
            <param name="imageLocation">The full path to your AMI manifest in Amazon S3 storage.</param>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the AMI.
            </para>
             
            <para>
            Default: For Amazon EBS-backed AMIs, <code>i386</code>. For instance store-backed
            AMIs, the architecture specified in the manifest file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            One or more block device mapping entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for your AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.EnaSupport">
            <summary>
            Gets and sets the property EnaSupport. 
            <para>
            Set to <code>true</code> to enable enhanced networking with ENA for the AMI and any
            instances that you launch from the AMI.
            </para>
             
            <para>
            This option is supported only for HVM AMIs. Specifying this option with a PV AMI can
            make instances launched from the AMI unreachable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.ImageLocation">
            <summary>
            Gets and sets the property ImageLocation. 
            <para>
            The full path to your AMI manifest in Amazon S3 storage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The ID of the kernel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A name for your AMI.
            </para>
             
            <para>
            Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]),
            spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@),
            or underscores(_)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The ID of the RAM disk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.RootDeviceName">
            <summary>
            Gets and sets the property RootDeviceName. 
            <para>
            The name of the root device (for example, <code>/dev/sda1</code>, or <code>/dev/xvda</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport. 
            <para>
            Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual
            Function interface for the AMI and any instances that you launch from the AMI.
            </para>
             
            <para>
            There is no way to disable <code>sriovNetSupport</code> at this time.
            </para>
             
            <para>
            This option is supported only for HVM AMIs. Specifying this option with a PV AMI can
            make instances launched from the AMI unreachable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.VirtualizationType">
            <summary>
            Gets and sets the property VirtualizationType. 
            <para>
            The type of virtualization.
            </para>
             
            <para>
            Default: <code>paravirtual</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RegisterImageResponse">
            <summary>
            Contains the output of RegisterImage.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageResponse.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the newly registered AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RejectVpcPeeringConnectionRequest">
            <summary>
            Container for the parameters to the RejectVpcPeeringConnection operation.
            Rejects a VPC peering connection request. The VPC peering connection must be in the
            <code>pending-acceptance</code> state. Use the <a>DescribeVpcPeeringConnections</a>
            request to view your outstanding VPC peering connection requests. To delete an active
            VPC peering connection, or to delete a VPC peering connection request that you initiated,
            use <a>DeleteVpcPeeringConnection</a>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RejectVpcPeeringConnectionRequest.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RejectVpcPeeringConnectionResponse">
            <summary>
               Returns information about the RejectVpcPeeringConnection response metadata.
               The RejectVpcPeeringConnection operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReleaseAddressRequest">
            <summary>
            Container for the parameters to the ReleaseAddress operation.
            Releases the specified Elastic IP address.
            
             
            <para>
            After releasing an Elastic IP address, it is released to the IP address pool and might
            be unavailable to you. Be sure to update your DNS records and any servers or devices
            that communicate with the address. If you attempt to release an Elastic IP address
            that you already released, you'll get an <code>AuthFailure</code> error if the address
            is already allocated to another AWS account.
            </para>
             
            <para>
            [EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates
            it from any instance that it's associated with. To disassociate an Elastic IP address
            without releasing it, use <a>DisassociateAddress</a>.
            </para>
             
            <para>
            [Nondefault VPC] You must use <a>DisassociateAddress</a> to disassociate the Elastic
            IP address before you try to release it. Otherwise, Amazon EC2 returns an error (<code>InvalidIPAddress.InUse</code>).
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ReleaseAddressRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ReleaseAddressRequest.#ctor(System.String)">
            <summary>
            Instantiates ReleaseAddressRequest with the parameterized properties
            </summary>
            <param name="publicIp">[EC2-Classic] The Elastic IP address. Required for EC2-Classic.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ReleaseAddressRequest.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            [EC2-VPC] The allocation ID. Required for EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReleaseAddressRequest.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            [EC2-Classic] The Elastic IP address. Required for EC2-Classic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReleaseAddressResponse">
            <summary>
            This is the response object from the ReleaseAddress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReleaseHostsRequest">
            <summary>
            Container for the parameters to the ReleaseHosts operation.
            When you no longer want to use an On-Demand Dedicated Host it can be released. On-Demand
            billing is stopped and the host goes into <code>released</code> state. The host ID
            of Dedicated Hosts that have been released can no longer be specified in another request,
            e.g., ModifyHosts. You must stop or terminate all instances on a host before it can
            be released.
            
             
            <para>
            When Dedicated Hosts are released, it make take some time for them to stop counting
            toward your limit and you may receive capacity errors when trying to allocate new
            Dedicated hosts. Try waiting a few minutes, and then try again.
            </para>
             
            <para>
            Released hosts will still appear in a <a>DescribeHosts</a> response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReleaseHostsRequest.HostIds">
            <summary>
            Gets and sets the property HostIds. 
            <para>
            The IDs of the Dedicated Hosts you want to release.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReleaseHostsResponse">
            <summary>
            Contains the output of ReleaseHosts.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReleaseHostsResponse.Successful">
            <summary>
            Gets and sets the property Successful. 
            <para>
            The IDs of the Dedicated Hosts that were successfully released.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReleaseHostsResponse.Unsuccessful">
            <summary>
            Gets and sets the property Unsuccessful. 
            <para>
            The IDs of the Dedicated Hosts that could not be released, including an error message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest">
            <summary>
            Container for the parameters to the ReplaceNetworkAclAssociation operation.
            Changes which network ACL a subnet is associated with. By default when you create
            a subnet, it's automatically associated with the default network ACL. For more information
            about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The ID of the current association between the original network ACL and the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the new network ACL to associate with the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceNetworkAclAssociationResponse">
            <summary>
            Contains the output of ReplaceNetworkAclAssociation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclAssociationResponse.NewAssociationId">
            <summary>
            Gets and sets the property NewAssociationId. 
            <para>
            The ID of the new association.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest">
            <summary>
            Container for the parameters to the ReplaceNetworkAclEntry operation.
            Replaces an entry (rule) in a network ACL. For more information about network ACLs,
            see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The network range to allow or deny, in CIDR notation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.Egress">
            <summary>
            Gets and sets the property Egress. 
            <para>
            Indicates whether to replace the egress rule.
            </para>
             
            <para>
            Default: If no value is specified, we replace the ingress rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.IcmpTypeCode">
            <summary>
            Gets and sets the property IcmpTypeCode. 
            <para>
            ICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP) for the protocol.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.PortRange">
            <summary>
            Gets and sets the property PortRange. 
            <para>
            TCP or UDP protocols: The range of ports the rule applies to. Required if specifying
            6 (TCP) or 17 (UDP) for the protocol.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The IP protocol. You can specify <code>all</code> or <code>-1</code> to mean all protocols.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.RuleAction">
            <summary>
            Gets and sets the property RuleAction. 
            <para>
            Indicates whether to allow or deny the traffic that matches the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.RuleNumber">
            <summary>
            Gets and sets the property RuleNumber. 
            <para>
            The rule number of the entry to replace.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceNetworkAclEntryResponse">
            <summary>
            This is the response object from the ReplaceNetworkAclEntry operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceRouteRequest">
            <summary>
            Container for the parameters to the ReplaceRoute operation.
            Replaces an existing route within a route table in a VPC. You must provide only one
            of the following: Internet gateway or virtual private gateway, NAT instance, NAT gateway,
            VPC peering connection, or network interface.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR address block used for the destination match. The value you provide must
            match the CIDR of an existing route in the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of an Internet gateway or virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of a NAT instance in your VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.NatGatewayId">
            <summary>
            Gets and sets the property NatGatewayId. 
            <para>
            The ID of a NAT gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of a network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of a VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceRouteResponse">
            <summary>
            This is the response object from the ReplaceRoute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceRouteTableAssociationRequest">
            <summary>
            Container for the parameters to the ReplaceRouteTableAssociation operation.
            Changes the route table associated with a given subnet in a VPC. After the operation
            completes, the subnet uses the routes in the new route table it's associated with.
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            
             
            <para>
            You can also use ReplaceRouteTableAssociation to change which table is the main route
            table in the VPC. You just specify the main route table's association ID and the route
            table to be the new main route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteTableAssociationRequest.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The association ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteTableAssociationRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the new route table to associate with the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceRouteTableAssociationResponse">
            <summary>
            Contains the output of ReplaceRouteTableAssociation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteTableAssociationResponse.NewAssociationId">
            <summary>
            Gets and sets the property NewAssociationId. 
            <para>
            The ID of the new association.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReportInstanceStatusRequest">
            <summary>
            Container for the parameters to the ReportInstanceStatus operation.
            Submits feedback about the status of an instance. The instance must be in the <code>running</code>
            state. If your experience with the instance differs from the instance status returned
            by <a>DescribeInstanceStatus</a>, use <a>ReportInstanceStatus</a> to report your experience
            with the instance. Amazon EC2 collects this information to improve the accuracy of
            status checks.
            
             
            <para>
            Use of this action does not change the value returned by <a>DescribeInstanceStatus</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Descriptive text about the health state of your instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The time at which the reported instance health state ended.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
            One or more instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.ReasonCodes">
            <summary>
            Gets and sets the property ReasonCodes. 
            <para>
            One or more reason codes that describes the health state of your instance.
            </para>
             <ul> <li> 
            <para>
             <code>instance-stuck-in-state</code>: My instance is stuck in a state.
            </para>
             </li> <li> 
            <para>
             <code>unresponsive</code>: My instance is unresponsive.
            </para>
             </li> <li> 
            <para>
             <code>not-accepting-credentials</code>: My instance is not accepting my credentials.
            </para>
             </li> <li> 
            <para>
             <code>password-not-available</code>: A password is not available for my instance.
            </para>
             </li> <li> 
            <para>
             <code>performance-network</code>: My instance is experiencing performance problems
            which I believe are network related.
            </para>
             </li> <li> 
            <para>
             <code>performance-instance-store</code>: My instance is experiencing performance
            problems which I believe are related to the instance stores.
            </para>
             </li> <li> 
            <para>
             <code>performance-ebs-volume</code>: My instance is experiencing performance problems
            which I believe are related to an EBS volume.
            </para>
             </li> <li> 
            <para>
             <code>performance-other</code>: My instance is experiencing performance problems.
            </para>
             </li> <li> 
            <para>
             <code>other</code>: [explain using the description parameter]
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time at which the reported instance health state began.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of all instances listed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReportInstanceStatusResponse">
            <summary>
            This is the response object from the ReportInstanceStatus operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RequestSpotFleetRequest">
            <summary>
            Container for the parameters to the RequestSpotFleet operation.
            Creates a Spot fleet request.
            
             
            <para>
            You can submit a single request that includes multiple launch specifications that
            vary by instance type, AMI, Availability Zone, or subnet.
            </para>
             
            <para>
            By default, the Spot fleet requests Spot instances in the Spot pool where the price
            per unit is the lowest. Each launch specification can include its own instance weighting
            that reflects the value of the instance type to your application workload.
            </para>
             
            <para>
            Alternatively, you can specify that the Spot fleet distribute the target capacity
            across the Spot pools included in its launch specifications. By ensuring that the
            Spot instances in your Spot fleet are in different Spot pools, you can improve the
            availability of your fleet.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html">Spot
            Fleet Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotFleetRequest.SpotFleetRequestConfig">
            <summary>
            Gets and sets the property SpotFleetRequestConfig. 
            <para>
            The configuration for the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RequestSpotFleetResponse">
            <summary>
            Contains the output of RequestSpotFleet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotFleetResponse.SpotFleetRequestId">
            <summary>
            Gets and sets the property SpotFleetRequestId. 
            <para>
            The ID of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RequestSpotInstancesRequest">
            <summary>
            Container for the parameters to the RequestSpotInstances operation.
            Creates a Spot instance request. Spot instances are instances that Amazon EC2 launches
            when the bid price that you specify exceeds the current Spot price. Amazon EC2 periodically
            sets the Spot price based on available Spot Instance capacity and current Spot instance
            requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RequestSpotInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RequestSpotInstancesRequest.#ctor(System.String)">
            <summary>
            Instantiates RequestSpotInstancesRequest with the parameterized properties
            </summary>
            <param name="spotPrice">The maximum hourly price (bid) for any Spot instance launched to fulfill the request.</param>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.AvailabilityZoneGroup">
            <summary>
            Gets and sets the property AvailabilityZoneGroup. 
            <para>
            The user-specified name for a logical grouping of bids.
            </para>
             
            <para>
            When you specify an Availability Zone group in a Spot Instance request, all Spot instances
            in the request are launched in the same Availability Zone. Instance proximity is maintained
            with this parameter, but the choice of Availability Zone is not. The group applies
            only to bids for Spot Instances of the same instance type. Any additional Spot instance
            requests that are specified with the same Availability Zone group name are launched
            in that same Availability Zone, as long as at least one instance from the group is
            still active.
            </para>
             
            <para>
            If there is no active instance running in the Availability Zone group that you specify
            for a new Spot instance request (all instances are terminated, the bid is expired,
            or the bid falls below current market), then Amazon EC2 launches the instance in any
            Availability Zone where the constraint can be met. Consequently, the subsequent set
            of Spot instances could be placed in a different zone from the original request, even
            if you specified the same Availability Zone group.
            </para>
             
            <para>
            Default: Instances are launched in any available Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.BlockDurationMinutes">
            <summary>
            Gets and sets the property BlockDurationMinutes. 
            <para>
            The required duration for the Spot instances (also known as Spot blocks), in minutes.
            This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
            </para>
             
            <para>
            The duration period starts as soon as your Spot instance receives its instance ID.
            At the end of the duration period, Amazon EC2 marks the Spot instance for termination
            and provides a Spot instance termination notice, which gives the instance a two-minute
            warning before it terminates.
            </para>
             
            <para>
            Note that you can't specify an Availability Zone group or a launch group if you specify
            a duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The maximum number of Spot instances to launch.
            </para>
             
            <para>
            Default: 1
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.LaunchGroup">
            <summary>
            Gets and sets the property LaunchGroup. 
            <para>
            The instance launch group. Launch groups are Spot instances that launch together and
            terminate together.
            </para>
             
            <para>
            Default: Instances are launched and terminated individually
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.LaunchSpecification">
            <summary>
            Gets and sets the property LaunchSpecification.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.SpotPrice">
            <summary>
            Gets and sets the property SpotPrice. 
            <para>
            The maximum hourly price (bid) for any Spot instance launched to fulfill the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The Spot instance request type.
            </para>
             
            <para>
            Default: <code>one-time</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.ValidFrom">
            <summary>
            Gets and sets the property ValidFrom. 
            <para>
            The start date of the request. If this is a one-time request, the request becomes
            active at this date and time and remains active until all instances launch, the request
            expires, or the request is canceled. If the request is persistent, the request becomes
            active at this date and time and remains active until it expires or is canceled.
            </para>
             
            <para>
            Default: The request is effective indefinitely.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.ValidUntil">
            <summary>
            Gets and sets the property ValidUntil. 
            <para>
            The end date of the request. If this is a one-time request, the request remains active
            until all instances launch, the request is canceled, or this date is reached. If the
            request is persistent, it remains active until it is canceled or this date and time
            is reached.
            </para>
             
            <para>
            Default: The request is effective indefinitely.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RequestSpotInstancesResponse">
            <summary>
            Contains the output of RequestSpotInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesResponse.SpotInstanceRequests">
            <summary>
            Gets and sets the property SpotInstanceRequests. 
            <para>
            One or more Spot instance requests.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Reservation">
            <summary>
            Describes a reservation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.GroupNames">
            <summary>
            Gets and sets the property GroupNames. 
            <para>
            One or more security group names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            [EC2-Classic only] One or more security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
            One or more instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The ID of the AWS account that owns the reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.RequesterId">
            <summary>
            Gets and sets the property RequesterId. 
            <para>
            The ID of the requester that launched the instances on your behalf (for example, AWS
            Management Console or Auto Scaling).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.ReservationId">
            <summary>
            Gets and sets the property ReservationId. 
            <para>
            The ID of the reservation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservationValue">
            <summary>
            The cost associated with the Reserved Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservationValue.HourlyPrice">
            <summary>
            Gets and sets the property HourlyPrice. 
            <para>
            The hourly rate of the reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservationValue.RemainingTotalValue">
            <summary>
            Gets and sets the property RemainingTotalValue. 
            <para>
            The balance of the total value (the sum of remainingUpfrontValue + hourlyPrice * number
            of hours remaining).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservationValue.RemainingUpfrontValue">
            <summary>
            Gets and sets the property RemainingUpfrontValue. 
            <para>
            The remaining upfront cost of the reservation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstanceLimitPrice">
            <summary>
            Describes the limit price of a Reserved Instance offering.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstanceLimitPrice.Amount">
            <summary>
            Gets and sets the property Amount. 
            <para>
            Used for Reserved Instance Marketplace offerings. Specifies the limit price on the
            total order (instanceCount * price).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstanceLimitPrice.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency in which the <code>limitPrice</code> amount is specified. At this time,
            the only supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstanceReservationValue">
            <summary>
            The total value of the Convertible Reserved Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstanceReservationValue.ReservationValue">
            <summary>
            Gets and sets the property ReservationValue. 
            <para>
            The total value of the Convertible Reserved Instance that you are exchanging.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstanceReservationValue.ReservedInstanceId">
            <summary>
            Gets and sets the property ReservedInstanceId. 
            <para>
            The ID of the Convertible Reserved Instance that you are exchanging.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstances">
            <summary>
            Describes a Reserved Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone in which the Reserved Instance can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency of the Reserved Instance. It's specified using ISO 4217 standard currency
            codes. At this time, the only supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.Duration">
            <summary>
            Gets and sets the property Duration. 
            <para>
            The duration of the Reserved Instance, in seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.End">
            <summary>
            Gets and sets the property End. 
            <para>
            The time when the Reserved Instance expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.FixedPrice">
            <summary>
            Gets and sets the property FixedPrice. 
            <para>
            The purchase price of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of reservations purchased.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.InstanceTenancy">
            <summary>
            Gets and sets the property InstanceTenancy. 
            <para>
            The tenancy of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type on which the Reserved Instance can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.OfferingClass">
            <summary>
            Gets and sets the property OfferingClass. 
            <para>
            The offering class of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.OfferingType">
            <summary>
            Gets and sets the property OfferingType. 
            <para>
            The Reserved Instance offering type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.ProductDescription">
            <summary>
            Gets and sets the property ProductDescription. 
            <para>
            The Reserved Instance product platform description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.RecurringCharges">
            <summary>
            Gets and sets the property RecurringCharges. 
            <para>
            The recurring charge tag assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            The ID of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.Scope">
            <summary>
            Gets and sets the property Scope. 
            <para>
            The scope of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.Start">
            <summary>
            Gets and sets the property Start. 
            <para>
            The date and time the Reserved Instance started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the Reserved Instance purchase.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.UsagePrice">
            <summary>
            Gets and sets the property UsagePrice. 
            <para>
            The usage price of the Reserved Instance, per hour.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesConfiguration">
            <summary>
            Describes the configuration settings for the modified Reserved Instances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesConfiguration.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the modified Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesConfiguration.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of modified Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesConfiguration.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type for the modified Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesConfiguration.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The network platform of the modified Reserved Instances, which is either EC2-Classic
            or EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesConfiguration.Scope">
            <summary>
            Gets and sets the property Scope. 
            <para>
            Whether the Reserved Instance is <code>standard</code> or <code>convertible</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesId">
            <summary>
            Describes the ID of a Reserved Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesId.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesListing">
            <summary>
            Describes a Reserved Instance listing.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique, case-sensitive key supplied by the client to ensure that the request is
            idempotent. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.CreateDate">
            <summary>
            Gets and sets the property CreateDate. 
            <para>
            The time the listing was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.InstanceCounts">
            <summary>
            Gets and sets the property InstanceCounts. 
            <para>
            The number of instances in this state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.PriceSchedules">
            <summary>
            Gets and sets the property PriceSchedules. 
            <para>
            The price of the Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            The ID of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.ReservedInstancesListingId">
            <summary>
            Gets and sets the property ReservedInstancesListingId. 
            <para>
            The ID of the Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The reason for the current status of the Reserved Instance listing. The response can
            be blank.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.UpdateDate">
            <summary>
            Gets and sets the property UpdateDate. 
            <para>
            The last modified timestamp of the listing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesModification">
            <summary>
            Describes a Reserved Instance modification.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique, case-sensitive key supplied by the client to ensure that the request is
            idempotent. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.CreateDate">
            <summary>
            Gets and sets the property CreateDate. 
            <para>
            The time when the modification request was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.EffectiveDate">
            <summary>
            Gets and sets the property EffectiveDate. 
            <para>
            The time for the modification to become effective.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.ModificationResults">
            <summary>
            Gets and sets the property ModificationResults. 
            <para>
            Contains target configurations along with their corresponding new Reserved Instance
            IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.ReservedInstancesIds">
            <summary>
            Gets and sets the property ReservedInstancesIds. 
            <para>
            The IDs of one or more Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.ReservedInstancesModificationId">
            <summary>
            Gets and sets the property ReservedInstancesModificationId. 
            <para>
            A unique ID for the Reserved Instance modification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the Reserved Instances modification request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The reason for the status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.UpdateDate">
            <summary>
            Gets and sets the property UpdateDate. 
            <para>
            The time when the modification request was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesModificationResult">
            <summary>
            Describes the modification request/s.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModificationResult.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            The ID for the Reserved Instances that were created as part of the modification request.
            This field is only available when the modification is fulfilled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModificationResult.TargetConfiguration">
            <summary>
            Gets and sets the property TargetConfiguration. 
            <para>
            The target Reserved Instances configurations supplied as part of the modification
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesOffering">
            <summary>
            Describes a Reserved Instance offering.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone in which the Reserved Instance can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency of the Reserved Instance offering you are purchasing. It's specified
            using ISO 4217 standard currency codes. At this time, the only supported currency
            is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.Duration">
            <summary>
            Gets and sets the property Duration. 
            <para>
            The duration of the Reserved Instance, in seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.FixedPrice">
            <summary>
            Gets and sets the property FixedPrice. 
            <para>
            The purchase price of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.InstanceTenancy">
            <summary>
            Gets and sets the property InstanceTenancy. 
            <para>
            The tenancy of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type on which the Reserved Instance can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.Marketplace">
            <summary>
            Gets and sets the property Marketplace. 
            <para>
            Indicates whether the offering is available through the Reserved Instance Marketplace
            (resale) or AWS. If it's a Reserved Instance Marketplace offering, this is <code>true</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.OfferingClass">
            <summary>
            Gets and sets the property OfferingClass. 
            <para>
            If <code>convertible</code> it can be exchanged for Reserved Instances of the same
            or higher monetary value, with different configurations. If <code>standard</code>,
            it is not possible to perform an exchange.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.OfferingType">
            <summary>
            Gets and sets the property OfferingType. 
            <para>
            The Reserved Instance offering type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.PricingDetails">
            <summary>
            Gets and sets the property PricingDetails. 
            <para>
            The pricing details of the Reserved Instance offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.ProductDescription">
            <summary>
            Gets and sets the property ProductDescription. 
            <para>
            The Reserved Instance product platform description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.RecurringCharges">
            <summary>
            Gets and sets the property RecurringCharges. 
            <para>
            The recurring charge tag assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.ReservedInstancesOfferingId">
            <summary>
            Gets and sets the property ReservedInstancesOfferingId. 
            <para>
            The ID of the Reserved Instance offering. This is the offering ID used in <a>GetReservedInstancesExchangeQuote</a>
            to confirm that an exchange can be made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.Scope">
            <summary>
            Gets and sets the property Scope. 
            <para>
            Whether the Reserved Instance is applied to instances in a region or an Availability
            Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.UsagePrice">
            <summary>
            Gets and sets the property UsagePrice. 
            <para>
            The usage price of the Reserved Instance, per hour.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetImageAttributeRequest">
            <summary>
            Container for the parameters to the ResetImageAttribute operation.
            Resets an attribute of an AMI to its default value.
            
             <note> 
            <para>
            The productCodes attribute can't be reset.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetImageAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetImageAttributeRequest.#ctor(System.String,Amazon.EC2.ResetImageAttributeName)">
            <summary>
            Instantiates ResetImageAttributeRequest with the parameterized properties
            </summary>
            <param name="imageId">The ID of the AMI.</param>
            <param name="attribute">The attribute to reset (currently you can only reset the launch permission attribute).</param>
        </member>
        <member name="P:Amazon.EC2.Model.ResetImageAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The attribute to reset (currently you can only reset the launch permission attribute).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetImageAttributeRequest.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetImageAttributeResponse">
            <summary>
            This is the response object from the ResetImageAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetInstanceAttributeRequest">
            <summary>
            Container for the parameters to the ResetInstanceAttribute operation.
            Resets an attribute of an instance to its default value. To reset the <code>kernel</code>
            or <code>ramdisk</code>, the instance must be in a stopped state. To reset the <code>sourceDestCheck</code>,
            the instance can be either running or stopped.
            
             
            <para>
            The <code>sourceDestCheck</code> attribute controls whether source/destination checking
            is enabled. The default value is <code>true</code>, which means checking is enabled.
            This value must be <code>false</code> for a NAT instance to perform NAT. For more
            information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetInstanceAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetInstanceAttributeRequest.#ctor(System.String,Amazon.EC2.InstanceAttributeName)">
            <summary>
            Instantiates ResetInstanceAttributeRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance.</param>
            <param name="attribute">The attribute to reset. <important> You can only reset the following attributes: <code>kernel</code> | <code>ramdisk</code> | <code>sourceDestCheck</code>. To change an instance attribute, use <a>ModifyInstanceAttribute</a>. </important></param>
        </member>
        <member name="P:Amazon.EC2.Model.ResetInstanceAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The attribute to reset.
            </para>
             <important> 
            <para>
            You can only reset the following attributes: <code>kernel</code> | <code>ramdisk</code>
            | <code>sourceDestCheck</code>. To change an instance attribute, use <a>ModifyInstanceAttribute</a>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetInstanceAttributeRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetInstanceAttributeResponse">
            <summary>
            This is the response object from the ResetInstanceAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest">
            <summary>
            Container for the parameters to the ResetNetworkInterfaceAttribute operation.
            Resets a network interface attribute. You can specify only one attribute at a time.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            The source/destination checking attribute. Resets the value to <code>true</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetNetworkInterfaceAttributeResponse">
            <summary>
            This is the response object from the ResetNetworkInterfaceAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetSnapshotAttributeRequest">
            <summary>
            Container for the parameters to the ResetSnapshotAttribute operation.
            Resets permission settings for the specified snapshot.
            
             
            <para>
            For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing
            Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetSnapshotAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetSnapshotAttributeRequest.#ctor(System.String,Amazon.EC2.SnapshotAttributeName)">
            <summary>
            Instantiates ResetSnapshotAttributeRequest with the parameterized properties
            </summary>
            <param name="snapshotId">The ID of the snapshot.</param>
            <param name="attribute">The attribute to reset. Currently, only the attribute for permission to create volumes can be reset.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ResetSnapshotAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The attribute to reset. Currently, only the attribute for permission to create volumes
            can be reset.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetSnapshotAttributeRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetSnapshotAttributeResponse">
            <summary>
            This is the response object from the ResetSnapshotAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RestoreAddressToClassicRequest">
            <summary>
            Container for the parameters to the RestoreAddressToClassic operation.
            Restores an Elastic IP address that was previously moved to the EC2-VPC platform back
            to the EC2-Classic platform. You cannot move an Elastic IP address that was originally
            allocated for use in EC2-VPC. The Elastic IP address must not be associated with an
            instance or network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RestoreAddressToClassicRequest.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RestoreAddressToClassicResponse">
            <summary>
            Contains the output of RestoreAddressToClassic.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RestoreAddressToClassicResponse.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RestoreAddressToClassicResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The move status for the IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RevokeSecurityGroupEgressRequest">
            <summary>
            Container for the parameters to the RevokeSecurityGroupEgress operation.
            [EC2-VPC only] Removes one or more egress rules from a security group for EC2-VPC.
            This action doesn't apply to security groups for use in EC2-Classic. The values that
            you specify in the revoke request (for example, ports) must match the existing rule's
            values for the rule to be revoked.
            
             
            <para>
            Each rule consists of the protocol and the CIDR range or source security group. For
            the TCP and UDP protocols, you must also specify the destination port or range of
            ports. For the ICMP protocol, you must also specify the ICMP type and code.
            </para>
             
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupEgressRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupEgressRequest.IpPermissions">
            <summary>
            Gets and sets the property IpPermissions. 
            <para>
            A set of IP permissions. You can't specify a destination security group and a CIDR
            IP address range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RevokeSecurityGroupEgressResponse">
            <summary>
            This is the response object from the RevokeSecurityGroupEgress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest">
            <summary>
            Container for the parameters to the RevokeSecurityGroupIngress operation.
            Removes one or more ingress rules from a security group. The values that you specify
            in the revoke request (for example, ports) must match the existing rule's values for
            the rule to be removed.
            
             
            <para>
            Each rule consists of the protocol and the CIDR range or source security group. For
            the TCP and UDP protocols, you must also specify the destination port or range of
            ports. For the ICMP protocol, you must also specify the ICMP type and code.
            </para>
             
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.EC2.Model.IpPermission})">
            <summary>
            Instantiates RevokeSecurityGroupIngressRequest with the parameterized properties
            </summary>
            <param name="groupName">[EC2-Classic, default VPC] The name of the security group.</param>
            <param name="ipPermissions">A set of IP permissions. You can't specify a source security group and a CIDR IP address range.</param>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group. Required for a security group in a nondefault VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            [EC2-Classic, default VPC] The name of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest.IpPermissions">
            <summary>
            Gets and sets the property IpPermissions. 
            <para>
            A set of IP permissions. You can't specify a source security group and a CIDR IP address
            range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RevokeSecurityGroupIngressResponse">
            <summary>
            This is the response object from the RevokeSecurityGroupIngress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Route">
            <summary>
            Describes a route in a route table.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR block used for the destination match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.DestinationPrefixListId">
            <summary>
            Gets and sets the property DestinationPrefixListId. 
            <para>
            The prefix of the AWS service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of a gateway attached to your VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of a NAT instance in your VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.InstanceOwnerId">
            <summary>
            Gets and sets the property InstanceOwnerId. 
            <para>
            The AWS account ID of the owner of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.NatGatewayId">
            <summary>
            Gets and sets the property NatGatewayId. 
            <para>
            The ID of a NAT gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.Origin">
            <summary>
            Gets and sets the property Origin. 
            <para>
            Describes how the route was created.
            </para>
             <ul> <li> 
            <para>
             <code>CreateRouteTable</code> - The route was automatically created when the route
            table was created.
            </para>
             </li> <li> 
            <para>
             <code>CreateRoute</code> - The route was manually added to the route table.
            </para>
             </li> <li> 
            <para>
             <code>EnableVgwRoutePropagation</code> - The route was propagated by route propagation.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the route. The <code>blackhole</code> state indicates that the route's
            target isn't available (for example, the specified gateway isn't attached to the VPC,
            or the specified NAT instance has been terminated).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RouteTable">
            <summary>
            Describes a route table.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.Associations">
            <summary>
            Gets and sets the property Associations. 
            <para>
            The associations between the route table and one or more subnets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.PropagatingVgws">
            <summary>
            Gets and sets the property PropagatingVgws. 
            <para>
            Any virtual private gateway (VGW) propagating routes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.Routes">
            <summary>
            Gets and sets the property Routes. 
            <para>
            The routes in the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RouteTableAssociation">
            <summary>
            Describes an association between a route table and a subnet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTableAssociation.Main">
            <summary>
            Gets and sets the property Main. 
            <para>
            Indicates whether this is the main route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTableAssociation.RouteTableAssociationId">
            <summary>
            Gets and sets the property RouteTableAssociationId. 
            <para>
            The ID of the association between a route table and a subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTableAssociation.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTableAssociation.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet. A subnet ID is not returned for an implicit association.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RunInstancesRequest">
            <summary>
            Container for the parameters to the RunInstances operation.
            Launches the specified number of instances using an AMI for which you have permissions.
            
             
            <para>
            When you launch an instance, it enters the <code>pending</code> state. After the instance
            is ready for you, it enters the <code>running</code> state. To check the state of
            your instance, call <a>DescribeInstances</a>.
            </para>
             
            <para>
            To ensure faster instance launches, break up large requests into smaller batches.
            For example, create five separate launch requests for 100 instances each instead of
            one launch request for 500 instances.
            </para>
             
            <para>
            To tag your instance, ensure that it is <code>running</code> as <a>CreateTags</a>
            requires a resource ID. For more information about tagging, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Amazon EC2 Resources</a>.
            </para>
             
            <para>
            If you don't specify a security group when launching an instance, Amazon EC2 uses
            the default security group. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Security
            Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            [EC2-VPC only accounts] If you don't specify a subnet in the request, we choose a
            default subnet from your default VPC for you.
            </para>
             
            <para>
            [EC2-Classic accounts] If you're launching into EC2-Classic and you don't specify
            an Availability Zone, we choose one for you.
            </para>
             
            <para>
            Linux instances have access to the public key of the key pair at boot. You can use
            this key to provide secure access to the instance. Amazon EC2 public images use this
            feature to provide secure access without passwords. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            You can provide optional user data when launching an instance. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html">Instance
            Metadata</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            If any of the AMIs have a product code attached for which the user has not subscribed,
            <code>RunInstances</code> fails.
            </para>
             
            <para>
            Some instance types can only be launched into a VPC. If you do not have a default
            VPC, or if you do not specify a subnet ID in the request, <code>RunInstances</code>
            fails. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types">Instance
            Types Available Only in a VPC</a>.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html">What
            To Do If An Instance Immediately Terminates</a>, and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html">Troubleshooting
            Connecting to Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RunInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RunInstancesRequest.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Instantiates RunInstancesRequest with the parameterized properties
            </summary>
            <param name="imageId">The ID of the AMI, which you can get by calling <a>DescribeImages</a>.</param>
            <param name="minCount">The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances. Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.</param>
            <param name="maxCount">The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above <code>MinCount</code>. Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How many instances can I run in Amazon EC2</a> in the Amazon EC2 FAQ.</param>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.AdditionalInfo">
            <summary>
            Gets and sets the property AdditionalInfo. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            The block device mapping.
            </para>
             <important> 
            <para>
            Supplying both a snapshot ID and an encryption value as arguments for block-device
            mapping results in an error. This is because only blank volumes can be encrypted on
            start, and these are not created from a snapshot. If a snapshot is the basis for the
            volume, it contains data by definition and its encryption status cannot be changed
            using this action.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.
            </para>
             
            <para>
            Constraints: Maximum 64 ASCII characters
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.DisableApiTermination">
            <summary>
            Gets and sets the property DisableApiTermination. 
            <para>
            If you set this parameter to <code>true</code>, you can't terminate the instance using
            the Amazon EC2 console, CLI, or API; otherwise, you can. If you set this parameter
            to <code>true</code> and then later want to be able to terminate the instance, you
            must first change the value of the <code>disableApiTermination</code> attribute to
            <code>false</code> using <a>ModifyInstanceAttribute</a>. Alternatively, if you set
            <code>InstanceInitiatedShutdownBehavior</code> to <code>terminate</code>, you can
            terminate the instance by running the shutdown command from the instance.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Indicates whether the instance is optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal EBS I/O performance. This optimization isn't available with all instance types.
            Additional usage charges apply when using an EBS-optimized instance.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.IamInstanceProfile">
            <summary>
            Gets and sets the property IamInstanceProfile. 
            <para>
            The IAM instance profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI, which you can get by calling <a>DescribeImages</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.InstanceInitiatedShutdownBehavior">
            <summary>
            Gets and sets the property InstanceInitiatedShutdownBehavior. 
            <para>
            Indicates whether an instance stops or terminates when you initiate shutdown from
            the instance (using the operating system command for system shutdown).
            </para>
             
            <para>
            Default: <code>stop</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            Default: <code>m1.small</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The ID of the kernel.
            </para>
             <important> 
            <para>
            We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">
            PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair. You can create a key pair using <a>CreateKeyPair</a> or
            <a>ImportKeyPair</a>.
            </para>
             <important> 
            <para>
            If you do not specify a key pair, you can't connect to the instance unless you choose
            an AMI that is configured to allow users another way to log in.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.MaxCount">
            <summary>
            Gets and sets the property MaxCount. 
            <para>
            The maximum number of instances to launch. If you specify more instances than Amazon
            EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible
            number of instances above <code>MinCount</code>.
            </para>
             
            <para>
            Constraints: Between 1 and the maximum number you're allowed for the specified instance
            type. For more information about the default limits, and how to request an increase,
            see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How
            many instances can I run in Amazon EC2</a> in the Amazon EC2 FAQ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.MinCount">
            <summary>
            Gets and sets the property MinCount. 
            <para>
            The minimum number of instances to launch. If you specify a minimum that is more instances
            than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no
            instances.
            </para>
             
            <para>
            Constraints: Between 1 and the maximum number you're allowed for the specified instance
            type. For more information about the default limits, and how to request an increase,
            see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How
            many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.Monitoring">
            <summary>
            Gets and sets the property Monitoring. 
            <para>
            The monitoring for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            One or more network interfaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.Placement">
            <summary>
            Gets and sets the property Placement. 
            <para>
            The placement for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            [EC2-VPC] The primary IP address. You must specify a value from the IP address range
            of the subnet.
            </para>
             
            <para>
            Only one private IP address can be designated as primary. Therefore, you can't specify
            this parameter if <code>PrivateIpAddresses.n.Primary</code> is set to <code>true</code>
            and <code>PrivateIpAddresses.n.PrivateIpAddress</code> is set to an IP address. 
            </para>
             
            <para>
            You cannot specify this option if you're launching more than one instance in the request.
            </para>
             
            <para>
            Default: We select an IP address from the IP address range of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The ID of the RAM disk.
            </para>
             <important> 
            <para>
            We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">
            PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            One or more security group IDs. You can create a security group using <a>CreateSecurityGroup</a>.
            </para>
             
            <para>
            Default: Amazon EC2 uses the default security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            [EC2-Classic, default VPC] One or more security group names. For a nondefault VPC,
            you must use security group IDs instead.
            </para>
             
            <para>
            Default: Amazon EC2 uses the default security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            [EC2-VPC] The ID of the subnet to launch the instance into.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            The user data to make available to the instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Running
            Commands on Your Linux Instance at Launch</a> (Linux) and <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data">Adding
            User Data</a> (Windows). If you are using an AWS SDK or command line tool, Base64-encoding
            is performed for you, and you can load the text from a file. Otherwise, you must provide
            Base64-encoded text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RunInstancesResponse">
            <summary>
            Contains the response data from the RunInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesResponse.Reservation">
            <summary>
            Gets and sets the Reservation member
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RunScheduledInstancesRequest">
            <summary>
            Container for the parameters to the RunScheduledInstances operation.
            Launches the specified Scheduled Instances.
            
             
            <para>
            Before you can launch a Scheduled Instance, you must purchase it and obtain an identifier
            using <a>PurchaseScheduledInstances</a>.
            </para>
             
            <para>
            You must launch a Scheduled Instance during its scheduled time period. You can't stop
            or reboot a Scheduled Instance, but you can terminate it as needed. If you terminate
            a Scheduled Instance before the current scheduled time period ends, you can launch
            it again after a few minutes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-scheduled-instances.html">Scheduled
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunScheduledInstancesRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier that ensures the idempotency of the request. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunScheduledInstancesRequest.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of instances.
            </para>
             
            <para>
            Default: 1
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunScheduledInstancesRequest.LaunchSpecification">
            <summary>
            Gets and sets the property LaunchSpecification. 
            <para>
            The launch specification. You must match the instance type, Availability Zone, network,
            and platform of the schedule that you purchased.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunScheduledInstancesRequest.ScheduledInstanceId">
            <summary>
            Gets and sets the property ScheduledInstanceId. 
            <para>
            The Scheduled Instance ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RunScheduledInstancesResponse">
            <summary>
            Contains the output of RunScheduledInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunScheduledInstancesResponse.InstanceIdSet">
            <summary>
            Gets and sets the property InstanceIdSet. 
            <para>
            The IDs of the newly launched instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.S3Storage">
            <summary>
            Describes the storage parameters for S3 and S3 buckets for an instance store-backed
            AMI.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.S3Storage.AWSAccessKeyId">
            <summary>
            Gets and sets the property AWSAccessKeyId. 
            <para>
            The access key ID of the owner of the bucket. Before you specify a value for your
            access key ID, review and follow the guidance in <a href="http://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html">Best
            Practices for Managing AWS Access Keys</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.S3Storage.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The bucket in which to store the AMI. You can specify a bucket that you already own
            or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that
            belongs to someone else, Amazon EC2 returns an error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.S3Storage.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The beginning of the file name of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.S3Storage.UploadPolicy">
            <summary>
            Gets and sets the property UploadPolicy. 
            <para>
            An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon
            S3 on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.S3Storage.UploadPolicySignature">
            <summary>
            Gets and sets the property UploadPolicySignature. 
            <para>
            The signature of the JSON document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstance">
            <summary>
            Describes a Scheduled Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.CreateDate">
            <summary>
            Gets and sets the property CreateDate. 
            <para>
            The date when the Scheduled Instance was purchased.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.HourlyPrice">
            <summary>
            Gets and sets the property HourlyPrice. 
            <para>
            The hourly price for a single instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.NetworkPlatform">
            <summary>
            Gets and sets the property NetworkPlatform. 
            <para>
            The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.NextSlotStartTime">
            <summary>
            Gets and sets the property NextSlotStartTime. 
            <para>
            The time for the next schedule to start.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The platform (<code>Linux/UNIX</code> or <code>Windows</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.PreviousSlotEndTime">
            <summary>
            Gets and sets the property PreviousSlotEndTime. 
            <para>
            The time that the previous schedule ended or will end.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.Recurrence">
            <summary>
            Gets and sets the property Recurrence. 
            <para>
            The schedule recurrence.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.ScheduledInstanceId">
            <summary>
            Gets and sets the property ScheduledInstanceId. 
            <para>
            The Scheduled Instance ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.SlotDurationInHours">
            <summary>
            Gets and sets the property SlotDurationInHours. 
            <para>
            The number of hours in the schedule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.TermEndDate">
            <summary>
            Gets and sets the property TermEndDate. 
            <para>
            The end date for the Scheduled Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.TermStartDate">
            <summary>
            Gets and sets the property TermStartDate. 
            <para>
            The start date for the Scheduled Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstance.TotalScheduledInstanceHours">
            <summary>
            Gets and sets the property TotalScheduledInstanceHours. 
            <para>
            The total number of hours for a single instance for the entire term.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstanceAvailability">
            <summary>
            Describes a schedule that is available for your Scheduled Instances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.AvailableInstanceCount">
            <summary>
            Gets and sets the property AvailableInstanceCount. 
            <para>
            The number of available instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.FirstSlotStartTime">
            <summary>
            Gets and sets the property FirstSlotStartTime. 
            <para>
            The time period for the first schedule to start.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.HourlyPrice">
            <summary>
            Gets and sets the property HourlyPrice. 
            <para>
            The hourly price for a single instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type. You can specify one of the C3, C4, M4, or R3 instance types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.MaxTermDurationInDays">
            <summary>
            Gets and sets the property MaxTermDurationInDays. 
            <para>
            The maximum term. The only possible value is 365 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.MinTermDurationInDays">
            <summary>
            Gets and sets the property MinTermDurationInDays. 
            <para>
            The minimum term. The only possible value is 365 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.NetworkPlatform">
            <summary>
            Gets and sets the property NetworkPlatform. 
            <para>
            The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The platform (<code>Linux/UNIX</code> or <code>Windows</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.PurchaseToken">
            <summary>
            Gets and sets the property PurchaseToken. 
            <para>
            The purchase token. This token expires in two hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.Recurrence">
            <summary>
            Gets and sets the property Recurrence. 
            <para>
            The schedule recurrence.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.SlotDurationInHours">
            <summary>
            Gets and sets the property SlotDurationInHours. 
            <para>
            The number of hours in the schedule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceAvailability.TotalScheduledInstanceHours">
            <summary>
            Gets and sets the property TotalScheduledInstanceHours. 
            <para>
            The total number of hours for a single instance for the entire term.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstanceRecurrence">
            <summary>
            Describes the recurring schedule for a Scheduled Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceRecurrence.Frequency">
            <summary>
            Gets and sets the property Frequency. 
            <para>
            The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceRecurrence.Interval">
            <summary>
            Gets and sets the property Interval. 
            <para>
            The interval quantity. The interval unit depends on the value of <code>frequency</code>.
            For example, every 2 weeks or every 2 months.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceRecurrence.OccurrenceDaySet">
            <summary>
            Gets and sets the property OccurrenceDaySet. 
            <para>
            The days. For a monthly schedule, this is one or more days of the month (1-31). For
            a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceRecurrence.OccurrenceRelativeToEnd">
            <summary>
            Gets and sets the property OccurrenceRelativeToEnd. 
            <para>
            Indicates whether the occurrence is relative to the end of the specified week or month.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceRecurrence.OccurrenceUnit">
            <summary>
            Gets and sets the property OccurrenceUnit. 
            <para>
            The unit for <code>occurrenceDaySet</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstanceRecurrenceRequest">
            <summary>
            Describes the recurring schedule for a Scheduled Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceRecurrenceRequest.Frequency">
            <summary>
            Gets and sets the property Frequency. 
            <para>
            The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceRecurrenceRequest.Interval">
            <summary>
            Gets and sets the property Interval. 
            <para>
            The interval quantity. The interval unit depends on the value of <code>Frequency</code>.
            For example, every 2 weeks or every 2 months.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceRecurrenceRequest.OccurrenceDays">
            <summary>
            Gets and sets the property OccurrenceDays. 
            <para>
            The days. For a monthly schedule, this is one or more days of the month (1-31). For
            a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).
            You can't specify this value with a daily schedule. If the occurrence is relative
            to the end of the month, you can specify only a single day.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceRecurrenceRequest.OccurrenceRelativeToEnd">
            <summary>
            Gets and sets the property OccurrenceRelativeToEnd. 
            <para>
            Indicates whether the occurrence is relative to the end of the specified week or month.
            You can't specify this value with a daily schedule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstanceRecurrenceRequest.OccurrenceUnit">
            <summary>
            Gets and sets the property OccurrenceUnit. 
            <para>
            The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>).
            This value is required for a monthly schedule. You can't specify <code>DayOfWeek</code>
            with a weekly schedule. You can't specify this value with a daily schedule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstancesBlockDeviceMapping">
            <summary>
            Describes a block device mapping for a Scheduled Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesBlockDeviceMapping.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesBlockDeviceMapping.Ebs">
            <summary>
            Gets and sets the property Ebs. 
            <para>
            Parameters used to set up EBS volumes automatically when the instance is launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesBlockDeviceMapping.NoDevice">
            <summary>
            Gets and sets the property NoDevice. 
            <para>
            Suppresses the specified device included in the block device mapping of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesBlockDeviceMapping.VirtualName">
            <summary>
            Gets and sets the property VirtualName. 
            <para>
            The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered
            starting from 0. An instance type with two available instance store volumes can specify
            mappings for <code>ephemeral0</code> and <code>ephemeral1</code>.The number of available
            instance store volumes depends on the instance type. After you connect to the instance,
            you must mount the volume.
            </para>
             
            <para>
            Constraints: For M3 instances, you must specify instance store volumes in the block
            device mapping for the instance. When you launch an M3 instance, we ignore any instance
            store volumes specified in the block device mapping for the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstancesEbs">
            <summary>
            Describes an EBS volume for a Scheduled Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesEbs.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the volume is deleted on instance termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesEbs.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Indicates whether the volume is encrypted. You can attached encrypted volumes only
            to instances that support them.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesEbs.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes,
            this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code>
            volumes, this represents the baseline performance of the volume and the rate at which
            the volume accumulates I/O credits for bursting. For more information about <code>gp2</code>
            baseline performance, I/O credits, and bursting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon
            EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            Constraint: Range is 100-20000 IOPS for <code>io1</code> volumes and 100-10000 IOPS
            for <code>gp2</code> volumes.
            </para>
             
            <para>
            Condition: This parameter is required for requests to create <code>io1</code>volumes;
            it is not used in requests to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>,
            or <code>standard</code> volumes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesEbs.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesEbs.VolumeSize">
            <summary>
            Gets and sets the property VolumeSize. 
            <para>
            The size of the volume, in GiB.
            </para>
             
            <para>
            Default: If you're creating the volume from a snapshot and don't specify a volume
            size, the default is the snapshot size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesEbs.VolumeType">
            <summary>
            Gets and sets the property VolumeType. 
            <para>
            The volume type. <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned
            IOPS SSD, Throughput Optimized HDD for <code>st1</code>, Cold HDD for <code>sc1</code>,
            or <code>standard</code> for Magnetic.
            </para>
             
            <para>
            Default: <code>standard</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstancesIamInstanceProfile">
            <summary>
            Describes an IAM instance profile for a Scheduled Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesIamInstanceProfile.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesIamInstanceProfile.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification">
            <summary>
            Describes the launch specification for a Scheduled Instance.
            
             
            <para>
            If you are launching the Scheduled Instance in EC2-VPC, you must specify the ID of
            the subnet. You can specify the subnet using either <code>SubnetId</code> or <code>NetworkInterface</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            One or more block device mapping entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Indicates whether the instances are optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal EBS I/O performance. This optimization isn't available with all instance types.
            Additional usage charges apply when using an EBS-optimized instance.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.IamInstanceProfile">
            <summary>
            Gets and sets the property IamInstanceProfile. 
            <para>
            The IAM instance profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the Amazon Machine Image (AMI).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The ID of the kernel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.Monitoring">
            <summary>
            Gets and sets the property Monitoring. 
            <para>
            Enable or disable monitoring for the instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            One or more network interfaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.Placement">
            <summary>
            Gets and sets the property Placement. 
            <para>
            The placement information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The ID of the RAM disk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            The IDs of one or more security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet in which to launch the instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesLaunchSpecification.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            The base64-encoded MIME user data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstancesMonitoring">
            <summary>
            Describes whether monitoring is enabled for a Scheduled Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesMonitoring.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Indicates whether monitoring is enabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstancesNetworkInterface">
            <summary>
            Describes a network interface for a Scheduled Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesNetworkInterface.AssociatePublicIpAddress">
            <summary>
            Gets and sets the property AssociatePublicIpAddress. 
            <para>
            Indicates whether to assign a public IP address to instances launched in a VPC. The
            public IP address can only be assigned to a network interface for eth0, and can only
            be assigned to a new network interface, not an existing one. You cannot specify more
            than one network interface in the request. If launching into a default subnet, the
            default value is <code>true</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesNetworkInterface.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether to delete the interface when the instance is terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesNetworkInterface.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesNetworkInterface.DeviceIndex">
            <summary>
            Gets and sets the property DeviceIndex. 
            <para>
            The index of the device for the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesNetworkInterface.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The IDs of one or more security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesNetworkInterface.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesNetworkInterface.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The IP address of the network interface within the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesNetworkInterface.PrivateIpAddressConfigs">
            <summary>
            Gets and sets the property PrivateIpAddressConfigs. 
            <para>
            The private IP addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesNetworkInterface.SecondaryPrivateIpAddressCount">
            <summary>
            Gets and sets the property SecondaryPrivateIpAddressCount. 
            <para>
            The number of secondary private IP addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesNetworkInterface.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstancesPlacement">
            <summary>
            Describes the placement for a Scheduled Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesPlacement.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesPlacement.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the placement group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ScheduledInstancesPrivateIpAddressConfig">
            <summary>
            Describes a private IP address for a Scheduled Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesPrivateIpAddressConfig.Primary">
            <summary>
            Gets and sets the property Primary. 
            <para>
            Indicates whether this is a primary IP address. Otherwise, this is a secondary IP
            address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ScheduledInstancesPrivateIpAddressConfig.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SecurityGroup">
            <summary>
            Describes a security group
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.IpPermissions">
            <summary>
            Gets and sets the property IpPermissions. 
            <para>
            One or more inbound rules associated with the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.IpPermissionsEgress">
            <summary>
            Gets and sets the property IpPermissionsEgress. 
            <para>
            [EC2-VPC] One or more outbound rules associated with the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the owner of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            [EC2-VPC] The ID of the VPC for the security group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SecurityGroupReference">
            <summary>
            Describes a VPC with a security group that references your security group.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroupReference.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of your security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroupReference.ReferencingVpcId">
            <summary>
            Gets and sets the property ReferencingVpcId. 
            <para>
            The ID of the VPC with the referencing security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroupReference.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SlotDateTimeRangeRequest">
            <summary>
            Describes the time period for a Scheduled Instance to start its first schedule. The
            time period must span less than one day.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SlotDateTimeRangeRequest.EarliestTime">
            <summary>
            Gets and sets the property EarliestTime. 
            <para>
            The earliest date and time, in UTC, for the Scheduled Instance to start.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SlotDateTimeRangeRequest.LatestTime">
            <summary>
            Gets and sets the property LatestTime. 
            <para>
            The latest date and time, in UTC, for the Scheduled Instance to start. This value
            must be later than or equal to the earliest date and at most three months in the future.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SlotStartTimeRangeRequest">
            <summary>
            Describes the time period for a Scheduled Instance to start its first schedule.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SlotStartTimeRangeRequest.EarliestTime">
            <summary>
            Gets and sets the property EarliestTime. 
            <para>
            The earliest date and time, in UTC, for the Scheduled Instance to start.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SlotStartTimeRangeRequest.LatestTime">
            <summary>
            Gets and sets the property LatestTime. 
            <para>
            The latest date and time, in UTC, for the Scheduled Instance to start.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Snapshot">
            <summary>
            Describes a snapshot.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.DataEncryptionKeyId">
            <summary>
            Gets and sets the property DataEncryptionKeyId. 
            <para>
            The data encryption key identifier for the snapshot. This value is a unique identifier
            that corresponds to the data encryption key that was used to encrypt the original
            volume or snapshot copy. Because data encryption keys are inherited by volumes created
            from snapshots, and vice versa, if snapshots share the same data encryption key identifier,
            then they belong to the same volume/snapshot lineage. This parameter is only returned
            by the <a>DescribeSnapshots</a> API operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description for the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Indicates whether the snapshot is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK)
            that was used to protect the volume encryption key for the parent volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.OwnerAlias">
            <summary>
            Gets and sets the property OwnerAlias. 
            <para>
             Value from an Amazon-maintained list (<code>amazon</code> | <code>aws-marketplace</code>
            | <code>microsoft</code>) of snapshot owners. Not to be confused with the user-configured
            AWS account alias, which is set from the IAM console. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the EBS snapshot owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.Progress">
            <summary>
            Gets and sets the property Progress. 
            <para>
            The progress of the snapshot, as a percentage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the snapshot. Each snapshot receives a unique identifier when it is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time stamp when the snapshot was initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The snapshot state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.StateMessage">
            <summary>
            Gets and sets the property StateMessage. 
            <para>
            Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation
            fails (for example, if the proper AWS Key Management Service (AWS KMS) permissions
            are not obtained) this field displays error state details to help you diagnose why
            the error occurred. This parameter is only returned by the <a>DescribeSnapshots</a>
            API operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume that was used to create the snapshot. Snapshots created by the
            <a>CopySnapshot</a> action have an arbitrary volume ID that should not be used for
            any purpose.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.VolumeSize">
            <summary>
            Gets and sets the property VolumeSize. 
            <para>
            The size of the volume, in GiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SnapshotDetail">
            <summary>
            Describes the snapshot created from the imported disk.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDetail.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDetail.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The block device mapping for the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDetail.DiskImageSize">
            <summary>
            Gets and sets the property DiskImageSize. 
            <para>
            The size of the disk in the snapshot, in GiB.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDetail.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The format of the disk image from which the snapshot is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDetail.Progress">
            <summary>
            Gets and sets the property Progress. 
            <para>
            The percentage of progress for the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDetail.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The snapshot ID of the disk being imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDetail.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            A brief status of the snapshot creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDetail.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            A detailed status message for the snapshot creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDetail.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL used to access the disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDetail.UserBucket">
            <summary>
            Gets and sets the property UserBucket. 
            <para>
            The S3 bucket for the disk image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SnapshotDiskContainer">
            <summary>
            The disk container object for the import snapshot request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDiskContainer.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the disk image being imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDiskContainer.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The format of the disk image being imported.
            </para>
             
            <para>
            Valid values: <code>RAW</code> | <code>VHD</code> | <code>VMDK</code> | <code>OVA</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDiskContainer.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL to the Amazon S3-based disk image being imported. It can either be a https
            URL (https://..) or an Amazon S3 URL (s3://..).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotDiskContainer.UserBucket">
            <summary>
            Gets and sets the property UserBucket. 
            <para>
            The S3 bucket for the disk image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SnapshotTaskDetail">
            <summary>
            Details about the import snapshot task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotTaskDetail.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotTaskDetail.DiskImageSize">
            <summary>
            Gets and sets the property DiskImageSize. 
            <para>
            The size of the disk in the snapshot, in GiB.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotTaskDetail.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The format of the disk image from which the snapshot is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotTaskDetail.Progress">
            <summary>
            Gets and sets the property Progress. 
            <para>
            The percentage of completion for the import snapshot task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotTaskDetail.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The snapshot ID of the disk being imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotTaskDetail.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            A brief status for the import snapshot task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotTaskDetail.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            A detailed status message for the import snapshot task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotTaskDetail.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The URL of the disk image from which the snapshot is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SnapshotTaskDetail.UserBucket">
            <summary>
            Gets and sets the property UserBucket. 
            <para>
            The S3 bucket for the disk image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotDatafeedSubscription">
            <summary>
            Describes the data feed for a Spot instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotDatafeedSubscription.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The Amazon S3 bucket where the Spot instance data feed is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotDatafeedSubscription.Fault">
            <summary>
            Gets and sets the property Fault. 
            <para>
            The fault codes for the Spot instance request, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotDatafeedSubscription.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotDatafeedSubscription.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The prefix that is prepended to data feed files.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotDatafeedSubscription.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the Spot instance data feed subscription.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotFleetLaunchSpecification">
            <summary>
            Describes the launch specification for one or more Spot instances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.AddressingType">
            <summary>
            Gets and sets the property AddressingType. 
            <para>
            Deprecated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            One or more block device mapping entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Indicates whether the instances are optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal EBS I/O performance. This optimization isn't available with all instance types.
            Additional usage charges apply when using an EBS Optimized instance.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.IamInstanceProfile">
            <summary>
            Gets and sets the property IamInstanceProfile. 
            <para>
            The IAM instance profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The ID of the kernel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.Monitoring">
            <summary>
            Gets and sets the property Monitoring. 
            <para>
            Enable or disable monitoring for the instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            One or more network interfaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.Placement">
            <summary>
            Gets and sets the property Placement. 
            <para>
            The placement information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The ID of the RAM disk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            One or more security groups. When requesting instances in a VPC, you must specify
            the IDs of the security groups. When requesting instances in EC2-Classic, you can
            specify the names or the IDs of the security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.SpotPrice">
            <summary>
            Gets and sets the property SpotPrice. 
            <para>
            The bid price per unit hour for the specified instance type. If this value is not
            specified, the default is the Spot bid price specified for the fleet. To determine
            the bid price per unit hour, divide the Spot bid price by the value of <code>WeightedCapacity</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet in which to launch the instances. To specify multiple subnets,
            separate them using commas; for example, "subnet-a61dafcf, subnet-65ea5f08".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            The user data to make available to the instances. If you are using an AWS SDK or command
            line tool, Base64-encoding is performed for you, and you can load the text from a
            file. Otherwise, you must provide Base64-encoded text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetLaunchSpecification.WeightedCapacity">
            <summary>
            Gets and sets the property WeightedCapacity. 
            <para>
            The number of units provided by the specified instance type. These are the same units
            that you chose to set the target capacity in terms (instances or a performance characteristic
            such as vCPUs, memory, or I/O).
            </para>
             
            <para>
            If the target capacity divided by this value is not a whole number, we round the number
            of instances to the next whole number. If this value is not specified, the default
            is 1.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotFleetMonitoring">
            <summary>
            Describes whether monitoring is enabled.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetMonitoring.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Enables monitoring for the instance.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotFleetRequestConfig">
            <summary>
            Describes a Spot fleet request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfig.ActivityStatus">
            <summary>
            Gets and sets the property ActivityStatus. 
            <para>
            The progress of the Spot fleet request. If there is an error, the status is <code>error</code>.
            After all bids are placed, the status is <code>pending_fulfillment</code>. If the
            size of the fleet is equal to or greater than its target capacity, the status is <code>fulfilled</code>.
            If the size of the fleet is decreased, the status is <code>pending_termination</code>
            while Spot instances are terminating.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfig.ConfigData">
            <summary>
            Gets and sets the property ConfigData. 
            <para>
            Information about the configuration of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfig.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            The creation date and time of the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfig.SpotFleetRequestId">
            <summary>
            Gets and sets the property SpotFleetRequestId. 
            <para>
            The ID of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfig.SpotFleetRequestState">
            <summary>
            Gets and sets the property SpotFleetRequestState. 
            <para>
            The state of the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotFleetRequestConfigData">
            <summary>
            Describes the configuration of a Spot fleet request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.AllocationStrategy">
            <summary>
            Gets and sets the property AllocationStrategy. 
            <para>
            Indicates how to allocate the target capacity across the Spot pools specified by the
            Spot fleet request. The default is <code>lowestPrice</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique, case-sensitive identifier you provide to ensure idempotency of your listings.
            This helps avoid duplicate listings. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.ExcessCapacityTerminationPolicy">
            <summary>
            Gets and sets the property ExcessCapacityTerminationPolicy. 
            <para>
            Indicates whether running Spot instances should be terminated if the target capacity
            of the Spot fleet request is decreased below the current size of the Spot fleet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.FulfilledCapacity">
            <summary>
            Gets and sets the property FulfilledCapacity. 
            <para>
            The number of units fulfilled by this request compared to the set target capacity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.IamFleetRole">
            <summary>
            Gets and sets the property IamFleetRole. 
            <para>
            Grants the Spot fleet permission to terminate Spot instances on your behalf when you
            cancel its Spot fleet request using <a>CancelSpotFleetRequests</a> or when the Spot
            fleet request expires, if you set <code>terminateInstancesWithExpiration</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.LaunchSpecifications">
            <summary>
            Gets and sets the property LaunchSpecifications. 
            <para>
            Information about the launch specifications for the Spot fleet request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.SpotPrice">
            <summary>
            Gets and sets the property SpotPrice. 
            <para>
            The bid price per unit hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.TargetCapacity">
            <summary>
            Gets and sets the property TargetCapacity. 
            <para>
            The number of units to request. You can choose to set the target capacity in terms
            of instances or a performance characteristic that is important to your application
            workload, such as vCPUs, memory, or I/O.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.TerminateInstancesWithExpiration">
            <summary>
            Gets and sets the property TerminateInstancesWithExpiration. 
            <para>
            Indicates whether running Spot instances should be terminated when the Spot fleet
            request expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of request. Indicates whether the fleet will only <code>request</code> the
            target capacity or also attempt to <code>maintain</code> it. When you <code>request</code>
            a certain target capacity, the fleet will only place the required bids. It will not
            attempt to replenish Spot instances if capacity is diminished, nor will it submit
            bids in alternative Spot pools if capacity is not available. When you want to <code>maintain</code>
            a certain target capacity, fleet will place the required bids to meet this target
            capacity. It will also automatically replenish any interrupted instances. Default:
            <code>maintain</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.ValidFrom">
            <summary>
            Gets and sets the property ValidFrom. 
            <para>
            The start date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            The default is to start fulfilling the request immediately.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotFleetRequestConfigData.ValidUntil">
            <summary>
            Gets and sets the property ValidUntil. 
            <para>
            The end date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            At this point, no new Spot instance requests are placed or enabled to fulfill the
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotInstanceRequest">
            <summary>
            Describes a Spot instance request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.ActualBlockHourlyPrice">
            <summary>
            Gets and sets the property ActualBlockHourlyPrice. 
            <para>
            If you specified a duration and your Spot instance request was fulfilled, this is
            the fixed hourly price in effect for the Spot instance while it runs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.AvailabilityZoneGroup">
            <summary>
            Gets and sets the property AvailabilityZoneGroup. 
            <para>
            The Availability Zone group. If you specify the same Availability Zone group for all
            Spot instance requests, all Spot instances are launched in the same Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.BlockDurationMinutes">
            <summary>
            Gets and sets the property BlockDurationMinutes. 
            <para>
            The duration for the Spot instance, in minutes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            The date and time when the Spot instance request was created, in UTC format (for example,
            <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.Fault">
            <summary>
            Gets and sets the property Fault. 
            <para>
            The fault codes for the Spot instance request, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The instance ID, if an instance has been launched to fulfill the Spot instance request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.LaunchedAvailabilityZone">
            <summary>
            Gets and sets the property LaunchedAvailabilityZone. 
            <para>
            The Availability Zone in which the bid is launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.LaunchGroup">
            <summary>
            Gets and sets the property LaunchGroup. 
            <para>
            The instance launch group. Launch groups are Spot instances that launch together and
            terminate together.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.LaunchSpecification">
            <summary>
            Gets and sets the property LaunchSpecification. 
            <para>
            Additional information for launching instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.ProductDescription">
            <summary>
            Gets and sets the property ProductDescription. 
            <para>
            The product description associated with the Spot instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.SpotInstanceRequestId">
            <summary>
            Gets and sets the property SpotInstanceRequestId. 
            <para>
            The ID of the Spot instance request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.SpotPrice">
            <summary>
            Gets and sets the property SpotPrice. 
            <para>
            The maximum hourly price (bid) for the Spot instance launched to fulfill the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the Spot instance request. Spot bid status information can help you track
            your Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot
            Bid Status</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status code and status message describing the Spot instance request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The Spot instance request type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.ValidFrom">
            <summary>
            Gets and sets the property ValidFrom. 
            <para>
            The start date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            The request becomes active at this date and time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.ValidUntil">
            <summary>
            Gets and sets the property ValidUntil. 
            <para>
            The end date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            If this is a one-time request, it remains active until all instances launch, the request
            is canceled, or this date is reached. If the request is persistent, it remains active
            until it is canceled or this date is reached.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotInstanceStateFault">
            <summary>
            Describes a Spot instance state change.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceStateFault.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The reason code for the Spot instance state change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceStateFault.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The message for the Spot instance state change.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotInstanceStatus">
            <summary>
            Describes the status of a Spot instance request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceStatus.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The status code. For a list of status codes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html#spot-instance-bid-status-understand">Spot
            Bid Status Codes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceStatus.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The description for the status code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceStatus.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            The date and time of the most recent status update, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotPlacement">
            <summary>
            Describes Spot instance placement.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.SpotPlacement.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.SpotPlacement.#ctor(System.String)">
            <summary>
            Instantiates SpotPlacement with the parameterized properties
            </summary>
            <param name="availabilityZone">The Availability Zone. [Spot fleet only] To specify multiple Availability Zones, separate them using commas; for example, "us-west-2a, us-west-2b".</param>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPlacement.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone.
            </para>
             
            <para>
            [Spot fleet only] To specify multiple Availability Zones, separate them using commas;
            for example, "us-west-2a, us-west-2b".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPlacement.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the placement group (for cluster instances).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotPrice">
            <summary>
            Describes the maximum hourly price (bid) for any Spot instance launched to fulfill
            the request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPrice.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPrice.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPrice.Price">
            <summary>
            Gets and sets the property Price. 
            <para>
            The maximum price (bid) that you are willing to pay for a Spot instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPrice.ProductDescription">
            <summary>
            Gets and sets the property ProductDescription. 
            <para>
            A general description of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPrice.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The date and time the request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StaleIpPermission">
            <summary>
            Describes a stale rule in a security group.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleIpPermission.FromPort">
            <summary>
            Gets and sets the property FromPort. 
            <para>
            The start of the port range for the TCP and UDP protocols, or an ICMP type number.
            A value of <code>-1</code> indicates all ICMP types. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleIpPermission.IpProtocol">
            <summary>
            Gets and sets the property IpProtocol. 
            <para>
            The IP protocol name (for <code>tcp</code>, <code>udp</code>, and <code>icmp</code>)
            or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol
            Numbers)</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleIpPermission.IpRanges">
            <summary>
            Gets and sets the property IpRanges. 
            <para>
            One or more IP ranges. Not applicable for stale security group rules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleIpPermission.PrefixListIds">
            <summary>
            Gets and sets the property PrefixListIds. 
            <para>
            One or more prefix list IDs for an AWS service. Not applicable for stale security
            group rules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleIpPermission.ToPort">
            <summary>
            Gets and sets the property ToPort. 
            <para>
            The end of the port range for the TCP and UDP protocols, or an ICMP type number. A
            value of <code>-1</code> indicates all ICMP types. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleIpPermission.UserIdGroupPairs">
            <summary>
            Gets and sets the property UserIdGroupPairs. 
            <para>
            One or more security group pairs. Returns the ID of the referenced security group
            and VPC, and the ID and status of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StaleSecurityGroup">
            <summary>
            Describes a stale security group (a security group that contains stale rules).
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleSecurityGroup.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleSecurityGroup.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleSecurityGroup.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleSecurityGroup.StaleIpPermissions">
            <summary>
            Gets and sets the property StaleIpPermissions. 
            <para>
            Information about the stale inbound rules in the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleSecurityGroup.StaleIpPermissionsEgress">
            <summary>
            Gets and sets the property StaleIpPermissionsEgress. 
            <para>
            Information about the stale outbound rules in the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StaleSecurityGroup.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC for the security group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StartInstancesRequest">
            <summary>
            Container for the parameters to the StartInstances operation.
            Starts an Amazon EBS-backed AMI that you've previously stopped.
            
             
            <para>
            Instances that use Amazon EBS volumes as their root devices can be quickly stopped
            and started. When an instance is stopped, the compute resources are released and you
            are not billed for hourly instance usage. However, your root partition Amazon EBS
            volume remains, continues to persist your data, and you are charged for Amazon EBS
            volume usage. You can restart your instance at any time. Each time you transition
            an instance from stopped to started, Amazon EC2 charges a full instance hour, even
            if transitions happen multiple times within a single hour.
            </para>
             
            <para>
            Before stopping an instance, make sure it is in a state from which it can be restarted.
            Stopping an instance does not preserve data stored in RAM.
            </para>
             
            <para>
            Performing this operation on an instance that uses an instance store as its root device
            returns an error.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stopping
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.StartInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.StartInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates StartInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.StartInstancesRequest.AdditionalInfo">
            <summary>
            Gets and sets the property AdditionalInfo. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StartInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StartInstancesResponse">
            <summary>
            Contains the output of StartInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StartInstancesResponse.StartingInstances">
            <summary>
            Gets and sets the property StartingInstances. 
            <para>
            Information about one or more started instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StateReason">
            <summary>
            Describes a state change.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StateReason.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The reason code for the state change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StateReason.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The message for the state change.
            </para>
             <ul> <li> 
            <para>
             <code>Server.SpotInstanceTermination</code>: A Spot instance was terminated due to
            an increase in the market price.
            </para>
             </li> <li> 
            <para>
             <code>Server.InternalError</code>: An internal error occurred during instance launch,
            resulting in termination.
            </para>
             </li> <li> 
            <para>
             <code>Server.InsufficientInstanceCapacity</code>: There was insufficient instance
            capacity to satisfy the launch request.
            </para>
             </li> <li> 
            <para>
             <code>Client.InternalError</code>: A client error caused the instance to terminate
            on launch.
            </para>
             </li> <li> 
            <para>
             <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down using the
            <code>shutdown -h</code> command from the instance.
            </para>
             </li> <li> 
            <para>
             <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon
            EC2 API.
            </para>
             </li> <li> 
            <para>
             <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or
            total storage was exceeded. Decrease usage or request an increase in your limits.
            </para>
             </li> <li> 
            <para>
             <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StopInstancesRequest">
            <summary>
            Container for the parameters to the StopInstances operation.
            Stops an Amazon EBS-backed instance.
            
             
            <para>
            We don't charge hourly usage for a stopped instance, or data transfer fees; however,
            your root partition Amazon EBS volume remains, continues to persist your data, and
            you are charged for Amazon EBS volume usage. Each time you transition an instance
            from stopped to started, Amazon EC2 charges a full instance hour, even if transitions
            happen multiple times within a single hour.
            </para>
             
            <para>
            You can't start or stop Spot instances, and you can't stop instance store-backed instances.
            </para>
             
            <para>
            When you stop an instance, we shut it down. You can restart your instance at any time.
            Before stopping an instance, make sure it is in a state from which it can be restarted.
            Stopping an instance does not preserve data stored in RAM.
            </para>
             
            <para>
            Stopping an instance is different to rebooting or terminating it. For example, when
            you stop an instance, the root device and any other devices attached to the instance
            persist. When you terminate an instance, the root device and any other devices attached
            during the instance launch are automatically deleted. For more information about the
            differences between rebooting, stopping, and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            When you stop an instance, we attempt to shut it down forcibly after a short while.
            If your instance appears stuck in the stopping state after a period of time, there
            may be an issue with the underlying host computer. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html">Troubleshooting
            Stopping Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.StopInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.StopInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates StopInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.StopInstancesRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            Forces the instances to stop. The instances do not have an opportunity to flush file
            system caches or file system metadata. If you use this option, you must perform file
            system check and repair procedures. This option is not recommended for Windows instances.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StopInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StopInstancesResponse">
            <summary>
            Contains the output of StopInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StopInstancesResponse.StoppingInstances">
            <summary>
            Gets and sets the property StoppingInstances. 
            <para>
            Information about one or more stopped instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Storage">
            <summary>
            Describes the storage location for an instance store-backed AMI.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Storage.S3">
            <summary>
            Gets and sets the property S3. 
            <para>
            An Amazon S3 storage location.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Subnet">
            <summary>
            Describes a subnet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.AvailableIpAddressCount">
            <summary>
            Gets and sets the property AvailableIpAddressCount. 
            <para>
            The number of unused IP addresses in the subnet. Note that the IP addresses for any
            stopped instances are considered unavailable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The CIDR block assigned to the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.DefaultForAz">
            <summary>
            Gets and sets the property DefaultForAz. 
            <para>
            Indicates whether this is the default subnet for the Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.MapPublicIpOnLaunch">
            <summary>
            Gets and sets the property MapPublicIpOnLaunch. 
            <para>
            Indicates whether instances launched in this subnet receive a public IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC the subnet is in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Tag">
            <summary>
            Describes a tag.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Tag.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Tag.#ctor(System.String,System.String)">
            <summary>
            Instantiates Tag with the parameterized properties
            </summary>
            <param name="key">The key of the tag. Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code> </param>
            <param name="value">The value of the tag. Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.</param>
        </member>
        <member name="M:Amazon.EC2.Model.Tag.#ctor(System.String)">
            <summary>
            Instantiates Tag with the parameterized properties
            </summary>
            <param name="key">The key of the tag. Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code> </param>
        </member>
        <member name="P:Amazon.EC2.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key of the tag.
            </para>
             
            <para>
            Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters.
            May not begin with <code>aws:</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the tag.
            </para>
             
            <para>
            Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.TagDescription">
            <summary>
            Describes a tag.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TagDescription.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The tag key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TagDescription.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The ID of the resource. For example, <code>ami-1a2b3c4d</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TagDescription.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The resource type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TagDescription.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The tag value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.TargetConfiguration">
            <summary>
            Information about the Convertible Reserved Instance offering.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TargetConfiguration.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of instances the Convertible Reserved Instance offering can be applied
            to. This parameter is reserved and cannot be specified in a request
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TargetConfiguration.OfferingId">
            <summary>
            Gets and sets the property OfferingId. 
            <para>
            The ID of the Convertible Reserved Instance offering.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.TargetConfigurationRequest">
            <summary>
            Details about the target configuration.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TargetConfigurationRequest.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of instances the Covertible Reserved Instance offering can be applied to.
            This parameter is reserved and cannot be specified in a request
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TargetConfigurationRequest.OfferingId">
            <summary>
            Gets and sets the property OfferingId. 
            <para>
            The Convertible Reserved Instance offering ID. If this isn't included in the request,
            the response lists your current Convertible Reserved Instance/s and their value/s.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.TargetReservationValue">
            <summary>
            The total value of the new Convertible Reserved Instances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TargetReservationValue.ReservationValue">
            <summary>
            Gets and sets the property ReservationValue. 
            <para>
            The total value of the Convertible Reserved Instances that make up the exchange. This
            is the sum of the list value, remaining upfront price, and additional upfront cost
            of the exchange.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TargetReservationValue.TargetConfiguration">
            <summary>
            Gets and sets the property TargetConfiguration. 
            <para>
            The configuration of the Convertible Reserved Instances that make up the exchange.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.TerminateInstancesRequest">
            <summary>
            Container for the parameters to the TerminateInstances operation.
            Shuts down one or more instances. This operation is idempotent; if you terminate an
            instance more than once, each call succeeds. 
            
             
            <para>
            If you specify multiple instances and the request fails (for example, because of a
            single incorrect instance ID), none of the instances are terminated.
            </para>
             
            <para>
            Terminated instances remain visible after termination (for approximately one hour).
            </para>
             
            <para>
            By default, Amazon EC2 deletes all EBS volumes that were attached when the instance
            launched. Volumes attached after instance launch continue running.
            </para>
             
            <para>
            You can stop, start, and terminate EBS-backed instances. You can only terminate instance
            store-backed instances. What happens to an instance differs if you stop it or terminate
            it. For example, when you stop an instance, the root device and any other devices
            attached to the instance persist. When you terminate an instance, any attached EBS
            volumes with the <code>DeleteOnTermination</code> block device mapping parameter set
            to <code>true</code> are automatically deleted. For more information about the differences
            between stopping and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html">Troubleshooting
            Terminating Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.TerminateInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.TerminateInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates TerminateInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs. Constraints: Up to 1000 instance IDs. We recommend breaking up this request into smaller batches.</param>
        </member>
        <member name="P:Amazon.EC2.Model.TerminateInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
             
            <para>
            Constraints: Up to 1000 instance IDs. We recommend breaking up this request into smaller
            batches.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.TerminateInstancesResponse">
            <summary>
            Contains the output of TerminateInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TerminateInstancesResponse.TerminatingInstances">
            <summary>
            Gets and sets the property TerminatingInstances. 
            <para>
            Information about one or more terminated instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UnassignPrivateIpAddressesRequest">
            <summary>
            Container for the parameters to the UnassignPrivateIpAddresses operation.
            Unassigns one or more secondary private IP addresses from a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnassignPrivateIpAddressesRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnassignPrivateIpAddressesRequest.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            The secondary private IP addresses to unassign from the network interface. You can
            specify this option multiple times to unassign more than one IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UnassignPrivateIpAddressesResponse">
            <summary>
            This is the response object from the UnassignPrivateIpAddresses operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UnmonitorInstancesRequest">
            <summary>
            Container for the parameters to the UnmonitorInstances operation.
            Disables monitoring for a running instance. For more information about monitoring
            instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring
            Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.UnmonitorInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.UnmonitorInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates UnmonitorInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.UnmonitorInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UnmonitorInstancesResponse">
            <summary>
            Contains the output of UnmonitorInstances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnmonitorInstancesResponse.InstanceMonitorings">
            <summary>
            Gets and sets the property InstanceMonitorings. 
            <para>
            Monitoring information for one or more instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UnsuccessfulItem">
            <summary>
            Information about items that were not successfully processed in a batch call.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnsuccessfulItem.Error">
            <summary>
            Gets and sets the property Error. 
            <para>
            Information about the error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnsuccessfulItem.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The ID of the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UnsuccessfulItemError">
            <summary>
            Information about the error that occurred. For more information about errors, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error
            Codes</a>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnsuccessfulItemError.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The error code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnsuccessfulItemError.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The error message accompanying the error code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UserBucket">
            <summary>
            Describes the S3 bucket for the disk image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserBucket.S3Bucket">
            <summary>
            Gets and sets the property S3Bucket. 
            <para>
            The name of the S3 bucket where the disk image is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserBucket.S3Key">
            <summary>
            Gets and sets the property S3Key. 
            <para>
            The file name of the disk image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UserBucketDetails">
            <summary>
            Describes the S3 bucket for the disk image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserBucketDetails.S3Bucket">
            <summary>
            Gets and sets the property S3Bucket. 
            <para>
            The S3 bucket from which the disk image was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserBucketDetails.S3Key">
            <summary>
            Gets and sets the property S3Key. 
            <para>
            The file name of the disk image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UserData">
            <summary>
            Describes the user data for an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserData.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The user data. If you are using an AWS SDK or command line tool, Base64-encoding is
            performed for you, and you can load the text from a file. Otherwise, you must provide
            Base64-encoded text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UserIdGroupPair">
            <summary>
            Describes a security group and AWS account ID pair.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserIdGroupPair.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserIdGroupPair.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the security group. In a request, use this parameter for a security group
            in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use
            the security group ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserIdGroupPair.PeeringStatus">
            <summary>
            Gets and sets the property PeeringStatus. 
            <para>
            The status of a VPC peering connection, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserIdGroupPair.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The ID of an AWS account. For a referenced security group in another VPC, the account
            ID of the referenced security group is returned.
            </para>
             
            <para>
            [EC2-Classic] Required when adding or removing rules that reference a security group
            in another AWS account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserIdGroupPair.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC for the referenced security group, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserIdGroupPair.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection, if applicable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VgwTelemetry">
            <summary>
            Describes telemetry for a VPN tunnel.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VgwTelemetry.AcceptedRouteCount">
            <summary>
            Gets and sets the property AcceptedRouteCount. 
            <para>
            The number of accepted routes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VgwTelemetry.LastStatusChange">
            <summary>
            Gets and sets the property LastStatusChange. 
            <para>
            The date and time of the last change in status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VgwTelemetry.OutsideIpAddress">
            <summary>
            Gets and sets the property OutsideIpAddress. 
            <para>
            The Internet-routable IP address of the virtual private gateway's outside interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VgwTelemetry.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the VPN tunnel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VgwTelemetry.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If an error occurs, a description of the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Volume">
            <summary>
            Describes a volume.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.Attachments">
            <summary>
            Gets and sets the property Attachments. 
            <para>
            Information about the volume attachments.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            The time stamp when volume creation was initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Indicates whether the volume will be encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            The number of I/O operations per second (IOPS) that the volume supports. For Provisioned
            IOPS SSD volumes, this represents the number of IOPS that are provisioned for the
            volume. For General Purpose SSD volumes, this represents the baseline performance
            of the volume and the rate at which the volume accumulates I/O credits for bursting.
            For more information on General Purpose SSD baseline performance, I/O credits, and
            bursting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon
            EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            Constraint: Range is 100-20000 IOPS for io1 volumes and 100-10000 IOPS for <code>gp2</code>
            volumes.
            </para>
             
            <para>
            Condition: This parameter is required for requests to create <code>io1</code> volumes;
            it is not used in requests to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>,
            or <code>standard</code> volumes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK)
            that was used to protect the volume encryption key for the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the volume, in GiBs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The snapshot from which the volume was created, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The volume state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.VolumeType">
            <summary>
            Gets and sets the property VolumeType. 
            <para>
            The volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code>
            for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code>
            for Cold HDD, or <code>standard</code> for Magnetic volumes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeAttachment">
            <summary>
            Describes volume attachment details.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.AttachTime">
            <summary>
            Gets and sets the property AttachTime. 
            <para>
            The time stamp when the attachment initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the EBS volume is deleted on instance termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.Device">
            <summary>
            Gets and sets the property Device. 
            <para>
            The device name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The attachment state of the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeDetail">
            <summary>
            Describes an EBS volume.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeDetail.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the volume, in GiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeStatusAction">
            <summary>
            Describes a volume status operation code.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusAction.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The code identifying the operation, for example, <code>enable-volume-io</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusAction.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusAction.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The ID of the event associated with this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusAction.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The event type associated with this operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeStatusDetails">
            <summary>
            Describes a volume status.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the volume status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusDetails.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The intended status of the volume status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeStatusEvent">
            <summary>
            Describes a volume status event.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusEvent.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusEvent.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The ID of this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusEvent.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The type of this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusEvent.NotAfter">
            <summary>
            Gets and sets the property NotAfter. 
            <para>
            The latest end time of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusEvent.NotBefore">
            <summary>
            Gets and sets the property NotBefore. 
            <para>
            The earliest start time of the event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeStatusInfo">
            <summary>
            Describes the status of a volume.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusInfo.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            The details of the volume status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusInfo.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeStatusItem">
            <summary>
            Describes the volume status.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusItem.Actions">
            <summary>
            Gets and sets the property Actions. 
            <para>
            The details of the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusItem.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone of the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusItem.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            A list of events associated with the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusItem.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The volume ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusItem.VolumeStatus">
            <summary>
            Gets and sets the property VolumeStatus. 
            <para>
            The volume status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Vpc">
            <summary>
            Describes a VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The CIDR block for the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.DhcpOptionsId">
            <summary>
            Gets and sets the property DhcpOptionsId. 
            <para>
            The ID of the set of DHCP options you've associated with the VPC (or <code>default</code>
            if the default options are associated with the VPC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.InstanceTenancy">
            <summary>
            Gets and sets the property InstanceTenancy. 
            <para>
            The allowed tenancy of instances launched into the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.IsDefault">
            <summary>
            Gets and sets the property IsDefault. 
            <para>
            Indicates whether the VPC is the default VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpcAttachment">
            <summary>
            Describes an attachment between a virtual private gateway and a VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcAttachment.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcAttachment.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpcClassicLink">
            <summary>
            Describes whether a VPC is enabled for ClassicLink.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcClassicLink.ClassicLinkEnabled">
            <summary>
            Gets and sets the property ClassicLinkEnabled. 
            <para>
            Indicates whether the VPC is enabled for ClassicLink.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcClassicLink.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcClassicLink.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpcEndpoint">
            <summary>
            Describes a VPC endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcEndpoint.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            The date and time the VPC endpoint was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcEndpoint.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The policy document associated with the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcEndpoint.RouteTableIds">
            <summary>
            Gets and sets the property RouteTableIds. 
            <para>
            One or more route tables associated with the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcEndpoint.ServiceName">
            <summary>
            Gets and sets the property ServiceName. 
            <para>
            The name of the AWS service to which the endpoint is associated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcEndpoint.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the VPC endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcEndpoint.VpcEndpointId">
            <summary>
            Gets and sets the property VpcEndpointId. 
            <para>
            The ID of the VPC endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcEndpoint.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC to which the endpoint is associated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpcPeeringConnection">
            <summary>
            Describes a VPC peering connection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.AccepterVpcInfo">
            <summary>
            Gets and sets the property AccepterVpcInfo. 
            <para>
            Information about the accepter VPC. CIDR block information is not returned when creating
            a VPC peering connection, or when describing a VPC peering connection that's in the
            <code>initiating-request</code> or <code>pending-acceptance</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.ExpirationTime">
            <summary>
            Gets and sets the property ExpirationTime. 
            <para>
            The time that an unaccepted VPC peering connection will expire.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.RequesterVpcInfo">
            <summary>
            Gets and sets the property RequesterVpcInfo. 
            <para>
            Information about the requester VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpcPeeringConnectionOptionsDescription">
            <summary>
            Describes the VPC peering connection options.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionOptionsDescription.AllowDnsResolutionFromRemoteVpc">
            <summary>
            Gets and sets the property AllowDnsResolutionFromRemoteVpc. 
            <para>
            Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses
            when queried from instances in a peer VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionOptionsDescription.AllowEgressFromLocalClassicLinkToRemoteVpc">
            <summary>
            Gets and sets the property AllowEgressFromLocalClassicLinkToRemoteVpc. 
            <para>
            Indicates whether a local ClassicLink connection can communicate with the peer VPC
            over the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionOptionsDescription.AllowEgressFromLocalVpcToRemoteClassicLink">
            <summary>
            Gets and sets the property AllowEgressFromLocalVpcToRemoteClassicLink. 
            <para>
            Indicates whether a local VPC can communicate with a ClassicLink connection in the
            peer VPC over the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpcPeeringConnectionStateReason">
            <summary>
            Describes the status of a VPC peering connection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionStateReason.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The status of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionStateReason.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message that provides more information about the status, if applicable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpcPeeringConnectionVpcInfo">
            <summary>
            Describes a VPC in a VPC peering connection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionVpcInfo.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The CIDR block for the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionVpcInfo.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the VPC owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionVpcInfo.PeeringOptions">
            <summary>
            Gets and sets the property PeeringOptions. 
            <para>
            Information about the VPC peering connection options for the accepter or requester
            VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionVpcInfo.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpnConnection">
            <summary>
            Describes a VPN connection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.CustomerGatewayConfiguration">
            <summary>
            Gets and sets the property CustomerGatewayConfiguration. 
            <para>
            The configuration information for the VPN connection's customer gateway (in the native
            XML format). This element is always present in the <a>CreateVpnConnection</a> response;
            however, it's present in the <a>DescribeVpnConnections</a> response only if the VPN
            connection is in the <code>pending</code> or <code>available</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.CustomerGatewayId">
            <summary>
            Gets and sets the property CustomerGatewayId. 
            <para>
            The ID of the customer gateway at your end of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            The VPN connection options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.Routes">
            <summary>
            Gets and sets the property Routes. 
            <para>
            The static routes associated with the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.VgwTelemetry">
            <summary>
            Gets and sets the property VgwTelemetry. 
            <para>
            Information about the VPN tunnel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.VpnConnectionId">
            <summary>
            Gets and sets the property VpnConnectionId. 
            <para>
            The ID of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway at the AWS side of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpnConnectionOptions">
            <summary>
            Describes VPN connection options.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnectionOptions.StaticRoutesOnly">
            <summary>
            Gets and sets the property StaticRoutesOnly. 
            <para>
            Indicates whether the VPN connection uses static routes only. Static routes must be
            used for devices that don't support BGP.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpnConnectionOptionsSpecification">
            <summary>
            Describes VPN connection options.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnectionOptionsSpecification.StaticRoutesOnly">
            <summary>
            Gets and sets the property StaticRoutesOnly. 
            <para>
            Indicates whether the VPN connection uses static routes only. Static routes must be
            used for devices that don't support BGP.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpnGateway">
            <summary>
            Describes a virtual private gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone where the virtual private gateway was created, if applicable.
            This field may be empty or not returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection the virtual private gateway supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.VpcAttachments">
            <summary>
            Gets and sets the property VpcAttachments. 
            <para>
            Any VPCs attached to the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpnStaticRoute">
            <summary>
            Describes a static route for a VPN connection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnStaticRoute.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR block associated with the local subnet of the customer data center.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnStaticRoute.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            Indicates how the routes were provided.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnStaticRoute.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the static route.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptReservedInstancesExchangeQuoteRequestMarshaller">
            <summary>
            AcceptReservedInstancesExchangeQuote Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptReservedInstancesExchangeQuoteRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptReservedInstancesExchangeQuoteRequestMarshaller.Marshall(Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptReservedInstancesExchangeQuoteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AcceptReservedInstancesExchangeQuote operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptReservedInstancesExchangeQuoteResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptReservedInstancesExchangeQuoteResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptReservedInstancesExchangeQuoteResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionRequestMarshaller">
            <summary>
            AcceptVpcPeeringConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionRequestMarshaller.Marshall(Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AcceptVpcPeeringConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for AccountAttribute Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeValueUnmarshaller">
            <summary>
            Response Unmarshaller for AccountAttributeValue Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ActiveInstanceUnmarshaller">
            <summary>
            Response Unmarshaller for ActiveInstance Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ActiveInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ActiveInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ActiveInstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AddressUnmarshaller">
            <summary>
            Response Unmarshaller for Address Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AddressUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AddressUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AddressUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressRequestMarshaller">
            <summary>
            AllocateAddress Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressRequestMarshaller.Marshall(Amazon.EC2.Model.AllocateAddressRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AllocateAddress operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateHostsRequestMarshaller">
            <summary>
            AllocateHosts Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateHostsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateHostsRequestMarshaller.Marshall(Amazon.EC2.Model.AllocateHostsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateHostsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AllocateHosts operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateHostsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateHostsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateHostsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesRequestMarshaller">
            <summary>
            AssignPrivateIpAddresses Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesRequestMarshaller.Marshall(Amazon.EC2.Model.AssignPrivateIpAddressesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssignPrivateIpAddresses operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressRequestMarshaller">
            <summary>
            AssociateAddress Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressRequestMarshaller.Marshall(Amazon.EC2.Model.AssociateAddressRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateAddress operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsRequestMarshaller">
            <summary>
            AssociateDhcpOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsRequestMarshaller.Marshall(Amazon.EC2.Model.AssociateDhcpOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateDhcpOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableRequestMarshaller">
            <summary>
            AssociateRouteTable Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableRequestMarshaller.Marshall(Amazon.EC2.Model.AssociateRouteTableRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateRouteTable operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachClassicLinkVpcRequestMarshaller">
            <summary>
            AttachClassicLinkVpc Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachClassicLinkVpcRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachClassicLinkVpcRequestMarshaller.Marshall(Amazon.EC2.Model.AttachClassicLinkVpcRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachClassicLinkVpcResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachClassicLinkVpc operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachClassicLinkVpcResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachClassicLinkVpcResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AttachClassicLinkVpcResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayRequestMarshaller">
            <summary>
            AttachInternetGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.AttachInternetGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachInternetGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceRequestMarshaller">
            <summary>
            AttachNetworkInterface Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceRequestMarshaller.Marshall(Amazon.EC2.Model.AttachNetworkInterfaceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachNetworkInterface operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeRequestMarshaller">
            <summary>
            AttachVolume Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeRequestMarshaller.Marshall(Amazon.EC2.Model.AttachVolumeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachVolume operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayRequestMarshaller">
            <summary>
            AttachVpnGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.AttachVpnGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachVpnGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressRequestMarshaller">
            <summary>
            AuthorizeSecurityGroupEgress Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressRequestMarshaller.Marshall(Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AuthorizeSecurityGroupEgress operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressRequestMarshaller">
            <summary>
            AuthorizeSecurityGroupIngress Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressRequestMarshaller.Marshall(Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AuthorizeSecurityGroupIngress operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneMessageUnmarshaller">
            <summary>
            Response Unmarshaller for AvailabilityZoneMessage Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneMessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneMessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneMessageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller">
            <summary>
            Response Unmarshaller for AvailabilityZone Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AvailableCapacityUnmarshaller">
            <summary>
            Response Unmarshaller for AvailableCapacity Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AvailableCapacityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.AvailableCapacityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.AvailableCapacityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.BlockDeviceMappingUnmarshaller">
            <summary>
            Response Unmarshaller for BlockDeviceMapping Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.BlockDeviceMappingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.BlockDeviceMappingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.BlockDeviceMappingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceRequestMarshaller">
            <summary>
            BundleInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceRequestMarshaller.Marshall(Amazon.EC2.Model.BundleInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BundleInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskErrorUnmarshaller">
            <summary>
            Response Unmarshaller for BundleTaskError Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskErrorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskUnmarshaller">
            <summary>
            Response Unmarshaller for BundleTask Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskRequestMarshaller">
            <summary>
            CancelBundleTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskRequestMarshaller.Marshall(Amazon.EC2.Model.CancelBundleTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelBundleTask operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskRequestMarshaller">
            <summary>
            CancelConversionTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskRequestMarshaller.Marshall(Amazon.EC2.Model.CancelConversionTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelConversionTask operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller">
            <summary>
            CancelExportTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller.Marshall(Amazon.EC2.Model.CancelExportTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelExportTask operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelImportTaskRequestMarshaller">
            <summary>
            CancelImportTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelImportTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelImportTaskRequestMarshaller.Marshall(Amazon.EC2.Model.CancelImportTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelImportTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelImportTask operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelImportTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelImportTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CancelImportTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelledSpotInstanceRequestUnmarshaller">
            <summary>
            Response Unmarshaller for CancelledSpotInstanceRequest Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelledSpotInstanceRequestUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelledSpotInstanceRequestUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CancelledSpotInstanceRequestUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingRequestMarshaller">
            <summary>
            CancelReservedInstancesListing Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingRequestMarshaller.Marshall(Amazon.EC2.Model.CancelReservedInstancesListingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelReservedInstancesListing operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorItemUnmarshaller">
            <summary>
            Response Unmarshaller for CancelSpotFleetRequestsErrorItem Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorUnmarshaller">
            <summary>
            Response Unmarshaller for CancelSpotFleetRequestsError Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsRequestMarshaller">
            <summary>
            CancelSpotFleetRequests Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsRequestMarshaller.Marshall(Amazon.EC2.Model.CancelSpotFleetRequestsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelSpotFleetRequests operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsSuccessItemUnmarshaller">
            <summary>
            Response Unmarshaller for CancelSpotFleetRequestsSuccessItem Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsSuccessItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsSuccessItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsSuccessItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsRequestMarshaller">
            <summary>
            CancelSpotInstanceRequests Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsRequestMarshaller.Marshall(Amazon.EC2.Model.CancelSpotInstanceRequestsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelSpotInstanceRequests operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLinkDnsSupportUnmarshaller">
            <summary>
            Response Unmarshaller for ClassicLinkDnsSupport Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLinkDnsSupportUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLinkDnsSupportUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLinkDnsSupportUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLinkInstanceUnmarshaller">
            <summary>
            Response Unmarshaller for ClassicLinkInstance Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLinkInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLinkInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLinkInstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceRequestMarshaller">
            <summary>
            ConfirmProductInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceRequestMarshaller.Marshall(Amazon.EC2.Model.ConfirmProductInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConfirmProductInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ConversionTaskUnmarshaller">
            <summary>
            Response Unmarshaller for ConversionTask Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ConversionTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ConversionTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ConversionTaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageRequestMarshaller">
            <summary>
            CopyImage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageRequestMarshaller.Marshall(Amazon.EC2.Model.CopyImageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CopyImage operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotRequestMarshaller">
            <summary>
            CopySnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotRequestMarshaller.Marshall(Amazon.EC2.Model.CopySnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CopySnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayRequestMarshaller">
            <summary>
            CreateCustomerGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.CreateCustomerGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCustomerGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsRequestMarshaller">
            <summary>
            CreateDhcpOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsRequestMarshaller.Marshall(Amazon.EC2.Model.CreateDhcpOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDhcpOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateFlowLogsRequestMarshaller">
            <summary>
            CreateFlowLogs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateFlowLogsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateFlowLogsRequestMarshaller.Marshall(Amazon.EC2.Model.CreateFlowLogsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateFlowLogsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateFlowLogs operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateFlowLogsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateFlowLogsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateFlowLogsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageRequestMarshaller">
            <summary>
            CreateImage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageRequestMarshaller.Marshall(Amazon.EC2.Model.CreateImageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateImage operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskRequestMarshaller">
            <summary>
            CreateInstanceExportTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskRequestMarshaller.Marshall(Amazon.EC2.Model.CreateInstanceExportTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateInstanceExportTask operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayRequestMarshaller">
            <summary>
            CreateInternetGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.CreateInternetGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateInternetGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairRequestMarshaller">
            <summary>
            CreateKeyPair Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairRequestMarshaller.Marshall(Amazon.EC2.Model.CreateKeyPairRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateKeyPair operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNatGatewayRequestMarshaller">
            <summary>
            CreateNatGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNatGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNatGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.CreateNatGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNatGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateNatGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNatGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNatGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNatGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryRequestMarshaller">
            <summary>
            CreateNetworkAclEntry Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryRequestMarshaller.Marshall(Amazon.EC2.Model.CreateNetworkAclEntryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateNetworkAclEntry operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclRequestMarshaller">
            <summary>
            CreateNetworkAcl Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclRequestMarshaller.Marshall(Amazon.EC2.Model.CreateNetworkAclRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateNetworkAcl operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceRequestMarshaller">
            <summary>
            CreateNetworkInterface Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceRequestMarshaller.Marshall(Amazon.EC2.Model.CreateNetworkInterfaceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateNetworkInterface operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupRequestMarshaller">
            <summary>
            CreatePlacementGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupRequestMarshaller.Marshall(Amazon.EC2.Model.CreatePlacementGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePlacementGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingRequestMarshaller">
            <summary>
            CreateReservedInstancesListing Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingRequestMarshaller.Marshall(Amazon.EC2.Model.CreateReservedInstancesListingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateReservedInstancesListing operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteRequestMarshaller">
            <summary>
            CreateRoute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteRequestMarshaller.Marshall(Amazon.EC2.Model.CreateRouteRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateRoute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableRequestMarshaller">
            <summary>
            CreateRouteTable Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableRequestMarshaller.Marshall(Amazon.EC2.Model.CreateRouteTableRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateRouteTable operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupRequestMarshaller">
            <summary>
            CreateSecurityGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupRequestMarshaller.Marshall(Amazon.EC2.Model.CreateSecurityGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSecurityGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller">
            <summary>
            CreateSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller.Marshall(Amazon.EC2.Model.CreateSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionRequestMarshaller">
            <summary>
            CreateSpotDatafeedSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionRequestMarshaller.Marshall(Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSpotDatafeedSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetRequestMarshaller">
            <summary>
            CreateSubnet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetRequestMarshaller.Marshall(Amazon.EC2.Model.CreateSubnetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSubnet operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller">
            <summary>
            CreateTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller.Marshall(Amazon.EC2.Model.CreateTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTags operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumePermissionUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVolumePermission Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumePermissionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumePermissionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumePermissionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeRequestMarshaller">
            <summary>
            CreateVolume Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeRequestMarshaller.Marshall(Amazon.EC2.Model.CreateVolumeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVolume operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointRequestMarshaller">
            <summary>
            CreateVpcEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointRequestMarshaller.Marshall(Amazon.EC2.Model.CreateVpcEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVpcEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionRequestMarshaller">
            <summary>
            CreateVpcPeeringConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionRequestMarshaller.Marshall(Amazon.EC2.Model.CreateVpcPeeringConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVpcPeeringConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcRequestMarshaller">
            <summary>
            CreateVpc Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcRequestMarshaller.Marshall(Amazon.EC2.Model.CreateVpcRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVpc operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRequestMarshaller">
            <summary>
            CreateVpnConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRequestMarshaller.Marshall(Amazon.EC2.Model.CreateVpnConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVpnConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteRequestMarshaller">
            <summary>
            CreateVpnConnectionRoute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteRequestMarshaller.Marshall(Amazon.EC2.Model.CreateVpnConnectionRouteRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVpnConnectionRoute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayRequestMarshaller">
            <summary>
            CreateVpnGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.CreateVpnGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVpnGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CustomerGatewayUnmarshaller">
            <summary>
            Response Unmarshaller for CustomerGateway Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CustomerGatewayUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.CustomerGatewayUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.CustomerGatewayUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayRequestMarshaller">
            <summary>
            DeleteCustomerGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteCustomerGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCustomerGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsRequestMarshaller">
            <summary>
            DeleteDhcpOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteDhcpOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDhcpOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFlowLogsRequestMarshaller">
            <summary>
            DeleteFlowLogs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFlowLogsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFlowLogsRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteFlowLogsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFlowLogsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteFlowLogs operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFlowLogsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFlowLogsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFlowLogsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayRequestMarshaller">
            <summary>
            DeleteInternetGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteInternetGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteInternetGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairRequestMarshaller">
            <summary>
            DeleteKeyPair Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteKeyPairRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteKeyPair operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNatGatewayRequestMarshaller">
            <summary>
            DeleteNatGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNatGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNatGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteNatGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNatGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteNatGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNatGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNatGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNatGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryRequestMarshaller">
            <summary>
            DeleteNetworkAclEntry Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteNetworkAclEntryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteNetworkAclEntry operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclRequestMarshaller">
            <summary>
            DeleteNetworkAcl Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteNetworkAclRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteNetworkAcl operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceRequestMarshaller">
            <summary>
            DeleteNetworkInterface Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteNetworkInterfaceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteNetworkInterface operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupRequestMarshaller">
            <summary>
            DeletePlacementGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupRequestMarshaller.Marshall(Amazon.EC2.Model.DeletePlacementGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePlacementGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteRequestMarshaller">
            <summary>
            DeleteRoute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteRouteRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRoute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableRequestMarshaller">
            <summary>
            DeleteRouteTable Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteRouteTableRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRouteTable operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupRequestMarshaller">
            <summary>
            DeleteSecurityGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteSecurityGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSecurityGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller">
            <summary>
            DeleteSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionRequestMarshaller">
            <summary>
            DeleteSpotDatafeedSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSpotDatafeedSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetRequestMarshaller">
            <summary>
            DeleteSubnet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteSubnetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSubnet operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller">
            <summary>
            DeleteTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTags operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeRequestMarshaller">
            <summary>
            DeleteVolume Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteVolumeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVolume operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointsRequestMarshaller">
            <summary>
            DeleteVpcEndpoints Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointsRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteVpcEndpointsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVpcEndpoints operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionRequestMarshaller">
            <summary>
            DeleteVpcPeeringConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVpcPeeringConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcRequestMarshaller">
            <summary>
            DeleteVpc Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteVpcRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVpc operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRequestMarshaller">
            <summary>
            DeleteVpnConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteVpnConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVpnConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteRequestMarshaller">
            <summary>
            DeleteVpnConnectionRoute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteVpnConnectionRouteRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVpnConnectionRoute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayRequestMarshaller">
            <summary>
            DeleteVpnGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.DeleteVpnGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVpnGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageRequestMarshaller">
            <summary>
            DeregisterImage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageRequestMarshaller.Marshall(Amazon.EC2.Model.DeregisterImageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterImage operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesRequestMarshaller">
            <summary>
            DescribeAccountAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeAccountAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAccountAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesRequestMarshaller">
            <summary>
            DescribeAddresses Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeAddressesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAddresses operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesRequestMarshaller">
            <summary>
            DescribeAvailabilityZones Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeAvailabilityZonesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAvailabilityZones operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksRequestMarshaller">
            <summary>
            DescribeBundleTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeBundleTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeBundleTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClassicLinkInstancesRequestMarshaller">
            <summary>
            DescribeClassicLinkInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClassicLinkInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClassicLinkInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeClassicLinkInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClassicLinkInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeClassicLinkInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClassicLinkInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClassicLinkInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClassicLinkInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksRequestMarshaller">
            <summary>
            DescribeConversionTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeConversionTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeConversionTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysRequestMarshaller">
            <summary>
            DescribeCustomerGateways Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeCustomerGatewaysRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCustomerGateways operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsRequestMarshaller">
            <summary>
            DescribeDhcpOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeDhcpOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDhcpOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller">
            <summary>
            DescribeExportTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeExportTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeExportTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFlowLogsRequestMarshaller">
            <summary>
            DescribeFlowLogs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFlowLogsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFlowLogsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeFlowLogsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFlowLogsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeFlowLogs operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFlowLogsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFlowLogsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFlowLogsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationOfferingsRequestMarshaller">
            <summary>
            DescribeHostReservationOfferings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationOfferingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationOfferingsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeHostReservationOfferingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationOfferingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeHostReservationOfferings operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationOfferingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationOfferingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationOfferingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationsRequestMarshaller">
            <summary>
            DescribeHostReservations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeHostReservationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeHostReservations operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostReservationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostsRequestMarshaller">
            <summary>
            DescribeHosts Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeHostsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeHosts operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeHostsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdentityIdFormatRequestMarshaller">
            <summary>
            DescribeIdentityIdFormat Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdentityIdFormatRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdentityIdFormatRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeIdentityIdFormatRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdentityIdFormatResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeIdentityIdFormat operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdentityIdFormatResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdentityIdFormatResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdentityIdFormatResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdFormatRequestMarshaller">
            <summary>
            DescribeIdFormat Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdFormatRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdFormatRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeIdFormatRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdFormatResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeIdFormat operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdFormatResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdFormatResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeIdFormatResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeRequestMarshaller">
            <summary>
            DescribeImageAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeImageAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeImageAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesRequestMarshaller">
            <summary>
            DescribeImages Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeImagesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeImages operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportImageTasksRequestMarshaller">
            <summary>
            DescribeImportImageTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportImageTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportImageTasksRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeImportImageTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportImageTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeImportImageTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportImageTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportImageTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportImageTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportSnapshotTasksRequestMarshaller">
            <summary>
            DescribeImportSnapshotTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportSnapshotTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportSnapshotTasksRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeImportSnapshotTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportSnapshotTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeImportSnapshotTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportSnapshotTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportSnapshotTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportSnapshotTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeRequestMarshaller">
            <summary>
            DescribeInstanceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeInstanceAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInstanceAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesRequestMarshaller">
            <summary>
            DescribeInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusRequestMarshaller">
            <summary>
            DescribeInstanceStatus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeInstanceStatusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInstanceStatus operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysRequestMarshaller">
            <summary>
            DescribeInternetGateways Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeInternetGatewaysRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInternetGateways operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsRequestMarshaller">
            <summary>
            DescribeKeyPairs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeKeyPairsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeKeyPairs operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMovingAddressesRequestMarshaller">
            <summary>
            DescribeMovingAddresses Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMovingAddressesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMovingAddressesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeMovingAddressesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMovingAddressesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMovingAddresses operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMovingAddressesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMovingAddressesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMovingAddressesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNatGatewaysRequestMarshaller">
            <summary>
            DescribeNatGateways Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNatGatewaysRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNatGatewaysRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeNatGatewaysRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNatGatewaysResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeNatGateways operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNatGatewaysResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNatGatewaysResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNatGatewaysResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsRequestMarshaller">
            <summary>
            DescribeNetworkAcls Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeNetworkAclsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeNetworkAcls operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeRequestMarshaller">
            <summary>
            DescribeNetworkInterfaceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeNetworkInterfaceAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesRequestMarshaller">
            <summary>
            DescribeNetworkInterfaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeNetworkInterfacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeNetworkInterfaces operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsRequestMarshaller">
            <summary>
            DescribePlacementGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribePlacementGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribePlacementGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrefixListsRequestMarshaller">
            <summary>
            DescribePrefixLists Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrefixListsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrefixListsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribePrefixListsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrefixListsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribePrefixLists operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrefixListsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrefixListsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrefixListsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsRequestMarshaller">
            <summary>
            DescribeRegions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeRegionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeRegions operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsRequestMarshaller">
            <summary>
            DescribeReservedInstancesListings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeReservedInstancesListingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeReservedInstancesListings operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsRequestMarshaller">
            <summary>
            DescribeReservedInstancesModifications Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeReservedInstancesModifications operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsRequestMarshaller">
            <summary>
            DescribeReservedInstancesOfferings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeReservedInstancesOfferings operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesRequestMarshaller">
            <summary>
            DescribeReservedInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeReservedInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeReservedInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesRequestMarshaller">
            <summary>
            DescribeRouteTables Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeRouteTablesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeRouteTables operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstanceAvailabilityRequestMarshaller">
            <summary>
            DescribeScheduledInstanceAvailability Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstanceAvailabilityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstanceAvailabilityRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstanceAvailabilityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeScheduledInstanceAvailability operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstanceAvailabilityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstanceAvailabilityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstanceAvailabilityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstancesRequestMarshaller">
            <summary>
            DescribeScheduledInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeScheduledInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeScheduledInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeScheduledInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupReferencesRequestMarshaller">
            <summary>
            DescribeSecurityGroupReferences Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupReferencesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupReferencesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeSecurityGroupReferencesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupReferencesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSecurityGroupReferences operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupReferencesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupReferencesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupReferencesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsRequestMarshaller">
            <summary>
            DescribeSecurityGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeSecurityGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSecurityGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeRequestMarshaller">
            <summary>
            DescribeSnapshotAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeSnapshotAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSnapshotAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller">
            <summary>
            DescribeSnapshots Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeSnapshotsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSnapshots operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionRequestMarshaller">
            <summary>
            DescribeSpotDatafeedSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSpotDatafeedSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetInstancesRequestMarshaller">
            <summary>
            DescribeSpotFleetInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeSpotFleetInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSpotFleetInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestHistoryRequestMarshaller">
            <summary>
            DescribeSpotFleetRequestHistory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestHistoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestHistoryRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestHistoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSpotFleetRequestHistory operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestHistoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestHistoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestHistoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestsRequestMarshaller">
            <summary>
            DescribeSpotFleetRequests Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeSpotFleetRequestsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSpotFleetRequests operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsRequestMarshaller">
            <summary>
            DescribeSpotInstanceRequests Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSpotInstanceRequests operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryRequestMarshaller">
            <summary>
            DescribeSpotPriceHistory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeSpotPriceHistoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSpotPriceHistory operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeStaleSecurityGroupsRequestMarshaller">
            <summary>
            DescribeStaleSecurityGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeStaleSecurityGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeStaleSecurityGroupsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeStaleSecurityGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeStaleSecurityGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeStaleSecurityGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeStaleSecurityGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeStaleSecurityGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeStaleSecurityGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsRequestMarshaller">
            <summary>
            DescribeSubnets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeSubnetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSubnets operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller">
            <summary>
            DescribeTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTags operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeRequestMarshaller">
            <summary>
            DescribeVolumeAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVolumeAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVolumeAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesRequestMarshaller">
            <summary>
            DescribeVolumes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVolumesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVolumes operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusRequestMarshaller">
            <summary>
            DescribeVolumeStatus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVolumeStatusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVolumeStatus operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeRequestMarshaller">
            <summary>
            DescribeVpcAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVpcAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpcAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkDnsSupportRequestMarshaller">
            <summary>
            DescribeVpcClassicLinkDnsSupport Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkDnsSupportRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkDnsSupportRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkDnsSupportResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpcClassicLinkDnsSupport operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkDnsSupportResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkDnsSupportResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkDnsSupportResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkRequestMarshaller">
            <summary>
            DescribeVpcClassicLink Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVpcClassicLinkRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpcClassicLink operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicesRequestMarshaller">
            <summary>
            DescribeVpcEndpointServices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicesRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVpcEndpointServicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpcEndpointServices operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointsRequestMarshaller">
            <summary>
            DescribeVpcEndpoints Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVpcEndpointsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpcEndpoints operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsRequestMarshaller">
            <summary>
            DescribeVpcPeeringConnections Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpcPeeringConnections operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsRequestMarshaller">
            <summary>
            DescribeVpcs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVpcsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpcs operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsRequestMarshaller">
            <summary>
            DescribeVpnConnections Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVpnConnectionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpnConnections operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysRequestMarshaller">
            <summary>
            DescribeVpnGateways Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysRequestMarshaller.Marshall(Amazon.EC2.Model.DescribeVpnGatewaysRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpnGateways operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachClassicLinkVpcRequestMarshaller">
            <summary>
            DetachClassicLinkVpc Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachClassicLinkVpcRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachClassicLinkVpcRequestMarshaller.Marshall(Amazon.EC2.Model.DetachClassicLinkVpcRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachClassicLinkVpcResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachClassicLinkVpc operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachClassicLinkVpcResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachClassicLinkVpcResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DetachClassicLinkVpcResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayRequestMarshaller">
            <summary>
            DetachInternetGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.DetachInternetGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachInternetGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceRequestMarshaller">
            <summary>
            DetachNetworkInterface Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceRequestMarshaller.Marshall(Amazon.EC2.Model.DetachNetworkInterfaceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachNetworkInterface operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeRequestMarshaller">
            <summary>
            DetachVolume Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeRequestMarshaller.Marshall(Amazon.EC2.Model.DetachVolumeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachVolume operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayRequestMarshaller">
            <summary>
            DetachVpnGateway Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayRequestMarshaller.Marshall(Amazon.EC2.Model.DetachVpnGatewayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachVpnGateway operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DhcpConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DhcpConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DhcpConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DhcpConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DhcpConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DhcpOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for DhcpOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DhcpOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DhcpOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DhcpOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationRequestMarshaller">
            <summary>
            DisableVgwRoutePropagation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationRequestMarshaller.Marshall(Amazon.EC2.Model.DisableVgwRoutePropagationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableVgwRoutePropagation operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkDnsSupportRequestMarshaller">
            <summary>
            DisableVpcClassicLinkDnsSupport Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkDnsSupportRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkDnsSupportRequestMarshaller.Marshall(Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkDnsSupportResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableVpcClassicLinkDnsSupport operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkDnsSupportResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkDnsSupportResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkDnsSupportResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkRequestMarshaller">
            <summary>
            DisableVpcClassicLink Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkRequestMarshaller.Marshall(Amazon.EC2.Model.DisableVpcClassicLinkRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableVpcClassicLink operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressRequestMarshaller">
            <summary>
            DisassociateAddress Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressRequestMarshaller.Marshall(Amazon.EC2.Model.DisassociateAddressRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateAddress operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableRequestMarshaller">
            <summary>
            DisassociateRouteTable Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableRequestMarshaller.Marshall(Amazon.EC2.Model.DisassociateRouteTableRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateRouteTable operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DiskImageDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageVolumeDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DiskImageVolumeDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageVolumeDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageVolumeDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageVolumeDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EbsBlockDeviceUnmarshaller">
            <summary>
            Response Unmarshaller for EbsBlockDevice Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EbsBlockDeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EbsBlockDeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.EbsBlockDeviceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EbsInstanceBlockDeviceUnmarshaller">
            <summary>
            Response Unmarshaller for EbsInstanceBlockDevice Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EbsInstanceBlockDeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EbsInstanceBlockDeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.EbsInstanceBlockDeviceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationRequestMarshaller">
            <summary>
            EnableVgwRoutePropagation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationRequestMarshaller.Marshall(Amazon.EC2.Model.EnableVgwRoutePropagationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableVgwRoutePropagation operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIORequestMarshaller">
            <summary>
            EnableVolumeIO Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIORequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIORequestMarshaller.Marshall(Amazon.EC2.Model.EnableVolumeIORequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIOResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableVolumeIO operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIOResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIOResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIOResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkDnsSupportRequestMarshaller">
            <summary>
            EnableVpcClassicLinkDnsSupport Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkDnsSupportRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkDnsSupportRequestMarshaller.Marshall(Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkDnsSupportResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableVpcClassicLinkDnsSupport operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkDnsSupportResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkDnsSupportResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkDnsSupportResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkRequestMarshaller">
            <summary>
            EnableVpcClassicLink Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkRequestMarshaller.Marshall(Amazon.EC2.Model.EnableVpcClassicLinkRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableVpcClassicLink operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EventInformationUnmarshaller">
            <summary>
            Response Unmarshaller for EventInformation Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EventInformationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.EventInformationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.EventInformationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller">
            <summary>
            Response Unmarshaller for ExportTask Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ExportToS3TaskUnmarshaller">
            <summary>
            Response Unmarshaller for ExportToS3Task Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ExportToS3TaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ExportToS3TaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ExportToS3TaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.FlowLogUnmarshaller">
            <summary>
            Response Unmarshaller for FlowLog Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.FlowLogUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.FlowLogUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.FlowLogUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputRequestMarshaller">
            <summary>
            GetConsoleOutput Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputRequestMarshaller.Marshall(Amazon.EC2.Model.GetConsoleOutputRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetConsoleOutput operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleScreenshotRequestMarshaller">
            <summary>
            GetConsoleScreenshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleScreenshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleScreenshotRequestMarshaller.Marshall(Amazon.EC2.Model.GetConsoleScreenshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleScreenshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetConsoleScreenshot operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleScreenshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleScreenshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleScreenshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetHostReservationPurchasePreviewRequestMarshaller">
            <summary>
            GetHostReservationPurchasePreview Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetHostReservationPurchasePreviewRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetHostReservationPurchasePreviewRequestMarshaller.Marshall(Amazon.EC2.Model.GetHostReservationPurchasePreviewRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetHostReservationPurchasePreviewResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetHostReservationPurchasePreview operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetHostReservationPurchasePreviewResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetHostReservationPurchasePreviewResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.GetHostReservationPurchasePreviewResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataRequestMarshaller">
            <summary>
            GetPasswordData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataRequestMarshaller.Marshall(Amazon.EC2.Model.GetPasswordDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPasswordData operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetReservedInstancesExchangeQuoteRequestMarshaller">
            <summary>
            GetReservedInstancesExchangeQuote Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetReservedInstancesExchangeQuoteRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetReservedInstancesExchangeQuoteRequestMarshaller.Marshall(Amazon.EC2.Model.GetReservedInstancesExchangeQuoteRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetReservedInstancesExchangeQuoteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetReservedInstancesExchangeQuote operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetReservedInstancesExchangeQuoteResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GetReservedInstancesExchangeQuoteResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.GetReservedInstancesExchangeQuoteResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GroupIdentifierUnmarshaller">
            <summary>
            Response Unmarshaller for GroupIdentifier Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GroupIdentifierUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.GroupIdentifierUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.GroupIdentifierUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.HistoryRecordUnmarshaller">
            <summary>
            Response Unmarshaller for HistoryRecord Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HistoryRecordUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HistoryRecordUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.HistoryRecordUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.HostInstanceUnmarshaller">
            <summary>
            Response Unmarshaller for HostInstance Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HostInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HostInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.HostInstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.HostOfferingUnmarshaller">
            <summary>
            Response Unmarshaller for HostOffering Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HostOfferingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HostOfferingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.HostOfferingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.HostPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for HostProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HostPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HostPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.HostPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.HostReservationUnmarshaller">
            <summary>
            Response Unmarshaller for HostReservation Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HostReservationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HostReservationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.HostReservationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.HostUnmarshaller">
            <summary>
            Response Unmarshaller for Host Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HostUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.HostUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.HostUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for IamInstanceProfileSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileUnmarshaller">
            <summary>
            Response Unmarshaller for IamInstanceProfile Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.IcmpTypeCodeUnmarshaller">
            <summary>
            Response Unmarshaller for IcmpTypeCode Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.IcmpTypeCodeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.IcmpTypeCodeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.IcmpTypeCodeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.IdFormatUnmarshaller">
            <summary>
            Response Unmarshaller for IdFormat Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.IdFormatUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.IdFormatUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.IdFormatUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImageAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for ImageAttribute Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImageAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImageAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImageAttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImageUnmarshaller">
            <summary>
            Response Unmarshaller for Image Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageRequestMarshaller">
            <summary>
            ImportImage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageRequestMarshaller.Marshall(Amazon.EC2.Model.ImportImageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportImage operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageTaskUnmarshaller">
            <summary>
            Response Unmarshaller for ImportImageTask Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageTaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceRequestMarshaller">
            <summary>
            ImportInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceRequestMarshaller.Marshall(Amazon.EC2.Model.ImportInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceTaskDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for ImportInstanceTaskDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceTaskDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceTaskDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceTaskDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceVolumeDetailItemUnmarshaller">
            <summary>
            Response Unmarshaller for ImportInstanceVolumeDetailItem Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceVolumeDetailItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceVolumeDetailItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceVolumeDetailItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairRequestMarshaller">
            <summary>
            ImportKeyPair Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairRequestMarshaller.Marshall(Amazon.EC2.Model.ImportKeyPairRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportKeyPair operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotRequestMarshaller">
            <summary>
            ImportSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotRequestMarshaller.Marshall(Amazon.EC2.Model.ImportSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotTaskUnmarshaller">
            <summary>
            Response Unmarshaller for ImportSnapshotTask Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotTaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeRequestMarshaller">
            <summary>
            ImportVolume Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeRequestMarshaller.Marshall(Amazon.EC2.Model.ImportVolumeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportVolume operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeTaskDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for ImportVolumeTaskDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeTaskDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeTaskDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeTaskDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceAttribute Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceAttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceBlockDeviceMappingUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceBlockDeviceMapping Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceBlockDeviceMappingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceBlockDeviceMappingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceBlockDeviceMappingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCapacityUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceCapacity Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCapacityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCapacityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCapacityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCountUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceCount Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCountUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCountUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCountUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceExportDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceExportDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceExportDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceExportDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceExportDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceMonitoringUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceMonitoring Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceMonitoringUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceMonitoringUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceMonitoringUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceNetworkInterfaceAssociation Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAssociationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceNetworkInterfaceAttachment Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAttachmentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceNetworkInterfaceSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceNetworkInterface Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstancePrivateIpAddressUnmarshaller">
            <summary>
            Response Unmarshaller for InstancePrivateIpAddress Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstancePrivateIpAddressUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstancePrivateIpAddressUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstancePrivateIpAddressUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateChangeUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceStateChange Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateChangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateChangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateChangeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceState Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceStatusDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusEventUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceStatusEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceStatusSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceUnmarshaller">
            <summary>
            Response Unmarshaller for Instance Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayAttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for InternetGatewayAttachment Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayAttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayAttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayAttachmentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayUnmarshaller">
            <summary>
            Response Unmarshaller for InternetGateway Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.IpPermissionUnmarshaller">
            <summary>
            Response Unmarshaller for IpPermission Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.IpPermissionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.IpPermissionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.IpPermissionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairInfoUnmarshaller">
            <summary>
            Response Unmarshaller for KeyPairInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairUnmarshaller">
            <summary>
            Response Unmarshaller for KeyPair Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.LaunchPermissionUnmarshaller">
            <summary>
            Response Unmarshaller for LaunchPermission Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.LaunchPermissionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.LaunchPermissionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.LaunchPermissionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.LaunchSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for LaunchSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.LaunchSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.LaunchSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.LaunchSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyHostsRequestMarshaller">
            <summary>
            ModifyHosts Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyHostsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyHostsRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyHostsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyHostsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyHosts operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyHostsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyHostsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyHostsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdentityIdFormatRequestMarshaller">
            <summary>
            ModifyIdentityIdFormat Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdentityIdFormatRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdentityIdFormatRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyIdentityIdFormatRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdentityIdFormatResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyIdentityIdFormat operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdentityIdFormatResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdentityIdFormatResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdentityIdFormatResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdFormatRequestMarshaller">
            <summary>
            ModifyIdFormat Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdFormatRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdFormatRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyIdFormatRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdFormatResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyIdFormat operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdFormatResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdFormatResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyIdFormatResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeRequestMarshaller">
            <summary>
            ModifyImageAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyImageAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyImageAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeRequestMarshaller">
            <summary>
            ModifyInstanceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyInstanceAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyInstanceAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstancePlacementRequestMarshaller">
            <summary>
            ModifyInstancePlacement Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstancePlacementRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstancePlacementRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyInstancePlacementRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstancePlacementResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyInstancePlacement operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstancePlacementResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstancePlacementResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstancePlacementResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeRequestMarshaller">
            <summary>
            ModifyNetworkInterfaceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyNetworkInterfaceAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesRequestMarshaller">
            <summary>
            ModifyReservedInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyReservedInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyReservedInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeRequestMarshaller">
            <summary>
            ModifySnapshotAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.ModifySnapshotAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifySnapshotAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySpotFleetRequestRequestMarshaller">
            <summary>
            ModifySpotFleetRequest Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySpotFleetRequestRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySpotFleetRequestRequestMarshaller.Marshall(Amazon.EC2.Model.ModifySpotFleetRequestRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySpotFleetRequestResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifySpotFleetRequest operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySpotFleetRequestResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySpotFleetRequestResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySpotFleetRequestResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeRequestMarshaller">
            <summary>
            ModifySubnetAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.ModifySubnetAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifySubnetAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeRequestMarshaller">
            <summary>
            ModifyVolumeAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyVolumeAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyVolumeAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeRequestMarshaller">
            <summary>
            ModifyVpcAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyVpcAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyVpcAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointRequestMarshaller">
            <summary>
            ModifyVpcEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyVpcEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyVpcEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcPeeringConnectionOptionsRequestMarshaller">
            <summary>
            ModifyVpcPeeringConnectionOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcPeeringConnectionOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcPeeringConnectionOptionsRequestMarshaller.Marshall(Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcPeeringConnectionOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyVpcPeeringConnectionOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcPeeringConnectionOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcPeeringConnectionOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcPeeringConnectionOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.MonitoringUnmarshaller">
            <summary>
            Response Unmarshaller for Monitoring Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MonitoringUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MonitoringUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.MonitoringUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesRequestMarshaller">
            <summary>
            MonitorInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.MonitorInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for MonitorInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.MoveAddressToVpcRequestMarshaller">
            <summary>
            MoveAddressToVpc Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MoveAddressToVpcRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MoveAddressToVpcRequestMarshaller.Marshall(Amazon.EC2.Model.MoveAddressToVpcRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.MoveAddressToVpcResponseUnmarshaller">
            <summary>
            Response Unmarshaller for MoveAddressToVpc operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MoveAddressToVpcResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MoveAddressToVpcResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.MoveAddressToVpcResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.MovingAddressStatusUnmarshaller">
            <summary>
            Response Unmarshaller for MovingAddressStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MovingAddressStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.MovingAddressStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.MovingAddressStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NatGatewayAddressUnmarshaller">
            <summary>
            Response Unmarshaller for NatGatewayAddress Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NatGatewayAddressUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NatGatewayAddressUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.NatGatewayAddressUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NatGatewayUnmarshaller">
            <summary>
            Response Unmarshaller for NatGateway Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NatGatewayUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NatGatewayUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.NatGatewayUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkAclAssociation Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclAssociationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclEntryUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkAclEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkAcl Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterfaceAssociation Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAssociationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterfaceAttachment Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAttachmentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfacePrivateIpAddressUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterfacePrivateIpAddress Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfacePrivateIpAddressUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfacePrivateIpAddressUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfacePrivateIpAddressUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterface Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PeeringConnectionOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for PeeringConnectionOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PeeringConnectionOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PeeringConnectionOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PeeringConnectionOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PlacementGroupUnmarshaller">
            <summary>
            Response Unmarshaller for PlacementGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PlacementGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PlacementGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PlacementGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PlacementUnmarshaller">
            <summary>
            Response Unmarshaller for Placement Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PlacementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PlacementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PlacementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PortRangeUnmarshaller">
            <summary>
            Response Unmarshaller for PortRange Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PortRangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PortRangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PortRangeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListIdUnmarshaller">
            <summary>
            Response Unmarshaller for PrefixListId Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListIdUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListIdUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListIdUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListUnmarshaller">
            <summary>
            Response Unmarshaller for PrefixList Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PriceScheduleUnmarshaller">
            <summary>
            Response Unmarshaller for PriceSchedule Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PriceScheduleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PriceScheduleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PriceScheduleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PricingDetailUnmarshaller">
            <summary>
            Response Unmarshaller for PricingDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PricingDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PricingDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PricingDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PrivateIpAddressSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for PrivateIpAddressSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PrivateIpAddressSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PrivateIpAddressSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PrivateIpAddressSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ProductCodeUnmarshaller">
            <summary>
            Response Unmarshaller for ProductCode Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ProductCodeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ProductCodeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ProductCodeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PropagatingVgwUnmarshaller">
            <summary>
            Response Unmarshaller for PropagatingVgw Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PropagatingVgwUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PropagatingVgwUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PropagatingVgwUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionedBandwidthUnmarshaller">
            <summary>
            Response Unmarshaller for ProvisionedBandwidth Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionedBandwidthUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionedBandwidthUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ProvisionedBandwidthUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseHostReservationRequestMarshaller">
            <summary>
            PurchaseHostReservation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseHostReservationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseHostReservationRequestMarshaller.Marshall(Amazon.EC2.Model.PurchaseHostReservationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseHostReservationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PurchaseHostReservation operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseHostReservationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseHostReservationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseHostReservationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingRequestMarshaller">
            <summary>
            PurchaseReservedInstancesOffering Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingRequestMarshaller.Marshall(Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PurchaseReservedInstancesOffering operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseScheduledInstancesRequestMarshaller">
            <summary>
            PurchaseScheduledInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseScheduledInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseScheduledInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.PurchaseScheduledInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseScheduledInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PurchaseScheduledInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseScheduledInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseScheduledInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseScheduledInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseUnmarshaller">
            <summary>
            Response Unmarshaller for Purchase Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesRequestMarshaller">
            <summary>
            RebootInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.RebootInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RebootInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller">
            <summary>
            Response Unmarshaller for RecurringCharge Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RegionUnmarshaller">
            <summary>
            Response Unmarshaller for Region Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RegionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RegionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RegionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageRequestMarshaller">
            <summary>
            RegisterImage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageRequestMarshaller.Marshall(Amazon.EC2.Model.RegisterImageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterImage operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionRequestMarshaller">
            <summary>
            RejectVpcPeeringConnection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionRequestMarshaller.Marshall(Amazon.EC2.Model.RejectVpcPeeringConnectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RejectVpcPeeringConnection operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressRequestMarshaller">
            <summary>
            ReleaseAddress Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressRequestMarshaller.Marshall(Amazon.EC2.Model.ReleaseAddressRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReleaseAddress operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseHostsRequestMarshaller">
            <summary>
            ReleaseHosts Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseHostsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseHostsRequestMarshaller.Marshall(Amazon.EC2.Model.ReleaseHostsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseHostsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReleaseHosts operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseHostsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseHostsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseHostsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationRequestMarshaller">
            <summary>
            ReplaceNetworkAclAssociation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationRequestMarshaller.Marshall(Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReplaceNetworkAclAssociation operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryRequestMarshaller">
            <summary>
            ReplaceNetworkAclEntry Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryRequestMarshaller.Marshall(Amazon.EC2.Model.ReplaceNetworkAclEntryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReplaceNetworkAclEntry operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteRequestMarshaller">
            <summary>
            ReplaceRoute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteRequestMarshaller.Marshall(Amazon.EC2.Model.ReplaceRouteRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReplaceRoute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationRequestMarshaller">
            <summary>
            ReplaceRouteTableAssociation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationRequestMarshaller.Marshall(Amazon.EC2.Model.ReplaceRouteTableAssociationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReplaceRouteTableAssociation operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusRequestMarshaller">
            <summary>
            ReportInstanceStatus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusRequestMarshaller.Marshall(Amazon.EC2.Model.ReportInstanceStatusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReportInstanceStatus operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotFleetRequestMarshaller">
            <summary>
            RequestSpotFleet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotFleetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotFleetRequestMarshaller.Marshall(Amazon.EC2.Model.RequestSpotFleetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotFleetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RequestSpotFleet operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotFleetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotFleetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotFleetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesRequestMarshaller">
            <summary>
            RequestSpotInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.RequestSpotInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RequestSpotInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservationUnmarshaller">
            <summary>
            Response Unmarshaller for Reservation Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReservationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservationValueUnmarshaller">
            <summary>
            Response Unmarshaller for ReservationValue Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservationValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservationValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReservationValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstanceReservationValueUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstanceReservationValue Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstanceReservationValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstanceReservationValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstanceReservationValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesIdUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesId Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesIdUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesIdUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesIdUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesListingUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesListing Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesListingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesListingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesListingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationResultUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesModificationResult Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesModification Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesOfferingUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesOffering Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesOfferingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesOfferingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesOfferingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstances Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeRequestMarshaller">
            <summary>
            ResetImageAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.ResetImageAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResetImageAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeRequestMarshaller">
            <summary>
            ResetInstanceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.ResetInstanceAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResetInstanceAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeRequestMarshaller">
            <summary>
            ResetNetworkInterfaceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResetNetworkInterfaceAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeRequestMarshaller">
            <summary>
            ResetSnapshotAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeRequestMarshaller.Marshall(Amazon.EC2.Model.ResetSnapshotAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResetSnapshotAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RestoreAddressToClassicRequestMarshaller">
            <summary>
            RestoreAddressToClassic Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RestoreAddressToClassicRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RestoreAddressToClassicRequestMarshaller.Marshall(Amazon.EC2.Model.RestoreAddressToClassicRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RestoreAddressToClassicResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RestoreAddressToClassic operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RestoreAddressToClassicResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RestoreAddressToClassicResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RestoreAddressToClassicResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressRequestMarshaller">
            <summary>
            RevokeSecurityGroupEgress Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressRequestMarshaller.Marshall(Amazon.EC2.Model.RevokeSecurityGroupEgressRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RevokeSecurityGroupEgress operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressRequestMarshaller">
            <summary>
            RevokeSecurityGroupIngress Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressRequestMarshaller.Marshall(Amazon.EC2.Model.RevokeSecurityGroupIngressRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RevokeSecurityGroupIngress operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for RouteTableAssociation Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableAssociationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableAssociationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableUnmarshaller">
            <summary>
            Response Unmarshaller for RouteTable Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RouteUnmarshaller">
            <summary>
            Response Unmarshaller for Route Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RouteUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RouteUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RouteUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesRequestMarshaller">
            <summary>
            RunInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.RunInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RunInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RunScheduledInstancesRequestMarshaller">
            <summary>
            RunScheduledInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RunScheduledInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RunScheduledInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.RunScheduledInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RunScheduledInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RunScheduledInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RunScheduledInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.RunScheduledInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.RunScheduledInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.S3StorageUnmarshaller">
            <summary>
            Response Unmarshaller for S3Storage Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.S3StorageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.S3StorageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.S3StorageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceAvailabilityUnmarshaller">
            <summary>
            Response Unmarshaller for ScheduledInstanceAvailability Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceAvailabilityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceAvailabilityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceAvailabilityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceRecurrenceUnmarshaller">
            <summary>
            Response Unmarshaller for ScheduledInstanceRecurrence Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceRecurrenceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceRecurrenceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceRecurrenceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceUnmarshaller">
            <summary>
            Response Unmarshaller for ScheduledInstance Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.ScheduledInstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupReferenceUnmarshaller">
            <summary>
            Response Unmarshaller for SecurityGroupReference Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupReferenceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupReferenceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupReferenceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupUnmarshaller">
            <summary>
            Response Unmarshaller for SecurityGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotDetailUnmarshaller">
            <summary>
            Response Unmarshaller for SnapshotDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotTaskDetailUnmarshaller">
            <summary>
            Response Unmarshaller for SnapshotTaskDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotTaskDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotTaskDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotTaskDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotUnmarshaller">
            <summary>
            Response Unmarshaller for Snapshot Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotDatafeedSubscriptionUnmarshaller">
            <summary>
            Response Unmarshaller for SpotDatafeedSubscription Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotDatafeedSubscriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotDatafeedSubscriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SpotDatafeedSubscriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetLaunchSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for SpotFleetLaunchSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetLaunchSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetLaunchSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetLaunchSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetMonitoringUnmarshaller">
            <summary>
            Response Unmarshaller for SpotFleetMonitoring Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetMonitoringUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetMonitoringUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetMonitoringUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigDataUnmarshaller">
            <summary>
            Response Unmarshaller for SpotFleetRequestConfigData Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigUnmarshaller">
            <summary>
            Response Unmarshaller for SpotFleetRequestConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceRequestUnmarshaller">
            <summary>
            Response Unmarshaller for SpotInstanceRequest Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceRequestUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceRequestUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceRequestUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStateFaultUnmarshaller">
            <summary>
            Response Unmarshaller for SpotInstanceStateFault Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStateFaultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStateFaultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStateFaultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStatusUnmarshaller">
            <summary>
            Response Unmarshaller for SpotInstanceStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotPlacementUnmarshaller">
            <summary>
            Response Unmarshaller for SpotPlacement Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotPlacementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotPlacementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SpotPlacementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotPriceUnmarshaller">
            <summary>
            Response Unmarshaller for SpotPrice Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotPriceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SpotPriceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SpotPriceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StaleIpPermissionUnmarshaller">
            <summary>
            Response Unmarshaller for StaleIpPermission Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StaleIpPermissionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StaleIpPermissionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.StaleIpPermissionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StaleSecurityGroupUnmarshaller">
            <summary>
            Response Unmarshaller for StaleSecurityGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StaleSecurityGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StaleSecurityGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.StaleSecurityGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesRequestMarshaller">
            <summary>
            StartInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.StartInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StateReasonUnmarshaller">
            <summary>
            Response Unmarshaller for StateReason Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StateReasonUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StateReasonUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.StateReasonUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesRequestMarshaller">
            <summary>
            StopInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.StopInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StorageUnmarshaller">
            <summary>
            Response Unmarshaller for Storage Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StorageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.StorageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.StorageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SubnetUnmarshaller">
            <summary>
            Response Unmarshaller for Subnet Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for TagDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.TargetConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for TargetConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TargetConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TargetConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.TargetConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.TargetReservationValueUnmarshaller">
            <summary>
            Response Unmarshaller for TargetReservationValue Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TargetReservationValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TargetReservationValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.TargetReservationValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesRequestMarshaller">
            <summary>
            TerminateInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.TerminateInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TerminateInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesRequestMarshaller">
            <summary>
            UnassignPrivateIpAddresses Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesRequestMarshaller.Marshall(Amazon.EC2.Model.UnassignPrivateIpAddressesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UnassignPrivateIpAddresses operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesRequestMarshaller">
            <summary>
            UnmonitorInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesRequestMarshaller.Marshall(Amazon.EC2.Model.UnmonitorInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UnmonitorInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemErrorUnmarshaller">
            <summary>
            Response Unmarshaller for UnsuccessfulItemError Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemErrorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemUnmarshaller">
            <summary>
            Response Unmarshaller for UnsuccessfulItem Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UserBucketDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for UserBucketDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UserBucketDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UserBucketDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.UserBucketDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UserIdGroupPairUnmarshaller">
            <summary>
            Response Unmarshaller for UserIdGroupPair Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UserIdGroupPairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.UserIdGroupPairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.UserIdGroupPairUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VgwTelemetryUnmarshaller">
            <summary>
            Response Unmarshaller for VgwTelemetry Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VgwTelemetryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VgwTelemetryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VgwTelemetryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeAttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeAttachment Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeAttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeAttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeAttachmentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusActionUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeStatusAction Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeStatusDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusEventUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeStatusEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusInfoUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeStatusInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusItemUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeStatusItem Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeUnmarshaller">
            <summary>
            Response Unmarshaller for Volume Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcAttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for VpcAttachment Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcAttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcAttachmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpcAttachmentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcClassicLinkUnmarshaller">
            <summary>
            Response Unmarshaller for VpcClassicLink Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcClassicLinkUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcClassicLinkUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpcClassicLinkUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcEndpointUnmarshaller">
            <summary>
            Response Unmarshaller for VpcEndpoint Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcEndpointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcEndpointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpcEndpointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionOptionsDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for VpcPeeringConnectionOptionsDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionOptionsDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionOptionsDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionOptionsDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionStateReasonUnmarshaller">
            <summary>
            Response Unmarshaller for VpcPeeringConnectionStateReason Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionStateReasonUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionStateReasonUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionStateReasonUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionUnmarshaller">
            <summary>
            Response Unmarshaller for VpcPeeringConnection Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionVpcInfoUnmarshaller">
            <summary>
            Response Unmarshaller for VpcPeeringConnectionVpcInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionVpcInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionVpcInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionVpcInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcUnmarshaller">
            <summary>
            Response Unmarshaller for Vpc Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpcUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpcUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for VpnConnectionOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionUnmarshaller">
            <summary>
            Response Unmarshaller for VpnConnection Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpnGatewayUnmarshaller">
            <summary>
            Response Unmarshaller for VpnGateway Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpnGatewayUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpnGatewayUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpnGatewayUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpnStaticRouteUnmarshaller">
            <summary>
            Response Unmarshaller for VpnStaticRoute Object
            </summary>  
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpnStaticRouteUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Model.Internal.MarshallTransformations.VpnStaticRouteUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EC2.Model.Internal.MarshallTransformations.VpnStaticRouteUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Util.ImageUtilities">
            <summary>
            This class has utility methods for finding common Amazon machine images.
            </summary>
            <summary>
            This class has utility methods for finding common Amazon machine images.
            </summary>
            <summary>
            This class has utility methods for finding common Amazon machine images.
            </summary>
        </member>
        <member name="F:Amazon.EC2.Util.ImageUtilities.ImageKeys">
            <summary>
            The collection of keys that can be used to address images.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Util.ImageUtilities.ParseAMIDefinitions(System.IO.StreamReader)">
            <summary>
            Parses the ami definition content into the ImageDescriptor members. 
            </summary>
            <param name="reader">A reader of the ami definitions</param>
        </member>
        <member name="T:Amazon.EC2.Util.ImageUtilities.ImageDescriptor">
            <summary>
            This class identifies an image that will be looked up using a logical
            key independent of release (RTM) or service pack (SPx) designations,
            always returning the latest version of an image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.ImageUtilities.ImageDescriptor.DefinitionKey">
            <summary>
            The logical name assigned to this image in the backing definitions file.
            This key is independent of RTM/service pack number.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.ImageUtilities.ImageDescriptor.NamePrefix">
            <summary>
            The name prefix or pattern of the Amazon machine image that will be looked up.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Util.ImageUtilities.ImageDescriptor.ToString">
            <summary>
            Override to return back the NamePrefix
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Util.ImageUtilities.DescriptorFromKeyAsync(System.String)">
            <summary>
            Returns the ImageDescriptor instance for a known key.
            </summary>
            <param name="key">The version-independent key identifying the descriptor</param>
            <returns>Matching descriptor containing the name filter to search on</returns>
        </member>
        <member name="M:Amazon.EC2.Util.ImageUtilities.DescriptorFromKeyAsync(System.String,Amazon.EC2.IAmazonEC2)">
            <summary>
            Returns the ImageDescriptor instance for a known key.
            </summary>
            <param name="key">
            The version-independent key identifying the descriptor
            </param>
            <param name="ec2Client">
            <para>
            Optional. Configured client object from which proxy settings, if needed, can be
            determined. If no client is supplied the application configuration will be 
            inspected for proxy details. 
            </para>
            <para>
            If a proxy is configured (either on the client or in the configuration file) it
            will be used when downloading the metadata file containing the key to filter 
            mappings.
            </para>
            </param>
            <returns>Matching descriptor containing the name filter to search on</returns>
        </member>
        <member name="M:Amazon.EC2.Util.ImageUtilities.FindImageAsync(Amazon.EC2.IAmazonEC2,System.String)">
            <summary>
            Find the Amazon machine image identified by the version-independent key name.
            </summary>
            <param name="ec2Client">The EC2 client used to search for the image.</param>
            <param name="imageKey">The keyname used to identify the image.</param>
            <returns>The Amazon machine image.</returns>
        </member>
        <member name="M:Amazon.EC2.Util.ImageUtilities.FindImageAsync(Amazon.EC2.IAmazonEC2,Amazon.EC2.Util.ImageUtilities.ImageDescriptor)">
            <summary>
            Find the Amazon machine image identified by the ImageDescriptor.
            </summary>
            <param name="ec2Client">The EC2 client used to search for the image.</param>
            <param name="descriptor">The descriptor used to identify the image.</param>
            <returns>The Amazon machine image.</returns>
        </member>
        <member name="M:Amazon.EC2.Util.ImageUtilities.DescriptorFromKey(System.String)">
            <summary>
            Returns the ImageDescriptor instance for a known key.
            </summary>
            <param name="key">The version-independent key identifying the descriptor</param>
            <returns>Matching descriptor containing the name filter to search on</returns>
        </member>
        <member name="M:Amazon.EC2.Util.ImageUtilities.DescriptorFromKey(System.String,Amazon.EC2.IAmazonEC2)">
            <summary>
            Returns the ImageDescriptor instance for a known key.
            </summary>
            <param name="key">
            The version-independent key identifying the descriptor
            </param>
            <param name="ec2Client">
            <para>
            Optional. Configured client object from which proxy settings, if needed, can be
            determined. If no client is supplied the application configuration will be 
            inspected for proxy details. 
            </para>
            <para>
            If a proxy is configured (either on the client or in the configuration file) it
            will be used when downloading the metadata file containing the key to filter 
            mappings.
            </para>
            </param>
            <returns>Matching descriptor containing the name filter to search on</returns>
        </member>
        <member name="M:Amazon.EC2.Util.ImageUtilities.FindImage(Amazon.EC2.IAmazonEC2,System.String)">
            <summary>
            Find the Amazon machine image identified by the version-independent key name.
            </summary>
            <param name="ec2Client">The EC2 client used to search for the image.</param>
            <param name="imageKey">The keyname used to identify the image.</param>
            <returns>The Amazon machine image.</returns>
        </member>
        <member name="M:Amazon.EC2.Util.ImageUtilities.FindImage(Amazon.EC2.IAmazonEC2,Amazon.EC2.Util.ImageUtilities.ImageDescriptor)">
            <summary>
            Find the Amazon machine image identified by the ImageDescriptor.
            </summary>
            <param name="ec2Client">The EC2 client used to search for the image.</param>
            <param name="descriptor">The descriptor used to identify the image.</param>
            <returns>The Amazon machine image.</returns>
        </member>
        <member name="T:Amazon.EC2.Util.LaunchNATInstanceRequest">
            <summary>
            Request class to launch a NAT instance
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchNATInstanceRequest.SubnetId">
            <summary>
            Gets and sets the subnet that the NAT instance will be launched in.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchNATInstanceRequest.InstanceType">
            <summary>
            Gets and sets the instance type of the NAT instance.   The default value is "m1.small".
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchNATInstanceRequest.KeyName">
            <summary>
            Gets and sets the key name of the NAT instance.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsRequest">
            <summary>
            The properties used to create a VPC, a public subnet, private subnet and a NAT EC2 instance to allow EC2 instances in the private
            subnet to establish outbound connections to the internet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsRequest.PrivateSubnetCiderBlock">
            <summary>
            Gets and sets the CIDR block you want the private subnet to cover.  The default value is "10.0.1.0/24".
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsRequest.PrivateSubnetAvailabilityZone">
            <summary>
            Gets and sets the Availability Zone you want the private subnet in.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsRequest.InstanceType">
            <summary>
            Gets and sets the instance type of the NAT instance.  The default value is "m1.small".
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsRequest.KeyName">
            <summary>
            Gets and sets the key name of the NAT instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsRequest.ConfigureDefaultVPCGroupForNAT">
            <summary>
            Gets and sets whether the default security group for the VPC should be configured to allow traffic from the EC2 instances to the NAT instance.
            This means another security group with the name "NATGroup" will be created and a new permission allowing all inbound traffic will be added to the default security group for the VPC.
            If this VPC is going to be used for AWS Elastic Beanstalk deployments then used this security group as the security group specified for the environment.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsResponse">
            <summary>
            This object contains the VPC objects that were created as part of the launch VPC with public and private subnets operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsResponse.PrivateSubnet">
            <summary>
            The private subnet created.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsResponse.NATInstance">
            <summary>
            The NAT EC2 instance created.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsResponse.NATSecurityGroup">
            <summary>
            The NAT security group created if the ConfigureDefaultVPCGroupForNAT property is set to true.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest">
            <summary>
            The properties used to create a VPC with a subnet that will have an internet gateway attached making instances available to the internet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest.VPCName">
            <summary>
            Gets and sets a name that will be assigned the VPC's Name tag.  This is an optional field.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest.VPCCidrBlock">
            <summary>
            Gets and sets the CIDR block you want the VPC to cover.  The default value is "10.0.0.0/16".
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest.InstanceTenancy">
            <summary>
            The supported tenancy of instances launched into the VPC.  The default value is "default".
            </summary>
            <remarks>
            A value of "default" means instances can be launched with any tenancy;
            a value of "dedicated" means all instances launched into the VPC will
            be launched as dedicated tenancy instances regardless of the tenancy
            assigned to the instance at launch.
            
            Setting the instance's tenancy attribute to dedicated specifies that your
            instance will run on single-tenant hardware.
            </remarks>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest.PublicSubnetCiderBlock">
            <summary>
            Gets and sets the CIDR block you want the public subnet to cover.  The default value is "10.0.0.0/24".
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest.PublicSubnetAvailabilityZone">
            <summary>
            Gets and sets the Availability Zone you want the public subnet in.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest.ProgressCallback">
            <summary>
            A callback delegate used to get progress messages as the VPC environment is being created.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest.EnableDnsHostnames">
            <summary>
            Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is true, instances in the VPC get DNS hostnames; 
            otherwise, they do not. If you want your instances to get DNS hostnames, you must also set the enableDnsSupport attribute to true. 
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest.EnableDnsSupport">
            <summary>
            Indicates whether the DNS resolution is supported for the VPC. If this attribute is false, the Amazon provided DNS service in the VPC that 
            resolves public DNS hostnames to IP addresses is not enabled. If this attribute is true, queries to the Amazon provided DNS server at the 
            169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" will succeed. For more information, 
            see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html#AmazonDNS">Amazon DNS Server</a>.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Util.LaunchVPCWithPublicSubnetResponse">
            <summary>
            This object contains the VPC objects that were created as part of the launch VPC with public subnet operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetResponse.VPC">
            <summary>
            The VPC created.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetResponse.PublicSubnet">
            <summary>
            The public subnet created.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetResponse.PublicSubnetRouteTable">
            <summary>
            Gets and sets the PublicSubnetRouteTable property
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.LaunchVPCWithPublicSubnetResponse.InternetGateway">
            <summary>
            The internet gateway that was created and associated with the public subnet.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Util.VPCUtilities">
            <summary>
            This class has utility methods used for setting up a VPC.
            </summary>
            <summary>
            This class has utility methods used for setting up a VPC.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Util.VPCUtilities.Progress">
            <summary>
            A callback delegate used to get progress messages as the VPC environment is being created.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Util.VPCUtilities.FindNATImage(Amazon.EC2.IAmazonEC2)">
            <summary>
            Find the current VPC NAT image in the region for the AmazonEC2 client.
            </summary>
            <param name="ec2Client">The ec2client used to look up the image.</param>
            <returns>The image</returns>
        </member>
        <member name="M:Amazon.EC2.Util.VPCUtilities.LaunchNATInstance(Amazon.EC2.IAmazonEC2,Amazon.EC2.Util.LaunchNATInstanceRequest)">
            <summary>
            This method will look up the current VPC NAT ami in the region and create an instance in the subnet specified.
            </summary>
            <param name="ec2Client">The ec2client used to create the NAT instance</param>
            <param name="request">The properties used to launch the NAT instance.</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EC2.Util.VPCUtilities.LaunchVPCWithPublicSubnet(Amazon.EC2.IAmazonEC2,Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest)">
            <summary>
            This method will create a VPC with a subnet that will have an internet gateway attached making instances available to the internet.
            </summary>
            <param name="ec2Client">The ec2client used to create the VPC</param>
            <param name="request">The properties used to create the VPC.</param>
            <returns>The response contains all the VPC objects that were created.</returns>
        </member>
        <member name="M:Amazon.EC2.Util.VPCUtilities.LaunchVPCWithPublicSubnet(Amazon.EC2.IAmazonEC2,Amazon.EC2.Util.LaunchVPCWithPublicSubnetRequest,Amazon.EC2.Util.LaunchVPCWithPublicSubnetResponse)">
            <summary>
            This method will create a VPC with a subnet that will have an internet gateway attached making instances available to the internet.
            </summary>
            <param name="ec2Client">The ec2client used to create the VPC</param>
            <param name="request">The properties used to create the VPC.</param>
            <param name="response">The response contains all the VPC objects that were created.</param>
        </member>
        <member name="M:Amazon.EC2.Util.VPCUtilities.LaunchVPCWithPublicAndPrivateSubnets(Amazon.EC2.IAmazonEC2,Amazon.EC2.Util.LaunchVPCWithPublicAndPrivateSubnetsRequest)">
            <summary>
            This method will create a VPC, a public subnet, private subnet and a NAT EC2 instance to allow EC2 instances in the private
            subnet to establish outbound connections to the internet.
            </summary>
            <param name="ec2Client">The ec2client used to create the VPC</param>
            <param name="request">The properties used to create the VPC.</param>
            <returns>The response contains all the VPC objects that were created.</returns>
        </member>
        <member name="T:Amazon.EC2.Util.EC2Metadata">
            <summary>
            EC2 Instance Metadata.
            </summary>
            <remarks>
            <para>
            Amazon EC2 instances can access instance-specific metadata, as well as data supplied when launching the instances, using a specific URI.
            </para>
            <para>
            You can use this data to build more generic AMIs that can be modified by configuration files supplied at launch time. 
            For example, if you run web servers for various small businesses, they can all use the same AMI and retrieve their content from the 
            Amazon S3 bucket you specify at launch. To add a new customer at any time, simply create a bucket for the customer, add their content, 
            and launch your AMI.
            </para>
            <para>
            More information about EC2 Metadata <see href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html"/>
            </para>
            </remarks>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.AmiId">
            <summary>
            The AMI ID used to launch the instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.AmiLaunchIndex">
            <summary>
            The index of this instance in the reservation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.AmiManifestPath">
            <summary>
            The manifest path of the AMI with which the instance was launched.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.AncestorAmiIds">
            <summary>
            The AMI IDs of any instances that were rebundled to create this AMI. 
            Will only exist if the AMI manifest file contained an ancestor-amis key.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.Hostname">
            <summary>
            The private hostname of the instance.
            In cases where multiple network interfaces are present,
            this refers to the eth0 device (the device for which the device number is 0).
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.InstanceAction">
            <summary>
            Notifies the instance that it should reboot in preparation for bundling. 
            Valid values: none | shutdown | bundle-pending.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.InstanceId">
            <summary>
            The ID of this instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.InstanceType">
            <summary>
            The type of instance. 
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.KernelId">
            <summary>
            The ID of the kernel launched with this instance, if applicable.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.LocalHostname">
            <summary>
            The local hostname of the instance. In cases where multiple network interfaces are present, 
            this refers to the eth0 device (the device for which device-number is 0).
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.MacAddress">
            <summary>
            The instance's MAC address. In cases where multiple network interfaces are present, 
            this refers to the eth0 device (the device for which device-number is 0).
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.PrivateIpAddress">
            <summary>
             The private IP address of the instance. In cases where multiple network interfaces are present, 
             this refers to the eth0 device (the device for which device-number is 0).
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.AvailabilityZone">
            <summary>
            The Availability Zone in which the instance launched.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.ProductCodes">
            <summary>
            Product codes associated with the instance, if any. 
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.PublicKey">
            <summary>
            Public key. Only available if supplied at instance launch time.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.RamdiskId">
            <summary>
            The ID of the RAM disk specified at launch time, if applicable.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.ReservationId">
            <summary>
            ID of the reservation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.SecurityGroups">
            <summary>
            The names of the security groups applied to the instance. 
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.IAMInstanceProfileInfo">
            <summary>
            Returns information about the last time the instance profile was updated, 
            including the instance's LastUpdated date, InstanceProfileArn, and InstanceProfileId.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.IAMSecurityCredentials">
            <summary>
            Returns the temporary security credentials (AccessKeyId, SecretAccessKey, SessionToken, and Expiration) 
            associated with the IAM roles on the instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.BlockDeviceMapping">
            <summary>
            The virtual devices associated with the ami, root, ebs, and swap.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.NetworkInterfaces">
            <summary>
            The network interfaces on the instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.EC2Metadata.UserData">
            <summary>
            The metadata sent to the instance.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Util.EC2Metadata.GetItems(System.String)">
            <summary>
            Return the list of items in the metadata at path.
            </summary>
            <param name="path">Path at which to query the metadata</param>
            <returns>List of items returned by the metadata service</returns>
        </member>
        <member name="M:Amazon.EC2.Util.EC2Metadata.GetData(System.String)">
            <summary>
            Return the metadata at the path
            </summary>
            <param name="path">Path at which to query the metadata</param>
            <returns>Data returned by the metadata service</returns>
        </member>
        <member name="M:Amazon.EC2.Util.EC2Metadata.GetData(System.String,System.Int32)">
            <summary>
            Return the metadata at the path
            </summary>
            <param name="path">Path at which to query the metadata</param>
            <param name="tries">Number of attempts to make</param>
            <returns>Data returned by the metadata service</returns>
        </member>
        <member name="M:Amazon.EC2.Util.EC2Metadata.GetItems(System.String,System.Int32)">
            <summary>
            Return the list of items in the metadata at path.
            </summary>
            <param name="path">Path at which to query the metadata</param>
            <param name="tries">Number of attempts to make</param>
            <returns>List of items returned by the metadata service</returns>
        </member>
        <member name="T:Amazon.EC2.Util.IAMInfo">
            <summary>
            Returns information about the last time the instance profile was updated, 
            including the instance's LastUpdated date, InstanceProfileArn, and InstanceProfileId.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMInfo.Code">
            <summary>
            The status of the instance profile
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMInfo.Message">
            <summary>
            Further information about the status of the instance profile
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMInfo.LastUpdated">
            <summary>
            The date and time the instance profile was updated
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMInfo.InstanceProfileArn">
            <summary>
            The Amazon Resource Name (ARN) of the instance profile
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMInfo.InstanceProfileId">
            <summary>
            The Id of the instance profile
            </summary>
        </member>
        <member name="T:Amazon.EC2.Util.IAMSecurityCredential">
            <summary>
            The temporary security credentials (AccessKeyId, SecretAccessKey, SessionToken, and Expiration) associated with the IAM role.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMSecurityCredential.Code">
            <summary>
            The status of the security credential
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMSecurityCredential.Message">
            <summary>
            Further information about the status of the instance profile
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMSecurityCredential.LastUpdated">
            <summary>
            The date and time the security credential was last updated
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMSecurityCredential.Type">
            <summary>
            The type of the security credential
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMSecurityCredential.AccessKeyId">
            <summary>
            The uniqe id of the security credential
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMSecurityCredential.SecretAccessKey">
            <summary>
            The secret key used to sign requests
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMSecurityCredential.Token">
            <summary>
            The security token
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.IAMSecurityCredential.Expiration">
            <summary>
            The date and time when these credentials expire
            </summary>
        </member>
        <member name="T:Amazon.EC2.Util.NetworkInterface">
            <summary>
            All of the metadata associated with a network interface on the instance.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Util.NetworkInterface.#ctor(System.String)">
            <summary>
            Construct an instance of NetworkInterface
            </summary>
            <param name="macAddress"></param>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.MacAddress">
            <summary>
            The interface's Media Access Control (mac) address. 
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.OwnerId">
            <summary>
            The ID of the owner of the network interface. 
            </summary>
            <remarks>
            In multiple-interface environments, an interface can be attached by a third party, such as Elastic Load Balancing. 
            Traffic on an interface is always billed to the interface owner.
            </remarks>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.Profile">
            <summary>
            The interface's profile
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.LocalHostname">
            <summary>
            The interface's local hostname.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.LocalIPv4s">
            <summary>
            The private IP addresses associated with the interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.PublicHostname">
            <summary>
            The interface's public hostname. 
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.PublicIPv4s">
            <summary>
            The elastic IP addresses associated with the interface. 
            </summary>
            <remarks>
            There may be multiple IP addresses on an instance. 
            </remarks>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.SecurityGroups">
            <summary>
            Security groups to which the network interface belongs.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.SecurityGroupIds">
            <summary>
            IDs of the security groups to which the network interface belongs. Returned only for Amazon EC2 instances launched into a VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.SubnetId">
            <summary>
            The ID of the Amazon EC2-VPC subnet in which the interface resides.
            </summary>
            <remarks>
            Returned only for Amazon EC2 instances launched into a VPC. 
            </remarks>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.SubnetIPv4CidrBlock">
            <summary>
            The CIDR block of the Amazon EC2-VPC subnet in which the interface resides.  
            </summary>
            <remarks>
            Returned only for Amazon EC2 instances launched into a VPC.
            </remarks>
        </member>
        <member name="P:Amazon.EC2.Util.NetworkInterface.VpcId">
            <summary>
            The CIDR block of the Amazon EC2-VPC subnet in which the interface resides.
            </summary>
            <remarks>
            Returned only for Amazon EC2 instances launched into a VPC.
            </remarks>
        </member>
        <member name="M:Amazon.EC2.Util.NetworkInterface.GetIpV4Association(System.String)">
            <summary>
            Get the private IPv4 address(es) that are associated with the public-ip address and assigned to that interface.
            </summary>
            <param name="publicIp">The public IP address</param>
            <returns>Private IPv4 address(es) associated with the public IP address</returns>
        </member>
        <member name="T:Amazon.EC2.Util.S3UploadPolicy">
            <summary>
            This class represents S3 upload policy. Policy string
            representaion and signature to be used within EC2 bundling API.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Util.S3UploadPolicy.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            S3 Upload policy to be used by EC2 API.
            </summary>
            <param name="awsSecretAccessKey">Secret Key of the signer of the policy</param>
            <param name="bucketName">Bucket name to upload</param>
            <param name="prefix">Prefix for the object keys</param>
            <param name="expireInMinutes">Expire, minutes from now</param>
        </member>
        <member name="P:Amazon.EC2.Util.S3UploadPolicy.PolicyString">
            <summary>
            Base64 representation of the serialized policy.
            Use policy generated by this method
            for passing to EC2 bunding calls.
            </summary>
            <returns>Base64 policy</returns>
        </member>
        <member name="P:Amazon.EC2.Util.S3UploadPolicy.PolicySignature">
            <summary>
            Policy signature in base64 format
            Use signature generated by this method
            for passing to EC2 bunding calls along with policy.
            </summary>
            <returns>Base64 signature</returns>
        </member>
        <member name="T:Amazon.EC2.Import.ImportProgressCallback">
            <summary>
            Callback signature to report progress on the manifest creation and upload process.
            </summary>
            <param name="message">Describes the current in-progress task</param>
            <param name="percentComplete">If not null, the percentage completion of the image file upload</param>
        </member>
        <member name="T:Amazon.EC2.Import.DiskImageImporter">
            <summary>
            Helper class to import a virtual machine image or disk image to Amazon EC2 
            using Amazon S3 to hold the in-flight artifacts.
            </summary>
        </member>
        <member name="F:Amazon.EC2.Import.DiskImageImporter.DefaultUploadThreads">
            <summary>
            The default number of threads that will be used to upload the parts comprising
            the image file. Each thread will consume a 10MB buffer to process the part data.
            </summary>
        </member>
        <member name="F:Amazon.EC2.Import.DiskImageImporter.DefaultUrlExpirationInDays">
            <summary>
            The default validity period for the signed Amazon S3 URLs that allow Amazon EC2
            to access the manifest.
            </summary>
        </member>
        <member name="F:Amazon.EC2.Import.DiskImageImporter.MaxUploadThreads">
            <summary>
            The maximum number of threads that can be used to upload the image file parts.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.UploadThreads">
            <summary>
            <para>
            The number of threads to use to upload the image file parts to Amazon S3.
            Each thread will consume a 10MB buffer to process the part data.
            </para>
            <para>
            Default: 10. Max: 30.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.ImportManifest">
            <summary>
            The constructed manifest describing the import artifacts.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.ImageFilePath">
            <summary>
            The absolute path to the image file being imported.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.ManifestFileKey">
            <summary>
            The Amazon S3 object key to the uploaded manifest file.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.RollbackOnUploadError">
            <summary>
            <para>
            Controls Amazon S3 clean-up of image file and import manifest artifacts 
            if an error occurs during upload.
            </para>
            <para>
            By default, if an error occurs when uploading the image file to S3 the
            importer will exit and leave what has been uploaded still present in S3.
            This enables a 'resume mode' where the importer can be run again to 
            continue upload of the remaining parts based on inspection of the bucket
            vs the manifest. Note that this does leave the potential for storage costs
            if the user decides to abandon the import (the PowerShell cmdlets that use
            this importer emit error messages detailing the resume/cleanup instructions).
            </para>
            <para>
            If this option is set, the importer instead automatically cleans the bucket 
            of all uploaded content on error. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.UrlExpirationInDays">
            <summary>
            The maximum age, in days, before the Amazon S3 presigned urls 
            generated in the import manifest expire. The default value
            is 30. Note that for AWS regions that require Signature Version 4 
            request signing, the maximum value will not exceed 7 days.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.BucketName">
            <summary>
            The name of the bucket that will hold the artifacts. An attempt will
            be made to create the bucket if it does not already exist.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.ArtifactsKeyPrefix">
            <summary>
            S3 object key beneath which all artifacts will be uploaded in
            the bucket; by convention this is a GUID preceeded by any custom 
            prefix the user has specified.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.Region">
            <summary>
            The region in which the import will take place.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.S3Client">
            <summary>
            Client for S3 operations, created using the credentials and region scoping 
            we are handed on construction, or assigned from an existing S3 client instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.EC2Client">
            <summary>
            Client for EC2 operations, created using the credentials and region scoping 
            we are handed on construction, or assigned from an existing EC2 client instance.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.#ctor(Amazon.RegionEndpoint,System.String)">
            <summary>
            Constructs an image importer to upload and convert virtual machine image 
            or disk volumes for use with Amazon EC2. AWS credentials will be obtained from
            the application configuration settings.
            </summary>
            <param name="region">
            The region to which the artifacts will be uploaded and EC2 conversion performed.
            </param>
            <param name="bucketName">
            The name of the Amazon S3 bucket that will contain the uploaded image and manifest. If the bucket 
            does not exist it will be created.
            </param>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.#ctor(Amazon.Runtime.SharedInterfaces.ICoreAmazonS3,Amazon.EC2.IAmazonEC2,System.String)">
            <summary>
            Constructs an image importer to upload and convert virtual machine image 
            or disk volumes for use with Amazon EC2. The importer will use the supplied
            clients for communicating with Amazon S3 and Amazon EC2. Note that the clients
            should be configured to use the same region and AWS account.
            </summary>
            <param name="s3Client">Client to use to upload artifacts to Amazon S3</param>
            <param name="ec2Client">Client to use to request image conversion in Amazon EC2</param>
            <param name="bucketName">
            The name of the Amazon S3 bucket that will contain the uploaded image and manifest. If the bucket 
            does not exist it will be created.
            </param>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint,System.String)">
            <summary>
            Constructs an image importer to upload and convert virtual machine image 
            or disk volumes for use with Amazon EC2.
            </summary>
            <param name="credentials">
            The AWS credentials of the account that will own the uploaded artifacts.
            </param>
            <param name="region">
            The region to which the artifacts will be uploaded and EC2 conversion performed.
            </param>
            <param name="bucketName">
            The name of the Amazon S3 bucket that will contain the uploaded image and manifest. If the bucket 
            does not exist it will be created.
            </param>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.ImportInstance(System.String,System.String,System.Nullable{System.Int64},System.String,Amazon.EC2.Import.ImportLaunchConfiguration,Amazon.EC2.Import.ImportProgressCallback)">
            <summary>
            Uploads and requests import conversion of a virtual machine image file
            to an Amazon EC2 instance.
            </summary>
            <param name="imageFilepath">The full path to the image file to be processed</param>
            <param name="fileFormat">
            The format of the image file (VMDK | RAW | VHD). If not specified, it will be inferred
            from the extension of the image file.
            </param>
            <param name="volumeSize">
            The requested size (in GiB) for the resulting image volume. If not specified a suitable 
            value based on the size of the image file is used. Note that the minimum required boot 
            volume size for EC2 is 8GB.
            </param>
            <param name="keyPrefix">
            Optional root-level key prefix that will be applied to the uploaded artifacts in S3.
            The artifacts will be placed beneath this (or the root if not set) in a key composed
            of a GUID.
            </param>
            <param name="launchConfiguration">Launch configuration settings for the imported instance</param>
            <param name="progressCallback">Optional callback delegate for upload progress reporting</param>
            <returns>
            The service response containing a ConversionTask object that can be used to monitor the progress of the 
            requested conversion.
            </returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.ImportVolume(System.String,System.String,System.Nullable{System.Int64},System.String,System.String,System.String,Amazon.EC2.Import.ImportProgressCallback)">
            <summary>
            Uploads and requests import conversion of a virtual disk file to an Amazon EBS volume.
            </summary>
            <param name="imageFilepath">The full path to the image file to be processed</param>
            <param name="fileFormat">
            The format of the image file (VMDK | RAW | VHD). If not specified, it will be inferred
            from the extension of the image file.
            </param>
            <param name="volumeSize">
            The requested size (in GiB) for the resulting image volume. If not specified a suitable 
            value based on the size of the image file is used.
            </param>
            <param name="keyPrefix">
            Optional root-level key prefix that will be applied to the uploaded artifacts in S3.
            The artifacts will be placed beneath this (or the root if not set) in a key composed
            of a GUID.
            </param>
            <param name="availabilityZone">The Availability Zone for the resulting Amazon EBS volume.</param>
            <param name="description">An optional description for the volume being imported.</param>
            <param name="progressCallback">Optional callback delegate for upload progress reporting</param>
            <returns>
            The service response containing a ConversionTask object that can be used to monitor the progress of the 
            requested conversion.
            </returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.Upload(System.String)">
            <summary>
            <para>
            Constructs the import manifest for the image and then uploads it and the 
            virtual machine image or disk image to Amazon S3. The S3 key to the uploaded 
            manifest file is returned.
            </para>
            <para>
            If an error occurs during upload of the image file the RetainArtifactsOnUploadError
            property governs whether the partially uploaded content is deleted or retained. If
            the content is retained, the import can be resumed. By default the 
            RetainArtifactsOnUploadError property is false and the content deleted, avoiding
            storage charges for potentially orphaned content if the command is not re-run.
            </para>
            </summary>
            <param name="imageFilepath">The full path to the image file to be processed</param>
            <returns>The S3 object key of the uploaded manifest file</returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.Upload(System.String,System.String,System.Nullable{System.Int64},System.String,Amazon.EC2.Import.ImportProgressCallback,System.Boolean)">
            <summary>
            <para>
            Constructs the import manifest for the image and then uploads it and the 
            virtual machine image or disk image to Amazon S3. The S3 key to the uploaded 
            manifest file is returned.
            </para>
            <para>
            If an error occurs during upload of the image file the RetainArtifactsOnUploadError
            property governs whether the partially uploaded content is deleted or retained. If
            the content is retained, the import can be resumed. By default the 
            RetainArtifactsOnUploadError property is false and the content deleted, avoiding
            storage charges for potentially orphaned content if the command is not re-run.
            </para>
            </summary>
            <param name="imageFilepath">The full path to the image file to be processed</param>
            <param name="fileFormat">
            The format of the image file (VMDK | RAW | VHD). If not specified, it will be inferred
            from the extension of the image file.
            </param>
            <param name="volumeSize">
            The requested size (in GiB) for the resulting image volume. If not specified a suitable 
            value based on the size of the image file is used. Note that if importing a disk image that
            will be used as an EC2 instance, the minimum required boot volume size is 8GB.
            </param>
            <param name="keyPrefix">
            Optional root-level key prefix that will be applied to the uploaded artifacts in S3.
            The artifacts will be placed beneath this (or the root if not set) in a key composed
            of a GUID.
            </param>
            <param name="progressCallback">Optional callback delegate for upload progress reporting</param>
            <param name="resumeUpload">
            Set this to true if a previous upload failed part-way through processing and RetainArtifactsOnUploadError
            was set to true so the partially uploaded content was retained. The existing manifest will
            be inspected and uploads will resume of the retaining content.
            </param>
            <returns>The S3 object key of the uploaded manifest file</returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.FromManifest(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint,System.String,System.String,System.Boolean)">
            <summary>
            Constructs an importer instance for a previously uploaded manifest. The manifest is downloaded using 
            a new Amazon S3 client constructed for the specified region and deserialized, ready for use in 
            constructing the appropriate ImportInstance or ImportVolume request to Amazon EC2.
            </summary>
            <param name="credentials">
            The AWS credentials for the account that owns or has access to the bucket containing the manifest file.
            </param>
            <param name="region">The region in which the Amazon S3 client used for download will be constructed.</param>
            <param name="bucketName">The name of the bucket containing the manifest file.</param>
            <param name="manifestFileKey">The S3 object key of the manifest file.</param>
            <param name="resumingUpload">
            Set this to true if a previous upload failed part-way through processing and RetainArtifactsOnUploadError
            was set to true so the partially uploaded content was retained. The existing manifest will
            be inspected and uploads can then resume to process the retaining content.
            </param>
            <returns>Initialized importer instance containing a deserialized manifest</returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.StartInstanceConversion(Amazon.EC2.Import.ImportLaunchConfiguration)">
            <summary>
            Initiates a conversion task to yield a new Amazon EC2 instance for a set of image file 
            artifacts uploaded previously to Amazon S3.
            </summary>
            <param name="launchConfiguration">Launch configuration settings for the imported instance</param>
            <returns>
            The service response containing a ConversionTask object that can be used to monitor the progress of the 
            requested conversion.
            </returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.StartVolumeConversion(System.String,System.String)">
            <summary>
            Initiates a conversion task to yield a new EBS volume for a set of image file 
            artifacts uploaded previously to Amazon S3.
            </summary>
            <param name="availabilityZone">The Availability Zone for the resulting Amazon EBS volume.</param>
            <param name="description">An optional description for the volume being imported.</param>
            <returns>
            The service response containing a ConversionTask object that can be used to monitor the progress of the 
            requested conversion.
            </returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.PopulateDiskImageDetail(System.String)">
            <summary>
            Helper to populate a DiskImageDetail instance from the SDK that will be used in an ImportVolume 
            API request using data previously recorded in the import manifest.
            </summary>
            <param name="manifestFileKey">The Amazon S3 object key of the manifest file.</param>
            <returns>Populated DiskImageDetail instance.</returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.PopulateDiskImage(System.String,System.String)">
            <summary>
            Helper to populate a DiskImage instance from the SDK that will be used in an ImportInstance 
            API request using data previously recorded in the import manifest.
            </summary>
            <param name="manifestFileKey">The Amazon S3 object key of the manifest file.</param>
            <param name="description">Optional description for the image.</param>
            <returns>Populated DiskImage instance.</returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.PopulateVolumeDetail">
            <summary>
            Helper to populate a VolumeDetail instance from the SDK that will be used in an 
            ImportInstance or ImportVolume API request using data previously recorded in the 
            import manifest.
            </summary>
            <returns>Populated VolumeDetail instance.</returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.PopulateLaunchSpecificationInstance(Amazon.EC2.Import.ImportLaunchConfiguration)">
            <summary>
            Helper to populate an SDK ImportInstanceLaunchSpecification instance that 
            will be used in an ImportInstance API request.
            </summary>
            <param name="config">Settings for the new LaunchSpecificationInstance</param>
            <returns>Populated ImportInstanceLaunchSpecification instance.</returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.DeserializeManifestFromS3">
            <summary>
            Downloads the manifest from Amazon S3 and deserializes the contents.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.DetermineRemainingUploads">
            <summary>
            Analyzes the parts list of the manifest to determine which object parts exist
            in S3. Used when instantiating an importer from an existing manifest of a failed
            uploaded (RetainArtifactsOnUploadError set true to keep the partially uploaded content
            allowing uploads to be resumed part-way through).
            </summary>
            <remarks>
            Since the manifest contains a set of presigned urls to each part we can make use of those
            to determine whether a part has been uploaded or not. 
            </remarks>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporter.UrlExpiryPeriod">
            <summary>
            Returns the maximum age, in days, to use for expiry for Amazon S3 presigned
            urls. For regions that require Signature Version 4 request signing, this is
            limited to 7 days.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.GetPresignedManifestUrl(System.String)">
            <summary>
            Constructs the presigned url to the import manifest in S3.
            </summary>
            <param name="manifestFileKey">The S3 object key of the manifest file.</param>
            <returns>Presigned url to the manifest file object.</returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.ConstructManifestArtifactKey(System.String)">
            <summary>
            Constructs the S3 object key for the manifest artifact. This will combine the root key, 
            any optional prefix the user has requested be applied and the filename of the artifact, 
            plus a fixed extension.
            </summary>
            <param name="imageFilepath">The path to the image file</param>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.UploadManifest(Amazon.EC2.Import.ImportProgressCallback)">
            <summary>
            Serialize and upload the constructed import manifest using the supplied S3 client
            with optional progress callback.
            </summary>
            <param name="progressCallback">Optional callback to track upload progress.</param>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.UploadImageParts(Amazon.EC2.Import.ImportProgressCallback)">
            <summary>
            Uploads the image file to S3 as a series of distinct 10MB objects, as required by EC2,
            using the constructed import manifest as a guide. If any part fails to upload, we clean
            up successfully uploaded parts before returning the error to the caller.
            </summary>
            <param name="progressCallback">Optional callback to track upload progress.</param>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.RemoveUploadedArtifacts(System.String,System.Collections.Generic.IEnumerable{Amazon.EC2.Import.ImageFilePart})">
            <summary>
            Removes the manifest and iterates through the parts list to see which parts had been completed when 
            failures occur and removes those objects to avoid storage cost to the user (if the user retries the 
            command, a different root key guid will be generated leading to potential orphans).
            </summary>
            <param name="manifestFileKey">The object key of the manifest file.</param>
            <param name="partsList">The set of parts that should have been uploaded</param>
            <returns>True if all objects were successfully deleted, false if objects remain that the user should manually clean up</returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.UploadImageFilePart(System.Object)">
            <summary>
            Threadpool delegate to process image file parts one by one and upload to
            Amazon S3. If an error occurs, we abandon the part and continue to
            seek new ones (even though we won't process them, only signal). This
            allows all threads to exit before we attempt error clean up.
            </summary>
            <param name="state">ImagePartUploadState instance to process</param>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.CreateImportManifest(System.String,System.Nullable{System.Int64})">
            <summary>
            Constructs the object hierarchy that will be serialized to a single manifest
            file describing the import.
            </summary>
            <param name="fileFormat">
            The file format of the image file. If not specified, it will be inferred from the image 
            file extension. Valid values: VMDK | RAW | VHD. 
            </param>
            <param name="volumeSize">
            The requested size, in GiB, of the resulting volume in EC2. If not specified a suitable
            value will be used based on the size of the supplied image file.
            </param>
            <returns>Import manifest ready for serialization and upload.</returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.ConstructImportPartsList(System.Nullable{System.Int64},System.DateTime)">
            <summary>
            Walks the byte ranges of the image file to construct the logical parts we'll use to perform
            the upload
            </summary>
            <param name="volumeSize">The requested size of the volume in EC2</param>
            <param name="urlExpiration">The time at which the presigned urls for the parts should expire.</param>
            <returns>Manifest subcomponent describing the part structure.</returns>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporter.VolumeSizeFor(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Computes the size of the volume to hold the image in EC2, with optional override
            by the user. Observation of the EC2 CLI shows a preferred minimum size for boot
            volumes of 8GB.
            </summary>
            <param name="diskImageSize">The size of the image we're processing, in bytes</param>
            <param name="requestedSize">Optional size requested by the user</param>
        </member>
        <member name="T:Amazon.EC2.Import.ImportManifestRoot">
            <summary>
            <para>
            Serialization class for processing the import and conversion of a virtual machine image to 
            a new Amazon EC2 instance, or a disk image to a new EBS volume.
            </para>
            <para>
            This class represents the root of the data contained in the conversion manifest.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportManifestRoot.Version">
            <summary>
            Gets and sets the Version property.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportManifestRoot.FileFormat">
            <summary>
            Gets and sets the FileFormat property.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportManifestRoot.ImporterField">
            <summary>
            Gets and sets the ImporterField property.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportManifestRoot.SelfDestructUrl">
            <summary>
            Gets and sets the SelfDestructUrl property.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportManifestRoot.ImportData">
            <summary>
            Gets and sets the ImportData property.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Import.ImporterInfo">
            <summary>
            <para>
            Serialization class for processing the import and conversion of a virtual machine image to 
            a new Amazon EC2 instance, or a disk image to a new EBS volume.
            </para>
            <para>
            This class represents version and requester metadata for the conversion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImporterInfo.Name">
            <summary>
            Gets and sets the Name property.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImporterInfo.Version">
            <summary>
            Gets and sets the Version property.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImporterInfo.Release">
            <summary>
            Gets and sets the Release property.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Import.Import">
            <summary>
            <para>
            Serialization class for processing the import and conversion of a virtual machine image to 
            a new Amazon EC2 instance, or a disk image to a new EBS volume.
            </para>
            <para>
            This class represents the root of the data describing the data slices of the image file that are
            to be uploaded to Amazon S3 and the requested size of the volume to hold the data after conversion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.Import.Size">
            <summary>
            Disk image size
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.Import.VolumeSize">
            <summary>
            The EC2 volume size
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.Import.PartsList">
            <summary>
            The list of parts.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Import.ImageFileParts">
            <summary>
            <para>
            Serialization class for processing the import and conversion of a virtual machine image to 
            a new Amazon EC2 instance, or a disk image to a new EBS volume.
            </para>
            <para>
            This class represents the list of 'slices' of the image file that is to be uploaded to 
            Amazon S3, together with helper to return the next slice for processing during the upload
            process.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFileParts.PartInstances">
            <summary>
            The collection of parts making up the image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFileParts.Count">
            <summary>
            The number of parts in the image.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Import.ImageFileParts.#ctor">
            <summary>
            Initializes an empty collection of parts
            </summary>
        </member>
        <member name="M:Amazon.EC2.Import.ImageFileParts.FetchNextPartForUpload(System.IO.Stream,System.Byte[]@)">
            <summary>
            Returns the next part to be uploaded, with its data loaded into the
            supplied buffer.
            </summary>
            <remarks>
            We want to serialize read access to the image file stream so that we do not
            'thrash' or encounter problems with a non-seekable stream, but at the same
            time parallelize the part uploads. Reading the data prior to returning the
            part instance data satisfies this requirement.
            </remarks>
            <param name="imageFileStream">The stream wrapping the image file.</param>
            <param name="buffer">Buffer into which the part data will be read.</param>
            <returns>
            The part to upload or null if the image file has now been consumed.
            </returns>
            <remarks>
            If an error occurs during a part upload, we currently cease yielding parts 
            to all workers, causing them to expire cleanly 'asap'. This strategy allows 
            us to change to a 'greedy' approach in future where we simply skip over the 
            part in error and do as much uploading as we can before exit.
            </remarks>
        </member>
        <member name="M:Amazon.EC2.Import.ImageFileParts.RegisterUploadFailure">
            <summary>
            Allows the upload threadpool workers to register that one or
            more parts failed to upload successfully.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFileParts.HasFailedUploads">
            <summary>
            True if any image file part failed to upload successfully.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Import.ImageFilePart">
            <summary>
            <para>
            Serialization class for processing the import and conversion of a virtual machine image to 
            a new Amazon EC2 instance, or a disk image to a new EBS volume.
            </para>
            <para>
            This class represents a single 'slice' of the image file that is to be uploaded to 
            Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFilePart.ByteRange">
            <summary>
            The range of bytes representing the part.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFilePart.Key">
            <summary>
            The Amazon S3 object key of the part.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFilePart.HeadUrl">
            <summary>
            The Url for head requests.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFilePart.GetUrl">
            <summary>
            The Url for get requests.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFilePart.DeleteUrl">
            <summary>
            The Url for delete requests.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFilePart.Index">
            <summary>
            The sequence number of the part within the whole image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFilePart.UploadCompleted">
            <summary>
            Indicates whether the part upload completed successfully.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Import.ImageFilePartByteRange">
            <summary>
            <para>
            Serialization class for processing the import and conversion of a virtual machine image to 
            a new Amazon EC2 instance, or a disk image to a new EBS volume.
            </para>
            <para>
            This class represents the offset and extent of a single 'slice' of the image file that is to 
            be uploaded to Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFilePartByteRange.End">
            <summary>
            The byte offset indicating the end of the range.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFilePartByteRange.Start">
            <summary>
            The byte offset indicating the start of the range.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImageFilePartByteRange.Extent">
            <summary>
            The length of the byte range.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Import.ImagePartUploadState">
            <summary>
            State class used to pass data about the image part to be processed to the
            thread pool worker.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Import.DiskImportErrorStage">
            <summary>
            Error enum for disk import
            </summary>
        </member>
        <member name="F:Amazon.EC2.Import.DiskImportErrorStage.GeneratingManifest">
            <summary>
            Error was detected during construction of the import
            manifest/analysis of the image file
            </summary>
        </member>
        <member name="F:Amazon.EC2.Import.DiskImportErrorStage.ManifestInspection">
            <summary>
            Error was detected during download/deserialization of
            a previously uploaded manifest
            </summary>
        </member>
        <member name="F:Amazon.EC2.Import.DiskImportErrorStage.UploadingManifest">
            <summary>
            Error was detected during upload of the import manifest
            to S3
            </summary>
        </member>
        <member name="F:Amazon.EC2.Import.DiskImportErrorStage.UploadingImageFile">
            <summary>
            Error was detected during upload of the part artifacts making
            up the image file
            </summary>
        </member>
        <member name="F:Amazon.EC2.Import.DiskImportErrorStage.SendingImportRequest">
            <summary>
            Error was detected during the sending of the request to EC2
            to start conversion of the uploaded image file
            </summary>
        </member>
        <member name="T:Amazon.EC2.Import.DiskImageImporterException">
            <summary>
            Wraps errors returned from the importer
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.DiskImageImporterException.Stage">
            <summary>
            What stage the importer was at when the error occurred
            </summary>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DiskImageImporterException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.EC2.Import.DiskImageImporterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.EC2.Import.ImportLaunchConfiguration">
            <summary>
            Settings configuring the EC2 instance launch phase after an image file has been 
            uploaded.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportLaunchConfiguration.InstanceType">
            <summary>
            The Amazon EC2 instance type to launch for the conversion
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportLaunchConfiguration.Platform">
            <summary>
            The instance operating system. Valid values: Windows | Linux
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportLaunchConfiguration.Architecture">
            <summary>
            The architecture of the instance. Valid values: i386 | x86_64
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportLaunchConfiguration.Description">
            <summary>
            Optional description for the instance being imported.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportLaunchConfiguration.AvailabilityZone">
            <summary>
            Optional availability zone to launch the instance into. If not specified one will be chosen for you
            by EC2.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportLaunchConfiguration.SecurityGroupNames">
            <summary>
            One or more security group names. This is not supported for VMs imported into a VPC, which are 
            assigned the default security group. After a VM is imported into a VPC, you can change the instance 
            to use another security group.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportLaunchConfiguration.PrivateIpAddress">
            <summary>
            [EC2-VPC] Optionally, you can use this parameter to assign the instance a specific available IP address 
            from the IP address range of the subnet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportLaunchConfiguration.SubnetId">
            <summary>
            [EC2-VPC] The ID of the subnet to launch the instance into.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportLaunchConfiguration.EnableMonitoring">
            <summary>
            Indicates whether to enable detailed monitoring for the instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportLaunchConfiguration.InstanceInitiatedShutdownBehavior">
            <summary>
            Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using 
            the operating system command for system shutdown). Valid values: stop | terminate. 
            </summary>
        </member>
        <member name="P:Amazon.EC2.Import.ImportLaunchConfiguration.AdditionalInfo">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Import.CleanupProgressCallback">
            <summary>
            Callback signature to report progress on the deletion of the artifacts.
            </summary>
            <param name="message">Describes the current in-progress task.</param>
            <param name="percentComplete">If not null, the percentage completion of the deletion process.</param>
        </member>
        <member name="T:Amazon.EC2.Import.ImportCleanup">
            <summary>
            Collection of helper methods for removing VM image file artifacts from Amazon S3 after
            an instance or volume conversion has been performed. 
            </summary>
        </member>
        <member name="M:Amazon.EC2.Import.ImportCleanup.DeleteImageArtifacts(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint,System.String,System.Boolean,Amazon.EC2.Import.CleanupProgressCallback)">
            <summary>
            Deletes the image file artifacts associated with the specified conversion task.
            If the task is still active, ignoreActiveTask must be set true to enable artifact
            deletion, which will cause the task to fail. Use this option at your own risk.
            </summary>
            <param name="awsCredentials">
            Credentials to use to instantiate the Amazon EC2 and Amazon S3 clients needed to
            complete the operation.
            </param>
            <param name="region">
            The region containing the bucket where the image file artifacts were stored
            </param>
            <param name="conversionTaskId">
            The ID of the conversion task that used the image file
            </param>
            <param name="ignoreActiveTask">
            If true the artifacts are deleted even if the conversion task is still in progress
            </param>
            <param name="progressCallback">Optional progress callback</param>
        </member>
        <member name="M:Amazon.EC2.Import.ImportCleanup.DeleteImageArtifacts(Amazon.RegionEndpoint,System.String,System.Boolean,Amazon.EC2.Import.CleanupProgressCallback)">
            <summary>
            Deletes the image file artifacts associated with the specified conversion task.
            If the task is still active, ignoreActiveTask must be set true to enable artifact
            deletion, which will cause the task to fail. Use this option at your own risk.
            </summary>
            <param name="region">
            The region containing the bucket where the image file artifacts were stored
            </param>
            <param name="conversionTaskId">
            The ID of the conversion task that used the image file
            </param>
            <param name="ignoreActiveTask">
            If true the artifacts are deleted even if the conversion task is still in progress
            </param>
            <param name="progressCallback">Optional progress callback</param>
            <remarks>
            Amazon EC2 and S3 clients will be constructed using the specified region and
            default credentials.
            </remarks>
        </member>
        <member name="M:Amazon.EC2.Import.ImportCleanup.DeleteImageArtifacts(Amazon.EC2.IAmazonEC2,Amazon.Runtime.SharedInterfaces.ICoreAmazonS3,System.String,System.Boolean,Amazon.EC2.Import.CleanupProgressCallback)">
            <summary>
            Deletes the image file artifacts associated with the specified conversion task.
            If the task is still active, ignoreActiveTask must be set true to enable artifact
            deletion, which will cause the task to fail. Use this option at your own risk.
            </summary>
            <param name="ec2Client">
            Amazon EC2 client to use in the process. This should have been instantiated
            with credentials that have access to the conversion task and the region in
            which the import was performed.
            </param>
            <param name="s3Client">
            Amazon S3 client to use use in the process. This should have been instantiated
            with credentials that have access to the bucket containing the image file artifacts
            and the region in which the bucket exists.
            </param>
            <param name="conversionTaskId">
            The ID of the conversion task that used the image file
            </param>
            <param name="ignoreActiveTask">
            If true the artifacts are deleted even if the conversion task is still in progress
            </param>
            <param name="progressCallback">Optional progress callback</param>
        </member>
        <member name="M:Amazon.EC2.Import.ImportCleanup.DeleteImageArtifacts(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint,System.String,Amazon.EC2.Import.CleanupProgressCallback)">
            <summary>
            Deletes the artifacts associated with an import task using a presigned
            url to address the manifest for the import. No check is performed to
            determine whether the associated conversion task is in progress.
            </summary>
            <param name="awsCredentials">
            Credentials to use to instantiate the Amazon EC2 and Amazon S3 clients needed to
            complete the operation.
            </param>
            <param name="region">
            The region containing the bucket where the image file artifacts were stored
            </param>
            <param name="manifestUrl">
            Presigned URL to the import manifest file
            </param>
            <param name="progressCallback">Optional progress callback</param>
        </member>
        <member name="M:Amazon.EC2.Import.ImportCleanup.DeleteImageArtifacts(Amazon.RegionEndpoint,System.String,Amazon.EC2.Import.CleanupProgressCallback)">
            <summary>
            Deletes the artifacts associated with an import task using a presigned
            url to address the manifest for the import. No check is performed to
            determine whether the associated conversion task is in progress.
            </summary>
            <param name="region">
            The region containing the bucket where the image file artifacts were stored
            </param>
            <param name="manifestUrl">
            Presigned URL to the import manifest file
            </param>
            <param name="progressCallback">Optional progress callback</param>
            <remarks>
            An Amazon S3 client will be constructed using the specified region and
            default credentials.
            </remarks>
        </member>
        <member name="M:Amazon.EC2.Import.ImportCleanup.DeleteImageArtifacts(Amazon.Runtime.SharedInterfaces.ICoreAmazonS3,System.String,Amazon.EC2.Import.CleanupProgressCallback)">
            <summary>
            Deletes the artifacts associated with an import task using a presigned
            url to address the manifest for the import. No check is performed to
            determine whether the associated conversion task is in progress.
            </summary>
            <param name="s3Client">
            An Amazon S3 client for the operation to use. This should have been constructed
            using credentials that have access to the bucket containing the image file
            artifacts and be scoped to the region containing the bucket.
            </param>
            <param name="manifestUrl">
            Presigned URL to the import manifest file
            </param>
            <param name="progressCallback">Optional progress callback</param>
        </member>
        <member name="M:Amazon.EC2.Import.ImportCleanup.DeleteImageArtifacts(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint,System.String,System.String,Amazon.EC2.Import.CleanupProgressCallback)">
            <summary>
            Deletes the artifacts associated with an import task using the bucket name
            and key prefix to the artifacts in Amazon S3. No check is performed to
            determine whether the associated conversion task is in progress.
            </summary>
            <param name="awsCredentials">
            Credentials to use to instantiate the Amazon EC2 and Amazon S3 clients needed to
            complete the operation.
            </param>
            <param name="region">
            The region containing the bucket where the image file artifacts were stored
            </param>
            <param name="bucketName">The name of the bucket containing the artifacts</param>
            <param name="keyPrefix">The common key prefix of the artifacts</param>
            <param name="progressCallback">Optional progress callback</param>
            <remarks>
            An Amazon S3 client will be constructed using the specified region and
            credentials.
            </remarks>
        </member>
        <member name="M:Amazon.EC2.Import.ImportCleanup.DeleteImageArtifacts(Amazon.RegionEndpoint,System.String,System.String,Amazon.EC2.Import.CleanupProgressCallback)">
            <summary>
            Deletes the artifacts associated with an import task using the bucket name
            and key prefix to the artifacts in Amazon S3. No check is performed to
            determine whether the associated conversion task is in progress.
            </summary>
            <param name="region">
            The region containing the bucket where the image file artifacts were stored
            </param>
            <param name="bucketName">The name of the bucket containing the artifacts</param>
            <param name="keyPrefix">The common key prefix of the artifacts</param>
            <param name="progressCallback">Optional progress callback</param>
            <remarks>
            An Amazon S3 client will be constructed using the specified region and
            default profile credentials.
            </remarks>
        </member>
        <member name="M:Amazon.EC2.Import.ImportCleanup.DeleteImageArtifacts(Amazon.Runtime.SharedInterfaces.ICoreAmazonS3,System.String,System.String,Amazon.EC2.Import.CleanupProgressCallback)">
            <summary>
            Deletes the artifacts associated with an import task using the bucket name
            and key prefix to the artifacts in Amazon S3. No check is performed to
            determine whether the associated conversion task is in progress.
            </summary>
            <param name="s3Client">
            An Amazon S3 client for the operation to use. This should have been constructed
            using credentials that have access to the bucket containing the image file
            artifacts and be scoped to the region containing the bucket.
            </param>
            <param name="bucketName">The name of the bucket containing the artifacts</param>
            <param name="keyPrefix">The common key prefix of the artifacts</param>
            <param name="progressCallback">Optional progress callback</param>
        </member>
        <member name="M:Amazon.EC2.Import.ImportCleanup.SendProgressNotification(Amazon.EC2.Import.CleanupProgressCallback,System.String,System.Nullable{System.Int32})">
            <summary>
            Callback processing if the caller supplied a delegate.
            </summary>
            <param name="progressCallback">
            The callback delegate that was supplied, or null if progress updates were not requested
            </param>
            <param name="msg">A message describing the current state of the cleanup process</param>
            <param name="percentComplete">When the deletion phase of the cleanup process starts, set 
            to the percentage of image file artifacts deleted so far
            </param>
        </member>
        <member name="T:Amazon.EC2.AmazonEC2Config">
            <summary>
            Configuration for accessing Amazon EC2 service
            </summary>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Config.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.EC2.AmazonEC2Config.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EC2.AmazonEC2Config.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.EC2.AmazonEC2Config.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.EC2.AmazonEC2Exception">
            <summary>
             Common exception for the EC2 service.
             </summary>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Exception.#ctor(System.String)">
            <summary>
            Construct instance of AmazonEC2Exception
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Exception.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonEC2Exception
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Exception.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonEC2Exception
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Exception.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonEC2Exception
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Exception.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonEC2Exception
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonEC2Exception class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.EC2.AccountAttributeName">
            <summary>
            Constants used for properties of type AccountAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.AccountAttributeName.DefaultVpc">
            <summary>
            Constant DefaultVpc for AccountAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.AccountAttributeName.SupportedPlatforms">
            <summary>
            Constant SupportedPlatforms for AccountAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.AccountAttributeName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.AccountAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.AccountAttributeName.op_Implicit(System.String)~Amazon.EC2.AccountAttributeName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ActivityStatus">
            <summary>
            Constants used for properties of type ActivityStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ActivityStatus.Error">
            <summary>
            Constant Error for ActivityStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.ActivityStatus.Fulfilled">
            <summary>
            Constant Fulfilled for ActivityStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.ActivityStatus.Pending_fulfillment">
            <summary>
            Constant Pending_fulfillment for ActivityStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.ActivityStatus.Pending_termination">
            <summary>
            Constant Pending_termination for ActivityStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.ActivityStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ActivityStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ActivityStatus.op_Implicit(System.String)~Amazon.EC2.ActivityStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Affinity">
            <summary>
            Constants used for properties of type Affinity.
            </summary>
        </member>
        <member name="F:Amazon.EC2.Affinity.Default">
            <summary>
            Constant Default for Affinity
            </summary>
        </member>
        <member name="F:Amazon.EC2.Affinity.Host">
            <summary>
            Constant Host for Affinity
            </summary>
        </member>
        <member name="M:Amazon.EC2.Affinity.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Affinity.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.Affinity.op_Implicit(System.String)~Amazon.EC2.Affinity">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.AllocationState">
            <summary>
            Constants used for properties of type AllocationState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.AllocationState.Available">
            <summary>
            Constant Available for AllocationState
            </summary>
        </member>
        <member name="F:Amazon.EC2.AllocationState.PermanentFailure">
            <summary>
            Constant PermanentFailure for AllocationState
            </summary>
        </member>
        <member name="F:Amazon.EC2.AllocationState.Released">
            <summary>
            Constant Released for AllocationState
            </summary>
        </member>
        <member name="F:Amazon.EC2.AllocationState.ReleasedPermanentFailure">
            <summary>
            Constant ReleasedPermanentFailure for AllocationState
            </summary>
        </member>
        <member name="F:Amazon.EC2.AllocationState.UnderAssessment">
            <summary>
            Constant UnderAssessment for AllocationState
            </summary>
        </member>
        <member name="M:Amazon.EC2.AllocationState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.AllocationState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.AllocationState.op_Implicit(System.String)~Amazon.EC2.AllocationState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.AllocationStrategy">
            <summary>
            Constants used for properties of type AllocationStrategy.
            </summary>
        </member>
        <member name="F:Amazon.EC2.AllocationStrategy.Diversified">
            <summary>
            Constant Diversified for AllocationStrategy
            </summary>
        </member>
        <member name="F:Amazon.EC2.AllocationStrategy.LowestPrice">
            <summary>
            Constant LowestPrice for AllocationStrategy
            </summary>
        </member>
        <member name="M:Amazon.EC2.AllocationStrategy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.AllocationStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.AllocationStrategy.op_Implicit(System.String)~Amazon.EC2.AllocationStrategy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ArchitectureValues">
            <summary>
            Constants used for properties of type ArchitectureValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ArchitectureValues.I386">
            <summary>
            Constant I386 for ArchitectureValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.ArchitectureValues.X86_64">
            <summary>
            Constant X86_64 for ArchitectureValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.ArchitectureValues.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ArchitectureValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ArchitectureValues.op_Implicit(System.String)~Amazon.EC2.ArchitectureValues">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.AttachmentStatus">
            <summary>
            Constants used for properties of type AttachmentStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.AttachmentStatus.Attached">
            <summary>
            Constant Attached for AttachmentStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.AttachmentStatus.Attaching">
            <summary>
            Constant Attaching for AttachmentStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.AttachmentStatus.Detached">
            <summary>
            Constant Detached for AttachmentStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.AttachmentStatus.Detaching">
            <summary>
            Constant Detaching for AttachmentStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.AttachmentStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.AttachmentStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.AttachmentStatus.op_Implicit(System.String)~Amazon.EC2.AttachmentStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.AutoPlacement">
            <summary>
            Constants used for properties of type AutoPlacement.
            </summary>
        </member>
        <member name="F:Amazon.EC2.AutoPlacement.Off">
            <summary>
            Constant Off for AutoPlacement
            </summary>
        </member>
        <member name="F:Amazon.EC2.AutoPlacement.On">
            <summary>
            Constant On for AutoPlacement
            </summary>
        </member>
        <member name="M:Amazon.EC2.AutoPlacement.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.AutoPlacement.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.AutoPlacement.op_Implicit(System.String)~Amazon.EC2.AutoPlacement">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.AvailabilityZoneState">
            <summary>
            Constants used for properties of type AvailabilityZoneState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.AvailabilityZoneState.Available">
            <summary>
            Constant Available for AvailabilityZoneState
            </summary>
        </member>
        <member name="F:Amazon.EC2.AvailabilityZoneState.Impaired">
            <summary>
            Constant Impaired for AvailabilityZoneState
            </summary>
        </member>
        <member name="F:Amazon.EC2.AvailabilityZoneState.Information">
            <summary>
            Constant Information for AvailabilityZoneState
            </summary>
        </member>
        <member name="F:Amazon.EC2.AvailabilityZoneState.Unavailable">
            <summary>
            Constant Unavailable for AvailabilityZoneState
            </summary>
        </member>
        <member name="M:Amazon.EC2.AvailabilityZoneState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.AvailabilityZoneState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.AvailabilityZoneState.op_Implicit(System.String)~Amazon.EC2.AvailabilityZoneState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.BatchState">
            <summary>
            Constants used for properties of type BatchState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.BatchState.Active">
            <summary>
            Constant Active for BatchState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BatchState.Cancelled">
            <summary>
            Constant Cancelled for BatchState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BatchState.Cancelled_running">
            <summary>
            Constant Cancelled_running for BatchState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BatchState.Cancelled_terminating">
            <summary>
            Constant Cancelled_terminating for BatchState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BatchState.Failed">
            <summary>
            Constant Failed for BatchState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BatchState.Modifying">
            <summary>
            Constant Modifying for BatchState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BatchState.Submitted">
            <summary>
            Constant Submitted for BatchState
            </summary>
        </member>
        <member name="M:Amazon.EC2.BatchState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.BatchState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.BatchState.op_Implicit(System.String)~Amazon.EC2.BatchState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.BundleTaskState">
            <summary>
            Constants used for properties of type BundleTaskState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Bundling">
            <summary>
            Constant Bundling for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Cancelling">
            <summary>
            Constant Cancelling for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Complete">
            <summary>
            Constant Complete for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Failed">
            <summary>
            Constant Failed for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Pending">
            <summary>
            Constant Pending for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Storing">
            <summary>
            Constant Storing for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.WaitingForShutdown">
            <summary>
            Constant WaitingForShutdown for BundleTaskState
            </summary>
        </member>
        <member name="M:Amazon.EC2.BundleTaskState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.BundleTaskState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.BundleTaskState.op_Implicit(System.String)~Amazon.EC2.BundleTaskState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.CancelBatchErrorCode">
            <summary>
            Constants used for properties of type CancelBatchErrorCode.
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelBatchErrorCode.FleetRequestIdDoesNotExist">
            <summary>
            Constant FleetRequestIdDoesNotExist for CancelBatchErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelBatchErrorCode.FleetRequestIdMalformed">
            <summary>
            Constant FleetRequestIdMalformed for CancelBatchErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelBatchErrorCode.FleetRequestNotInCancellableState">
            <summary>
            Constant FleetRequestNotInCancellableState for CancelBatchErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelBatchErrorCode.UnexpectedError">
            <summary>
            Constant UnexpectedError for CancelBatchErrorCode
            </summary>
        </member>
        <member name="M:Amazon.EC2.CancelBatchErrorCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.CancelBatchErrorCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.CancelBatchErrorCode.op_Implicit(System.String)~Amazon.EC2.CancelBatchErrorCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.CancelSpotInstanceRequestState">
            <summary>
            Constants used for properties of type CancelSpotInstanceRequestState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelSpotInstanceRequestState.Active">
            <summary>
            Constant Active for CancelSpotInstanceRequestState
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelSpotInstanceRequestState.Cancelled">
            <summary>
            Constant Cancelled for CancelSpotInstanceRequestState
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelSpotInstanceRequestState.Closed">
            <summary>
            Constant Closed for CancelSpotInstanceRequestState
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelSpotInstanceRequestState.Completed">
            <summary>
            Constant Completed for CancelSpotInstanceRequestState
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelSpotInstanceRequestState.Open">
            <summary>
            Constant Open for CancelSpotInstanceRequestState
            </summary>
        </member>
        <member name="M:Amazon.EC2.CancelSpotInstanceRequestState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.CancelSpotInstanceRequestState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.CancelSpotInstanceRequestState.op_Implicit(System.String)~Amazon.EC2.CancelSpotInstanceRequestState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ContainerFormat">
            <summary>
            Constants used for properties of type ContainerFormat.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ContainerFormat.Ova">
            <summary>
            Constant Ova for ContainerFormat
            </summary>
        </member>
        <member name="M:Amazon.EC2.ContainerFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ContainerFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ContainerFormat.op_Implicit(System.String)~Amazon.EC2.ContainerFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ConversionTaskState">
            <summary>
            Constants used for properties of type ConversionTaskState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ConversionTaskState.Active">
            <summary>
            Constant Active for ConversionTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ConversionTaskState.Cancelled">
            <summary>
            Constant Cancelled for ConversionTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ConversionTaskState.Cancelling">
            <summary>
            Constant Cancelling for ConversionTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ConversionTaskState.Completed">
            <summary>
            Constant Completed for ConversionTaskState
            </summary>
        </member>
        <member name="M:Amazon.EC2.ConversionTaskState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ConversionTaskState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ConversionTaskState.op_Implicit(System.String)~Amazon.EC2.ConversionTaskState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.CurrencyCodeValues">
            <summary>
            Constants used for properties of type CurrencyCodeValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.CurrencyCodeValues.USD">
            <summary>
            Constant USD for CurrencyCodeValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.CurrencyCodeValues.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.CurrencyCodeValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.CurrencyCodeValues.op_Implicit(System.String)~Amazon.EC2.CurrencyCodeValues">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.DatafeedSubscriptionState">
            <summary>
            Constants used for properties of type DatafeedSubscriptionState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.DatafeedSubscriptionState.Active">
            <summary>
            Constant Active for DatafeedSubscriptionState
            </summary>
        </member>
        <member name="F:Amazon.EC2.DatafeedSubscriptionState.Inactive">
            <summary>
            Constant Inactive for DatafeedSubscriptionState
            </summary>
        </member>
        <member name="M:Amazon.EC2.DatafeedSubscriptionState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.DatafeedSubscriptionState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.DatafeedSubscriptionState.op_Implicit(System.String)~Amazon.EC2.DatafeedSubscriptionState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.DeviceType">
            <summary>
            Constants used for properties of type DeviceType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.DeviceType.Ebs">
            <summary>
            Constant Ebs for DeviceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.DeviceType.InstanceStore">
            <summary>
            Constant InstanceStore for DeviceType
            </summary>
        </member>
        <member name="M:Amazon.EC2.DeviceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.DeviceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.DeviceType.op_Implicit(System.String)~Amazon.EC2.DeviceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.DiskImageFormat">
            <summary>
            Constants used for properties of type DiskImageFormat.
            </summary>
        </member>
        <member name="F:Amazon.EC2.DiskImageFormat.RAW">
            <summary>
            Constant RAW for DiskImageFormat
            </summary>
        </member>
        <member name="F:Amazon.EC2.DiskImageFormat.VHD">
            <summary>
            Constant VHD for DiskImageFormat
            </summary>
        </member>
        <member name="F:Amazon.EC2.DiskImageFormat.VMDK">
            <summary>
            Constant VMDK for DiskImageFormat
            </summary>
        </member>
        <member name="M:Amazon.EC2.DiskImageFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.DiskImageFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.DiskImageFormat.op_Implicit(System.String)~Amazon.EC2.DiskImageFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.DomainType">
            <summary>
            Constants used for properties of type DomainType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.DomainType.Standard">
            <summary>
            Constant Standard for DomainType
            </summary>
        </member>
        <member name="F:Amazon.EC2.DomainType.Vpc">
            <summary>
            Constant Vpc for DomainType
            </summary>
        </member>
        <member name="M:Amazon.EC2.DomainType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.DomainType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.DomainType.op_Implicit(System.String)~Amazon.EC2.DomainType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.EventCode">
            <summary>
            Constants used for properties of type EventCode.
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventCode.InstanceReboot">
            <summary>
            Constant InstanceReboot for EventCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventCode.InstanceRetirement">
            <summary>
            Constant InstanceRetirement for EventCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventCode.InstanceStop">
            <summary>
            Constant InstanceStop for EventCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventCode.SystemMaintenance">
            <summary>
            Constant SystemMaintenance for EventCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventCode.SystemReboot">
            <summary>
            Constant SystemReboot for EventCode
            </summary>
        </member>
        <member name="M:Amazon.EC2.EventCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.EventCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.EventCode.op_Implicit(System.String)~Amazon.EC2.EventCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.EventType">
            <summary>
            Constants used for properties of type EventType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventType.Error">
            <summary>
            Constant Error for EventType
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventType.FleetRequestChange">
            <summary>
            Constant FleetRequestChange for EventType
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventType.InstanceChange">
            <summary>
            Constant InstanceChange for EventType
            </summary>
        </member>
        <member name="M:Amazon.EC2.EventType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.EventType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.EventType.op_Implicit(System.String)~Amazon.EC2.EventType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ExcessCapacityTerminationPolicy">
            <summary>
            Constants used for properties of type ExcessCapacityTerminationPolicy.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExcessCapacityTerminationPolicy.Default">
            <summary>
            Constant Default for ExcessCapacityTerminationPolicy
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExcessCapacityTerminationPolicy.NoTermination">
            <summary>
            Constant NoTermination for ExcessCapacityTerminationPolicy
            </summary>
        </member>
        <member name="M:Amazon.EC2.ExcessCapacityTerminationPolicy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ExcessCapacityTerminationPolicy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ExcessCapacityTerminationPolicy.op_Implicit(System.String)~Amazon.EC2.ExcessCapacityTerminationPolicy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ExportEnvironment">
            <summary>
            Constants used for properties of type ExportEnvironment.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportEnvironment.Citrix">
            <summary>
            Constant Citrix for ExportEnvironment
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportEnvironment.Microsoft">
            <summary>
            Constant Microsoft for ExportEnvironment
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportEnvironment.Vmware">
            <summary>
            Constant Vmware for ExportEnvironment
            </summary>
        </member>
        <member name="M:Amazon.EC2.ExportEnvironment.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ExportEnvironment.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ExportEnvironment.op_Implicit(System.String)~Amazon.EC2.ExportEnvironment">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ExportTaskState">
            <summary>
            Constants used for properties of type ExportTaskState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportTaskState.Active">
            <summary>
            Constant Active for ExportTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportTaskState.Cancelled">
            <summary>
            Constant Cancelled for ExportTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportTaskState.Cancelling">
            <summary>
            Constant Cancelling for ExportTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportTaskState.Completed">
            <summary>
            Constant Completed for ExportTaskState
            </summary>
        </member>
        <member name="M:Amazon.EC2.ExportTaskState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ExportTaskState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ExportTaskState.op_Implicit(System.String)~Amazon.EC2.ExportTaskState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.FleetType">
            <summary>
            Constants used for properties of type FleetType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.FleetType.Maintain">
            <summary>
            Constant Maintain for FleetType
            </summary>
        </member>
        <member name="F:Amazon.EC2.FleetType.Request">
            <summary>
            Constant Request for FleetType
            </summary>
        </member>
        <member name="M:Amazon.EC2.FleetType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.FleetType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.FleetType.op_Implicit(System.String)~Amazon.EC2.FleetType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.FlowLogsResourceType">
            <summary>
            Constants used for properties of type FlowLogsResourceType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.FlowLogsResourceType.NetworkInterface">
            <summary>
            Constant NetworkInterface for FlowLogsResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.FlowLogsResourceType.Subnet">
            <summary>
            Constant Subnet for FlowLogsResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.FlowLogsResourceType.VPC">
            <summary>
            Constant VPC for FlowLogsResourceType
            </summary>
        </member>
        <member name="M:Amazon.EC2.FlowLogsResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.FlowLogsResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.FlowLogsResourceType.op_Implicit(System.String)~Amazon.EC2.FlowLogsResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.GatewayType">
            <summary>
            Constants used for properties of type GatewayType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.GatewayType.Ipsec1">
            <summary>
            Constant Ipsec1 for GatewayType
            </summary>
        </member>
        <member name="M:Amazon.EC2.GatewayType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.GatewayType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.GatewayType.op_Implicit(System.String)~Amazon.EC2.GatewayType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.HostTenancy">
            <summary>
            Constants used for properties of type HostTenancy.
            </summary>
        </member>
        <member name="F:Amazon.EC2.HostTenancy.Dedicated">
            <summary>
            Constant Dedicated for HostTenancy
            </summary>
        </member>
        <member name="F:Amazon.EC2.HostTenancy.Host">
            <summary>
            Constant Host for HostTenancy
            </summary>
        </member>
        <member name="M:Amazon.EC2.HostTenancy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.HostTenancy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.HostTenancy.op_Implicit(System.String)~Amazon.EC2.HostTenancy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.HypervisorType">
            <summary>
            Constants used for properties of type HypervisorType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.HypervisorType.Ovm">
            <summary>
            Constant Ovm for HypervisorType
            </summary>
        </member>
        <member name="F:Amazon.EC2.HypervisorType.Xen">
            <summary>
            Constant Xen for HypervisorType
            </summary>
        </member>
        <member name="M:Amazon.EC2.HypervisorType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.HypervisorType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.HypervisorType.op_Implicit(System.String)~Amazon.EC2.HypervisorType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ImageAttributeName">
            <summary>
            Constants used for properties of type ImageAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.BlockDeviceMapping">
            <summary>
            Constant BlockDeviceMapping for ImageAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.Description">
            <summary>
            Constant Description for ImageAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.Kernel">
            <summary>
            Constant Kernel for ImageAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.LaunchPermission">
            <summary>
            Constant LaunchPermission for ImageAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.ProductCodes">
            <summary>
            Constant ProductCodes for ImageAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.Ramdisk">
            <summary>
            Constant Ramdisk for ImageAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.SriovNetSupport">
            <summary>
            Constant SriovNetSupport for ImageAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageAttributeName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ImageAttributeName.op_Implicit(System.String)~Amazon.EC2.ImageAttributeName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ImageState">
            <summary>
            Constants used for properties of type ImageState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageState.Available">
            <summary>
            Constant Available for ImageState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageState.Deregistered">
            <summary>
            Constant Deregistered for ImageState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageState.Error">
            <summary>
            Constant Error for ImageState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageState.Failed">
            <summary>
            Constant Failed for ImageState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageState.Invalid">
            <summary>
            Constant Invalid for ImageState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageState.Pending">
            <summary>
            Constant Pending for ImageState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageState.Transient">
            <summary>
            Constant Transient for ImageState
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ImageState.op_Implicit(System.String)~Amazon.EC2.ImageState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ImageTypeValues">
            <summary>
            Constants used for properties of type ImageTypeValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageTypeValues.Kernel">
            <summary>
            Constant Kernel for ImageTypeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageTypeValues.Machine">
            <summary>
            Constant Machine for ImageTypeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageTypeValues.Ramdisk">
            <summary>
            Constant Ramdisk for ImageTypeValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageTypeValues.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageTypeValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ImageTypeValues.op_Implicit(System.String)~Amazon.EC2.ImageTypeValues">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.InstanceAttributeName">
            <summary>
            Constants used for properties of type InstanceAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.BlockDeviceMapping">
            <summary>
            Constant BlockDeviceMapping for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.DisableApiTermination">
            <summary>
            Constant DisableApiTermination for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.EbsOptimized">
            <summary>
            Constant EbsOptimized for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.EnaSupport">
            <summary>
            Constant EnaSupport for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.GroupSet">
            <summary>
            Constant GroupSet for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.InstanceInitiatedShutdownBehavior">
            <summary>
            Constant InstanceInitiatedShutdownBehavior for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.InstanceType">
            <summary>
            Constant InstanceType for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.Kernel">
            <summary>
            Constant Kernel for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.ProductCodes">
            <summary>
            Constant ProductCodes for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.Ramdisk">
            <summary>
            Constant Ramdisk for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.RootDeviceName">
            <summary>
            Constant RootDeviceName for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.SourceDestCheck">
            <summary>
            Constant SourceDestCheck for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.SriovNetSupport">
            <summary>
            Constant SriovNetSupport for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.UserData">
            <summary>
            Constant UserData for InstanceAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceAttributeName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.InstanceAttributeName.op_Implicit(System.String)~Amazon.EC2.InstanceAttributeName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.InstanceLifecycleType">
            <summary>
            Constants used for properties of type InstanceLifecycleType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceLifecycleType.Scheduled">
            <summary>
            Constant Scheduled for InstanceLifecycleType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceLifecycleType.Spot">
            <summary>
            Constant Spot for InstanceLifecycleType
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceLifecycleType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceLifecycleType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.InstanceLifecycleType.op_Implicit(System.String)~Amazon.EC2.InstanceLifecycleType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.InstanceStateName">
            <summary>
            Constants used for properties of type InstanceStateName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.Pending">
            <summary>
            Constant Pending for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.Running">
            <summary>
            Constant Running for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.ShuttingDown">
            <summary>
            Constant ShuttingDown for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.Stopped">
            <summary>
            Constant Stopped for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.Stopping">
            <summary>
            Constant Stopping for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.Terminated">
            <summary>
            Constant Terminated for InstanceStateName
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceStateName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceStateName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.InstanceStateName.op_Implicit(System.String)~Amazon.EC2.InstanceStateName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.InstanceType">
            <summary>
            Constants used for properties of type InstanceType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C1Medium">
            <summary>
            Constant C1Medium for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C1Xlarge">
            <summary>
            Constant C1Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C32xlarge">
            <summary>
            Constant C32xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C34xlarge">
            <summary>
            Constant C34xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C38xlarge">
            <summary>
            Constant C38xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C3Large">
            <summary>
            Constant C3Large for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C3Xlarge">
            <summary>
            Constant C3Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C42xlarge">
            <summary>
            Constant C42xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C44xlarge">
            <summary>
            Constant C44xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C48xlarge">
            <summary>
            Constant C48xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C4Large">
            <summary>
            Constant C4Large for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C4Xlarge">
            <summary>
            Constant C4Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Cc14xlarge">
            <summary>
            Constant Cc14xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Cc28xlarge">
            <summary>
            Constant Cc28xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Cg14xlarge">
            <summary>
            Constant Cg14xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Cr18xlarge">
            <summary>
            Constant Cr18xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.D22xlarge">
            <summary>
            Constant D22xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.D24xlarge">
            <summary>
            Constant D24xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.D28xlarge">
            <summary>
            Constant D28xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.D2Xlarge">
            <summary>
            Constant D2Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.G22xlarge">
            <summary>
            Constant G22xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.G28xlarge">
            <summary>
            Constant G28xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Hi14xlarge">
            <summary>
            Constant Hi14xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Hs18xlarge">
            <summary>
            Constant Hs18xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.I22xlarge">
            <summary>
            Constant I22xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.I24xlarge">
            <summary>
            Constant I24xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.I28xlarge">
            <summary>
            Constant I28xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.I2Xlarge">
            <summary>
            Constant I2Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M1Large">
            <summary>
            Constant M1Large for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M1Medium">
            <summary>
            Constant M1Medium for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M1Small">
            <summary>
            Constant M1Small for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M1Xlarge">
            <summary>
            Constant M1Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M22xlarge">
            <summary>
            Constant M22xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M24xlarge">
            <summary>
            Constant M24xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M2Xlarge">
            <summary>
            Constant M2Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M32xlarge">
            <summary>
            Constant M32xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M3Large">
            <summary>
            Constant M3Large for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M3Medium">
            <summary>
            Constant M3Medium for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M3Xlarge">
            <summary>
            Constant M3Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M410xlarge">
            <summary>
            Constant M410xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M416xlarge">
            <summary>
            Constant M416xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M42xlarge">
            <summary>
            Constant M42xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M44xlarge">
            <summary>
            Constant M44xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M4Large">
            <summary>
            Constant M4Large for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M4Xlarge">
            <summary>
            Constant M4Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.P216xlarge">
            <summary>
            Constant P216xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.P28xlarge">
            <summary>
            Constant P28xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.P2Xlarge">
            <summary>
            Constant P2Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.R32xlarge">
            <summary>
            Constant R32xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.R34xlarge">
            <summary>
            Constant R34xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.R38xlarge">
            <summary>
            Constant R38xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.R3Large">
            <summary>
            Constant R3Large for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.R3Xlarge">
            <summary>
            Constant R3Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.T1Micro">
            <summary>
            Constant T1Micro for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.T2Large">
            <summary>
            Constant T2Large for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.T2Medium">
            <summary>
            Constant T2Medium for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.T2Micro">
            <summary>
            Constant T2Micro for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.T2Nano">
            <summary>
            Constant T2Nano for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.T2Small">
            <summary>
            Constant T2Small for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.X116xlarge">
            <summary>
            Constant X116xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.X132xlarge">
            <summary>
            Constant X132xlarge for InstanceType
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.InstanceType.op_Implicit(System.String)~Amazon.EC2.InstanceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ListingState">
            <summary>
            Constants used for properties of type ListingState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingState.Available">
            <summary>
            Constant Available for ListingState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingState.Cancelled">
            <summary>
            Constant Cancelled for ListingState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingState.Pending">
            <summary>
            Constant Pending for ListingState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingState.Sold">
            <summary>
            Constant Sold for ListingState
            </summary>
        </member>
        <member name="M:Amazon.EC2.ListingState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ListingState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ListingState.op_Implicit(System.String)~Amazon.EC2.ListingState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ListingStatus">
            <summary>
            Constants used for properties of type ListingStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingStatus.Active">
            <summary>
            Constant Active for ListingStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingStatus.Cancelled">
            <summary>
            Constant Cancelled for ListingStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingStatus.Closed">
            <summary>
            Constant Closed for ListingStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingStatus.Pending">
            <summary>
            Constant Pending for ListingStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.ListingStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ListingStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ListingStatus.op_Implicit(System.String)~Amazon.EC2.ListingStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.MonitoringState">
            <summary>
            Constants used for properties of type MonitoringState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.MonitoringState.Disabled">
            <summary>
            Constant Disabled for MonitoringState
            </summary>
        </member>
        <member name="F:Amazon.EC2.MonitoringState.Disabling">
            <summary>
            Constant Disabling for MonitoringState
            </summary>
        </member>
        <member name="F:Amazon.EC2.MonitoringState.Enabled">
            <summary>
            Constant Enabled for MonitoringState
            </summary>
        </member>
        <member name="F:Amazon.EC2.MonitoringState.Pending">
            <summary>
            Constant Pending for MonitoringState
            </summary>
        </member>
        <member name="M:Amazon.EC2.MonitoringState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.MonitoringState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.MonitoringState.op_Implicit(System.String)~Amazon.EC2.MonitoringState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.MoveStatus">
            <summary>
            Constants used for properties of type MoveStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.MoveStatus.MovingToVpc">
            <summary>
            Constant MovingToVpc for MoveStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.MoveStatus.RestoringToClassic">
            <summary>
            Constant RestoringToClassic for MoveStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.MoveStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.MoveStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.MoveStatus.op_Implicit(System.String)~Amazon.EC2.MoveStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.NatGatewayState">
            <summary>
            Constants used for properties of type NatGatewayState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.NatGatewayState.Available">
            <summary>
            Constant Available for NatGatewayState
            </summary>
        </member>
        <member name="F:Amazon.EC2.NatGatewayState.Deleted">
            <summary>
            Constant Deleted for NatGatewayState
            </summary>
        </member>
        <member name="F:Amazon.EC2.NatGatewayState.Deleting">
            <summary>
            Constant Deleting for NatGatewayState
            </summary>
        </member>
        <member name="F:Amazon.EC2.NatGatewayState.Failed">
            <summary>
            Constant Failed for NatGatewayState
            </summary>
        </member>
        <member name="F:Amazon.EC2.NatGatewayState.Pending">
            <summary>
            Constant Pending for NatGatewayState
            </summary>
        </member>
        <member name="M:Amazon.EC2.NatGatewayState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.NatGatewayState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.NatGatewayState.op_Implicit(System.String)~Amazon.EC2.NatGatewayState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.NetworkInterfaceAttribute">
            <summary>
            Constants used for properties of type NetworkInterfaceAttribute.
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceAttribute.Attachment">
            <summary>
            Constant Attachment for NetworkInterfaceAttribute
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceAttribute.Description">
            <summary>
            Constant Description for NetworkInterfaceAttribute
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceAttribute.GroupSet">
            <summary>
            Constant GroupSet for NetworkInterfaceAttribute
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceAttribute.SourceDestCheck">
            <summary>
            Constant SourceDestCheck for NetworkInterfaceAttribute
            </summary>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceAttribute.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceAttribute.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceAttribute.op_Implicit(System.String)~Amazon.EC2.NetworkInterfaceAttribute">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.NetworkInterfaceStatus">
            <summary>
            Constants used for properties of type NetworkInterfaceStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceStatus.Attaching">
            <summary>
            Constant Attaching for NetworkInterfaceStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceStatus.Available">
            <summary>
            Constant Available for NetworkInterfaceStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceStatus.Detaching">
            <summary>
            Constant Detaching for NetworkInterfaceStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceStatus.InUse">
            <summary>
            Constant InUse for NetworkInterfaceStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceStatus.op_Implicit(System.String)~Amazon.EC2.NetworkInterfaceStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.NetworkInterfaceType">
            <summary>
            Constants used for properties of type NetworkInterfaceType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceType.Interface">
            <summary>
            Constant Interface for NetworkInterfaceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceType.NatGateway">
            <summary>
            Constant NatGateway for NetworkInterfaceType
            </summary>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceType.op_Implicit(System.String)~Amazon.EC2.NetworkInterfaceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.OfferingClassType">
            <summary>
            Constants used for properties of type OfferingClassType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.OfferingClassType.Convertible">
            <summary>
            Constant Convertible for OfferingClassType
            </summary>
        </member>
        <member name="F:Amazon.EC2.OfferingClassType.Standard">
            <summary>
            Constant Standard for OfferingClassType
            </summary>
        </member>
        <member name="M:Amazon.EC2.OfferingClassType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.OfferingClassType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.OfferingClassType.op_Implicit(System.String)~Amazon.EC2.OfferingClassType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.OfferingTypeValues">
            <summary>
            Constants used for properties of type OfferingTypeValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.OfferingTypeValues.AllUpfront">
            <summary>
            Constant AllUpfront for OfferingTypeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.OfferingTypeValues.HeavyUtilization">
            <summary>
            Constant HeavyUtilization for OfferingTypeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.OfferingTypeValues.LightUtilization">
            <summary>
            Constant LightUtilization for OfferingTypeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.OfferingTypeValues.MediumUtilization">
            <summary>
            Constant MediumUtilization for OfferingTypeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.OfferingTypeValues.NoUpfront">
            <summary>
            Constant NoUpfront for OfferingTypeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.OfferingTypeValues.PartialUpfront">
            <summary>
            Constant PartialUpfront for OfferingTypeValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.OfferingTypeValues.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.OfferingTypeValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.OfferingTypeValues.op_Implicit(System.String)~Amazon.EC2.OfferingTypeValues">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.OperationType">
            <summary>
            Constants used for properties of type OperationType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.OperationType.Add">
            <summary>
            Constant Add for OperationType
            </summary>
        </member>
        <member name="F:Amazon.EC2.OperationType.Remove">
            <summary>
            Constant Remove for OperationType
            </summary>
        </member>
        <member name="M:Amazon.EC2.OperationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.OperationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.OperationType.op_Implicit(System.String)~Amazon.EC2.OperationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.PaymentOption">
            <summary>
            Constants used for properties of type PaymentOption.
            </summary>
        </member>
        <member name="F:Amazon.EC2.PaymentOption.AllUpfront">
            <summary>
            Constant AllUpfront for PaymentOption
            </summary>
        </member>
        <member name="F:Amazon.EC2.PaymentOption.NoUpfront">
            <summary>
            Constant NoUpfront for PaymentOption
            </summary>
        </member>
        <member name="F:Amazon.EC2.PaymentOption.PartialUpfront">
            <summary>
            Constant PartialUpfront for PaymentOption
            </summary>
        </member>
        <member name="M:Amazon.EC2.PaymentOption.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.PaymentOption.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.PaymentOption.op_Implicit(System.String)~Amazon.EC2.PaymentOption">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.PermissionGroup">
            <summary>
            Constants used for properties of type PermissionGroup.
            </summary>
        </member>
        <member name="F:Amazon.EC2.PermissionGroup.All">
            <summary>
            Constant All for PermissionGroup
            </summary>
        </member>
        <member name="M:Amazon.EC2.PermissionGroup.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.PermissionGroup.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.PermissionGroup.op_Implicit(System.String)~Amazon.EC2.PermissionGroup">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.PlacementGroupState">
            <summary>
            Constants used for properties of type PlacementGroupState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlacementGroupState.Available">
            <summary>
            Constant Available for PlacementGroupState
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlacementGroupState.Deleted">
            <summary>
            Constant Deleted for PlacementGroupState
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlacementGroupState.Deleting">
            <summary>
            Constant Deleting for PlacementGroupState
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlacementGroupState.Pending">
            <summary>
            Constant Pending for PlacementGroupState
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlacementGroupState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlacementGroupState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.PlacementGroupState.op_Implicit(System.String)~Amazon.EC2.PlacementGroupState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.PlacementStrategy">
            <summary>
            Constants used for properties of type PlacementStrategy.
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlacementStrategy.Cluster">
            <summary>
            Constant Cluster for PlacementStrategy
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlacementStrategy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlacementStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.PlacementStrategy.op_Implicit(System.String)~Amazon.EC2.PlacementStrategy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.PlatformValues">
            <summary>
            Constants used for properties of type PlatformValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlatformValues.Windows">
            <summary>
            Constant Windows for PlatformValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlatformValues.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlatformValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.PlatformValues.op_Implicit(System.String)~Amazon.EC2.PlatformValues">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ProductCodeValues">
            <summary>
            Constants used for properties of type ProductCodeValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ProductCodeValues.Devpay">
            <summary>
            Constant Devpay for ProductCodeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.ProductCodeValues.Marketplace">
            <summary>
            Constant Marketplace for ProductCodeValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.ProductCodeValues.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ProductCodeValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ProductCodeValues.op_Implicit(System.String)~Amazon.EC2.ProductCodeValues">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.RecurringChargeFrequency">
            <summary>
            Constants used for properties of type RecurringChargeFrequency.
            </summary>
        </member>
        <member name="F:Amazon.EC2.RecurringChargeFrequency.Hourly">
            <summary>
            Constant Hourly for RecurringChargeFrequency
            </summary>
        </member>
        <member name="M:Amazon.EC2.RecurringChargeFrequency.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.RecurringChargeFrequency.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.RecurringChargeFrequency.op_Implicit(System.String)~Amazon.EC2.RecurringChargeFrequency">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ReportInstanceReasonCodes">
            <summary>
            Constants used for properties of type ReportInstanceReasonCodes.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.InstanceStuckInState">
            <summary>
            Constant InstanceStuckInState for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.NotAcceptingCredentials">
            <summary>
            Constant NotAcceptingCredentials for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.Other">
            <summary>
            Constant Other for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.PasswordNotAvailable">
            <summary>
            Constant PasswordNotAvailable for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.PerformanceEbsVolume">
            <summary>
            Constant PerformanceEbsVolume for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.PerformanceInstanceStore">
            <summary>
            Constant PerformanceInstanceStore for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.PerformanceNetwork">
            <summary>
            Constant PerformanceNetwork for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.PerformanceOther">
            <summary>
            Constant PerformanceOther for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.Unresponsive">
            <summary>
            Constant Unresponsive for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReportInstanceReasonCodes.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReportInstanceReasonCodes.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ReportInstanceReasonCodes.op_Implicit(System.String)~Amazon.EC2.ReportInstanceReasonCodes">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ReportStatusType">
            <summary>
            Constants used for properties of type ReportStatusType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportStatusType.Impaired">
            <summary>
            Constant Impaired for ReportStatusType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportStatusType.Ok">
            <summary>
            Constant Ok for ReportStatusType
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReportStatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReportStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ReportStatusType.op_Implicit(System.String)~Amazon.EC2.ReportStatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ReservationState">
            <summary>
            Constants used for properties of type ReservationState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservationState.Active">
            <summary>
            Constant Active for ReservationState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservationState.PaymentFailed">
            <summary>
            Constant PaymentFailed for ReservationState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservationState.PaymentPending">
            <summary>
            Constant PaymentPending for ReservationState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservationState.Retired">
            <summary>
            Constant Retired for ReservationState
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReservationState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReservationState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ReservationState.op_Implicit(System.String)~Amazon.EC2.ReservationState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ReservedInstanceState">
            <summary>
            Constants used for properties of type ReservedInstanceState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservedInstanceState.Active">
            <summary>
            Constant Active for ReservedInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservedInstanceState.PaymentFailed">
            <summary>
            Constant PaymentFailed for ReservedInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservedInstanceState.PaymentPending">
            <summary>
            Constant PaymentPending for ReservedInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservedInstanceState.Retired">
            <summary>
            Constant Retired for ReservedInstanceState
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReservedInstanceState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReservedInstanceState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ReservedInstanceState.op_Implicit(System.String)~Amazon.EC2.ReservedInstanceState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ResetImageAttributeName">
            <summary>
            Constants used for properties of type ResetImageAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResetImageAttributeName.LaunchPermission">
            <summary>
            Constant LaunchPermission for ResetImageAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.ResetImageAttributeName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ResetImageAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ResetImageAttributeName.op_Implicit(System.String)~Amazon.EC2.ResetImageAttributeName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.CustomerGateway">
            <summary>
            Constant CustomerGateway for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.DhcpOptions">
            <summary>
            Constant DhcpOptions for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Image">
            <summary>
            Constant Image for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Instance">
            <summary>
            Constant Instance for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.InternetGateway">
            <summary>
            Constant InternetGateway for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.NetworkAcl">
            <summary>
            Constant NetworkAcl for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.NetworkInterface">
            <summary>
            Constant NetworkInterface for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.ReservedInstances">
            <summary>
            Constant ReservedInstances for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.RouteTable">
            <summary>
            Constant RouteTable for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.SecurityGroup">
            <summary>
            Constant SecurityGroup for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Snapshot">
            <summary>
            Constant Snapshot for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.SpotInstancesRequest">
            <summary>
            Constant SpotInstancesRequest for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Subnet">
            <summary>
            Constant Subnet for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Volume">
            <summary>
            Constant Volume for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Vpc">
            <summary>
            Constant Vpc for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.VpnConnection">
            <summary>
            Constant VpnConnection for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.VpnGateway">
            <summary>
            Constant VpnGateway for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.EC2.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ResourceType.op_Implicit(System.String)~Amazon.EC2.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.RIProductDescription">
            <summary>
            Constants used for properties of type RIProductDescription.
            </summary>
        </member>
        <member name="F:Amazon.EC2.RIProductDescription.LinuxUNIX">
            <summary>
            Constant LinuxUNIX for RIProductDescription
            </summary>
        </member>
        <member name="F:Amazon.EC2.RIProductDescription.LinuxUNIXAmazonVPC">
            <summary>
            Constant LinuxUNIXAmazonVPC for RIProductDescription
            </summary>
        </member>
        <member name="F:Amazon.EC2.RIProductDescription.Windows">
            <summary>
            Constant Windows for RIProductDescription
            </summary>
        </member>
        <member name="F:Amazon.EC2.RIProductDescription.WindowsAmazonVPC">
            <summary>
            Constant WindowsAmazonVPC for RIProductDescription
            </summary>
        </member>
        <member name="M:Amazon.EC2.RIProductDescription.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.RIProductDescription.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.RIProductDescription.op_Implicit(System.String)~Amazon.EC2.RIProductDescription">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.RouteOrigin">
            <summary>
            Constants used for properties of type RouteOrigin.
            </summary>
        </member>
        <member name="F:Amazon.EC2.RouteOrigin.CreateRoute">
            <summary>
            Constant CreateRoute for RouteOrigin
            </summary>
        </member>
        <member name="F:Amazon.EC2.RouteOrigin.CreateRouteTable">
            <summary>
            Constant CreateRouteTable for RouteOrigin
            </summary>
        </member>
        <member name="F:Amazon.EC2.RouteOrigin.EnableVgwRoutePropagation">
            <summary>
            Constant EnableVgwRoutePropagation for RouteOrigin
            </summary>
        </member>
        <member name="M:Amazon.EC2.RouteOrigin.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.RouteOrigin.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.RouteOrigin.op_Implicit(System.String)~Amazon.EC2.RouteOrigin">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.RouteState">
            <summary>
            Constants used for properties of type RouteState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.RouteState.Active">
            <summary>
            Constant Active for RouteState
            </summary>
        </member>
        <member name="F:Amazon.EC2.RouteState.Blackhole">
            <summary>
            Constant Blackhole for RouteState
            </summary>
        </member>
        <member name="M:Amazon.EC2.RouteState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.RouteState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.RouteState.op_Implicit(System.String)~Amazon.EC2.RouteState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.RuleAction">
            <summary>
            Constants used for properties of type RuleAction.
            </summary>
        </member>
        <member name="F:Amazon.EC2.RuleAction.Allow">
            <summary>
            Constant Allow for RuleAction
            </summary>
        </member>
        <member name="F:Amazon.EC2.RuleAction.Deny">
            <summary>
            Constant Deny for RuleAction
            </summary>
        </member>
        <member name="M:Amazon.EC2.RuleAction.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.RuleAction.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.RuleAction.op_Implicit(System.String)~Amazon.EC2.RuleAction">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Scope">
            <summary>
            Constants used for properties of type Scope.
            </summary>
        </member>
        <member name="F:Amazon.EC2.Scope.AvailabilityZone">
            <summary>
            Constant AvailabilityZone for Scope
            </summary>
        </member>
        <member name="F:Amazon.EC2.Scope.Region">
            <summary>
            Constant Region for Scope
            </summary>
        </member>
        <member name="M:Amazon.EC2.Scope.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Scope.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.Scope.op_Implicit(System.String)~Amazon.EC2.Scope">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.ShutdownBehavior">
            <summary>
            Constants used for properties of type ShutdownBehavior.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ShutdownBehavior.Stop">
            <summary>
            Constant Stop for ShutdownBehavior
            </summary>
        </member>
        <member name="F:Amazon.EC2.ShutdownBehavior.Terminate">
            <summary>
            Constant Terminate for ShutdownBehavior
            </summary>
        </member>
        <member name="M:Amazon.EC2.ShutdownBehavior.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.ShutdownBehavior.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.ShutdownBehavior.op_Implicit(System.String)~Amazon.EC2.ShutdownBehavior">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.SnapshotAttributeName">
            <summary>
            Constants used for properties of type SnapshotAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SnapshotAttributeName.CreateVolumePermission">
            <summary>
            Constant CreateVolumePermission for SnapshotAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.SnapshotAttributeName.ProductCodes">
            <summary>
            Constant ProductCodes for SnapshotAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.SnapshotAttributeName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.SnapshotAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.SnapshotAttributeName.op_Implicit(System.String)~Amazon.EC2.SnapshotAttributeName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.SnapshotState">
            <summary>
            Constants used for properties of type SnapshotState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SnapshotState.Completed">
            <summary>
            Constant Completed for SnapshotState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SnapshotState.Error">
            <summary>
            Constant Error for SnapshotState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SnapshotState.Pending">
            <summary>
            Constant Pending for SnapshotState
            </summary>
        </member>
        <member name="M:Amazon.EC2.SnapshotState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.SnapshotState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.SnapshotState.op_Implicit(System.String)~Amazon.EC2.SnapshotState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.SpotInstanceState">
            <summary>
            Constants used for properties of type SpotInstanceState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceState.Active">
            <summary>
            Constant Active for SpotInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceState.Cancelled">
            <summary>
            Constant Cancelled for SpotInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceState.Closed">
            <summary>
            Constant Closed for SpotInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceState.Failed">
            <summary>
            Constant Failed for SpotInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceState.Open">
            <summary>
            Constant Open for SpotInstanceState
            </summary>
        </member>
        <member name="M:Amazon.EC2.SpotInstanceState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.SpotInstanceState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.SpotInstanceState.op_Implicit(System.String)~Amazon.EC2.SpotInstanceState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.SpotInstanceType">
            <summary>
            Constants used for properties of type SpotInstanceType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceType.OneTime">
            <summary>
            Constant OneTime for SpotInstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceType.Persistent">
            <summary>
            Constant Persistent for SpotInstanceType
            </summary>
        </member>
        <member name="M:Amazon.EC2.SpotInstanceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.SpotInstanceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.SpotInstanceType.op_Implicit(System.String)~Amazon.EC2.SpotInstanceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.State">
            <summary>
            Constants used for properties of type State.
            </summary>
        </member>
        <member name="F:Amazon.EC2.State.Available">
            <summary>
            Constant Available for State
            </summary>
        </member>
        <member name="F:Amazon.EC2.State.Deleted">
            <summary>
            Constant Deleted for State
            </summary>
        </member>
        <member name="F:Amazon.EC2.State.Deleting">
            <summary>
            Constant Deleting for State
            </summary>
        </member>
        <member name="F:Amazon.EC2.State.Pending">
            <summary>
            Constant Pending for State
            </summary>
        </member>
        <member name="M:Amazon.EC2.State.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.State.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.State.op_Implicit(System.String)~Amazon.EC2.State">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Status">
            <summary>
            Constants used for properties of type Status.
            </summary>
        </member>
        <member name="F:Amazon.EC2.Status.InClassic">
            <summary>
            Constant InClassic for Status
            </summary>
        </member>
        <member name="F:Amazon.EC2.Status.InVpc">
            <summary>
            Constant InVpc for Status
            </summary>
        </member>
        <member name="F:Amazon.EC2.Status.MoveInProgress">
            <summary>
            Constant MoveInProgress for Status
            </summary>
        </member>
        <member name="M:Amazon.EC2.Status.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Status.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.Status.op_Implicit(System.String)~Amazon.EC2.Status">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.StatusName">
            <summary>
            Constants used for properties of type StatusName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.StatusName.Reachability">
            <summary>
            Constant Reachability for StatusName
            </summary>
        </member>
        <member name="M:Amazon.EC2.StatusName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.StatusName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.StatusName.op_Implicit(System.String)~Amazon.EC2.StatusName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.StatusType">
            <summary>
            Constants used for properties of type StatusType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.StatusType.Failed">
            <summary>
            Constant Failed for StatusType
            </summary>
        </member>
        <member name="F:Amazon.EC2.StatusType.Initializing">
            <summary>
            Constant Initializing for StatusType
            </summary>
        </member>
        <member name="F:Amazon.EC2.StatusType.InsufficientData">
            <summary>
            Constant InsufficientData for StatusType
            </summary>
        </member>
        <member name="F:Amazon.EC2.StatusType.Passed">
            <summary>
            Constant Passed for StatusType
            </summary>
        </member>
        <member name="M:Amazon.EC2.StatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.StatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.StatusType.op_Implicit(System.String)~Amazon.EC2.StatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.SubnetState">
            <summary>
            Constants used for properties of type SubnetState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SubnetState.Available">
            <summary>
            Constant Available for SubnetState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SubnetState.Pending">
            <summary>
            Constant Pending for SubnetState
            </summary>
        </member>
        <member name="M:Amazon.EC2.SubnetState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.SubnetState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.SubnetState.op_Implicit(System.String)~Amazon.EC2.SubnetState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.SummaryStatus">
            <summary>
            Constants used for properties of type SummaryStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SummaryStatus.Impaired">
            <summary>
            Constant Impaired for SummaryStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.SummaryStatus.Initializing">
            <summary>
            Constant Initializing for SummaryStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.SummaryStatus.InsufficientData">
            <summary>
            Constant InsufficientData for SummaryStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.SummaryStatus.NotApplicable">
            <summary>
            Constant NotApplicable for SummaryStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.SummaryStatus.Ok">
            <summary>
            Constant Ok for SummaryStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.SummaryStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.SummaryStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.SummaryStatus.op_Implicit(System.String)~Amazon.EC2.SummaryStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.TelemetryStatus">
            <summary>
            Constants used for properties of type TelemetryStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.TelemetryStatus.DOWN">
            <summary>
            Constant DOWN for TelemetryStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.TelemetryStatus.UP">
            <summary>
            Constant UP for TelemetryStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.TelemetryStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.TelemetryStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.TelemetryStatus.op_Implicit(System.String)~Amazon.EC2.TelemetryStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.Tenancy">
            <summary>
            Constants used for properties of type Tenancy.
            </summary>
        </member>
        <member name="F:Amazon.EC2.Tenancy.Dedicated">
            <summary>
            Constant Dedicated for Tenancy
            </summary>
        </member>
        <member name="F:Amazon.EC2.Tenancy.Default">
            <summary>
            Constant Default for Tenancy
            </summary>
        </member>
        <member name="F:Amazon.EC2.Tenancy.Host">
            <summary>
            Constant Host for Tenancy
            </summary>
        </member>
        <member name="M:Amazon.EC2.Tenancy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Tenancy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.Tenancy.op_Implicit(System.String)~Amazon.EC2.Tenancy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.TrafficType">
            <summary>
            Constants used for properties of type TrafficType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.TrafficType.ACCEPT">
            <summary>
            Constant ACCEPT for TrafficType
            </summary>
        </member>
        <member name="F:Amazon.EC2.TrafficType.ALL">
            <summary>
            Constant ALL for TrafficType
            </summary>
        </member>
        <member name="F:Amazon.EC2.TrafficType.REJECT">
            <summary>
            Constant REJECT for TrafficType
            </summary>
        </member>
        <member name="M:Amazon.EC2.TrafficType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.TrafficType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.TrafficType.op_Implicit(System.String)~Amazon.EC2.TrafficType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VirtualizationType">
            <summary>
            Constants used for properties of type VirtualizationType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VirtualizationType.Hvm">
            <summary>
            Constant Hvm for VirtualizationType
            </summary>
        </member>
        <member name="F:Amazon.EC2.VirtualizationType.Paravirtual">
            <summary>
            Constant Paravirtual for VirtualizationType
            </summary>
        </member>
        <member name="M:Amazon.EC2.VirtualizationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VirtualizationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VirtualizationType.op_Implicit(System.String)~Amazon.EC2.VirtualizationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VolumeAttachmentState">
            <summary>
            Constants used for properties of type VolumeAttachmentState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttachmentState.Attached">
            <summary>
            Constant Attached for VolumeAttachmentState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttachmentState.Attaching">
            <summary>
            Constant Attaching for VolumeAttachmentState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttachmentState.Detached">
            <summary>
            Constant Detached for VolumeAttachmentState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttachmentState.Detaching">
            <summary>
            Constant Detaching for VolumeAttachmentState
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeAttachmentState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeAttachmentState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VolumeAttachmentState.op_Implicit(System.String)~Amazon.EC2.VolumeAttachmentState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VolumeAttributeName">
            <summary>
            Constants used for properties of type VolumeAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttributeName.AutoEnableIO">
            <summary>
            Constant AutoEnableIO for VolumeAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttributeName.ProductCodes">
            <summary>
            Constant ProductCodes for VolumeAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeAttributeName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VolumeAttributeName.op_Implicit(System.String)~Amazon.EC2.VolumeAttributeName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VolumeState">
            <summary>
            Constants used for properties of type VolumeState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.Available">
            <summary>
            Constant Available for VolumeState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.Creating">
            <summary>
            Constant Creating for VolumeState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.Deleted">
            <summary>
            Constant Deleted for VolumeState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.Deleting">
            <summary>
            Constant Deleting for VolumeState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.Error">
            <summary>
            Constant Error for VolumeState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.InUse">
            <summary>
            Constant InUse for VolumeState
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VolumeState.op_Implicit(System.String)~Amazon.EC2.VolumeState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VolumeStatusInfoStatus">
            <summary>
            Constants used for properties of type VolumeStatusInfoStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeStatusInfoStatus.Impaired">
            <summary>
            Constant Impaired for VolumeStatusInfoStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeStatusInfoStatus.InsufficientData">
            <summary>
            Constant InsufficientData for VolumeStatusInfoStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeStatusInfoStatus.Ok">
            <summary>
            Constant Ok for VolumeStatusInfoStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeStatusInfoStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeStatusInfoStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VolumeStatusInfoStatus.op_Implicit(System.String)~Amazon.EC2.VolumeStatusInfoStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VolumeStatusName">
            <summary>
            Constants used for properties of type VolumeStatusName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeStatusName.IoEnabled">
            <summary>
            Constant IoEnabled for VolumeStatusName
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeStatusName.IoPerformance">
            <summary>
            Constant IoPerformance for VolumeStatusName
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeStatusName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeStatusName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VolumeStatusName.op_Implicit(System.String)~Amazon.EC2.VolumeStatusName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VolumeType">
            <summary>
            Constants used for properties of type VolumeType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeType.Gp2">
            <summary>
            Constant Gp2 for VolumeType
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeType.Io1">
            <summary>
            Constant Io1 for VolumeType
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeType.Sc1">
            <summary>
            Constant Sc1 for VolumeType
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeType.St1">
            <summary>
            Constant St1 for VolumeType
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeType.Standard">
            <summary>
            Constant Standard for VolumeType
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VolumeType.op_Implicit(System.String)~Amazon.EC2.VolumeType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VpcAttributeName">
            <summary>
            Constants used for properties of type VpcAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcAttributeName.EnableDnsHostnames">
            <summary>
            Constant EnableDnsHostnames for VpcAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcAttributeName.EnableDnsSupport">
            <summary>
            Constant EnableDnsSupport for VpcAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpcAttributeName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpcAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VpcAttributeName.op_Implicit(System.String)~Amazon.EC2.VpcAttributeName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VpcPeeringConnectionStateReasonCode">
            <summary>
            Constants used for properties of type VpcPeeringConnectionStateReasonCode.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcPeeringConnectionStateReasonCode.Active">
            <summary>
            Constant Active for VpcPeeringConnectionStateReasonCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcPeeringConnectionStateReasonCode.Deleted">
            <summary>
            Constant Deleted for VpcPeeringConnectionStateReasonCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcPeeringConnectionStateReasonCode.Deleting">
            <summary>
            Constant Deleting for VpcPeeringConnectionStateReasonCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcPeeringConnectionStateReasonCode.Expired">
            <summary>
            Constant Expired for VpcPeeringConnectionStateReasonCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcPeeringConnectionStateReasonCode.Failed">
            <summary>
            Constant Failed for VpcPeeringConnectionStateReasonCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcPeeringConnectionStateReasonCode.InitiatingRequest">
            <summary>
            Constant InitiatingRequest for VpcPeeringConnectionStateReasonCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcPeeringConnectionStateReasonCode.PendingAcceptance">
            <summary>
            Constant PendingAcceptance for VpcPeeringConnectionStateReasonCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcPeeringConnectionStateReasonCode.Provisioning">
            <summary>
            Constant Provisioning for VpcPeeringConnectionStateReasonCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcPeeringConnectionStateReasonCode.Rejected">
            <summary>
            Constant Rejected for VpcPeeringConnectionStateReasonCode
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpcPeeringConnectionStateReasonCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpcPeeringConnectionStateReasonCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VpcPeeringConnectionStateReasonCode.op_Implicit(System.String)~Amazon.EC2.VpcPeeringConnectionStateReasonCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VpcState">
            <summary>
            Constants used for properties of type VpcState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcState.Available">
            <summary>
            Constant Available for VpcState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcState.Pending">
            <summary>
            Constant Pending for VpcState
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpcState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpcState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VpcState.op_Implicit(System.String)~Amazon.EC2.VpcState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VpnState">
            <summary>
            Constants used for properties of type VpnState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpnState.Available">
            <summary>
            Constant Available for VpnState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpnState.Deleted">
            <summary>
            Constant Deleted for VpnState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpnState.Deleting">
            <summary>
            Constant Deleting for VpnState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpnState.Pending">
            <summary>
            Constant Pending for VpnState
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpnState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpnState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VpnState.op_Implicit(System.String)~Amazon.EC2.VpnState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.VpnStaticRouteSource">
            <summary>
            Constants used for properties of type VpnStaticRouteSource.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpnStaticRouteSource.Static">
            <summary>
            Constant Static for VpnStaticRouteSource
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpnStaticRouteSource.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpnStaticRouteSource.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EC2.VpnStaticRouteSource.op_Implicit(System.String)~Amazon.EC2.VpnStaticRouteSource">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EC2.AmazonEC2Request">
            <summary>
            Base class for EC2 operation requests.
            </summary>
        </member>
        <member name="T:Amazon.EC2.IAmazonEC2">
             <summary>
             Interface for accessing EC2
            
             Amazon Elastic Compute Cloud 
             <para>
             Amazon Elastic Compute Cloud (Amazon EC2) provides resizable computing capacity in
             the Amazon Web Services (AWS) cloud. Using Amazon EC2 eliminates your need to invest
             in hardware up front, so you can develop and deploy applications faster.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AcceptReservedInstancesExchangeQuote(Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteRequest)">
            <summary>
            Purchases Convertible Reserved Instance offerings described in the <a>GetReservedInstancesExchangeQuote</a>
            call.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AcceptReservedInstancesExchangeQuote service method.</param>
            
            <returns>The response from the AcceptReservedInstancesExchangeQuote service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AcceptReservedInstancesExchangeQuoteAsync(Amazon.EC2.Model.AcceptReservedInstancesExchangeQuoteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AcceptReservedInstancesExchangeQuote operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AcceptReservedInstancesExchangeQuote operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AcceptVpcPeeringConnection(Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest)">
            <summary>
            Accept a VPC peering connection request. To accept a request, the VPC peering connection
            must be in the <code>pending-acceptance</code> state, and you must be the owner of
            the peer VPC. Use the <code>DescribeVpcPeeringConnections</code> request to view your
            outstanding VPC peering connection requests.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AcceptVpcPeeringConnection service method.</param>
            
            <returns>The response from the AcceptVpcPeeringConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AcceptVpcPeeringConnectionAsync(Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AcceptVpcPeeringConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AcceptVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AllocateAddress">
            <summary>
            Acquires an Elastic IP address.
            
             
            <para>
            An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the AllocateAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AllocateAddress(Amazon.EC2.Model.AllocateAddressRequest)">
            <summary>
            Acquires an Elastic IP address.
            
             
            <para>
            An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AllocateAddress service method.</param>
            
            <returns>The response from the AllocateAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AllocateAddressAsync(System.Threading.CancellationToken)">
            <summary>
            Acquires an Elastic IP address.
            
             
            <para>
            An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AllocateAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AllocateAddressAsync(Amazon.EC2.Model.AllocateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AllocateAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AllocateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AllocateHosts(Amazon.EC2.Model.AllocateHostsRequest)">
            <summary>
            Allocates a Dedicated Host to your account. At minimum you need to specify the instance
            size type, Availability Zone, and quantity of hosts you want to allocate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AllocateHosts service method.</param>
            
            <returns>The response from the AllocateHosts service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AllocateHostsAsync(Amazon.EC2.Model.AllocateHostsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AllocateHosts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AllocateHosts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssignPrivateIpAddresses(Amazon.EC2.Model.AssignPrivateIpAddressesRequest)">
            <summary>
            Assigns one or more secondary private IP addresses to the specified network interface.
            You can specify one or more specific secondary IP addresses, or you can specify the
            number of secondary IP addresses to be automatically assigned within the subnet's
            CIDR block range. The number of secondary IP addresses that you can assign to an instance
            varies by instance type. For information about instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information
            about Elastic IP addresses, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            AssignPrivateIpAddresses is available only in EC2-VPC.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssignPrivateIpAddresses service method.</param>
            
            <returns>The response from the AssignPrivateIpAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssignPrivateIpAddressesAsync(Amazon.EC2.Model.AssignPrivateIpAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssignPrivateIpAddresses operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssignPrivateIpAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssociateAddress(Amazon.EC2.Model.AssociateAddressRequest)">
            <summary>
            Associates an Elastic IP address with an instance or a network interface.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            [EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already
            associated with a different instance, it is disassociated from that instance and associated
            with the specified instance.
            </para>
             
            <para>
            [VPC in an EC2-Classic account] If you don't specify a private IP address, the Elastic
            IP address is associated with the primary IP address. If the Elastic IP address is
            already associated with a different instance or a network interface, you get an error
            unless you allow reassociation.
            </para>
             <important> 
            <para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error, and you may be charged for each time the Elastic IP address
            is remapped to the same instance. For more information, see the <i>Elastic IP Addresses</i>
            section of <a href="http://aws.amazon.com/ec2/pricing/">Amazon EC2 Pricing</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateAddress service method.</param>
            
            <returns>The response from the AssociateAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssociateAddressAsync(Amazon.EC2.Model.AssociateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssociateDhcpOptions(Amazon.EC2.Model.AssociateDhcpOptionsRequest)">
            <summary>
            Associates a set of DHCP options (that you've previously created) with the specified
            VPC, or associates no DHCP options with the VPC.
            
             
            <para>
            After you associate the options with the VPC, any existing instances and all new instances
            that you launch in that VPC use the options. You don't need to restart or relaunch
            the instances. They automatically pick up the changes within a few hours, depending
            on how frequently the instance renews its DHCP lease. You can explicitly renew the
            lease using the operating system on the instance.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateDhcpOptions service method.</param>
            
            <returns>The response from the AssociateDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssociateDhcpOptionsAsync(Amazon.EC2.Model.AssociateDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateDhcpOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssociateRouteTable(Amazon.EC2.Model.AssociateRouteTableRequest)">
            <summary>
            Associates a subnet with a route table. The subnet and route table must be in the
            same VPC. This association causes traffic originating from the subnet to be routed
            according to the routes in the route table. The action returns an association ID,
            which you need in order to disassociate the route table from the subnet later. A route
            table can be associated with multiple subnets.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateRouteTable service method.</param>
            
            <returns>The response from the AssociateRouteTable service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssociateRouteTableAsync(Amazon.EC2.Model.AssociateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateRouteTable operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachClassicLinkVpc(Amazon.EC2.Model.AttachClassicLinkVpcRequest)">
            <summary>
            Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of
            the VPC's security groups. You cannot link an EC2-Classic instance to more than one
            VPC at a time. You can only link an instance that's in the <code>running</code> state.
            An instance is automatically unlinked from a VPC when it's stopped - you can link
            it to the VPC again when you restart it.
            
             
            <para>
            After you've linked an instance, you cannot change the VPC security groups that are
            associated with it. To change the security groups, you must first unlink the instance,
            and then link it again.
            </para>
             
            <para>
            Linking your instance to a VPC is sometimes referred to as <i>attaching</i> your instance.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachClassicLinkVpc service method.</param>
            
            <returns>The response from the AttachClassicLinkVpc service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachClassicLinkVpcAsync(Amazon.EC2.Model.AttachClassicLinkVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachClassicLinkVpc operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachClassicLinkVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachInternetGateway(Amazon.EC2.Model.AttachInternetGatewayRequest)">
            <summary>
            Attaches an Internet gateway to a VPC, enabling connectivity between the Internet
            and the VPC. For more information about your VPC and Internet gateway, see the <a
            href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon Virtual Private
            Cloud User Guide</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachInternetGateway service method.</param>
            
            <returns>The response from the AttachInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachInternetGatewayAsync(Amazon.EC2.Model.AttachInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachInternetGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachNetworkInterface(Amazon.EC2.Model.AttachNetworkInterfaceRequest)">
            <summary>
            Attaches a network interface to an instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachNetworkInterface service method.</param>
            
            <returns>The response from the AttachNetworkInterface service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachNetworkInterfaceAsync(Amazon.EC2.Model.AttachNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachNetworkInterface operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachVolume(Amazon.EC2.Model.AttachVolumeRequest)">
            <summary>
            Attaches an EBS volume to a running or stopped instance and exposes it to the instance
            with the specified device name.
            
             
            <para>
            Encrypted EBS volumes may only be attached to instances that support Amazon EBS encryption.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For a list of supported device names, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching
            an EBS Volume to an Instance</a>. Any device names that aren't reserved for instance
            store volumes can be used for EBS volumes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon
            EC2 Instance Store</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            If a volume has an AWS Marketplace product code:
            </para>
             <ul> <li> 
            <para>
            The volume can be attached only to a stopped instance.
            </para>
             </li> <li> 
            <para>
            AWS Marketplace product codes are copied from the volume to the instance.
            </para>
             </li> <li> 
            <para>
            You must be subscribed to the product.
            </para>
             </li> <li> 
            <para>
            The instance type and operating system of the instance must support the product. For
            example, you can't detach a volume from a Windows instance and attach it to a Linux
            instance.
            </para>
             </li> </ul> 
            <para>
            For an overview of the AWS Marketplace, see <a href="https://aws.amazon.com/marketplace/help/200900000">Introducing
            AWS Marketplace</a>.
            </para>
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching
            Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachVolume service method.</param>
            
            <returns>The response from the AttachVolume service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachVolumeAsync(Amazon.EC2.Model.AttachVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachVolume operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachVpnGateway(Amazon.EC2.Model.AttachVpnGatewayRequest)">
            <summary>
            Attaches a virtual private gateway to a VPC. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachVpnGateway service method.</param>
            
            <returns>The response from the AttachVpnGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachVpnGatewayAsync(Amazon.EC2.Model.AttachVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachVpnGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AuthorizeSecurityGroupEgress(Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest)">
            <summary>
            [EC2-VPC only] Adds one or more egress rules to a security group for use with a VPC.
            Specifically, this action permits instances to send traffic to one or more destination
            CIDR IP address ranges, or to one or more destination security groups for the same
            VPC. This action doesn't apply to security groups for use in EC2-Classic. For more
            information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            
             <important> 
            <para>
            You can have up to 50 rules per security group (covering both ingress and egress rules).
            </para>
             </important> 
            <para>
            Each rule consists of the protocol (for example, TCP), plus either a CIDR range or
            a source group. For the TCP and UDP protocols, you must also specify the destination
            port or port range. For the ICMP protocol, you must also specify the ICMP type and
            code. You can use -1 for the type or code to mean all types or all codes.
            </para>
             
            <para>
            Rule changes are propagated to affected instances as quickly as possible. However,
            a small delay might occur.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupEgress service method.</param>
            
            <returns>The response from the AuthorizeSecurityGroupEgress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AuthorizeSecurityGroupEgressAsync(Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AuthorizeSecurityGroupEgress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupEgress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AuthorizeSecurityGroupIngress(Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest)">
            <summary>
            Adds one or more ingress rules to a security group.
            
             <important> 
            <para>
            EC2-Classic: You can have up to 100 rules per group.
            </para>
             
            <para>
            EC2-VPC: You can have up to 50 rules per group (covering both ingress and egress rules).
            </para>
             </important> 
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
             
            <para>
            [EC2-Classic] This action gives one or more CIDR IP address ranges permission to access
            a security group in your account, or gives one or more security groups (called the
            <i>source groups</i>) permission to access a security group for your account. A source
            group can be for your own AWS account, or another.
            </para>
             
            <para>
            [EC2-VPC] This action gives one or more CIDR IP address ranges permission to access
            a security group in your VPC, or gives one or more other security groups (called the
            <i>source groups</i>) permission to access a security group for your VPC. The security
            groups must all be for the same VPC.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupIngress service method.</param>
            
            <returns>The response from the AuthorizeSecurityGroupIngress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AuthorizeSecurityGroupIngressAsync(Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AuthorizeSecurityGroupIngress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupIngress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.BundleInstance(Amazon.EC2.Model.BundleInstanceRequest)">
            <summary>
            Bundles an Amazon instance store-backed Windows instance.
            
             
            <para>
            During bundling, only the root device volume (C:\) is bundled. Data on other instance
            store volumes is not preserved.
            </para>
             <note> 
            <para>
            This action is not applicable for Linux/Unix instances or Windows instances that are
            backed by Amazon EBS.
            </para>
             </note> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Creating_InstanceStoreBacked_WinAMI.html">Creating
            an Instance Store-Backed Windows AMI</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BundleInstance service method.</param>
            
            <returns>The response from the BundleInstance service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.BundleInstanceAsync(Amazon.EC2.Model.BundleInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BundleInstance operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BundleInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelBundleTask(Amazon.EC2.Model.CancelBundleTaskRequest)">
            <summary>
            Cancels a bundling operation for an instance store-backed Windows instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelBundleTask service method.</param>
            
            <returns>The response from the CancelBundleTask service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelBundleTaskAsync(Amazon.EC2.Model.CancelBundleTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelBundleTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelBundleTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelConversionTask(Amazon.EC2.Model.CancelConversionTaskRequest)">
            <summary>
            Cancels an active conversion task. The task can be the import of an instance or volume.
            The action removes all artifacts of the conversion, including a partially uploaded
            volume or instance. If the conversion is complete or is in the process of transferring
            the final disk image, the command fails and returns an exception.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing
            a Virtual Machine Using the Amazon EC2 CLI</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelConversionTask service method.</param>
            
            <returns>The response from the CancelConversionTask service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelConversionTaskAsync(Amazon.EC2.Model.CancelConversionTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelConversionTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelConversionTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelExportTask(Amazon.EC2.Model.CancelExportTaskRequest)">
            <summary>
            Cancels an active export task. The request removes all artifacts of the export, including
            any partially-created Amazon S3 objects. If the export task is complete or is in the
            process of transferring the final disk image, the command fails and returns an error.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelExportTask service method.</param>
            
            <returns>The response from the CancelExportTask service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelExportTaskAsync(Amazon.EC2.Model.CancelExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelExportTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelImportTask(Amazon.EC2.Model.CancelImportTaskRequest)">
            <summary>
            Cancels an in-process import virtual machine or import snapshot task.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelImportTask service method.</param>
            
            <returns>The response from the CancelImportTask service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelImportTaskAsync(Amazon.EC2.Model.CancelImportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelImportTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelImportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelReservedInstancesListing(Amazon.EC2.Model.CancelReservedInstancesListingRequest)">
            <summary>
            Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelReservedInstancesListing service method.</param>
            
            <returns>The response from the CancelReservedInstancesListing service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelReservedInstancesListingAsync(Amazon.EC2.Model.CancelReservedInstancesListingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelReservedInstancesListing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelReservedInstancesListing operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelSpotFleetRequests(Amazon.EC2.Model.CancelSpotFleetRequestsRequest)">
            <summary>
            Cancels the specified Spot fleet requests.
            
             
            <para>
            After you cancel a Spot fleet request, the Spot fleet launches no new Spot instances.
            You must specify whether the Spot fleet should also terminate its Spot instances.
            If you terminate the instances, the Spot fleet request enters the <code>cancelled_terminating</code>
            state. Otherwise, the Spot fleet request enters the <code>cancelled_running</code>
            state and the instances continue to run until they are interrupted or you terminate
            them manually.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelSpotFleetRequests service method.</param>
            
            <returns>The response from the CancelSpotFleetRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelSpotFleetRequestsAsync(Amazon.EC2.Model.CancelSpotFleetRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelSpotFleetRequests operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelSpotFleetRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelSpotInstanceRequests(Amazon.EC2.Model.CancelSpotInstanceRequestsRequest)">
            <summary>
            Cancels one or more Spot instance requests. Spot instances are instances that Amazon
            EC2 starts on your behalf when the bid price that you specify exceeds the current
            Spot price. Amazon EC2 periodically sets the Spot price based on available Spot instance
            capacity and current Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             <important> 
            <para>
            Canceling a Spot instance request does not terminate running Spot instances associated
            with the request.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelSpotInstanceRequests service method.</param>
            
            <returns>The response from the CancelSpotInstanceRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelSpotInstanceRequestsAsync(Amazon.EC2.Model.CancelSpotInstanceRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelSpotInstanceRequests operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelSpotInstanceRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ConfirmProductInstance(Amazon.EC2.Model.ConfirmProductInstanceRequest)">
            <summary>
            Determines whether a product code is associated with an instance. This action can
            only be used by the owner of the product code. It is useful when a product code owner
            needs to verify whether another user's instance is eligible for support.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmProductInstance service method.</param>
            
            <returns>The response from the ConfirmProductInstance service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ConfirmProductInstanceAsync(Amazon.EC2.Model.ConfirmProductInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmProductInstance operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmProductInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CopyImage(Amazon.EC2.Model.CopyImageRequest)">
            <summary>
            Initiates the copy of an AMI from the specified source region to the current region.
            You specify the destination region by using its endpoint when making the request.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html">Copying
            AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyImage service method.</param>
            
            <returns>The response from the CopyImage service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CopyImageAsync(Amazon.EC2.Model.CopyImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CopySnapshot(Amazon.EC2.Model.CopySnapshotRequest)">
            <summary>
            Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can
            copy the snapshot within the same region or from one region to another. You can use
            the snapshot to create EBS volumes or Amazon Machine Images (AMIs). The snapshot is
            copied to the regional endpoint that you send the HTTP request to.
            
             
            <para>
            Copies of encrypted EBS snapshots remain encrypted. Copies of unencrypted snapshots
            remain unencrypted, unless the <code>Encrypted</code> flag is specified during the
            snapshot copy operation. By default, encrypted snapshot copies use the default AWS
            Key Management Service (AWS KMS) customer master key (CMK); however, you can specify
            a non-default CMK with the <code>KmsKeyId</code> parameter. 
            </para>
             <note> 
            <para>
            To copy an encrypted snapshot that has been shared from another account, you must
            have permissions for the CMK used to encrypt the snapshot.
            </para>
             </note> <note> 
            <para>
            Snapshots created by the CopySnapshot action have an arbitrary volume ID that should
            not be used for any purpose.
            </para>
             </note> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html">Copying
            an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopySnapshot service method.</param>
            
            <returns>The response from the CopySnapshot service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CopySnapshotAsync(Amazon.EC2.Model.CopySnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopySnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopySnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateCustomerGateway(Amazon.EC2.Model.CreateCustomerGatewayRequest)">
            <summary>
            Provides information to AWS about your VPN customer gateway device. The customer gateway
            is the appliance at your end of the VPN connection. (The device on the AWS side of
            the VPN connection is the virtual private gateway.) You must provide the Internet-routable
            IP address of the customer gateway's external interface. The IP address must be static
            and may be behind a device performing network address translation (NAT).
            
             
            <para>
            For devices that use Border Gateway Protocol (BGP), you can also provide the device's
            BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network.
            If you don't have an ASN already, you can use a private ASN (in the 64512 - 65534
            range).
            </para>
             <note> 
            <para>
            Amazon EC2 supports all 2-byte ASN numbers in the range of 1 - 65534, with the exception
            of 7224, which is reserved in the <code>us-east-1</code> region, and 9059, which is
            reserved in the <code>eu-west-1</code> region.
            </para>
             </note> 
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
             <important> 
            <para>
            You cannot create more than one customer gateway with the same VPN type, IP address,
            and BGP ASN parameter values. If you run an identical request more than one time,
            the first request creates the customer gateway, and subsequent requests return information
            about the existing customer gateway. The subsequent requests do not create new customer
            gateway resources.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCustomerGateway service method.</param>
            
            <returns>The response from the CreateCustomerGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateCustomerGatewayAsync(Amazon.EC2.Model.CreateCustomerGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateCustomerGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateCustomerGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateDhcpOptions(Amazon.EC2.Model.CreateDhcpOptionsRequest)">
            <summary>
            Creates a set of DHCP options for your VPC. After creating the set, you must associate
            it with the VPC, causing all existing and new instances that you launch in the VPC
            to use this set of DHCP options. The following are the individual DHCP options you
            can specify. For more information about the options, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC
            2132</a>.
            
             <ul> <li> 
            <para>
             <code>domain-name-servers</code> - The IP addresses of up to four domain name servers,
            or AmazonProvidedDNS. The default DHCP option set specifies AmazonProvidedDNS. If
            specifying more than one domain name server, specify the IP addresses in a single
            parameter, separated by commas. If you want your instance to receive a custom DNS
            hostname as specified in <code>domain-name</code>, you must set <code>domain-name-servers</code>
            to a custom DNS server.
            </para>
             </li> <li> 
            <para>
             <code>domain-name</code> - If you're using AmazonProvidedDNS in "us-east-1", specify
            "ec2.internal". If you're using AmazonProvidedDNS in another region, specify "region.compute.internal"
            (for example, "ap-northeast-1.compute.internal"). Otherwise, specify a domain name
            (for example, "MyCompany.com"). This value is used to complete unqualified DNS hostnames.
            <b>Important</b>: Some Linux operating systems accept multiple domain names separated
            by spaces. However, Windows and other Linux operating systems treat the value as a
            single domain, which results in unexpected behavior. If your DHCP options set is associated
            with a VPC that has instances with multiple operating systems, specify only one domain
            name.
            </para>
             </li> <li> 
            <para>
             <code>ntp-servers</code> - The IP addresses of up to four Network Time Protocol (NTP)
            servers.
            </para>
             </li> <li> 
            <para>
             <code>netbios-name-servers</code> - The IP addresses of up to four NetBIOS name servers.
            </para>
             </li> <li> 
            <para>
             <code>netbios-node-type</code> - The NetBIOS node type (1, 2, 4, or 8). We recommend
            that you specify 2 (broadcast and multicast are not currently supported). For more
            information about these node types, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC
            2132</a>.
            </para>
             </li> </ul> 
            <para>
            Your VPC automatically starts out with a set of DHCP options that includes only a
            DNS server that we provide (AmazonProvidedDNS). If you create a set of options, and
            if your VPC has an Internet gateway, make sure to set the <code>domain-name-servers</code>
            option either to <code>AmazonProvidedDNS</code> or to a domain name server of your
            choice. For more information about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDhcpOptions service method.</param>
            
            <returns>The response from the CreateDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateDhcpOptionsAsync(Amazon.EC2.Model.CreateDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateDhcpOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateFlowLogs(Amazon.EC2.Model.CreateFlowLogsRequest)">
            <summary>
            Creates one or more flow logs to capture IP traffic for a specific network interface,
            subnet, or VPC. Flow logs are delivered to a specified log group in Amazon CloudWatch
            Logs. If you specify a VPC or subnet in the request, a log stream is created in CloudWatch
            Logs for each network interface in the subnet or VPC. Log streams can include information
            about accepted and rejected traffic to a network interface. You can view the data
            in your log streams using Amazon CloudWatch Logs.
            
             
            <para>
            In your request, you must also specify an IAM role that has permission to publish
            logs to CloudWatch Logs.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateFlowLogs service method.</param>
            
            <returns>The response from the CreateFlowLogs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateFlowLogsAsync(Amazon.EC2.Model.CreateFlowLogsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateFlowLogs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateFlowLogs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateImage(Amazon.EC2.Model.CreateImageRequest)">
            <summary>
            Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either
            running or stopped.
            
             
            <para>
            If you customized your instance with instance store volumes or EBS volumes in addition
            to the root device volume, the new AMI contains block device mapping information for
            those volumes. When you launch an instance from this new AMI, the instance automatically
            launches with those additional volumes.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html">Creating
            Amazon EBS-Backed Linux AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateImage service method.</param>
            
            <returns>The response from the CreateImage service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateImageAsync(Amazon.EC2.Model.CreateImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateInstanceExportTask(Amazon.EC2.Model.CreateInstanceExportTaskRequest)">
            <summary>
            Exports a running or stopped instance to an S3 bucket.
            
             
            <para>
            For information about the supported operating systems, image formats, and known limitations
            for the types of instances you can export, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmexport.html">Exporting
            an Instance as a VM Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateInstanceExportTask service method.</param>
            
            <returns>The response from the CreateInstanceExportTask service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateInstanceExportTaskAsync(Amazon.EC2.Model.CreateInstanceExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateInstanceExportTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInstanceExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateInternetGateway">
            <summary>
            Creates an Internet gateway for use with a VPC. After creating the Internet gateway,
            you attach it to a VPC using <a>AttachInternetGateway</a>.
            
             
            <para>
            For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon
            Virtual Private Cloud User Guide</a>.
            </para>
            </summary>
            
            <returns>The response from the CreateInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateInternetGateway(Amazon.EC2.Model.CreateInternetGatewayRequest)">
            <summary>
            Creates an Internet gateway for use with a VPC. After creating the Internet gateway,
            you attach it to a VPC using <a>AttachInternetGateway</a>.
            
             
            <para>
            For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon
            Virtual Private Cloud User Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateInternetGateway service method.</param>
            
            <returns>The response from the CreateInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateInternetGatewayAsync(System.Threading.CancellationToken)">
            <summary>
            Creates an Internet gateway for use with a VPC. After creating the Internet gateway,
            you attach it to a VPC using <a>AttachInternetGateway</a>.
            
             
            <para>
            For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon
            Virtual Private Cloud User Guide</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateInternetGatewayAsync(Amazon.EC2.Model.CreateInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateInternetGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateKeyPair(Amazon.EC2.Model.CreateKeyPairRequest)">
            <summary>
            Creates a 2048-bit RSA key pair with the specified name. Amazon EC2 stores the public
            key and displays the private key for you to save to a file. The private key is returned
            as an unencrypted PEM encoded PKCS#8 private key. If a key with the specified name
            already exists, Amazon EC2 returns an error.
            
             
            <para>
            You can have up to five thousand key pairs per region.
            </para>
             
            <para>
            The key pair returned to you is available only in the region in which you create it.
            To create a key pair that is available in all regions, use <a>ImportKeyPair</a>.
            </para>
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateKeyPair service method.</param>
            
            <returns>The response from the CreateKeyPair service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateKeyPairAsync(Amazon.EC2.Model.CreateKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateKeyPair operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateNatGateway(Amazon.EC2.Model.CreateNatGatewayRequest)">
            <summary>
            Creates a NAT gateway in the specified subnet. A NAT gateway can be used to enable
            instances in a private subnet to connect to the Internet. This action creates a network
            interface in the specified subnet with a private IP address from the IP address range
            of the subnet. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">NAT
            Gateways</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNatGateway service method.</param>
            
            <returns>The response from the CreateNatGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateNatGatewayAsync(Amazon.EC2.Model.CreateNatGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNatGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNatGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateNetworkAcl(Amazon.EC2.Model.CreateNetworkAclRequest)">
            <summary>
            Creates a network ACL in a VPC. Network ACLs provide an optional layer of security
            (in addition to security groups) for the instances in your VPC.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAcl service method.</param>
            
            <returns>The response from the CreateNetworkAcl service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateNetworkAclAsync(Amazon.EC2.Model.CreateNetworkAclRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkAcl operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAcl operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateNetworkAclEntry(Amazon.EC2.Model.CreateNetworkAclEntryRequest)">
            <summary>
            Creates an entry (a rule) in a network ACL with the specified rule number. Each network
            ACL has a set of numbered ingress rules and a separate set of numbered egress rules.
            When determining whether a packet should be allowed in or out of a subnet associated
            with the ACL, we process the entries in the ACL according to the rule numbers, in
            ascending order. Each network ACL has a set of ingress rules and a separate set of
            egress rules.
            
             
            <para>
            We recommend that you leave room between the rule numbers (for example, 100, 110,
            120, ...), and not number them one right after the other (for example, 101, 102, 103,
            ...). This makes it easier to add a rule between existing ones without having to renumber
            the rules.
            </para>
             
            <para>
            After you add an entry, you can't modify it; you must either replace it, or create
            an entry and delete the old one.
            </para>
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAclEntry service method.</param>
            
            <returns>The response from the CreateNetworkAclEntry service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateNetworkAclEntryAsync(Amazon.EC2.Model.CreateNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkAclEntry operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateNetworkInterface(Amazon.EC2.Model.CreateNetworkInterfaceRequest)">
            <summary>
            Creates a network interface in the specified subnet.
            
             
            <para>
            For more information about network interfaces, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic
            Network Interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateNetworkInterface service method.</param>
            
            <returns>The response from the CreateNetworkInterface service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateNetworkInterfaceAsync(Amazon.EC2.Model.CreateNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkInterface operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreatePlacementGroup(Amazon.EC2.Model.CreatePlacementGroupRequest)">
            <summary>
            Creates a placement group that you launch cluster instances into. You must give the
            group a name that's unique within the scope of your account.
            
             
            <para>
            For more information about placement groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePlacementGroup service method.</param>
            
            <returns>The response from the CreatePlacementGroup service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreatePlacementGroupAsync(Amazon.EC2.Model.CreatePlacementGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreatePlacementGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePlacementGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateReservedInstancesListing(Amazon.EC2.Model.CreateReservedInstancesListingRequest)">
            <summary>
            Creates a listing for Amazon EC2 Standard Reserved Instances to be sold in the Reserved
            Instance Marketplace. You can submit one Standard Reserved Instance listing at a time.
            To get a list of your Standard Reserved Instances, you can use the <a>DescribeReservedInstances</a>
            operation.
            
             
            <para>
            The Reserved Instance Marketplace matches sellers who want to resell Standard Reserved
            Instance capacity that they no longer need with buyers who want to purchase additional
            capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace
            work like any other Reserved Instances.
            </para>
             
            <para>
            To sell your Standard Reserved Instances, you must first register as a seller in the
            Reserved Instance Marketplace. After completing the registration process, you can
            create a Reserved Instance Marketplace listing of some or all of your Standard Reserved
            Instances, and specify the upfront price to receive for them. Your Standard Reserved
            Instance listings then become available for purchase. To view the details of your
            Standard Reserved Instance listing, you can use the <a>DescribeReservedInstancesListings</a>
            operation.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateReservedInstancesListing service method.</param>
            
            <returns>The response from the CreateReservedInstancesListing service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateReservedInstancesListingAsync(Amazon.EC2.Model.CreateReservedInstancesListingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateReservedInstancesListing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateReservedInstancesListing operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateRoute(Amazon.EC2.Model.CreateRouteRequest)">
            <summary>
            Creates a route in a route table within a VPC.
            
             
            <para>
            You must specify one of the following targets: Internet gateway or virtual private
            gateway, NAT instance, NAT gateway, VPC peering connection, or network interface.
            </para>
             
            <para>
            When determining how to route traffic, we use the route with the most specific match.
            For example, let's say the traffic is destined for <code>192.0.2.3</code>, and the
            route table includes the following two routes:
            </para>
             <ul> <li> 
            <para>
             <code>192.0.2.0/24</code> (goes to some target A)
            </para>
             </li> <li> 
            <para>
             <code>192.0.2.0/28</code> (goes to some target B)
            </para>
             </li> </ul> 
            <para>
            Both routes apply to the traffic destined for <code>192.0.2.3</code>. However, the
            second route in the list covers a smaller number of IP addresses and is therefore
            more specific, so we use that route to determine where to target the traffic.
            </para>
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRoute service method.</param>
            
            <returns>The response from the CreateRoute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateRouteAsync(Amazon.EC2.Model.CreateRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateRoute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateRouteTable(Amazon.EC2.Model.CreateRouteTableRequest)">
            <summary>
            Creates a route table for the specified VPC. After you create a route table, you can
            add routes and associate the table with a subnet.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRouteTable service method.</param>
            
            <returns>The response from the CreateRouteTable service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateRouteTableAsync(Amazon.EC2.Model.CreateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateRouteTable operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSecurityGroup(Amazon.EC2.Model.CreateSecurityGroupRequest)">
            <summary>
            Creates a security group.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             <important> 
            <para>
            EC2-Classic: You can have up to 500 security groups.
            </para>
             
            <para>
            EC2-VPC: You can create up to 500 security groups per VPC.
            </para>
             </important> 
            <para>
            When you create a security group, you specify a friendly name of your choice. You
            can have a security group for use in EC2-Classic with the same name as a security
            group for use in a VPC. However, you can't have two security groups for use in EC2-Classic
            with the same name or two security groups for use in a VPC with the same name.
            </para>
             
            <para>
            You have a default security group for use in EC2-Classic and a default security group
            for use in your VPC. If you don't specify a security group when you launch an instance,
            the instance is launched into the appropriate default security group. A default security
            group includes a default rule that grants instances unrestricted network access to
            each other.
            </para>
             
            <para>
            You can add or remove rules from your security groups using <a>AuthorizeSecurityGroupIngress</a>,
            <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupIngress</a>, and <a>RevokeSecurityGroupEgress</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSecurityGroup service method.</param>
            
            <returns>The response from the CreateSecurityGroup service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSecurityGroupAsync(Amazon.EC2.Model.CreateSecurityGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSecurityGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSecurityGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSnapshot(Amazon.EC2.Model.CreateSnapshotRequest)">
            <summary>
            Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots
            for backups, to make copies of EBS volumes, and to save data before shutting down
            an instance.
            
             
            <para>
            When a snapshot is created, any AWS Marketplace product codes that are associated
            with the source volume are propagated to the snapshot.
            </para>
             
            <para>
            You can take a snapshot of an attached volume that is in use. However, snapshots only
            capture data that has been written to your EBS volume at the time the snapshot command
            is issued; this may exclude any data that has been cached by any applications or the
            operating system. If you can pause any file systems on the volume long enough to take
            a snapshot, your snapshot should be complete. However, if you cannot pause all file
            writes to the volume, you should unmount the volume from within the instance, issue
            the snapshot command, and then remount the volume to ensure a consistent and complete
            snapshot. You may remount and use your volume while the snapshot status is <code>pending</code>.
            </para>
             
            <para>
            To create a snapshot for EBS volumes that serve as root devices, you should stop the
            instance before taking the snapshot.
            </para>
             
            <para>
            Snapshots that are taken from encrypted volumes are automatically encrypted. Volumes
            that are created from encrypted snapshots are also automatically encrypted. Your encrypted
            volumes and any associated snapshots always remain protected.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html">Amazon
            Elastic Block Store</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot service method.</param>
            
            <returns>The response from the CreateSnapshot service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSnapshotAsync(Amazon.EC2.Model.CreateSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSpotDatafeedSubscription(Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest)">
            <summary>
            Creates a data feed for Spot instances, enabling you to view Spot instance usage logs.
            You can create one data feed per AWS account. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSpotDatafeedSubscription service method.</param>
            
            <returns>The response from the CreateSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSpotDatafeedSubscription operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSubnet(Amazon.EC2.Model.CreateSubnetRequest)">
            <summary>
            Creates a subnet in an existing VPC.
            
             
            <para>
            When you create each subnet, you provide the VPC ID and the CIDR block you want for
            the subnet. After you create a subnet, you can't change its CIDR block. The subnet's
            CIDR block can be the same as the VPC's CIDR block (assuming you want only a single
            subnet in the VPC), or a subset of the VPC's CIDR block. If you create more than one
            subnet in a VPC, the subnets' CIDR blocks must not overlap. The smallest subnet (and
            VPC) you can create uses a /28 netmask (16 IP addresses), and the largest uses a /16
            netmask (65,536 IP addresses).
            </para>
             <important> 
            <para>
            AWS reserves both the first four and the last IP address in each subnet's CIDR block.
            They're not available for use.
            </para>
             </important> 
            <para>
            If you add more than one subnet to a VPC, they're set up in a star topology with a
            logical router in the middle.
            </para>
             
            <para>
            If you launch an instance in a VPC using an Amazon EBS-backed AMI, the IP address
            doesn't change if you stop and restart the instance (unlike a similar instance launched
            outside a VPC, which gets a new IP address when restarted). It's therefore possible
            to have a subnet with no running instances (they're all stopped), but no remaining
            IP addresses available.
            </para>
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSubnet service method.</param>
            
            <returns>The response from the CreateSubnet service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSubnetAsync(Amazon.EC2.Model.CreateSubnetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSubnet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSubnet operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateTags(Amazon.EC2.Model.CreateTagsRequest)">
            <summary>
            Adds or overwrites one or more tags for the specified Amazon EC2 resource or resources.
            Each resource can have a maximum of 50 tags. Each tag consists of a key and optional
            value. Tag keys must be unique per resource.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more
            information about creating IAM policies that control users' access to resources based
            on tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-iam-actions-resources.html">Supported
            Resource-Level Permissions for Amazon EC2 API Actions</a> in the <i>Amazon Elastic
            Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTags service method.</param>
            
            <returns>The response from the CreateTags service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateTagsAsync(Amazon.EC2.Model.CreateTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVolume(Amazon.EC2.Model.CreateVolumeRequest)">
            <summary>
            Creates an EBS volume that can be attached to an instance in the same Availability
            Zone. The volume is created in the regional endpoint that you send the HTTP request
            to. For more information see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html">Regions
            and Endpoints</a>.
            
             
            <para>
            You can create a new empty volume or restore a volume from an EBS snapshot. Any AWS
            Marketplace product codes from the snapshot are propagated to the volume.
            </para>
             
            <para>
            You can create encrypted volumes with the <code>Encrypted</code> parameter. Encrypted
            volumes may only be attached to instances that support Amazon EBS encryption. Volumes
            that are created from encrypted snapshots are also automatically encrypted. For more
            information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html">Creating
            or Restoring an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVolume service method.</param>
            
            <returns>The response from the CreateVolume service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVolumeAsync(Amazon.EC2.Model.CreateVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVolume operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpc(Amazon.EC2.Model.CreateVpcRequest)">
            <summary>
            Creates a VPC with the specified CIDR block.
            
             
            <para>
            The smallest VPC you can create uses a /28 netmask (16 IP addresses), and the largest
            uses a /16 netmask (65,536 IP addresses). To help you decide how big to make your
            VPC, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             
            <para>
            By default, each instance you launch in the VPC has the default DHCP options, which
            includes only a default DNS server that we provide (AmazonProvidedDNS). For more information
            about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             
            <para>
            You can specify the instance tenancy value for the VPC when you create it. You can't
            change this value for the VPC after you create it. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/dedicated-instance.html.html">Dedicated
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpc service method.</param>
            
            <returns>The response from the CreateVpc service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpcAsync(Amazon.EC2.Model.CreateVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpc operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpcEndpoint(Amazon.EC2.Model.CreateVpcEndpointRequest)">
            <summary>
            Creates a VPC endpoint for a specified AWS service. An endpoint enables you to create
            a private connection between your VPC and another AWS service in your account. You
            can specify an endpoint policy to attach to the endpoint that will control access
            to the service from your VPC. You can also specify the VPC route tables that use the
            endpoint.
            
             
            <para>
            Currently, only endpoints to Amazon S3 are supported.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpcEndpoint service method.</param>
            
            <returns>The response from the CreateVpcEndpoint service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpcEndpointAsync(Amazon.EC2.Model.CreateVpcEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpcEndpoint operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpcEndpoint operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpcPeeringConnection(Amazon.EC2.Model.CreateVpcPeeringConnectionRequest)">
            <summary>
            Requests a VPC peering connection between two VPCs: a requester VPC that you own and
            a peer VPC with which to create the connection. The peer VPC can belong to another
            AWS account. The requester VPC and peer VPC cannot have overlapping CIDR blocks.
            
             
            <para>
            The owner of the peer VPC must accept the peering request to activate the peering
            connection. The VPC peering connection request expires after 7 days, after which it
            cannot be accepted or rejected.
            </para>
             
            <para>
            A <code>CreateVpcPeeringConnection</code> request between VPCs with overlapping CIDR
            blocks results in the VPC peering connection having a status of <code>failed</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpcPeeringConnection service method.</param>
            
            <returns>The response from the CreateVpcPeeringConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpcPeeringConnectionAsync(Amazon.EC2.Model.CreateVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpcPeeringConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpnConnection(Amazon.EC2.Model.CreateVpnConnectionRequest)">
            <summary>
            Creates a VPN connection between an existing virtual private gateway and a VPN customer
            gateway. The only supported connection type is <code>ipsec.1</code>.
            
             
            <para>
            The response includes information that you need to give to your network administrator
            to configure your customer gateway.
            </para>
             <important> 
            <para>
            We strongly recommend that you use HTTPS when calling this operation because the response
            contains sensitive cryptographic information for configuring your customer gateway.
            </para>
             </important> 
            <para>
            If you decide to shut down your VPN connection for any reason and later create a new
            VPN connection, you must reconfigure your customer gateway with the new information
            returned from this call.
            </para>
             
            <para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error.
            </para>
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnection service method.</param>
            
            <returns>The response from the CreateVpnConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpnConnectionAsync(Amazon.EC2.Model.CreateVpnConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpnConnectionRoute(Amazon.EC2.Model.CreateVpnConnectionRouteRequest)">
            <summary>
            Creates a static route associated with a VPN connection between an existing virtual
            private gateway and a VPN customer gateway. The static route allows traffic to be
            routed from the virtual private gateway to the VPN customer gateway.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnectionRoute service method.</param>
            
            <returns>The response from the CreateVpnConnectionRoute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpnConnectionRouteAsync(Amazon.EC2.Model.CreateVpnConnectionRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnConnectionRoute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnectionRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpnGateway(Amazon.EC2.Model.CreateVpnGatewayRequest)">
            <summary>
            Creates a virtual private gateway. A virtual private gateway is the endpoint on the
            VPC side of your VPN connection. You can create a virtual private gateway before creating
            the VPC itself.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVpnGateway service method.</param>
            
            <returns>The response from the CreateVpnGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpnGatewayAsync(Amazon.EC2.Model.CreateVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteCustomerGateway(Amazon.EC2.Model.DeleteCustomerGatewayRequest)">
            <summary>
            Deletes the specified customer gateway. You must delete the VPN connection before
            you can delete the customer gateway.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCustomerGateway service method.</param>
            
            <returns>The response from the DeleteCustomerGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteCustomerGatewayAsync(Amazon.EC2.Model.DeleteCustomerGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCustomerGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCustomerGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteDhcpOptions(Amazon.EC2.Model.DeleteDhcpOptionsRequest)">
            <summary>
            Deletes the specified set of DHCP options. You must disassociate the set of DHCP options
            before you can delete it. You can disassociate the set of DHCP options by associating
            either a new set of options or the default set of options with the VPC.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDhcpOptions service method.</param>
            
            <returns>The response from the DeleteDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteDhcpOptionsAsync(Amazon.EC2.Model.DeleteDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDhcpOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteFlowLogs(Amazon.EC2.Model.DeleteFlowLogsRequest)">
            <summary>
            Deletes one or more flow logs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFlowLogs service method.</param>
            
            <returns>The response from the DeleteFlowLogs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteFlowLogsAsync(Amazon.EC2.Model.DeleteFlowLogsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteFlowLogs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteFlowLogs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteInternetGateway(Amazon.EC2.Model.DeleteInternetGatewayRequest)">
            <summary>
            Deletes the specified Internet gateway. You must detach the Internet gateway from
            the VPC before you can delete it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteInternetGateway service method.</param>
            
            <returns>The response from the DeleteInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteInternetGatewayAsync(Amazon.EC2.Model.DeleteInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteInternetGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteKeyPair(Amazon.EC2.Model.DeleteKeyPairRequest)">
            <summary>
            Deletes the specified key pair, by removing the public key from Amazon EC2.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteKeyPair service method.</param>
            
            <returns>The response from the DeleteKeyPair service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteKeyPairAsync(Amazon.EC2.Model.DeleteKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteKeyPair operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteNatGateway(Amazon.EC2.Model.DeleteNatGatewayRequest)">
            <summary>
            Deletes the specified NAT gateway. Deleting a NAT gateway disassociates its Elastic
            IP address, but does not release the address from your account. Deleting a NAT gateway
            does not delete any NAT gateway routes in your route tables.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNatGateway service method.</param>
            
            <returns>The response from the DeleteNatGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteNatGatewayAsync(Amazon.EC2.Model.DeleteNatGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNatGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNatGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteNetworkAcl(Amazon.EC2.Model.DeleteNetworkAclRequest)">
            <summary>
            Deletes the specified network ACL. You can't delete the ACL if it's associated with
            any subnets. You can't delete the default network ACL.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAcl service method.</param>
            
            <returns>The response from the DeleteNetworkAcl service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteNetworkAclAsync(Amazon.EC2.Model.DeleteNetworkAclRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkAcl operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAcl operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteNetworkAclEntry(Amazon.EC2.Model.DeleteNetworkAclEntryRequest)">
            <summary>
            Deletes the specified ingress or egress entry (rule) from the specified network ACL.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAclEntry service method.</param>
            
            <returns>The response from the DeleteNetworkAclEntry service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteNetworkAclEntryAsync(Amazon.EC2.Model.DeleteNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkAclEntry operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteNetworkInterface(Amazon.EC2.Model.DeleteNetworkInterfaceRequest)">
            <summary>
            Deletes the specified network interface. You must detach the network interface before
            you can delete it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkInterface service method.</param>
            
            <returns>The response from the DeleteNetworkInterface service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteNetworkInterfaceAsync(Amazon.EC2.Model.DeleteNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkInterface operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeletePlacementGroup(Amazon.EC2.Model.DeletePlacementGroupRequest)">
            <summary>
            Deletes the specified placement group. You must terminate all instances in the placement
            group before you can delete the placement group. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePlacementGroup service method.</param>
            
            <returns>The response from the DeletePlacementGroup service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeletePlacementGroupAsync(Amazon.EC2.Model.DeletePlacementGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeletePlacementGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePlacementGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteRoute(Amazon.EC2.Model.DeleteRouteRequest)">
            <summary>
            Deletes the specified route from the specified route table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRoute service method.</param>
            
            <returns>The response from the DeleteRoute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteRouteAsync(Amazon.EC2.Model.DeleteRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRoute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteRouteTable(Amazon.EC2.Model.DeleteRouteTableRequest)">
            <summary>
            Deletes the specified route table. You must disassociate the route table from any
            subnets before you can delete it. You can't delete the main route table.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRouteTable service method.</param>
            
            <returns>The response from the DeleteRouteTable service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteRouteTableAsync(Amazon.EC2.Model.DeleteRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRouteTable operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSecurityGroup(Amazon.EC2.Model.DeleteSecurityGroupRequest)">
            <summary>
            Deletes a security group.
            
             
            <para>
            If you attempt to delete a security group that is associated with an instance, or
            is referenced by another security group, the operation fails with <code>InvalidGroup.InUse</code>
            in EC2-Classic or <code>DependencyViolation</code> in EC2-VPC.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSecurityGroup service method.</param>
            
            <returns>The response from the DeleteSecurityGroup service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSecurityGroupAsync(Amazon.EC2.Model.DeleteSecurityGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSecurityGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSecurityGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSnapshot(Amazon.EC2.Model.DeleteSnapshotRequest)">
            <summary>
            Deletes the specified snapshot.
            
             
            <para>
            When you make periodic snapshots of a volume, the snapshots are incremental, and only
            the blocks on the device that have changed since your last snapshot are saved in the
            new snapshot. When you delete a snapshot, only the data not needed for any other snapshot
            is removed. So regardless of which prior snapshots have been deleted, all active snapshots
            will have access to all the information needed to restore the volume.
            </para>
             
            <para>
            You cannot delete a snapshot of the root device of an EBS volume used by a registered
            AMI. You must first de-register the AMI before you can delete the snapshot.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html">Deleting
            an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot service method.</param>
            
            <returns>The response from the DeleteSnapshot service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSnapshotAsync(Amazon.EC2.Model.DeleteSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSpotDatafeedSubscription">
            <summary>
            Deletes the data feed for Spot instances.
            </summary>
            
            <returns>The response from the DeleteSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSpotDatafeedSubscription(Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionRequest)">
            <summary>
            Deletes the data feed for Spot instances.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSpotDatafeedSubscription service method.</param>
            
            <returns>The response from the DeleteSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSpotDatafeedSubscriptionAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes the data feed for Spot instances.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSpotDatafeedSubscription operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSubnet(Amazon.EC2.Model.DeleteSubnetRequest)">
            <summary>
            Deletes the specified subnet. You must terminate all running instances in the subnet
            before you can delete the subnet.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubnet service method.</param>
            
            <returns>The response from the DeleteSubnet service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSubnetAsync(Amazon.EC2.Model.DeleteSubnetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSubnet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSubnet operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteTags(Amazon.EC2.Model.DeleteTagsRequest)">
            <summary>
            Deletes the specified set of tags from the specified set of resources. This call is
            designed to follow a <code>DescribeTags</code> request.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTags service method.</param>
            
            <returns>The response from the DeleteTags service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteTagsAsync(Amazon.EC2.Model.DeleteTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVolume(Amazon.EC2.Model.DeleteVolumeRequest)">
            <summary>
            Deletes the specified EBS volume. The volume must be in the <code>available</code>
            state (not attached to an instance).
            
             <note> 
            <para>
            The volume may remain in the <code>deleting</code> state for several minutes.
            </para>
             </note> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html">Deleting
            an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVolume service method.</param>
            
            <returns>The response from the DeleteVolume service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVolumeAsync(Amazon.EC2.Model.DeleteVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVolume operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpc(Amazon.EC2.Model.DeleteVpcRequest)">
            <summary>
            Deletes the specified VPC. You must detach or delete all gateways and resources that
            are associated with the VPC before you can delete it. For example, you must terminate
            all instances running in the VPC, delete all security groups associated with the VPC
            (except the default one), delete all route tables associated with the VPC (except
            the default one), and so on.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpc service method.</param>
            
            <returns>The response from the DeleteVpc service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpcAsync(Amazon.EC2.Model.DeleteVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpc operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpcEndpoints(Amazon.EC2.Model.DeleteVpcEndpointsRequest)">
            <summary>
            Deletes one or more specified VPC endpoints. Deleting the endpoint also deletes the
            endpoint routes in the route tables that were associated with the endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpcEndpoints service method.</param>
            
            <returns>The response from the DeleteVpcEndpoints service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpcEndpointsAsync(Amazon.EC2.Model.DeleteVpcEndpointsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpcEndpoints operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpcEndpoints operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpcPeeringConnection(Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest)">
            <summary>
            Deletes a VPC peering connection. Either the owner of the requester VPC or the owner
            of the peer VPC can delete the VPC peering connection if it's in the <code>active</code>
            state. The owner of the requester VPC can delete a VPC peering connection in the <code>pending-acceptance</code>
            state.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpcPeeringConnection service method.</param>
            
            <returns>The response from the DeleteVpcPeeringConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpcPeeringConnectionAsync(Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpcPeeringConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpnConnection(Amazon.EC2.Model.DeleteVpnConnectionRequest)">
            <summary>
            Deletes the specified VPN connection.
            
             
            <para>
            If you're deleting the VPC and its associated components, we recommend that you detach
            the virtual private gateway from the VPC and delete the VPC before deleting the VPN
            connection. If you believe that the tunnel credentials for your VPN connection have
            been compromised, you can delete the VPN connection and create a new one that has
            new keys, without needing to delete the VPC or virtual private gateway. If you create
            a new VPN connection, you must reconfigure the customer gateway using the new configuration
            information returned with the new VPN connection ID.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnection service method.</param>
            
            <returns>The response from the DeleteVpnConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpnConnectionAsync(Amazon.EC2.Model.DeleteVpnConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpnConnectionRoute(Amazon.EC2.Model.DeleteVpnConnectionRouteRequest)">
            <summary>
            Deletes the specified static route associated with a VPN connection between an existing
            virtual private gateway and a VPN customer gateway. The static route allows traffic
            to be routed from the virtual private gateway to the VPN customer gateway.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnectionRoute service method.</param>
            
            <returns>The response from the DeleteVpnConnectionRoute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpnConnectionRouteAsync(Amazon.EC2.Model.DeleteVpnConnectionRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnConnectionRoute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnectionRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpnGateway(Amazon.EC2.Model.DeleteVpnGatewayRequest)">
            <summary>
            Deletes the specified virtual private gateway. We recommend that before you delete
            a virtual private gateway, you detach it from the VPC and delete the VPN connection.
            Note that you don't need to delete the virtual private gateway if you plan to delete
            and recreate the VPN connection between your VPC and your network.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVpnGateway service method.</param>
            
            <returns>The response from the DeleteVpnGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpnGatewayAsync(Amazon.EC2.Model.DeleteVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeregisterImage(Amazon.EC2.Model.DeregisterImageRequest)">
            <summary>
            Deregisters the specified AMI. After you deregister an AMI, it can't be used to launch
            new instances.
            
             
            <para>
            This command does not delete the AMI.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterImage service method.</param>
            
            <returns>The response from the DeregisterImage service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeregisterImageAsync(Amazon.EC2.Model.DeregisterImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeregisterImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAccountAttributes">
            <summary>
            Describes attributes of your AWS account. The following are the supported account
            attributes:
            
             <ul> <li> 
            <para>
             <code>supported-platforms</code>: Indicates whether your account can launch instances
            into EC2-Classic and EC2-VPC, or only into EC2-VPC.
            </para>
             </li> <li> 
            <para>
             <code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.
            </para>
             </li> <li> 
            <para>
             <code>max-instances</code>: The maximum number of On-Demand instances that you can
            run.
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-security-groups-per-interface</code>: The maximum number of security
            groups that you can assign to a network interface.
            </para>
             </li> <li> 
            <para>
             <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you
            can allocate for use with EC2-Classic. 
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that
            you can allocate for use with EC2-VPC.
            </para>
             </li> </ul>
            </summary>
            
            <returns>The response from the DescribeAccountAttributes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAccountAttributes(Amazon.EC2.Model.DescribeAccountAttributesRequest)">
            <summary>
            Describes attributes of your AWS account. The following are the supported account
            attributes:
            
             <ul> <li> 
            <para>
             <code>supported-platforms</code>: Indicates whether your account can launch instances
            into EC2-Classic and EC2-VPC, or only into EC2-VPC.
            </para>
             </li> <li> 
            <para>
             <code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.
            </para>
             </li> <li> 
            <para>
             <code>max-instances</code>: The maximum number of On-Demand instances that you can
            run.
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-security-groups-per-interface</code>: The maximum number of security
            groups that you can assign to a network interface.
            </para>
             </li> <li> 
            <para>
             <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you
            can allocate for use with EC2-Classic. 
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that
            you can allocate for use with EC2-VPC.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAccountAttributes service method.</param>
            
            <returns>The response from the DescribeAccountAttributes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAccountAttributesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes attributes of your AWS account. The following are the supported account
            attributes:
            
             <ul> <li> 
            <para>
             <code>supported-platforms</code>: Indicates whether your account can launch instances
            into EC2-Classic and EC2-VPC, or only into EC2-VPC.
            </para>
             </li> <li> 
            <para>
             <code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.
            </para>
             </li> <li> 
            <para>
             <code>max-instances</code>: The maximum number of On-Demand instances that you can
            run.
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-security-groups-per-interface</code>: The maximum number of security
            groups that you can assign to a network interface.
            </para>
             </li> <li> 
            <para>
             <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you
            can allocate for use with EC2-Classic. 
            </para>
             </li> <li> 
            <para>
             <code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that
            you can allocate for use with EC2-VPC.
            </para>
             </li> </ul>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAccountAttributes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAccountAttributesAsync(Amazon.EC2.Model.DescribeAccountAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAccountAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAccountAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAddresses">
            <summary>
            Describes one or more of your Elastic IP addresses.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAddresses(Amazon.EC2.Model.DescribeAddressesRequest)">
            <summary>
            Describes one or more of your Elastic IP addresses.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAddresses service method.</param>
            
            <returns>The response from the DescribeAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAddressesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your Elastic IP addresses.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAddressesAsync(Amazon.EC2.Model.DescribeAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAddresses operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAvailabilityZones">
            <summary>
            Describes one or more of the Availability Zones that are available to you. The results
            include zones only for the region you're currently using. If there is an event impacting
            an Availability Zone, you can use this request to view the state and any provided
            message for that Availability Zone.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions
            and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeAvailabilityZones service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAvailabilityZones(Amazon.EC2.Model.DescribeAvailabilityZonesRequest)">
            <summary>
            Describes one or more of the Availability Zones that are available to you. The results
            include zones only for the region you're currently using. If there is an event impacting
            an Availability Zone, you can use this request to view the state and any provided
            message for that Availability Zone.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions
            and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeAvailabilityZones service method.</param>
            
            <returns>The response from the DescribeAvailabilityZones service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAvailabilityZonesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of the Availability Zones that are available to you. The results
            include zones only for the region you're currently using. If there is an event impacting
            an Availability Zone, you can use this request to view the state and any provided
            message for that Availability Zone.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions
            and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAvailabilityZones service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAvailabilityZonesAsync(Amazon.EC2.Model.DescribeAvailabilityZonesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAvailabilityZones operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAvailabilityZones operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeBundleTasks">
            <summary>
            Describes one or more of your bundling tasks.
            
             <note> 
            <para>
            Completed bundle tasks are listed for only a limited time. If your bundle task is
            no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code>
            with the Amazon S3 bucket name and image manifest name you provided to the bundle
            task.
            </para>
             </note>
            </summary>
            
            <returns>The response from the DescribeBundleTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeBundleTasks(Amazon.EC2.Model.DescribeBundleTasksRequest)">
            <summary>
            Describes one or more of your bundling tasks.
            
             <note> 
            <para>
            Completed bundle tasks are listed for only a limited time. If your bundle task is
            no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code>
            with the Amazon S3 bucket name and image manifest name you provided to the bundle
            task.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeBundleTasks service method.</param>
            
            <returns>The response from the DescribeBundleTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeBundleTasksAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your bundling tasks.
            
             <note> 
            <para>
            Completed bundle tasks are listed for only a limited time. If your bundle task is
            no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code>
            with the Amazon S3 bucket name and image manifest name you provided to the bundle
            task.
            </para>
             </note>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeBundleTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeBundleTasksAsync(Amazon.EC2.Model.DescribeBundleTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeBundleTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeBundleTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeClassicLinkInstances(Amazon.EC2.Model.DescribeClassicLinkInstancesRequest)">
            <summary>
            Describes one or more of your linked EC2-Classic instances. This request only returns
            information about EC2-Classic instances linked to a VPC through ClassicLink; you cannot
            use this request to return information about other instances.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClassicLinkInstances service method.</param>
            
            <returns>The response from the DescribeClassicLinkInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeClassicLinkInstancesAsync(Amazon.EC2.Model.DescribeClassicLinkInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeClassicLinkInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeClassicLinkInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeConversionTasks">
            <summary>
            Describes one or more of your conversion tasks. For more information, see the <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/">VM
            Import/Export User Guide</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
            
            <returns>The response from the DescribeConversionTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeConversionTasks(Amazon.EC2.Model.DescribeConversionTasksRequest)">
            <summary>
            Describes one or more of your conversion tasks. For more information, see the <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/">VM
            Import/Export User Guide</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeConversionTasks service method.</param>
            
            <returns>The response from the DescribeConversionTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeConversionTasksAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your conversion tasks. For more information, see the <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/">VM
            Import/Export User Guide</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeConversionTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeConversionTasksAsync(Amazon.EC2.Model.DescribeConversionTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeConversionTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeConversionTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeCustomerGateways">
            <summary>
            Describes one or more of your VPN customer gateways.
            
             
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeCustomerGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeCustomerGateways(Amazon.EC2.Model.DescribeCustomerGatewaysRequest)">
            <summary>
            Describes one or more of your VPN customer gateways.
            
             
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCustomerGateways service method.</param>
            
            <returns>The response from the DescribeCustomerGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeCustomerGatewaysAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your VPN customer gateways.
            
             
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCustomerGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeCustomerGatewaysAsync(Amazon.EC2.Model.DescribeCustomerGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeCustomerGateways operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeCustomerGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeDhcpOptions">
            <summary>
            Describes one or more of your DHCP options sets.
            
             
            <para>
            For more information about DHCP options sets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeDhcpOptions(Amazon.EC2.Model.DescribeDhcpOptionsRequest)">
            <summary>
            Describes one or more of your DHCP options sets.
            
             
            <para>
            For more information about DHCP options sets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDhcpOptions service method.</param>
            
            <returns>The response from the DescribeDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeDhcpOptionsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your DHCP options sets.
            
             
            <para>
            For more information about DHCP options sets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDhcpOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeDhcpOptionsAsync(Amazon.EC2.Model.DescribeDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDhcpOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeExportTasks">
            <summary>
            Describes one or more of your export tasks.
            </summary>
            
            <returns>The response from the DescribeExportTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeExportTasks(Amazon.EC2.Model.DescribeExportTasksRequest)">
            <summary>
            Describes one or more of your export tasks.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks service method.</param>
            
            <returns>The response from the DescribeExportTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeExportTasksAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your export tasks.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeExportTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeExportTasksAsync(Amazon.EC2.Model.DescribeExportTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeExportTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeFlowLogs(Amazon.EC2.Model.DescribeFlowLogsRequest)">
            <summary>
            Describes one or more flow logs. To view the information in your flow logs (the log
            streams for the network interfaces), you must use the CloudWatch Logs console or the
            CloudWatch Logs API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeFlowLogs service method.</param>
            
            <returns>The response from the DescribeFlowLogs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeFlowLogsAsync(Amazon.EC2.Model.DescribeFlowLogsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeFlowLogs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeFlowLogs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeHostReservationOfferings(Amazon.EC2.Model.DescribeHostReservationOfferingsRequest)">
            <summary>
            Describes the Dedicated Host Reservations that are available to purchase.
            
             
            <para>
            The results describe all the Dedicated Host Reservation offerings, including offerings
            that may not match the instance family and region of your Dedicated Hosts. When purchasing
            an offering, ensure that the the instance family and region of the offering matches
            that of the Dedicated Host/s it will be associated with. For an overview of supported
            instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated
            Hosts Overview</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeHostReservationOfferings service method.</param>
            
            <returns>The response from the DescribeHostReservationOfferings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeHostReservationOfferingsAsync(Amazon.EC2.Model.DescribeHostReservationOfferingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeHostReservationOfferings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeHostReservationOfferings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeHostReservations(Amazon.EC2.Model.DescribeHostReservationsRequest)">
            <summary>
            Describes Dedicated Host Reservations which are associated with Dedicated Hosts in
            your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeHostReservations service method.</param>
            
            <returns>The response from the DescribeHostReservations service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeHostReservationsAsync(Amazon.EC2.Model.DescribeHostReservationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeHostReservations operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeHostReservations operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeHosts(Amazon.EC2.Model.DescribeHostsRequest)">
            <summary>
            Describes one or more of your Dedicated Hosts.
            
             
            <para>
            The results describe only the Dedicated Hosts in the region you're currently using.
            All listed instances consume capacity on your Dedicated Host. Dedicated Hosts that
            have recently been released will be listed with the state <code>released</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeHosts service method.</param>
            
            <returns>The response from the DescribeHosts service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeHostsAsync(Amazon.EC2.Model.DescribeHostsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeHosts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeHosts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeIdentityIdFormat(Amazon.EC2.Model.DescribeIdentityIdFormatRequest)">
            <summary>
            Describes the ID format settings for resources for the specified IAM user, IAM role,
            or root user. For example, you can view the resource types that are enabled for longer
            IDs. This request only returns information about resource types whose ID formats can
            be modified; it does not return information about other resource types. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            
             
            <para>
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>. 
            </para>
             
            <para>
            These settings apply to the principal specified in the request. They do not apply
            to the principal that makes the request.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityIdFormat service method.</param>
            
            <returns>The response from the DescribeIdentityIdFormat service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeIdentityIdFormatAsync(Amazon.EC2.Model.DescribeIdentityIdFormatRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeIdentityIdFormat operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityIdFormat operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeIdFormat(Amazon.EC2.Model.DescribeIdFormatRequest)">
            <summary>
            Describes the ID format settings for your resources on a per-region basis, for example,
            to view which resource types are enabled for longer IDs. This request only returns
            information about resource types whose ID formats can be modified; it does not return
            information about other resource types.
            
             
            <para>
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>. 
            </para>
             
            <para>
            These settings apply to the IAM user who makes the request; they do not apply to the
            entire AWS account. By default, an IAM user defaults to the same settings as the root
            user, unless they explicitly override the settings by running the <a>ModifyIdFormat</a>
            command. Resources created with longer IDs are visible to all IAM users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdFormat service method.</param>
            
            <returns>The response from the DescribeIdFormat service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeIdFormatAsync(Amazon.EC2.Model.DescribeIdFormatRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeIdFormat operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeIdFormat operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImageAttribute(Amazon.EC2.Model.DescribeImageAttributeRequest)">
            <summary>
            Describes the specified attribute of the specified AMI. You can specify only one attribute
            at a time.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImageAttribute service method.</param>
            
            <returns>The response from the DescribeImageAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImageAttributeAsync(Amazon.EC2.Model.DescribeImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImageAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImages">
            <summary>
            Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images
            available to you include public images, private images that you own, and private images
            owned by other AWS accounts but for which you have explicit launch permissions.
            
             <note> 
            <para>
            Deregistered images are included in the returned results for an unspecified interval
            after deregistration.
            </para>
             </note>
            </summary>
            
            <returns>The response from the DescribeImages service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImages(Amazon.EC2.Model.DescribeImagesRequest)">
            <summary>
            Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images
            available to you include public images, private images that you own, and private images
            owned by other AWS accounts but for which you have explicit launch permissions.
            
             <note> 
            <para>
            Deregistered images are included in the returned results for an unspecified interval
            after deregistration.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImages service method.</param>
            
            <returns>The response from the DescribeImages service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImagesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images
            available to you include public images, private images that you own, and private images
            owned by other AWS accounts but for which you have explicit launch permissions.
            
             <note> 
            <para>
            Deregistered images are included in the returned results for an unspecified interval
            after deregistration.
            </para>
             </note>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeImages service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImagesAsync(Amazon.EC2.Model.DescribeImagesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImages operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImages operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImportImageTasks(Amazon.EC2.Model.DescribeImportImageTasksRequest)">
            <summary>
            Displays details about an import virtual machine or import snapshot tasks that are
            already created.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImportImageTasks service method.</param>
            
            <returns>The response from the DescribeImportImageTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImportImageTasksAsync(Amazon.EC2.Model.DescribeImportImageTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImportImageTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImportImageTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImportSnapshotTasks(Amazon.EC2.Model.DescribeImportSnapshotTasksRequest)">
            <summary>
            Describes your import snapshot tasks.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeImportSnapshotTasks service method.</param>
            
            <returns>The response from the DescribeImportSnapshotTasks service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImportSnapshotTasksAsync(Amazon.EC2.Model.DescribeImportSnapshotTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImportSnapshotTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImportSnapshotTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstanceAttribute(Amazon.EC2.Model.DescribeInstanceAttributeRequest)">
            <summary>
            Describes the specified attribute of the specified instance. You can specify only
            one attribute at a time. Valid attribute values are: <code>instanceType</code> | <code>kernel</code>
            | <code>ramdisk</code> | <code>userData</code> | <code>disableApiTermination</code>
            | <code>instanceInitiatedShutdownBehavior</code> | <code>rootDeviceName</code> | <code>blockDeviceMapping</code>
            | <code>productCodes</code> | <code>sourceDestCheck</code> | <code>groupSet</code>
            | <code>ebsOptimized</code> | <code>sriovNetSupport</code>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceAttribute service method.</param>
            
            <returns>The response from the DescribeInstanceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstanceAttributeAsync(Amazon.EC2.Model.DescribeInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstanceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstances">
            <summary>
            Describes one or more of your instances.
            
             
            <para>
            If you specify one or more instance IDs, Amazon EC2 returns information for those
            instances. If you do not specify instance IDs, Amazon EC2 returns information for
            all relevant instances. If you specify an instance ID that is not valid, an error
            is returned. If you specify an instance that you do not own, it is not included in
            the returned results.
            </para>
             
            <para>
            Recently terminated instances might appear in the returned results. This interval
            is usually less than one hour.
            </para>
             
            <para>
            If you describe instances in the rare case where an Availability Zone is experiencing
            a service disruption and you specify instance IDs that are in the affected zone, or
            do not specify any instance IDs at all, the call fails. If you describe instances
            and specify only instance IDs that are in an unaffected zone, the call works normally.
            </para>
            </summary>
            
            <returns>The response from the DescribeInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstances(Amazon.EC2.Model.DescribeInstancesRequest)">
            <summary>
            Describes one or more of your instances.
            
             
            <para>
            If you specify one or more instance IDs, Amazon EC2 returns information for those
            instances. If you do not specify instance IDs, Amazon EC2 returns information for
            all relevant instances. If you specify an instance ID that is not valid, an error
            is returned. If you specify an instance that you do not own, it is not included in
            the returned results.
            </para>
             
            <para>
            Recently terminated instances might appear in the returned results. This interval
            is usually less than one hour.
            </para>
             
            <para>
            If you describe instances in the rare case where an Availability Zone is experiencing
            a service disruption and you specify instance IDs that are in the affected zone, or
            do not specify any instance IDs at all, the call fails. If you describe instances
            and specify only instance IDs that are in an unaffected zone, the call works normally.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInstances service method.</param>
            
            <returns>The response from the DescribeInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstancesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your instances.
            
             
            <para>
            If you specify one or more instance IDs, Amazon EC2 returns information for those
            instances. If you do not specify instance IDs, Amazon EC2 returns information for
            all relevant instances. If you specify an instance ID that is not valid, an error
            is returned. If you specify an instance that you do not own, it is not included in
            the returned results.
            </para>
             
            <para>
            Recently terminated instances might appear in the returned results. This interval
            is usually less than one hour.
            </para>
             
            <para>
            If you describe instances in the rare case where an Availability Zone is experiencing
            a service disruption and you specify instance IDs that are in the affected zone, or
            do not specify any instance IDs at all, the call fails. If you describe instances
            and specify only instance IDs that are in an unaffected zone, the call works normally.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstancesAsync(Amazon.EC2.Model.DescribeInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstanceStatus">
            <summary>
            Describes the status of one or more instances. By default, only running instances
            are described, unless specified otherwise.
            
             
            <para>
            Instance status includes the following components:
            </para>
             <ul> <li> 
            <para>
             <b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances
            to identify hardware and software issues. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status
            Checks for Your Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting
            Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or
            terminate) for your instances related to hardware issues, software updates, or system
            maintenance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled
            Events for Your Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Instance state</b> - You can manage your instances from the moment you launch
            them through their termination. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> </ul>
            </summary>
            
            <returns>The response from the DescribeInstanceStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstanceStatus(Amazon.EC2.Model.DescribeInstanceStatusRequest)">
            <summary>
            Describes the status of one or more instances. By default, only running instances
            are described, unless specified otherwise.
            
             
            <para>
            Instance status includes the following components:
            </para>
             <ul> <li> 
            <para>
             <b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances
            to identify hardware and software issues. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status
            Checks for Your Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting
            Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or
            terminate) for your instances related to hardware issues, software updates, or system
            maintenance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled
            Events for Your Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Instance state</b> - You can manage your instances from the moment you launch
            them through their termination. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceStatus service method.</param>
            
            <returns>The response from the DescribeInstanceStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstanceStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the status of one or more instances. By default, only running instances
            are described, unless specified otherwise.
            
             
            <para>
            Instance status includes the following components:
            </para>
             <ul> <li> 
            <para>
             <b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances
            to identify hardware and software issues. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status
            Checks for Your Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting
            Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or
            terminate) for your instances related to hardware issues, software updates, or system
            maintenance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled
            Events for Your Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> <li> 
            <para>
             <b>Instance state</b> - You can manage your instances from the moment you launch
            them through their termination. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             </li> </ul>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInstanceStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstanceStatusAsync(Amazon.EC2.Model.DescribeInstanceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstanceStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInternetGateways">
            <summary>
            Describes one or more of your Internet gateways.
            </summary>
            
            <returns>The response from the DescribeInternetGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInternetGateways(Amazon.EC2.Model.DescribeInternetGatewaysRequest)">
            <summary>
            Describes one or more of your Internet gateways.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeInternetGateways service method.</param>
            
            <returns>The response from the DescribeInternetGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInternetGatewaysAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your Internet gateways.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeInternetGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInternetGatewaysAsync(Amazon.EC2.Model.DescribeInternetGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInternetGateways operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInternetGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeKeyPairs">
            <summary>
            Describes one or more of your key pairs.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeKeyPairs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeKeyPairs(Amazon.EC2.Model.DescribeKeyPairsRequest)">
            <summary>
            Describes one or more of your key pairs.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeKeyPairs service method.</param>
            
            <returns>The response from the DescribeKeyPairs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeKeyPairsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your key pairs.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeKeyPairs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeKeyPairsAsync(Amazon.EC2.Model.DescribeKeyPairsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeKeyPairs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeKeyPairs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeMovingAddresses(Amazon.EC2.Model.DescribeMovingAddressesRequest)">
            <summary>
            Describes your Elastic IP addresses that are being moved to the EC2-VPC platform,
            or that are being restored to the EC2-Classic platform. This request does not return
            information about any other Elastic IP addresses in your account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMovingAddresses service method.</param>
            
            <returns>The response from the DescribeMovingAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeMovingAddressesAsync(Amazon.EC2.Model.DescribeMovingAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeMovingAddresses operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMovingAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNatGateways(Amazon.EC2.Model.DescribeNatGatewaysRequest)">
            <summary>
            Describes one or more of the your NAT gateways.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNatGateways service method.</param>
            
            <returns>The response from the DescribeNatGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNatGatewaysAsync(Amazon.EC2.Model.DescribeNatGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNatGateways operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNatGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkAcls">
            <summary>
            Describes one or more of your network ACLs.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeNetworkAcls service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkAcls(Amazon.EC2.Model.DescribeNetworkAclsRequest)">
            <summary>
            Describes one or more of your network ACLs.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkAcls service method.</param>
            
            <returns>The response from the DescribeNetworkAcls service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkAclsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your network ACLs.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeNetworkAcls service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkAclsAsync(Amazon.EC2.Model.DescribeNetworkAclsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkAcls operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkAcls operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkInterfaceAttribute(Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest)">
            <summary>
            Describes a network interface attribute. You can specify only one attribute at a time.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaceAttribute service method.</param>
            
            <returns>The response from the DescribeNetworkInterfaceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkInterfaceAttributeAsync(Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkInterfaceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkInterfaces">
            <summary>
            Describes one or more of your network interfaces.
            </summary>
            
            <returns>The response from the DescribeNetworkInterfaces service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkInterfaces(Amazon.EC2.Model.DescribeNetworkInterfacesRequest)">
            <summary>
            Describes one or more of your network interfaces.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaces service method.</param>
            
            <returns>The response from the DescribeNetworkInterfaces service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkInterfacesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your network interfaces.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeNetworkInterfaces service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkInterfacesAsync(Amazon.EC2.Model.DescribeNetworkInterfacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkInterfaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribePlacementGroups">
            <summary>
            Describes one or more of your placement groups. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            
            <returns>The response from the DescribePlacementGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribePlacementGroups(Amazon.EC2.Model.DescribePlacementGroupsRequest)">
            <summary>
            Describes one or more of your placement groups. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePlacementGroups service method.</param>
            
            <returns>The response from the DescribePlacementGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribePlacementGroupsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your placement groups. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePlacementGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribePlacementGroupsAsync(Amazon.EC2.Model.DescribePlacementGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribePlacementGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribePlacementGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribePrefixLists(Amazon.EC2.Model.DescribePrefixListsRequest)">
            <summary>
            Describes available AWS services in a prefix list format, which includes the prefix
            list name and prefix list ID of the service and the IP address range for the service.
            A prefix list ID is required for creating an outbound security group rule that allows
            traffic from a VPC to access an AWS service through a VPC endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePrefixLists service method.</param>
            
            <returns>The response from the DescribePrefixLists service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribePrefixListsAsync(Amazon.EC2.Model.DescribePrefixListsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribePrefixLists operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribePrefixLists operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeRegions">
            <summary>
            Describes one or more regions that are currently available to you.
            
             
            <para>
            For a list of the regions supported by Amazon EC2, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">Regions
            and Endpoints</a>.
            </para>
            </summary>
            
            <returns>The response from the DescribeRegions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeRegions(Amazon.EC2.Model.DescribeRegionsRequest)">
            <summary>
            Describes one or more regions that are currently available to you.
            
             
            <para>
            For a list of the regions supported by Amazon EC2, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">Regions
            and Endpoints</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRegions service method.</param>
            
            <returns>The response from the DescribeRegions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeRegionsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more regions that are currently available to you.
            
             
            <para>
            For a list of the regions supported by Amazon EC2, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">Regions
            and Endpoints</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRegions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeRegionsAsync(Amazon.EC2.Model.DescribeRegionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeRegions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeRegions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstances">
            <summary>
            Describes one or more of the Reserved Instances that you purchased.
            
             
            <para>
            For more information about Reserved Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeReservedInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstances(Amazon.EC2.Model.DescribeReservedInstancesRequest)">
            <summary>
            Describes one or more of the Reserved Instances that you purchased.
            
             
            <para>
            For more information about Reserved Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstances service method.</param>
            
            <returns>The response from the DescribeReservedInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of the Reserved Instances that you purchased.
            
             
            <para>
            For more information about Reserved Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeReservedInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesAsync(Amazon.EC2.Model.DescribeReservedInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesListings">
            <summary>
            Describes your account's Reserved Instance listings in the Reserved Instance Marketplace.
            
             
            <para>
            The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance
            capacity that they no longer need with buyers who want to purchase additional capacity.
            Reserved Instances bought and sold through the Reserved Instance Marketplace work
            like any other Reserved Instances.
            </para>
             
            <para>
            As a seller, you choose to list some or all of your Reserved Instances, and you specify
            the upfront price to receive for them. Your Reserved Instances are then listed in
            the Reserved Instance Marketplace and are available for purchase.
            </para>
             
            <para>
            As a buyer, you specify the configuration of the Reserved Instance to purchase, and
            the Marketplace matches what you're searching for with what's available. The Marketplace
            first sells the lowest priced Reserved Instances to you, and continues to sell available
            Reserved Instance listings to you until your demand is met. You are charged based
            on the total price of all of the listings that you purchase.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeReservedInstancesListings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesListings(Amazon.EC2.Model.DescribeReservedInstancesListingsRequest)">
            <summary>
            Describes your account's Reserved Instance listings in the Reserved Instance Marketplace.
            
             
            <para>
            The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance
            capacity that they no longer need with buyers who want to purchase additional capacity.
            Reserved Instances bought and sold through the Reserved Instance Marketplace work
            like any other Reserved Instances.
            </para>
             
            <para>
            As a seller, you choose to list some or all of your Reserved Instances, and you specify
            the upfront price to receive for them. Your Reserved Instances are then listed in
            the Reserved Instance Marketplace and are available for purchase.
            </para>
             
            <para>
            As a buyer, you specify the configuration of the Reserved Instance to purchase, and
            the Marketplace matches what you're searching for with what's available. The Marketplace
            first sells the lowest priced Reserved Instances to you, and continues to sell available
            Reserved Instance listings to you until your demand is met. You are charged based
            on the total price of all of the listings that you purchase.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesListings service method.</param>
            
            <returns>The response from the DescribeReservedInstancesListings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesListingsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes your account's Reserved Instance listings in the Reserved Instance Marketplace.
            
             
            <para>
            The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance
            capacity that they no longer need with buyers who want to purchase additional capacity.
            Reserved Instances bought and sold through the Reserved Instance Marketplace work
            like any other Reserved Instances.
            </para>
             
            <para>
            As a seller, you choose to list some or all of your Reserved Instances, and you specify
            the upfront price to receive for them. Your Reserved Instances are then listed in
            the Reserved Instance Marketplace and are available for purchase.
            </para>
             
            <para>
            As a buyer, you specify the configuration of the Reserved Instance to purchase, and
            the Marketplace matches what you're searching for with what's available. The Marketplace
            first sells the lowest priced Reserved Instances to you, and continues to sell available
            Reserved Instance listings to you until your demand is met. You are charged based
            on the total price of all of the listings that you purchase.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeReservedInstancesListings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesListingsAsync(Amazon.EC2.Model.DescribeReservedInstancesListingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesListings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesListings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesModifications">
            <summary>
            Describes the modifications made to your Reserved Instances. If no parameter is specified,
            information about all your Reserved Instances modification requests is returned. If
            a modification ID is specified, only information about the specific modification is
            returned.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
            </summary>
            
            <returns>The response from the DescribeReservedInstancesModifications service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesModifications(Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest)">
            <summary>
            Describes the modifications made to your Reserved Instances. If no parameter is specified,
            information about all your Reserved Instances modification requests is returned. If
            a modification ID is specified, only information about the specific modification is
            returned.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesModifications service method.</param>
            
            <returns>The response from the DescribeReservedInstancesModifications service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesModificationsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the modifications made to your Reserved Instances. If no parameter is specified,
            information about all your Reserved Instances modification requests is returned. If
            a modification ID is specified, only information about the specific modification is
            returned.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeReservedInstancesModifications service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesModificationsAsync(Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesModifications operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesModifications operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesOfferings">
            <summary>
            Describes Reserved Instance offerings that are available for purchase. With Reserved
            Instances, you purchase the right to launch instances for a period of time. During
            that time period, you do not receive insufficient capacity errors, and you pay a lower
            usage rate than the rate charged for On-Demand instances for the actual time used.
            
             
            <para>
            If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace,
            they will be excluded from these results. This is to ensure that you do not purchase
            your own Reserved Instances.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeReservedInstancesOfferings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesOfferings(Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest)">
            <summary>
            Describes Reserved Instance offerings that are available for purchase. With Reserved
            Instances, you purchase the right to launch instances for a period of time. During
            that time period, you do not receive insufficient capacity errors, and you pay a lower
            usage rate than the rate charged for On-Demand instances for the actual time used.
            
             
            <para>
            If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace,
            they will be excluded from these results. This is to ensure that you do not purchase
            your own Reserved Instances.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesOfferings service method.</param>
            
            <returns>The response from the DescribeReservedInstancesOfferings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesOfferingsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes Reserved Instance offerings that are available for purchase. With Reserved
            Instances, you purchase the right to launch instances for a period of time. During
            that time period, you do not receive insufficient capacity errors, and you pay a lower
            usage rate than the rate charged for On-Demand instances for the actual time used.
            
             
            <para>
            If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace,
            they will be excluded from these results. This is to ensure that you do not purchase
            your own Reserved Instances.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeReservedInstancesOfferings service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesOfferingsAsync(Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesOfferings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesOfferings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeRouteTables">
            <summary>
            Describes one or more of your route tables.
            
             
            <para>
            Each subnet in your VPC must be associated with a route table. If a subnet is not
            explicitly associated with any route table, it is implicitly associated with the main
            route table. This command does not return the subnet ID for implicit associations.
            </para>
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeRouteTables service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeRouteTables(Amazon.EC2.Model.DescribeRouteTablesRequest)">
            <summary>
            Describes one or more of your route tables.
            
             
            <para>
            Each subnet in your VPC must be associated with a route table. If a subnet is not
            explicitly associated with any route table, it is implicitly associated with the main
            route table. This command does not return the subnet ID for implicit associations.
            </para>
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRouteTables service method.</param>
            
            <returns>The response from the DescribeRouteTables service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeRouteTablesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your route tables.
            
             
            <para>
            Each subnet in your VPC must be associated with a route table. If a subnet is not
            explicitly associated with any route table, it is implicitly associated with the main
            route table. This command does not return the subnet ID for implicit associations.
            </para>
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRouteTables service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeRouteTablesAsync(Amazon.EC2.Model.DescribeRouteTablesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeRouteTables operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeRouteTables operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeScheduledInstanceAvailability(Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest)">
            <summary>
            Finds available schedules that meet the specified criteria.
            
             
            <para>
            You can search for an available schedule no more than 3 months in advance. You must
            meet the minimum required duration of 1,200 hours per year. For example, the minimum
            daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum
            monthly schedule is 100 hours.
            </para>
             
            <para>
            After you find a schedule that meets your needs, call <a>PurchaseScheduledInstances</a>
            to purchase Scheduled Instances with that schedule.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeScheduledInstanceAvailability service method.</param>
            
            <returns>The response from the DescribeScheduledInstanceAvailability service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeScheduledInstanceAvailabilityAsync(Amazon.EC2.Model.DescribeScheduledInstanceAvailabilityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeScheduledInstanceAvailability operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeScheduledInstanceAvailability operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeScheduledInstances(Amazon.EC2.Model.DescribeScheduledInstancesRequest)">
            <summary>
            Describes one or more of your Scheduled Instances.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeScheduledInstances service method.</param>
            
            <returns>The response from the DescribeScheduledInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeScheduledInstancesAsync(Amazon.EC2.Model.DescribeScheduledInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeScheduledInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeScheduledInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSecurityGroupReferences(Amazon.EC2.Model.DescribeSecurityGroupReferencesRequest)">
            <summary>
            [EC2-VPC only] Describes the VPCs on the other side of a VPC peering connection that
            are referencing the security groups you've specified in this request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityGroupReferences service method.</param>
            
            <returns>The response from the DescribeSecurityGroupReferences service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSecurityGroupReferencesAsync(Amazon.EC2.Model.DescribeSecurityGroupReferencesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSecurityGroupReferences operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityGroupReferences operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSecurityGroups">
            <summary>
            Describes one or more of your security groups.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeSecurityGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSecurityGroups(Amazon.EC2.Model.DescribeSecurityGroupsRequest)">
            <summary>
            Describes one or more of your security groups.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityGroups service method.</param>
            
            <returns>The response from the DescribeSecurityGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSecurityGroupsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your security groups.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSecurityGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSecurityGroupsAsync(Amazon.EC2.Model.DescribeSecurityGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSecurityGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSnapshotAttribute(Amazon.EC2.Model.DescribeSnapshotAttributeRequest)">
            <summary>
            Describes the specified attribute of the specified snapshot. You can specify only
            one attribute at a time.
            
             
            <para>
            For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshotAttribute service method.</param>
            
            <returns>The response from the DescribeSnapshotAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSnapshotAttributeAsync(Amazon.EC2.Model.DescribeSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshotAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSnapshots">
            <summary>
            Describes one or more of the EBS snapshots available to you. Available snapshots include
            public snapshots available for any AWS account to launch, private snapshots that you
            own, and private snapshots owned by another AWS account but for which you've been
            given explicit create volume permissions.
            
             
            <para>
            The create volume permissions fall into the following categories:
            </para>
             <ul> <li> 
            <para>
             <i>public</i>: The owner of the snapshot granted create volume permissions for the
            snapshot to the <code>all</code> group. All AWS accounts have create volume permissions
            for these snapshots.
            </para>
             </li> <li> 
            <para>
             <i>explicit</i>: The owner of the snapshot granted create volume permissions to a
            specific AWS account.
            </para>
             </li> <li> 
            <para>
             <i>implicit</i>: An AWS account has implicit create volume permissions for all snapshots
            it owns.
            </para>
             </li> </ul> 
            <para>
            The list of snapshots returned can be modified by specifying snapshot IDs, snapshot
            owners, or AWS accounts with create volume permissions. If no options are specified,
            Amazon EC2 returns all snapshots for which you have create volume permissions.
            </para>
             
            <para>
            If you specify one or more snapshot IDs, only snapshots that have the specified IDs
            are returned. If you specify an invalid snapshot ID, an error is returned. If you
            specify a snapshot ID for which you do not have access, it is not included in the
            returned results.
            </para>
             
            <para>
            If you specify one or more snapshot owners using the <code>OwnerIds</code> option,
            only snapshots from the specified owners and for which you have access are returned.
            The results can include the AWS account IDs of the specified owners, <code>amazon</code>
            for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.
            </para>
             
            <para>
            If you specify a list of restorable users, only snapshots with create snapshot permissions
            for those users are returned. You can specify AWS account IDs (if you own the snapshots),
            <code>self</code> for snapshots for which you own or have explicit permissions, or
            <code>all</code> for public snapshots.
            </para>
             
            <para>
            If you are describing a long list of snapshots, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeSnapshots</code> request to
            retrieve the remaining results.
            </para>
             
            <para>
            For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeSnapshots service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSnapshots(Amazon.EC2.Model.DescribeSnapshotsRequest)">
            <summary>
            Describes one or more of the EBS snapshots available to you. Available snapshots include
            public snapshots available for any AWS account to launch, private snapshots that you
            own, and private snapshots owned by another AWS account but for which you've been
            given explicit create volume permissions.
            
             
            <para>
            The create volume permissions fall into the following categories:
            </para>
             <ul> <li> 
            <para>
             <i>public</i>: The owner of the snapshot granted create volume permissions for the
            snapshot to the <code>all</code> group. All AWS accounts have create volume permissions
            for these snapshots.
            </para>
             </li> <li> 
            <para>
             <i>explicit</i>: The owner of the snapshot granted create volume permissions to a
            specific AWS account.
            </para>
             </li> <li> 
            <para>
             <i>implicit</i>: An AWS account has implicit create volume permissions for all snapshots
            it owns.
            </para>
             </li> </ul> 
            <para>
            The list of snapshots returned can be modified by specifying snapshot IDs, snapshot
            owners, or AWS accounts with create volume permissions. If no options are specified,
            Amazon EC2 returns all snapshots for which you have create volume permissions.
            </para>
             
            <para>
            If you specify one or more snapshot IDs, only snapshots that have the specified IDs
            are returned. If you specify an invalid snapshot ID, an error is returned. If you
            specify a snapshot ID for which you do not have access, it is not included in the
            returned results.
            </para>
             
            <para>
            If you specify one or more snapshot owners using the <code>OwnerIds</code> option,
            only snapshots from the specified owners and for which you have access are returned.
            The results can include the AWS account IDs of the specified owners, <code>amazon</code>
            for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.
            </para>
             
            <para>
            If you specify a list of restorable users, only snapshots with create snapshot permissions
            for those users are returned. You can specify AWS account IDs (if you own the snapshots),
            <code>self</code> for snapshots for which you own or have explicit permissions, or
            <code>all</code> for public snapshots.
            </para>
             
            <para>
            If you are describing a long list of snapshots, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeSnapshots</code> request to
            retrieve the remaining results.
            </para>
             
            <para>
            For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots service method.</param>
            
            <returns>The response from the DescribeSnapshots service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSnapshotsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of the EBS snapshots available to you. Available snapshots include
            public snapshots available for any AWS account to launch, private snapshots that you
            own, and private snapshots owned by another AWS account but for which you've been
            given explicit create volume permissions.
            
             
            <para>
            The create volume permissions fall into the following categories:
            </para>
             <ul> <li> 
            <para>
             <i>public</i>: The owner of the snapshot granted create volume permissions for the
            snapshot to the <code>all</code> group. All AWS accounts have create volume permissions
            for these snapshots.
            </para>
             </li> <li> 
            <para>
             <i>explicit</i>: The owner of the snapshot granted create volume permissions to a
            specific AWS account.
            </para>
             </li> <li> 
            <para>
             <i>implicit</i>: An AWS account has implicit create volume permissions for all snapshots
            it owns.
            </para>
             </li> </ul> 
            <para>
            The list of snapshots returned can be modified by specifying snapshot IDs, snapshot
            owners, or AWS accounts with create volume permissions. If no options are specified,
            Amazon EC2 returns all snapshots for which you have create volume permissions.
            </para>
             
            <para>
            If you specify one or more snapshot IDs, only snapshots that have the specified IDs
            are returned. If you specify an invalid snapshot ID, an error is returned. If you
            specify a snapshot ID for which you do not have access, it is not included in the
            returned results.
            </para>
             
            <para>
            If you specify one or more snapshot owners using the <code>OwnerIds</code> option,
            only snapshots from the specified owners and for which you have access are returned.
            The results can include the AWS account IDs of the specified owners, <code>amazon</code>
            for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.
            </para>
             
            <para>
            If you specify a list of restorable users, only snapshots with create snapshot permissions
            for those users are returned. You can specify AWS account IDs (if you own the snapshots),
            <code>self</code> for snapshots for which you own or have explicit permissions, or
            <code>all</code> for public snapshots.
            </para>
             
            <para>
            If you are describing a long list of snapshots, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeSnapshots</code> request to
            retrieve the remaining results.
            </para>
             
            <para>
            For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon
            EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSnapshots service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSnapshotsAsync(Amazon.EC2.Model.DescribeSnapshotsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshots operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotDatafeedSubscription">
            <summary>
            Describes the data feed for Spot instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            
            <returns>The response from the DescribeSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotDatafeedSubscription(Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionRequest)">
            <summary>
            Describes the data feed for Spot instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotDatafeedSubscription service method.</param>
            
            <returns>The response from the DescribeSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotDatafeedSubscriptionAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the data feed for Spot instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot
            Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSpotDatafeedSubscription service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotDatafeedSubscription operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotFleetInstances(Amazon.EC2.Model.DescribeSpotFleetInstancesRequest)">
            <summary>
            Describes the running instances for the specified Spot fleet.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetInstances service method.</param>
            
            <returns>The response from the DescribeSpotFleetInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotFleetInstancesAsync(Amazon.EC2.Model.DescribeSpotFleetInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotFleetInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotFleetRequestHistory(Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest)">
            <summary>
            Describes the events for the specified Spot fleet request during the specified time.
            
             
            <para>
            Spot fleet events are delayed by up to 30 seconds before they can be described. This
            ensures that you can query by the last evaluated time and not miss a recorded event.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetRequestHistory service method.</param>
            
            <returns>The response from the DescribeSpotFleetRequestHistory service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotFleetRequestHistoryAsync(Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotFleetRequestHistory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetRequestHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotFleetRequests(Amazon.EC2.Model.DescribeSpotFleetRequestsRequest)">
            <summary>
            Describes your Spot fleet requests.
            
             
            <para>
            Spot fleet requests are deleted 48 hours after they are canceled and their instances
            are terminated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetRequests service method.</param>
            
            <returns>The response from the DescribeSpotFleetRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotFleetRequestsAsync(Amazon.EC2.Model.DescribeSpotFleetRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotFleetRequests operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotFleetRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotInstanceRequests">
            <summary>
            Describes the Spot instance requests that belong to your account. Spot instances are
            instances that Amazon EC2 launches when the bid price that you specify exceeds the
            current Spot price. Amazon EC2 periodically sets the Spot price based on available
            Spot instance capacity and current Spot instance requests. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot instance
            by examining the response. If the status of the Spot instance is <code>fulfilled</code>,
            the instance ID appears in the response and contains the identifier of the instance.
            Alternatively, you can use <a>DescribeInstances</a> with a filter to look for instances
            where the instance lifecycle is <code>spot</code>.
            </para>
             
            <para>
            Spot instance requests are deleted 4 hours after they are canceled and their instances
            are terminated.
            </para>
            </summary>
            
            <returns>The response from the DescribeSpotInstanceRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotInstanceRequests(Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest)">
            <summary>
            Describes the Spot instance requests that belong to your account. Spot instances are
            instances that Amazon EC2 launches when the bid price that you specify exceeds the
            current Spot price. Amazon EC2 periodically sets the Spot price based on available
            Spot instance capacity and current Spot instance requests. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot instance
            by examining the response. If the status of the Spot instance is <code>fulfilled</code>,
            the instance ID appears in the response and contains the identifier of the instance.
            Alternatively, you can use <a>DescribeInstances</a> with a filter to look for instances
            where the instance lifecycle is <code>spot</code>.
            </para>
             
            <para>
            Spot instance requests are deleted 4 hours after they are canceled and their instances
            are terminated.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotInstanceRequests service method.</param>
            
            <returns>The response from the DescribeSpotInstanceRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotInstanceRequestsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the Spot instance requests that belong to your account. Spot instances are
            instances that Amazon EC2 launches when the bid price that you specify exceeds the
            current Spot price. Amazon EC2 periodically sets the Spot price based on available
            Spot instance capacity and current Spot instance requests. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot instance
            by examining the response. If the status of the Spot instance is <code>fulfilled</code>,
            the instance ID appears in the response and contains the identifier of the instance.
            Alternatively, you can use <a>DescribeInstances</a> with a filter to look for instances
            where the instance lifecycle is <code>spot</code>.
            </para>
             
            <para>
            Spot instance requests are deleted 4 hours after they are canceled and their instances
            are terminated.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSpotInstanceRequests service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotInstanceRequestsAsync(Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotInstanceRequests operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotInstanceRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotPriceHistory">
            <summary>
            Describes the Spot price history. The prices returned are listed in chronological
            order, from the oldest to the most recent, for up to the past 90 days. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot
            Instance Pricing History</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            When you specify a start and end time, this operation returns the prices of the instance
            types within the time range that you specified and the time when the price changed.
            The price is valid within the time period that you specified; the response merely
            indicates the last time that the price changed.
            </para>
            </summary>
            
            <returns>The response from the DescribeSpotPriceHistory service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotPriceHistory(Amazon.EC2.Model.DescribeSpotPriceHistoryRequest)">
            <summary>
            Describes the Spot price history. The prices returned are listed in chronological
            order, from the oldest to the most recent, for up to the past 90 days. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot
            Instance Pricing History</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            When you specify a start and end time, this operation returns the prices of the instance
            types within the time range that you specified and the time when the price changed.
            The price is valid within the time period that you specified; the response merely
            indicates the last time that the price changed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSpotPriceHistory service method.</param>
            
            <returns>The response from the DescribeSpotPriceHistory service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotPriceHistoryAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the Spot price history. The prices returned are listed in chronological
            order, from the oldest to the most recent, for up to the past 90 days. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot
            Instance Pricing History</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            When you specify a start and end time, this operation returns the prices of the instance
            types within the time range that you specified and the time when the price changed.
            The price is valid within the time period that you specified; the response merely
            indicates the last time that the price changed.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSpotPriceHistory service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotPriceHistoryAsync(Amazon.EC2.Model.DescribeSpotPriceHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotPriceHistory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotPriceHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeStaleSecurityGroups(Amazon.EC2.Model.DescribeStaleSecurityGroupsRequest)">
            <summary>
            [EC2-VPC only] Describes the stale security group rules for security groups in a specified
            VPC. Rules are stale when they reference a deleted security group in a peer VPC, or
            a security group in a peer VPC for which the VPC peering connection has been deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeStaleSecurityGroups service method.</param>
            
            <returns>The response from the DescribeStaleSecurityGroups service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeStaleSecurityGroupsAsync(Amazon.EC2.Model.DescribeStaleSecurityGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeStaleSecurityGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeStaleSecurityGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSubnets">
            <summary>
            Describes one or more of your subnets.
            
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeSubnets service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSubnets(Amazon.EC2.Model.DescribeSubnetsRequest)">
            <summary>
            Describes one or more of your subnets.
            
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSubnets service method.</param>
            
            <returns>The response from the DescribeSubnets service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSubnetsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your subnets.
            
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSubnets service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSubnetsAsync(Amazon.EC2.Model.DescribeSubnetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSubnets operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSubnets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeTags">
            <summary>
            Describes one or more of the tags for your EC2 resources.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeTags service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeTags(Amazon.EC2.Model.DescribeTagsRequest)">
            <summary>
            Describes one or more of the tags for your EC2 resources.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTags service method.</param>
            
            <returns>The response from the DescribeTags service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeTagsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of the tags for your EC2 resources.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTags service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeTagsAsync(Amazon.EC2.Model.DescribeTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumeAttribute(Amazon.EC2.Model.DescribeVolumeAttributeRequest)">
            <summary>
            Describes the specified attribute of the specified volume. You can specify only one
            attribute at a time.
            
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeAttribute service method.</param>
            
            <returns>The response from the DescribeVolumeAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumeAttributeAsync(Amazon.EC2.Model.DescribeVolumeAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumeAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumes">
            <summary>
            Describes the specified EBS volumes.
            
             
            <para>
            If you are describing a long list of volumes, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve
            the remaining results.
            </para>
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeVolumes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumes(Amazon.EC2.Model.DescribeVolumesRequest)">
            <summary>
            Describes the specified EBS volumes.
            
             
            <para>
            If you are describing a long list of volumes, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve
            the remaining results.
            </para>
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVolumes service method.</param>
            
            <returns>The response from the DescribeVolumes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumesAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the specified EBS volumes.
            
             
            <para>
            If you are describing a long list of volumes, you can paginate the output to make
            the list more manageable. The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. If the list of results exceeds your <code>MaxResults</code>
            value, then that number of results is returned along with a <code>NextToken</code>
            value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve
            the remaining results.
            </para>
             
            <para>
            For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon
            EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVolumes service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumesAsync(Amazon.EC2.Model.DescribeVolumesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumeStatus">
            <summary>
            Describes the status of the specified volumes. Volume status provides the result of
            the checks performed on your volumes to determine events that can impair the performance
            of your volumes. The performance of a volume can be affected if an issue occurs on
            the volume's underlying host. If the volume's underlying host experiences a power
            outage or system issue, after the system is restored, there could be data inconsistencies
            on the volume. Volume events notify you if this occurs. Volume actions notify you
            if any action needs to be taken in response to the event.
            
             
            <para>
            The <code>DescribeVolumeStatus</code> operation provides the following information
            about the specified volumes:
            </para>
             
            <para>
             <i>Status</i>: Reflects the current status of the volume. The possible values are
            <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>.
            If all checks pass, the overall status of the volume is <code>ok</code>. If the check
            fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>,
            then the checks may still be taking place on your volume at the time. We recommend
            that you retry the request. For more information on volume status, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring
            the Status of Your Volumes</a>.
            </para>
             
            <para>
             <i>Events</i>: Reflect the cause of a volume status and may require you to take action.
            For example, if your volume returns an <code>impaired</code> status, then the volume
            event might be <code>potential-data-inconsistency</code>. This means that your volume
            has been affected by an issue with the underlying host, has all I/O operations disabled,
            and may have inconsistent data.
            </para>
             
            <para>
             <i>Actions</i>: Reflect the actions you may have to take in response to an event.
            For example, if the status of the volume is <code>impaired</code> and the volume event
            shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>.
            This means that you may want to enable the I/O operations for the volume by calling
            the <a>EnableVolumeIO</a> action and then check the volume for data consistency.
            </para>
             <note> 
            <para>
            Volume status is based on the volume status checks, and does not reflect the volume
            state. Therefore, volume status does not indicate volumes in the <code>error</code>
            state (for example, when a volume is incapable of accepting I/O.)
            </para>
             </note>
            </summary>
            
            <returns>The response from the DescribeVolumeStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumeStatus(Amazon.EC2.Model.DescribeVolumeStatusRequest)">
            <summary>
            Describes the status of the specified volumes. Volume status provides the result of
            the checks performed on your volumes to determine events that can impair the performance
            of your volumes. The performance of a volume can be affected if an issue occurs on
            the volume's underlying host. If the volume's underlying host experiences a power
            outage or system issue, after the system is restored, there could be data inconsistencies
            on the volume. Volume events notify you if this occurs. Volume actions notify you
            if any action needs to be taken in response to the event.
            
             
            <para>
            The <code>DescribeVolumeStatus</code> operation provides the following information
            about the specified volumes:
            </para>
             
            <para>
             <i>Status</i>: Reflects the current status of the volume. The possible values are
            <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>.
            If all checks pass, the overall status of the volume is <code>ok</code>. If the check
            fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>,
            then the checks may still be taking place on your volume at the time. We recommend
            that you retry the request. For more information on volume status, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring
            the Status of Your Volumes</a>.
            </para>
             
            <para>
             <i>Events</i>: Reflect the cause of a volume status and may require you to take action.
            For example, if your volume returns an <code>impaired</code> status, then the volume
            event might be <code>potential-data-inconsistency</code>. This means that your volume
            has been affected by an issue with the underlying host, has all I/O operations disabled,
            and may have inconsistent data.
            </para>
             
            <para>
             <i>Actions</i>: Reflect the actions you may have to take in response to an event.
            For example, if the status of the volume is <code>impaired</code> and the volume event
            shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>.
            This means that you may want to enable the I/O operations for the volume by calling
            the <a>EnableVolumeIO</a> action and then check the volume for data consistency.
            </para>
             <note> 
            <para>
            Volume status is based on the volume status checks, and does not reflect the volume
            state. Therefore, volume status does not indicate volumes in the <code>error</code>
            state (for example, when a volume is incapable of accepting I/O.)
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeStatus service method.</param>
            
            <returns>The response from the DescribeVolumeStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumeStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Describes the status of the specified volumes. Volume status provides the result of
            the checks performed on your volumes to determine events that can impair the performance
            of your volumes. The performance of a volume can be affected if an issue occurs on
            the volume's underlying host. If the volume's underlying host experiences a power
            outage or system issue, after the system is restored, there could be data inconsistencies
            on the volume. Volume events notify you if this occurs. Volume actions notify you
            if any action needs to be taken in response to the event.
            
             
            <para>
            The <code>DescribeVolumeStatus</code> operation provides the following information
            about the specified volumes:
            </para>
             
            <para>
             <i>Status</i>: Reflects the current status of the volume. The possible values are
            <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>.
            If all checks pass, the overall status of the volume is <code>ok</code>. If the check
            fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>,
            then the checks may still be taking place on your volume at the time. We recommend
            that you retry the request. For more information on volume status, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring
            the Status of Your Volumes</a>.
            </para>
             
            <para>
             <i>Events</i>: Reflect the cause of a volume status and may require you to take action.
            For example, if your volume returns an <code>impaired</code> status, then the volume
            event might be <code>potential-data-inconsistency</code>. This means that your volume
            has been affected by an issue with the underlying host, has all I/O operations disabled,
            and may have inconsistent data.
            </para>
             
            <para>
             <i>Actions</i>: Reflect the actions you may have to take in response to an event.
            For example, if the status of the volume is <code>impaired</code> and the volume event
            shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>.
            This means that you may want to enable the I/O operations for the volume by calling
            the <a>EnableVolumeIO</a> action and then check the volume for data consistency.
            </para>
             <note> 
            <para>
            Volume status is based on the volume status checks, and does not reflect the volume
            state. Therefore, volume status does not indicate volumes in the <code>error</code>
            state (for example, when a volume is incapable of accepting I/O.)
            </para>
             </note>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVolumeStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumeStatusAsync(Amazon.EC2.Model.DescribeVolumeStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumeStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcAttribute(Amazon.EC2.Model.DescribeVpcAttributeRequest)">
            <summary>
            Describes the specified attribute of the specified VPC. You can specify only one attribute
            at a time.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcAttribute service method.</param>
            
            <returns>The response from the DescribeVpcAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcAttributeAsync(Amazon.EC2.Model.DescribeVpcAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcClassicLink(Amazon.EC2.Model.DescribeVpcClassicLinkRequest)">
            <summary>
            Describes the ClassicLink status of one or more VPCs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcClassicLink service method.</param>
            
            <returns>The response from the DescribeVpcClassicLink service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcClassicLinkAsync(Amazon.EC2.Model.DescribeVpcClassicLinkRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcClassicLink operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcClassicLink operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcClassicLinkDnsSupport(Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportRequest)">
            <summary>
            Describes the ClassicLink DNS support status of one or more VPCs. If enabled, the
            DNS hostname of a linked EC2-Classic instance resolves to its private IP address when
            addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname
            of an instance in a VPC resolves to its private IP address when addressed from a linked
            EC2-Classic instance. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcClassicLinkDnsSupport service method.</param>
            
            <returns>The response from the DescribeVpcClassicLinkDnsSupport service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcClassicLinkDnsSupportAsync(Amazon.EC2.Model.DescribeVpcClassicLinkDnsSupportRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcClassicLinkDnsSupport operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcClassicLinkDnsSupport operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcEndpoints(Amazon.EC2.Model.DescribeVpcEndpointsRequest)">
            <summary>
            Describes one or more of your VPC endpoints.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcEndpoints service method.</param>
            
            <returns>The response from the DescribeVpcEndpoints service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcEndpointsAsync(Amazon.EC2.Model.DescribeVpcEndpointsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcEndpoints operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcEndpoints operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcEndpointServices(Amazon.EC2.Model.DescribeVpcEndpointServicesRequest)">
            <summary>
            Describes all supported AWS services that can be specified when creating a VPC endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcEndpointServices service method.</param>
            
            <returns>The response from the DescribeVpcEndpointServices service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcEndpointServicesAsync(Amazon.EC2.Model.DescribeVpcEndpointServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcEndpointServices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcEndpointServices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcPeeringConnections">
            <summary>
            Describes one or more of your VPC peering connections.
            </summary>
            
            <returns>The response from the DescribeVpcPeeringConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcPeeringConnections(Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest)">
            <summary>
            Describes one or more of your VPC peering connections.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcPeeringConnections service method.</param>
            
            <returns>The response from the DescribeVpcPeeringConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcPeeringConnectionsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your VPC peering connections.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVpcPeeringConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcPeeringConnectionsAsync(Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcPeeringConnections operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcPeeringConnections operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcs">
            <summary>
            Describes one or more of your VPCs.
            </summary>
            
            <returns>The response from the DescribeVpcs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcs(Amazon.EC2.Model.DescribeVpcsRequest)">
            <summary>
            Describes one or more of your VPCs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpcs service method.</param>
            
            <returns>The response from the DescribeVpcs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your VPCs.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVpcs service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcsAsync(Amazon.EC2.Model.DescribeVpcsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpnConnections">
            <summary>
            Describes one or more of your VPN connections.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeVpnConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpnConnections(Amazon.EC2.Model.DescribeVpnConnectionsRequest)">
            <summary>
            Describes one or more of your VPN connections.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpnConnections service method.</param>
            
            <returns>The response from the DescribeVpnConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpnConnectionsAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your VPN connections.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVpnConnections service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpnConnectionsAsync(Amazon.EC2.Model.DescribeVpnConnectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpnConnections operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpnConnections operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpnGateways">
            <summary>
            Describes one or more of your virtual private gateways.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            an IPsec Hardware VPN to Your VPC</a> in the <i>Amazon Virtual Private Cloud User
            Guide</i>.
            </para>
            </summary>
            
            <returns>The response from the DescribeVpnGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpnGateways(Amazon.EC2.Model.DescribeVpnGatewaysRequest)">
            <summary>
            Describes one or more of your virtual private gateways.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            an IPsec Hardware VPN to Your VPC</a> in the <i>Amazon Virtual Private Cloud User
            Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVpnGateways service method.</param>
            
            <returns>The response from the DescribeVpnGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpnGatewaysAsync(System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your virtual private gateways.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            an IPsec Hardware VPN to Your VPC</a> in the <i>Amazon Virtual Private Cloud User
            Guide</i>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeVpnGateways service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpnGatewaysAsync(Amazon.EC2.Model.DescribeVpnGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpnGateways operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpnGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachClassicLinkVpc(Amazon.EC2.Model.DetachClassicLinkVpcRequest)">
            <summary>
            Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the instance has
            been unlinked, the VPC security groups are no longer associated with it. An instance
            is automatically unlinked from a VPC when it's stopped.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachClassicLinkVpc service method.</param>
            
            <returns>The response from the DetachClassicLinkVpc service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachClassicLinkVpcAsync(Amazon.EC2.Model.DetachClassicLinkVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachClassicLinkVpc operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachClassicLinkVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachInternetGateway(Amazon.EC2.Model.DetachInternetGatewayRequest)">
            <summary>
            Detaches an Internet gateway from a VPC, disabling connectivity between the Internet
            and the VPC. The VPC must not contain any running instances with Elastic IP addresses.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachInternetGateway service method.</param>
            
            <returns>The response from the DetachInternetGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachInternetGatewayAsync(Amazon.EC2.Model.DetachInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachInternetGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachNetworkInterface(Amazon.EC2.Model.DetachNetworkInterfaceRequest)">
            <summary>
            Detaches a network interface from an instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachNetworkInterface service method.</param>
            
            <returns>The response from the DetachNetworkInterface service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachNetworkInterfaceAsync(Amazon.EC2.Model.DetachNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachNetworkInterface operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachVolume(Amazon.EC2.Model.DetachVolumeRequest)">
            <summary>
            Detaches an EBS volume from an instance. Make sure to unmount any file systems on
            the device within your operating system before detaching the volume. Failure to do
            so can result in the volume becoming stuck in the <code>busy</code> state while detaching.
            If this happens, detachment can be delayed indefinitely until you unmount the volume,
            force detachment, reboot the instance, or all three. If an EBS volume is the root
            device of an instance, it can't be detached while the instance is running. To detach
            the root volume, stop the instance first.
            
             
            <para>
            When a volume with an AWS Marketplace product code is detached from an instance, the
            product code is no longer associated with the instance.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html">Detaching
            an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachVolume service method.</param>
            
            <returns>The response from the DetachVolume service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachVolumeAsync(Amazon.EC2.Model.DetachVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachVolume operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachVpnGateway(Amazon.EC2.Model.DetachVpnGatewayRequest)">
            <summary>
            Detaches a virtual private gateway from a VPC. You do this if you're planning to turn
            off the VPC and not use it anymore. You can confirm a virtual private gateway has
            been completely detached from a VPC by describing the virtual private gateway (any
            attachments to the virtual private gateway are also described).
            
             
            <para>
            You must wait for the attachment's state to switch to <code>detached</code> before
            you can delete the VPC or attach a different VPC to the virtual private gateway.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachVpnGateway service method.</param>
            
            <returns>The response from the DetachVpnGateway service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachVpnGatewayAsync(Amazon.EC2.Model.DetachVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachVpnGateway operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisableVgwRoutePropagation(Amazon.EC2.Model.DisableVgwRoutePropagationRequest)">
            <summary>
            Disables a virtual private gateway (VGW) from propagating routes to a specified route
            table of a VPC.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableVgwRoutePropagation service method.</param>
            
            <returns>The response from the DisableVgwRoutePropagation service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisableVgwRoutePropagationAsync(Amazon.EC2.Model.DisableVgwRoutePropagationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableVgwRoutePropagation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableVgwRoutePropagation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisableVpcClassicLink(Amazon.EC2.Model.DisableVpcClassicLinkRequest)">
            <summary>
            Disables ClassicLink for a VPC. You cannot disable ClassicLink for a VPC that has
            EC2-Classic instances linked to it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableVpcClassicLink service method.</param>
            
            <returns>The response from the DisableVpcClassicLink service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisableVpcClassicLinkAsync(Amazon.EC2.Model.DisableVpcClassicLinkRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableVpcClassicLink operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableVpcClassicLink operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisableVpcClassicLinkDnsSupport(Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportRequest)">
            <summary>
            Disables ClassicLink DNS support for a VPC. If disabled, DNS hostnames resolve to
            public IP addresses when addressed between a linked EC2-Classic instance and instances
            in the VPC to which it's linked. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableVpcClassicLinkDnsSupport service method.</param>
            
            <returns>The response from the DisableVpcClassicLinkDnsSupport service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisableVpcClassicLinkDnsSupportAsync(Amazon.EC2.Model.DisableVpcClassicLinkDnsSupportRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableVpcClassicLinkDnsSupport operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableVpcClassicLinkDnsSupport operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisassociateAddress(Amazon.EC2.Model.DisassociateAddressRequest)">
            <summary>
            Disassociates an Elastic IP address from the instance or network interface it's associated
            with.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateAddress service method.</param>
            
            <returns>The response from the DisassociateAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisassociateAddressAsync(Amazon.EC2.Model.DisassociateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisassociateAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisassociateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisassociateRouteTable(Amazon.EC2.Model.DisassociateRouteTableRequest)">
            <summary>
            Disassociates a subnet from a route table.
            
             
            <para>
            After you perform this action, the subnet no longer uses the routes in the route table.
            Instead, it uses the routes in the VPC's main route table. For more information about
            route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateRouteTable service method.</param>
            
            <returns>The response from the DisassociateRouteTable service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisassociateRouteTableAsync(Amazon.EC2.Model.DisassociateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisassociateRouteTable operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisassociateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.EnableVgwRoutePropagation(Amazon.EC2.Model.EnableVgwRoutePropagationRequest)">
            <summary>
            Enables a virtual private gateway (VGW) to propagate routes to the specified route
            table of a VPC.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableVgwRoutePropagation service method.</param>
            
            <returns>The response from the EnableVgwRoutePropagation service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.EnableVgwRoutePropagationAsync(Amazon.EC2.Model.EnableVgwRoutePropagationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVgwRoutePropagation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVgwRoutePropagation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.EnableVolumeIO(Amazon.EC2.Model.EnableVolumeIORequest)">
            <summary>
            Enables I/O operations for a volume that had I/O operations disabled because the data
            on the volume was potentially inconsistent.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableVolumeIO service method.</param>
            
            <returns>The response from the EnableVolumeIO service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.EnableVolumeIOAsync(Amazon.EC2.Model.EnableVolumeIORequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVolumeIO operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVolumeIO operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.EnableVpcClassicLink(Amazon.EC2.Model.EnableVpcClassicLinkRequest)">
            <summary>
            Enables a VPC for ClassicLink. You can then link EC2-Classic instances to your ClassicLink-enabled
            VPC to allow communication over private IP addresses. You cannot enable your VPC for
            ClassicLink if any of your VPC's route tables have existing routes for address ranges
            within the <code>10.0.0.0/8</code> IP address range, excluding local routes for VPCs
            in the <code>10.0.0.0/16</code> and <code>10.1.0.0/16</code> IP address ranges. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableVpcClassicLink service method.</param>
            
            <returns>The response from the EnableVpcClassicLink service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.EnableVpcClassicLinkAsync(Amazon.EC2.Model.EnableVpcClassicLinkRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVpcClassicLink operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVpcClassicLink operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.EnableVpcClassicLinkDnsSupport(Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportRequest)">
            <summary>
            Enables a VPC to support DNS hostname resolution for ClassicLink. If enabled, the
            DNS hostname of a linked EC2-Classic instance resolves to its private IP address when
            addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname
            of an instance in a VPC resolves to its private IP address when addressed from a linked
            EC2-Classic instance. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the Amazon Elastic Compute Cloud User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableVpcClassicLinkDnsSupport service method.</param>
            
            <returns>The response from the EnableVpcClassicLinkDnsSupport service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.EnableVpcClassicLinkDnsSupportAsync(Amazon.EC2.Model.EnableVpcClassicLinkDnsSupportRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVpcClassicLinkDnsSupport operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVpcClassicLinkDnsSupport operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetConsoleOutput(Amazon.EC2.Model.GetConsoleOutputRequest)">
            <summary>
            Gets the console output for the specified instance.
            
             
            <para>
            Instances do not have a physical monitor through which you can view their console
            output. They also lack physical controls that allow you to power up, reboot, or shut
            them down. To allow these actions, we provide them through the Amazon EC2 API and
            command line interface.
            </para>
             
            <para>
            Instance console output is buffered and posted shortly after instance boot, reboot,
            and termination. Amazon EC2 preserves the most recent 64 KB output which is available
            for at least one hour after the most recent post.
            </para>
             
            <para>
            For Linux instances, the instance console output displays the exact console output
            that would normally be displayed on a physical monitor attached to a computer. This
            output is buffered because the instance produces it and then posts it to a store where
            the instance's owner can retrieve it.
            </para>
             
            <para>
            For Windows instances, the instance console output includes output from the EC2Config
            service.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetConsoleOutput service method.</param>
            
            <returns>The response from the GetConsoleOutput service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetConsoleOutputAsync(Amazon.EC2.Model.GetConsoleOutputRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetConsoleOutput operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetConsoleOutput operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetConsoleScreenshot(Amazon.EC2.Model.GetConsoleScreenshotRequest)">
            <summary>
            Retrieve a JPG-format screenshot of a running instance to help with troubleshooting.
            
             
            <para>
            The returned content is Base64-encoded.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetConsoleScreenshot service method.</param>
            
            <returns>The response from the GetConsoleScreenshot service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetConsoleScreenshotAsync(Amazon.EC2.Model.GetConsoleScreenshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetConsoleScreenshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetConsoleScreenshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetHostReservationPurchasePreview(Amazon.EC2.Model.GetHostReservationPurchasePreviewRequest)">
            <summary>
            Preview a reservation purchase with configurations that match those of your Dedicated
            Host. You must have active Dedicated Hosts in your account before you purchase a reservation.
            
             
            <para>
            This is a preview of the <a>PurchaseHostReservation</a> action and does not result
            in the offering being purchased.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetHostReservationPurchasePreview service method.</param>
            
            <returns>The response from the GetHostReservationPurchasePreview service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetHostReservationPurchasePreviewAsync(Amazon.EC2.Model.GetHostReservationPurchasePreviewRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetHostReservationPurchasePreview operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetHostReservationPurchasePreview operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetPasswordData(Amazon.EC2.Model.GetPasswordDataRequest)">
            <summary>
            Retrieves the encrypted administrator password for an instance running Windows.
            
             
            <para>
            The Windows password is generated at boot if the <code>EC2Config</code> service plugin,
            <code>Ec2SetPassword</code>, is enabled. This usually only happens the first time
            an AMI is launched, and then <code>Ec2SetPassword</code> is automatically disabled.
            The password is not generated for rebundled AMIs unless <code>Ec2SetPassword</code>
            is enabled before bundling.
            </para>
             
            <para>
            The password is encrypted using the key pair that you specified when you launched
            the instance. You must provide the corresponding key pair file.
            </para>
             
            <para>
            Password generation and encryption takes a few moments. We recommend that you wait
            up to 15 minutes after launching an instance before trying to retrieve the generated
            password.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPasswordData service method.</param>
            
            <returns>The response from the GetPasswordData service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetPasswordDataAsync(Amazon.EC2.Model.GetPasswordDataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetPasswordData operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPasswordData operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetReservedInstancesExchangeQuote(Amazon.EC2.Model.GetReservedInstancesExchangeQuoteRequest)">
            <summary>
            Returns details about the values and term of your specified Convertible Reserved Instances.
            When an offering ID is specified it returns information about whether the exchange
            is valid and can be performed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetReservedInstancesExchangeQuote service method.</param>
            
            <returns>The response from the GetReservedInstancesExchangeQuote service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetReservedInstancesExchangeQuoteAsync(Amazon.EC2.Model.GetReservedInstancesExchangeQuoteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetReservedInstancesExchangeQuote operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetReservedInstancesExchangeQuote operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportImage(Amazon.EC2.Model.ImportImageRequest)">
            <summary>
            Import single or multi-volume disk images or EBS snapshots into an Amazon Machine
            Image (AMI). For more information, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html">Importing
            a VM as an Image Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportImage service method.</param>
            
            <returns>The response from the ImportImage service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportImageAsync(Amazon.EC2.Model.ImportImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportInstance(Amazon.EC2.Model.ImportInstanceRequest)">
            <summary>
            Creates an import instance task using metadata from the specified disk image. <code>ImportInstance</code>
            only supports single-volume VMs. To import multi-volume VMs, use <a>ImportImage</a>.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing
            a Virtual Machine Using the Amazon EC2 CLI</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportInstance service method.</param>
            
            <returns>The response from the ImportInstance service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportInstanceAsync(Amazon.EC2.Model.ImportInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportInstance operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportKeyPair(Amazon.EC2.Model.ImportKeyPairRequest)">
            <summary>
            Imports the public key from an RSA key pair that you created with a third-party tool.
            Compare this with <a>CreateKeyPair</a>, in which AWS creates the key pair and gives
            the keys to you (AWS keeps a copy of the public key). With ImportKeyPair, you create
            the key pair and give AWS just the public key. The private key is never transferred
            between you and AWS.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportKeyPair service method.</param>
            
            <returns>The response from the ImportKeyPair service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportKeyPairAsync(Amazon.EC2.Model.ImportKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportKeyPair operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportSnapshot(Amazon.EC2.Model.ImportSnapshotRequest)">
            <summary>
            Imports a disk into an EBS snapshot.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportSnapshot service method.</param>
            
            <returns>The response from the ImportSnapshot service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportSnapshotAsync(Amazon.EC2.Model.ImportSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportVolume(Amazon.EC2.Model.ImportVolumeRequest)">
            <summary>
            Creates an import volume task using metadata from the specified disk image.For more
            information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/importing-your-volumes-into-amazon-ebs.html">Importing
            Disks to Amazon EBS</a>.
            
             
            <para>
            For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
            Import Manifest</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportVolume service method.</param>
            
            <returns>The response from the ImportVolume service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportVolumeAsync(Amazon.EC2.Model.ImportVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportVolume operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyHosts(Amazon.EC2.Model.ModifyHostsRequest)">
            <summary>
            Modify the auto-placement setting of a Dedicated Host. When auto-placement is enabled,
            AWS will place instances that you launch with a tenancy of <code>host</code>, but
            without targeting a specific host ID, onto any available Dedicated Host in your account
            which has auto-placement enabled. When auto-placement is disabled, you need to provide
            a host ID if you want the instance to launch onto a specific host. If no host ID is
            provided, the instance will be launched onto a suitable host which has auto-placement
            enabled.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyHosts service method.</param>
            
            <returns>The response from the ModifyHosts service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyHostsAsync(Amazon.EC2.Model.ModifyHostsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyHosts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyHosts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyIdentityIdFormat(Amazon.EC2.Model.ModifyIdentityIdFormatRequest)">
            <summary>
            Modifies the ID format of a resource for a specified IAM user, IAM role, or the root
            user for an account; or all IAM users, IAM roles, and the root user for an account.
            You can specify that resources should receive longer IDs (17-character IDs) when they
            are created. 
            
             
            <para>
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
             
            <para>
            This setting applies to the principal specified in the request; it does not apply
            to the principal that makes the request. 
            </para>
             
            <para>
            Resources created with longer IDs are visible to all IAM roles and users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyIdentityIdFormat service method.</param>
            
            <returns>The response from the ModifyIdentityIdFormat service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyIdentityIdFormatAsync(Amazon.EC2.Model.ModifyIdentityIdFormatRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyIdentityIdFormat operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyIdentityIdFormat operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyIdFormat(Amazon.EC2.Model.ModifyIdFormatRequest)">
            <summary>
            Modifies the ID format for the specified resource on a per-region basis. You can specify
            that resources should receive longer IDs (17-character IDs) when they are created.
            The following resource types support longer IDs: <code>instance</code> | <code>reservation</code>
            | <code>snapshot</code> | <code>volume</code>.
            
             
            <para>
            This setting applies to the IAM user who makes the request; it does not apply to the
            entire AWS account. By default, an IAM user defaults to the same settings as the root
            user. If you're using this action as the root user, then these settings apply to the
            entire account, unless an IAM user explicitly overrides these settings for themselves.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource
            IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
             
            <para>
            Resources created with longer IDs are visible to all IAM roles and users, regardless
            of these settings and provided that they have permission to use the relevant <code>Describe</code>
            command for the resource type.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyIdFormat service method.</param>
            
            <returns>The response from the ModifyIdFormat service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyIdFormatAsync(Amazon.EC2.Model.ModifyIdFormatRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyIdFormat operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyIdFormat operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyImageAttribute(Amazon.EC2.Model.ModifyImageAttributeRequest)">
            <summary>
            Modifies the specified attribute of the specified AMI. You can specify only one attribute
            at a time.
            
             <note> 
            <para>
            AWS Marketplace product codes cannot be modified. Images with an AWS Marketplace product
            code cannot be made public.
            </para>
             </note> <note> 
            <para>
            The SriovNetSupport enhanced networking attribute cannot be changed using this command.
            Instead, enable SriovNetSupport on an instance and create an AMI from the instance.
            This will result in an image with SriovNetSupport enabled.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyImageAttribute service method.</param>
            
            <returns>The response from the ModifyImageAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyImageAttributeAsync(Amazon.EC2.Model.ModifyImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyImageAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyInstanceAttribute(Amazon.EC2.Model.ModifyInstanceAttributeRequest)">
            <summary>
            Modifies the specified attribute of the specified instance. You can specify only one
            attribute at a time.
            
             
            <para>
            To modify some attributes, the instance must be stopped. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html">Modifying
            Attributes of a Stopped Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyInstanceAttribute service method.</param>
            
            <returns>The response from the ModifyInstanceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyInstanceAttributeAsync(Amazon.EC2.Model.ModifyInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyInstanceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyInstancePlacement(Amazon.EC2.Model.ModifyInstancePlacementRequest)">
            <summary>
            Set the instance affinity value for a specific stopped instance and modify the instance
            tenancy setting.
            
             
            <para>
            Instance affinity is disabled by default. When instance affinity is <code>host</code>
            and it is not associated with a specific Dedicated Host, the next time it is launched
            it will automatically be associated with the host it lands on. This relationship will
            persist if the instance is stopped/started, or rebooted.
            </para>
             
            <para>
            You can modify the host ID associated with a stopped instance. If a stopped instance
            has a new host ID association, the instance will target that host when restarted.
            </para>
             
            <para>
            You can modify the tenancy of a stopped instance with a tenancy of <code>host</code>
            or <code>dedicated</code>.
            </para>
             
            <para>
            Affinity, hostID, and tenancy are not required parameters, but at least one of them
            must be specified in the request. Affinity and tenancy can be modified in the same
            request, but tenancy can only be modified on instances that are stopped.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyInstancePlacement service method.</param>
            
            <returns>The response from the ModifyInstancePlacement service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyInstancePlacementAsync(Amazon.EC2.Model.ModifyInstancePlacementRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyInstancePlacement operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyInstancePlacement operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyNetworkInterfaceAttribute(Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest)">
            <summary>
            Modifies the specified network interface attribute. You can specify only one attribute
            at a time.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyNetworkInterfaceAttribute service method.</param>
            
            <returns>The response from the ModifyNetworkInterfaceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyNetworkInterfaceAttributeAsync(Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyNetworkInterfaceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyReservedInstances(Amazon.EC2.Model.ModifyReservedInstancesRequest)">
            <summary>
            Modifies the Availability Zone, instance count, instance type, or network platform
            (EC2-Classic or EC2-VPC) of your Standard Reserved Instances. The Reserved Instances
            to be modified must be identical, except for Availability Zone, network platform,
            and instance type.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying
            Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyReservedInstances service method.</param>
            
            <returns>The response from the ModifyReservedInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyReservedInstancesAsync(Amazon.EC2.Model.ModifyReservedInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyReservedInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyReservedInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifySnapshotAttribute(Amazon.EC2.Model.ModifySnapshotAttributeRequest)">
            <summary>
            Adds or removes permission settings for the specified snapshot. You may add or remove
            specified AWS account IDs from a snapshot's list of create volume permissions, but
            you cannot do both in a single API call. If you need to both add and remove account
            IDs for a snapshot, you must use multiple API calls.
            
             <note> 
            <para>
            Encrypted snapshots and snapshots with AWS Marketplace product codes cannot be made
            public. Snapshots encrypted with your default CMK cannot be shared with other accounts.
            </para>
             </note> 
            <para>
            For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing
            Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifySnapshotAttribute service method.</param>
            
            <returns>The response from the ModifySnapshotAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifySnapshotAttributeAsync(Amazon.EC2.Model.ModifySnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifySnapshotAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifySnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifySpotFleetRequest(Amazon.EC2.Model.ModifySpotFleetRequestRequest)">
            <summary>
            Modifies the specified Spot fleet request.
            
             
            <para>
            While the Spot fleet request is being modified, it is in the <code>modifying</code>
            state.
            </para>
             
            <para>
            To scale up your Spot fleet, increase its target capacity. The Spot fleet launches
            the additional Spot instances according to the allocation strategy for the Spot fleet
            request. If the allocation strategy is <code>lowestPrice</code>, the Spot fleet launches
            instances using the Spot pool with the lowest price. If the allocation strategy is
            <code>diversified</code>, the Spot fleet distributes the instances across the Spot
            pools.
            </para>
             
            <para>
            To scale down your Spot fleet, decrease its target capacity. First, the Spot fleet
            cancels any open bids that exceed the new target capacity. You can request that the
            Spot fleet terminate Spot instances until the size of the fleet no longer exceeds
            the new target capacity. If the allocation strategy is <code>lowestPrice</code>, the
            Spot fleet terminates the instances with the highest price per unit. If the allocation
            strategy is <code>diversified</code>, the Spot fleet terminates instances across the
            Spot pools. Alternatively, you can request that the Spot fleet keep the fleet at its
            current size, but not replace any Spot instances that are interrupted or that you
            terminate manually.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifySpotFleetRequest service method.</param>
            
            <returns>The response from the ModifySpotFleetRequest service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifySpotFleetRequestAsync(Amazon.EC2.Model.ModifySpotFleetRequestRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifySpotFleetRequest operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifySpotFleetRequest operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifySubnetAttribute(Amazon.EC2.Model.ModifySubnetAttributeRequest)">
            <summary>
            Modifies a subnet attribute.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifySubnetAttribute service method.</param>
            
            <returns>The response from the ModifySubnetAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifySubnetAttributeAsync(Amazon.EC2.Model.ModifySubnetAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifySubnetAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifySubnetAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyVolumeAttribute(Amazon.EC2.Model.ModifyVolumeAttributeRequest)">
            <summary>
            Modifies a volume attribute.
            
             
            <para>
            By default, all I/O operations for the volume are suspended when the data on the volume
            is determined to be potentially inconsistent, to prevent undetectable, latent data
            corruption. The I/O access to the volume can be resumed by first enabling I/O access
            and then checking the data consistency on your volume.
            </para>
             
            <para>
            You can change the default behavior to resume I/O operations. We recommend that you
            change this only for boot volumes or for volumes that are stateless or disposable.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyVolumeAttribute service method.</param>
            
            <returns>The response from the ModifyVolumeAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyVolumeAttributeAsync(Amazon.EC2.Model.ModifyVolumeAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVolumeAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVolumeAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyVpcAttribute(Amazon.EC2.Model.ModifyVpcAttributeRequest)">
            <summary>
            Modifies the specified attribute of the specified VPC.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyVpcAttribute service method.</param>
            
            <returns>The response from the ModifyVpcAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyVpcAttributeAsync(Amazon.EC2.Model.ModifyVpcAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVpcAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVpcAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyVpcEndpoint(Amazon.EC2.Model.ModifyVpcEndpointRequest)">
            <summary>
            Modifies attributes of a specified VPC endpoint. You can modify the policy associated
            with the endpoint, and you can add and remove route tables associated with the endpoint.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyVpcEndpoint service method.</param>
            
            <returns>The response from the ModifyVpcEndpoint service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyVpcEndpointAsync(Amazon.EC2.Model.ModifyVpcEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVpcEndpoint operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVpcEndpoint operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyVpcPeeringConnectionOptions(Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsRequest)">
            <summary>
            Modifies the VPC peering connection options on one side of a VPC peering connection.
            You can do the following:
            
             <ul> <li> 
            <para>
            Enable/disable communication over the peering connection between an EC2-Classic instance
            that's linked to your VPC (using ClassicLink) and instances in the peer VPC.
            </para>
             </li> <li> 
            <para>
            Enable/disable communication over the peering connection between instances in your
            VPC and an EC2-Classic instance that's linked to the peer VPC.
            </para>
             </li> <li> 
            <para>
            Enable/disable a local VPC to resolve public DNS hostnames to private IP addresses
            when queried from instances in the peer VPC.
            </para>
             </li> </ul> 
            <para>
            If the peered VPCs are in different accounts, each owner must initiate a separate
            request to modify the peering connection options, depending on whether their VPC was
            the requester or accepter for the VPC peering connection. If the peered VPCs are in
            the same account, you can modify the requester and accepter options in the same request.
            To confirm which VPC is the accepter and requester for a VPC peering connection, use
            the <a>DescribeVpcPeeringConnections</a> command.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyVpcPeeringConnectionOptions service method.</param>
            
            <returns>The response from the ModifyVpcPeeringConnectionOptions service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyVpcPeeringConnectionOptionsAsync(Amazon.EC2.Model.ModifyVpcPeeringConnectionOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVpcPeeringConnectionOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVpcPeeringConnectionOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.MonitorInstances(Amazon.EC2.Model.MonitorInstancesRequest)">
            <summary>
            Enables monitoring for a running instance. For more information about monitoring instances,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring
            Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MonitorInstances service method.</param>
            
            <returns>The response from the MonitorInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.MonitorInstancesAsync(Amazon.EC2.Model.MonitorInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the MonitorInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the MonitorInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.MoveAddressToVpc(Amazon.EC2.Model.MoveAddressToVpcRequest)">
            <summary>
            Moves an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform.
            The Elastic IP address must be allocated to your account for more than 24 hours, and
            it must not be associated with an instance. After the Elastic IP address is moved,
            it is no longer available for use in the EC2-Classic platform, unless you move it
            back using the <a>RestoreAddressToClassic</a> request. You cannot move an Elastic
            IP address that was originally allocated for use in the EC2-VPC platform to the EC2-Classic
            platform.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MoveAddressToVpc service method.</param>
            
            <returns>The response from the MoveAddressToVpc service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.MoveAddressToVpcAsync(Amazon.EC2.Model.MoveAddressToVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the MoveAddressToVpc operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the MoveAddressToVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.PurchaseHostReservation(Amazon.EC2.Model.PurchaseHostReservationRequest)">
            <summary>
            Purchase a reservation with configurations that match those of your Dedicated Host.
            You must have active Dedicated Hosts in your account before you purchase a reservation.
            This action results in the specified reservation being purchased and charged to your
            account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PurchaseHostReservation service method.</param>
            
            <returns>The response from the PurchaseHostReservation service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.PurchaseHostReservationAsync(Amazon.EC2.Model.PurchaseHostReservationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PurchaseHostReservation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurchaseHostReservation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.PurchaseReservedInstancesOffering(Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest)">
            <summary>
            Purchases a Reserved Instance for use with your account. With Reserved Instances,
            you pay a lower hourly rate compared to On-Demand instance pricing.
            
             
            <para>
            Use <a>DescribeReservedInstancesOfferings</a> to get a list of Reserved Instance offerings
            that match your specifications. After you've purchased a Reserved Instance, you can
            check for your new Reserved Instance with <a>DescribeReservedInstances</a>.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PurchaseReservedInstancesOffering service method.</param>
            
            <returns>The response from the PurchaseReservedInstancesOffering service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.PurchaseReservedInstancesOfferingAsync(Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PurchaseReservedInstancesOffering operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurchaseReservedInstancesOffering operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.PurchaseScheduledInstances(Amazon.EC2.Model.PurchaseScheduledInstancesRequest)">
            <summary>
            Purchases one or more Scheduled Instances with the specified schedule.
            
             
            <para>
            Scheduled Instances enable you to purchase Amazon EC2 compute capacity by the hour
            for a one-year term. Before you can purchase a Scheduled Instance, you must call <a>DescribeScheduledInstanceAvailability</a>
            to check for available schedules and obtain a purchase token. After you purchase a
            Scheduled Instance, you must call <a>RunScheduledInstances</a> during each scheduled
            time period.
            </para>
             
            <para>
            After you purchase a Scheduled Instance, you can't cancel, modify, or resell your
            purchase.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PurchaseScheduledInstances service method.</param>
            
            <returns>The response from the PurchaseScheduledInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.PurchaseScheduledInstancesAsync(Amazon.EC2.Model.PurchaseScheduledInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PurchaseScheduledInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurchaseScheduledInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RebootInstances(Amazon.EC2.Model.RebootInstancesRequest)">
            <summary>
            Requests a reboot of one or more instances. This operation is asynchronous; it only
            queues a request to reboot the specified instances. The operation succeeds if the
            instances are valid and belong to you. Requests to reboot terminated instances are
            ignored.
            
             
            <para>
            If an instance does not cleanly shut down within four minutes, Amazon EC2 performs
            a hard reboot.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Getting
            Console Output and Rebooting Instances</a> in the <i>Amazon Elastic Compute Cloud
            User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootInstances service method.</param>
            
            <returns>The response from the RebootInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RebootInstancesAsync(Amazon.EC2.Model.RebootInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RebootInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RebootInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RegisterImage(Amazon.EC2.Model.RegisterImageRequest)">
            <summary>
            Registers an AMI. When you're creating an AMI, this is the final step you must complete
            before you can launch an instance from the AMI. For more information about creating
            AMIs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html">Creating
            Your Own AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             <note> 
            <para>
            For Amazon EBS-backed instances, <a>CreateImage</a> creates and registers the AMI
            in a single request, so you don't have to register the AMI yourself.
            </para>
             </note> 
            <para>
            You can also use <code>RegisterImage</code> to create an Amazon EBS-backed Linux AMI
            from a snapshot of a root device volume. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_LaunchingInstanceFromSnapshot.html">Launching
            an Instance from a Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             <important> 
            <para>
            Some Linux distributions, such as Red Hat Enterprise Linux (RHEL) and SUSE Linux Enterprise
            Server (SLES), use the EC2 <code>billingProduct</code> code associated with an AMI
            to verify subscription status for package updates. Creating an AMI from an EBS snapshot
            does not maintain this billing code, and subsequent instances launched from such an
            AMI will not be able to connect to package update infrastructure.
            </para>
             
            <para>
            Similarly, although you can create a Windows AMI from a snapshot, you can't successfully
            launch an instance from the AMI.
            </para>
             
            <para>
            To create Windows AMIs or to create AMIs for Linux operating systems that must retain
            AMI billing codes to work properly, see <a>CreateImage</a>.
            </para>
             </important> 
            <para>
            If needed, you can deregister an AMI at any time. Any modifications you make to an
            AMI backed by an instance store volume invalidates its registration. If you make changes
            to an image, deregister the previous image and register the new image.
            </para>
             <note> 
            <para>
            You can't register an image where a secondary (non-root) snapshot has AWS Marketplace
            product codes.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterImage service method.</param>
            
            <returns>The response from the RegisterImage service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RegisterImageAsync(Amazon.EC2.Model.RegisterImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RegisterImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RegisterImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RejectVpcPeeringConnection(Amazon.EC2.Model.RejectVpcPeeringConnectionRequest)">
            <summary>
            Rejects a VPC peering connection request. The VPC peering connection must be in the
            <code>pending-acceptance</code> state. Use the <a>DescribeVpcPeeringConnections</a>
            request to view your outstanding VPC peering connection requests. To delete an active
            VPC peering connection, or to delete a VPC peering connection request that you initiated,
            use <a>DeleteVpcPeeringConnection</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RejectVpcPeeringConnection service method.</param>
            
            <returns>The response from the RejectVpcPeeringConnection service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RejectVpcPeeringConnectionAsync(Amazon.EC2.Model.RejectVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RejectVpcPeeringConnection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RejectVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReleaseAddress(Amazon.EC2.Model.ReleaseAddressRequest)">
            <summary>
            Releases the specified Elastic IP address.
            
             
            <para>
            After releasing an Elastic IP address, it is released to the IP address pool and might
            be unavailable to you. Be sure to update your DNS records and any servers or devices
            that communicate with the address. If you attempt to release an Elastic IP address
            that you already released, you'll get an <code>AuthFailure</code> error if the address
            is already allocated to another AWS account.
            </para>
             
            <para>
            [EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates
            it from any instance that it's associated with. To disassociate an Elastic IP address
            without releasing it, use <a>DisassociateAddress</a>.
            </para>
             
            <para>
            [Nondefault VPC] You must use <a>DisassociateAddress</a> to disassociate the Elastic
            IP address before you try to release it. Otherwise, Amazon EC2 returns an error (<code>InvalidIPAddress.InUse</code>).
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReleaseAddress service method.</param>
            
            <returns>The response from the ReleaseAddress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReleaseAddressAsync(Amazon.EC2.Model.ReleaseAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReleaseAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReleaseAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReleaseHosts(Amazon.EC2.Model.ReleaseHostsRequest)">
            <summary>
            When you no longer want to use an On-Demand Dedicated Host it can be released. On-Demand
            billing is stopped and the host goes into <code>released</code> state. The host ID
            of Dedicated Hosts that have been released can no longer be specified in another request,
            e.g., ModifyHosts. You must stop or terminate all instances on a host before it can
            be released.
            
             
            <para>
            When Dedicated Hosts are released, it make take some time for them to stop counting
            toward your limit and you may receive capacity errors when trying to allocate new
            Dedicated hosts. Try waiting a few minutes, and then try again.
            </para>
             
            <para>
            Released hosts will still appear in a <a>DescribeHosts</a> response.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReleaseHosts service method.</param>
            
            <returns>The response from the ReleaseHosts service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReleaseHostsAsync(Amazon.EC2.Model.ReleaseHostsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReleaseHosts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReleaseHosts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceNetworkAclAssociation(Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest)">
            <summary>
            Changes which network ACL a subnet is associated with. By default when you create
            a subnet, it's automatically associated with the default network ACL. For more information
            about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclAssociation service method.</param>
            
            <returns>The response from the ReplaceNetworkAclAssociation service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceNetworkAclAssociationAsync(Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceNetworkAclAssociation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceNetworkAclEntry(Amazon.EC2.Model.ReplaceNetworkAclEntryRequest)">
            <summary>
            Replaces an entry (rule) in a network ACL. For more information about network ACLs,
            see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclEntry service method.</param>
            
            <returns>The response from the ReplaceNetworkAclEntry service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceNetworkAclEntryAsync(Amazon.EC2.Model.ReplaceNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceNetworkAclEntry operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceRoute(Amazon.EC2.Model.ReplaceRouteRequest)">
            <summary>
            Replaces an existing route within a route table in a VPC. You must provide only one
            of the following: Internet gateway or virtual private gateway, NAT instance, NAT gateway,
            VPC peering connection, or network interface.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplaceRoute service method.</param>
            
            <returns>The response from the ReplaceRoute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceRouteAsync(Amazon.EC2.Model.ReplaceRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceRoute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceRouteTableAssociation(Amazon.EC2.Model.ReplaceRouteTableAssociationRequest)">
            <summary>
            Changes the route table associated with a given subnet in a VPC. After the operation
            completes, the subnet uses the routes in the new route table it's associated with.
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            
             
            <para>
            You can also use ReplaceRouteTableAssociation to change which table is the main route
            table in the VPC. You just specify the main route table's association ID and the route
            table to be the new main route table.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplaceRouteTableAssociation service method.</param>
            
            <returns>The response from the ReplaceRouteTableAssociation service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceRouteTableAssociationAsync(Amazon.EC2.Model.ReplaceRouteTableAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceRouteTableAssociation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceRouteTableAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReportInstanceStatus(Amazon.EC2.Model.ReportInstanceStatusRequest)">
            <summary>
            Submits feedback about the status of an instance. The instance must be in the <code>running</code>
            state. If your experience with the instance differs from the instance status returned
            by <a>DescribeInstanceStatus</a>, use <a>ReportInstanceStatus</a> to report your experience
            with the instance. Amazon EC2 collects this information to improve the accuracy of
            status checks.
            
             
            <para>
            Use of this action does not change the value returned by <a>DescribeInstanceStatus</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReportInstanceStatus service method.</param>
            
            <returns>The response from the ReportInstanceStatus service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReportInstanceStatusAsync(Amazon.EC2.Model.ReportInstanceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReportInstanceStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReportInstanceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RequestSpotFleet(Amazon.EC2.Model.RequestSpotFleetRequest)">
            <summary>
            Creates a Spot fleet request.
            
             
            <para>
            You can submit a single request that includes multiple launch specifications that
            vary by instance type, AMI, Availability Zone, or subnet.
            </para>
             
            <para>
            By default, the Spot fleet requests Spot instances in the Spot pool where the price
            per unit is the lowest. Each launch specification can include its own instance weighting
            that reflects the value of the instance type to your application workload.
            </para>
             
            <para>
            Alternatively, you can specify that the Spot fleet distribute the target capacity
            across the Spot pools included in its launch specifications. By ensuring that the
            Spot instances in your Spot fleet are in different Spot pools, you can improve the
            availability of your fleet.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html">Spot
            Fleet Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestSpotFleet service method.</param>
            
            <returns>The response from the RequestSpotFleet service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RequestSpotFleetAsync(Amazon.EC2.Model.RequestSpotFleetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RequestSpotFleet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RequestSpotFleet operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RequestSpotInstances(Amazon.EC2.Model.RequestSpotInstancesRequest)">
            <summary>
            Creates a Spot instance request. Spot instances are instances that Amazon EC2 launches
            when the bid price that you specify exceeds the current Spot price. Amazon EC2 periodically
            sets the Spot price based on available Spot Instance capacity and current Spot instance
            requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot
            Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestSpotInstances service method.</param>
            
            <returns>The response from the RequestSpotInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RequestSpotInstancesAsync(Amazon.EC2.Model.RequestSpotInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RequestSpotInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RequestSpotInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetImageAttribute(Amazon.EC2.Model.ResetImageAttributeRequest)">
            <summary>
            Resets an attribute of an AMI to its default value.
            
             <note> 
            <para>
            The productCodes attribute can't be reset.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetImageAttribute service method.</param>
            
            <returns>The response from the ResetImageAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetImageAttributeAsync(Amazon.EC2.Model.ResetImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetImageAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetInstanceAttribute(Amazon.EC2.Model.ResetInstanceAttributeRequest)">
            <summary>
            Resets an attribute of an instance to its default value. To reset the <code>kernel</code>
            or <code>ramdisk</code>, the instance must be in a stopped state. To reset the <code>sourceDestCheck</code>,
            the instance can be either running or stopped.
            
             
            <para>
            The <code>sourceDestCheck</code> attribute controls whether source/destination checking
            is enabled. The default value is <code>true</code>, which means checking is enabled.
            This value must be <code>false</code> for a NAT instance to perform NAT. For more
            information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetInstanceAttribute service method.</param>
            
            <returns>The response from the ResetInstanceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetInstanceAttributeAsync(Amazon.EC2.Model.ResetInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetInstanceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetNetworkInterfaceAttribute(Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest)">
            <summary>
            Resets a network interface attribute. You can specify only one attribute at a time.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetNetworkInterfaceAttribute service method.</param>
            
            <returns>The response from the ResetNetworkInterfaceAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetNetworkInterfaceAttributeAsync(Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetNetworkInterfaceAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetSnapshotAttribute(Amazon.EC2.Model.ResetSnapshotAttributeRequest)">
            <summary>
            Resets permission settings for the specified snapshot.
            
             
            <para>
            For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing
            Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetSnapshotAttribute service method.</param>
            
            <returns>The response from the ResetSnapshotAttribute service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetSnapshotAttributeAsync(Amazon.EC2.Model.ResetSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetSnapshotAttribute operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetSnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RestoreAddressToClassic(Amazon.EC2.Model.RestoreAddressToClassicRequest)">
            <summary>
            Restores an Elastic IP address that was previously moved to the EC2-VPC platform back
            to the EC2-Classic platform. You cannot move an Elastic IP address that was originally
            allocated for use in EC2-VPC. The Elastic IP address must not be associated with an
            instance or network interface.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreAddressToClassic service method.</param>
            
            <returns>The response from the RestoreAddressToClassic service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RestoreAddressToClassicAsync(Amazon.EC2.Model.RestoreAddressToClassicRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RestoreAddressToClassic operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreAddressToClassic operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RevokeSecurityGroupEgress(Amazon.EC2.Model.RevokeSecurityGroupEgressRequest)">
            <summary>
            [EC2-VPC only] Removes one or more egress rules from a security group for EC2-VPC.
            This action doesn't apply to security groups for use in EC2-Classic. The values that
            you specify in the revoke request (for example, ports) must match the existing rule's
            values for the rule to be revoked.
            
             
            <para>
            Each rule consists of the protocol and the CIDR range or source security group. For
            the TCP and UDP protocols, you must also specify the destination port or range of
            ports. For the ICMP protocol, you must also specify the ICMP type and code.
            </para>
             
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupEgress service method.</param>
            
            <returns>The response from the RevokeSecurityGroupEgress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RevokeSecurityGroupEgressAsync(Amazon.EC2.Model.RevokeSecurityGroupEgressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RevokeSecurityGroupEgress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupEgress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RevokeSecurityGroupIngress(Amazon.EC2.Model.RevokeSecurityGroupIngressRequest)">
            <summary>
            Removes one or more ingress rules from a security group. The values that you specify
            in the revoke request (for example, ports) must match the existing rule's values for
            the rule to be removed.
            
             
            <para>
            Each rule consists of the protocol and the CIDR range or source security group. For
            the TCP and UDP protocols, you must also specify the destination port or range of
            ports. For the ICMP protocol, you must also specify the ICMP type and code.
            </para>
             
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupIngress service method.</param>
            
            <returns>The response from the RevokeSecurityGroupIngress service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RevokeSecurityGroupIngressAsync(Amazon.EC2.Model.RevokeSecurityGroupIngressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RevokeSecurityGroupIngress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupIngress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RunInstances(Amazon.EC2.Model.RunInstancesRequest)">
            <summary>
            Launches the specified number of instances using an AMI for which you have permissions.
            
             
            <para>
            When you launch an instance, it enters the <code>pending</code> state. After the instance
            is ready for you, it enters the <code>running</code> state. To check the state of
            your instance, call <a>DescribeInstances</a>.
            </para>
             
            <para>
            To ensure faster instance launches, break up large requests into smaller batches.
            For example, create five separate launch requests for 100 instances each instead of
            one launch request for 500 instances.
            </para>
             
            <para>
            To tag your instance, ensure that it is <code>running</code> as <a>CreateTags</a>
            requires a resource ID. For more information about tagging, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Amazon EC2 Resources</a>.
            </para>
             
            <para>
            If you don't specify a security group when launching an instance, Amazon EC2 uses
            the default security group. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Security
            Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            [EC2-VPC only accounts] If you don't specify a subnet in the request, we choose a
            default subnet from your default VPC for you.
            </para>
             
            <para>
            [EC2-Classic accounts] If you're launching into EC2-Classic and you don't specify
            an Availability Zone, we choose one for you.
            </para>
             
            <para>
            Linux instances have access to the public key of the key pair at boot. You can use
            this key to provide secure access to the instance. Amazon EC2 public images use this
            feature to provide secure access without passwords. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            You can provide optional user data when launching an instance. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html">Instance
            Metadata</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            If any of the AMIs have a product code attached for which the user has not subscribed,
            <code>RunInstances</code> fails.
            </para>
             
            <para>
            Some instance types can only be launched into a VPC. If you do not have a default
            VPC, or if you do not specify a subnet ID in the request, <code>RunInstances</code>
            fails. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types">Instance
            Types Available Only in a VPC</a>.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html">What
            To Do If An Instance Immediately Terminates</a>, and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html">Troubleshooting
            Connecting to Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunInstances service method.</param>
            
            <returns>The response from the RunInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RunInstancesAsync(Amazon.EC2.Model.RunInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RunInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RunInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RunScheduledInstances(Amazon.EC2.Model.RunScheduledInstancesRequest)">
            <summary>
            Launches the specified Scheduled Instances.
            
             
            <para>
            Before you can launch a Scheduled Instance, you must purchase it and obtain an identifier
            using <a>PurchaseScheduledInstances</a>.
            </para>
             
            <para>
            You must launch a Scheduled Instance during its scheduled time period. You can't stop
            or reboot a Scheduled Instance, but you can terminate it as needed. If you terminate
            a Scheduled Instance before the current scheduled time period ends, you can launch
            it again after a few minutes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-scheduled-instances.html">Scheduled
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunScheduledInstances service method.</param>
            
            <returns>The response from the RunScheduledInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RunScheduledInstancesAsync(Amazon.EC2.Model.RunScheduledInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RunScheduledInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RunScheduledInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.StartInstances(Amazon.EC2.Model.StartInstancesRequest)">
            <summary>
            Starts an Amazon EBS-backed AMI that you've previously stopped.
            
             
            <para>
            Instances that use Amazon EBS volumes as their root devices can be quickly stopped
            and started. When an instance is stopped, the compute resources are released and you
            are not billed for hourly instance usage. However, your root partition Amazon EBS
            volume remains, continues to persist your data, and you are charged for Amazon EBS
            volume usage. You can restart your instance at any time. Each time you transition
            an instance from stopped to started, Amazon EC2 charges a full instance hour, even
            if transitions happen multiple times within a single hour.
            </para>
             
            <para>
            Before stopping an instance, make sure it is in a state from which it can be restarted.
            Stopping an instance does not preserve data stored in RAM.
            </para>
             
            <para>
            Performing this operation on an instance that uses an instance store as its root device
            returns an error.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stopping
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartInstances service method.</param>
            
            <returns>The response from the StartInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.StartInstancesAsync(Amazon.EC2.Model.StartInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.StopInstances(Amazon.EC2.Model.StopInstancesRequest)">
            <summary>
            Stops an Amazon EBS-backed instance.
            
             
            <para>
            We don't charge hourly usage for a stopped instance, or data transfer fees; however,
            your root partition Amazon EBS volume remains, continues to persist your data, and
            you are charged for Amazon EBS volume usage. Each time you transition an instance
            from stopped to started, Amazon EC2 charges a full instance hour, even if transitions
            happen multiple times within a single hour.
            </para>
             
            <para>
            You can't start or stop Spot instances, and you can't stop instance store-backed instances.
            </para>
             
            <para>
            When you stop an instance, we shut it down. You can restart your instance at any time.
            Before stopping an instance, make sure it is in a state from which it can be restarted.
            Stopping an instance does not preserve data stored in RAM.
            </para>
             
            <para>
            Stopping an instance is different to rebooting or terminating it. For example, when
            you stop an instance, the root device and any other devices attached to the instance
            persist. When you terminate an instance, the root device and any other devices attached
            during the instance launch are automatically deleted. For more information about the
            differences between rebooting, stopping, and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            When you stop an instance, we attempt to shut it down forcibly after a short while.
            If your instance appears stuck in the stopping state after a period of time, there
            may be an issue with the underlying host computer. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html">Troubleshooting
            Stopping Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopInstances service method.</param>
            
            <returns>The response from the StopInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.StopInstancesAsync(Amazon.EC2.Model.StopInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StopInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.TerminateInstances(Amazon.EC2.Model.TerminateInstancesRequest)">
            <summary>
            Shuts down one or more instances. This operation is idempotent; if you terminate an
            instance more than once, each call succeeds. 
            
             
            <para>
            If you specify multiple instances and the request fails (for example, because of a
            single incorrect instance ID), none of the instances are terminated.
            </para>
             
            <para>
            Terminated instances remain visible after termination (for approximately one hour).
            </para>
             
            <para>
            By default, Amazon EC2 deletes all EBS volumes that were attached when the instance
            launched. Volumes attached after instance launch continue running.
            </para>
             
            <para>
            You can stop, start, and terminate EBS-backed instances. You can only terminate instance
            store-backed instances. What happens to an instance differs if you stop it or terminate
            it. For example, when you stop an instance, the root device and any other devices
            attached to the instance persist. When you terminate an instance, any attached EBS
            volumes with the <code>DeleteOnTermination</code> block device mapping parameter set
            to <code>true</code> are automatically deleted. For more information about the differences
            between stopping and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html">Troubleshooting
            Terminating Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateInstances service method.</param>
            
            <returns>The response from the TerminateInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.TerminateInstancesAsync(Amazon.EC2.Model.TerminateInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TerminateInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TerminateInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.UnassignPrivateIpAddresses(Amazon.EC2.Model.UnassignPrivateIpAddressesRequest)">
            <summary>
            Unassigns one or more secondary private IP addresses from a network interface.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UnassignPrivateIpAddresses service method.</param>
            
            <returns>The response from the UnassignPrivateIpAddresses service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.UnassignPrivateIpAddressesAsync(Amazon.EC2.Model.UnassignPrivateIpAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnassignPrivateIpAddresses operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnassignPrivateIpAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.UnmonitorInstances(Amazon.EC2.Model.UnmonitorInstancesRequest)">
            <summary>
            Disables monitoring for a running instance. For more information about monitoring
            instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring
            Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UnmonitorInstances service method.</param>
            
            <returns>The response from the UnmonitorInstances service method, as returned by EC2.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.UnmonitorInstancesAsync(Amazon.EC2.Model.UnmonitorInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnmonitorInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnmonitorInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
    </members>
</doc>
