<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CloudWatch</name>
    </assembly>
    <members>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchConfig">
            <summary>
            Configuration for accessing Amazon CloudWatch service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchException">
            <summary>
             Common exception for the CloudWatch service.
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.ComparisonOperator">
            <summary>
            Constants used for properties of type ComparisonOperator.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.GreaterThanOrEqualToThreshold">
            <summary>
            Constant GreaterThanOrEqualToThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.GreaterThanThreshold">
            <summary>
            Constant GreaterThanThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.LessThanOrEqualToThreshold">
            <summary>
            Constant LessThanOrEqualToThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.LessThanThreshold">
            <summary>
            Constant LessThanThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.ComparisonOperator.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.ComparisonOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.ComparisonOperator.op_Implicit(System.String)~Amazon.CloudWatch.ComparisonOperator">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.HistoryItemType">
            <summary>
            Constants used for properties of type HistoryItemType.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.Action">
            <summary>
            Constant Action for HistoryItemType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.ConfigurationUpdate">
            <summary>
            Constant ConfigurationUpdate for HistoryItemType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.StateUpdate">
            <summary>
            Constant StateUpdate for HistoryItemType
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.HistoryItemType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.HistoryItemType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.HistoryItemType.op_Implicit(System.String)~Amazon.CloudWatch.HistoryItemType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.StandardUnit">
            <summary>
            Constants used for properties of type StandardUnit.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Bits">
            <summary>
            Constant Bits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.BitsSecond">
            <summary>
            Constant BitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Bytes">
            <summary>
            Constant Bytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.BytesSecond">
            <summary>
            Constant BytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Count">
            <summary>
            Constant Count for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.CountSecond">
            <summary>
            Constant CountSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Gigabits">
            <summary>
            Constant Gigabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.GigabitsSecond">
            <summary>
            Constant GigabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Gigabytes">
            <summary>
            Constant Gigabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.GigabytesSecond">
            <summary>
            Constant GigabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Kilobits">
            <summary>
            Constant Kilobits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.KilobitsSecond">
            <summary>
            Constant KilobitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Kilobytes">
            <summary>
            Constant Kilobytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.KilobytesSecond">
            <summary>
            Constant KilobytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Megabits">
            <summary>
            Constant Megabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.MegabitsSecond">
            <summary>
            Constant MegabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Megabytes">
            <summary>
            Constant Megabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.MegabytesSecond">
            <summary>
            Constant MegabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Microseconds">
            <summary>
            Constant Microseconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Milliseconds">
            <summary>
            Constant Milliseconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.None">
            <summary>
            Constant None for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Percent">
            <summary>
            Constant Percent for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Seconds">
            <summary>
            Constant Seconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Terabits">
            <summary>
            Constant Terabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.TerabitsSecond">
            <summary>
            Constant TerabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Terabytes">
            <summary>
            Constant Terabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.TerabytesSecond">
            <summary>
            Constant TerabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StandardUnit.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StandardUnit.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.StandardUnit.op_Implicit(System.String)~Amazon.CloudWatch.StandardUnit">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.StateValue">
            <summary>
            Constants used for properties of type StateValue.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.ALARM">
            <summary>
            Constant ALARM for StateValue
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.INSUFFICIENT_DATA">
            <summary>
            Constant INSUFFICIENT_DATA for StateValue
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.OK">
            <summary>
            Constant OK for StateValue
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StateValue.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StateValue.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.StateValue.op_Implicit(System.String)~Amazon.CloudWatch.StateValue">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Statistic">
            <summary>
            Constants used for properties of type Statistic.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Average">
            <summary>
            Constant Average for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Maximum">
            <summary>
            Constant Maximum for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Minimum">
            <summary>
            Constant Minimum for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.SampleCount">
            <summary>
            Constant SampleCount for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Sum">
            <summary>
            Constant Sum for Statistic
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Statistic.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Statistic.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.Statistic.op_Implicit(System.String)~Amazon.CloudWatch.Statistic">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.AlarmHistoryItem">
            <summary>
            The <code>AlarmHistoryItem</code> data type contains descriptive information about
            the history of a specific alarm. If you call <a>DescribeAlarmHistory</a>, Amazon CloudWatch
            returns this data type as part of the DescribeAlarmHistoryResult data type.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The descriptive name for the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistoryData">
            <summary>
            Gets and sets the property HistoryData. 
            <para>
            Machine-readable data about the alarm in JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistoryItemType">
            <summary>
            Gets and sets the property HistoryItemType. 
            <para>
            The type of alarm history item.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistorySummary">
            <summary>
            Gets and sets the property HistorySummary. 
            <para>
            A human-readable summary of the alarm history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time stamp for the alarm history item.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Datapoint">
            <summary>
            The <code>Datapoint</code> data type encapsulates the statistical data that Amazon
            CloudWatch computes from metric data.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Average">
            <summary>
            Gets and sets the property Average. 
            <para>
            The average of metric values that correspond to the datapoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Maximum">
            <summary>
            Gets and sets the property Maximum. 
            <para>
            The maximum of the metric value used for the datapoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Minimum">
            <summary>
            Gets and sets the property Minimum. 
            <para>
            The minimum metric value used for the datapoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.SampleCount">
            <summary>
            Gets and sets the property SampleCount. 
            <para>
            The number of metric values that contributed to the aggregate value of this datapoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Sum">
            <summary>
            Gets and sets the property Sum. 
            <para>
            The sum of metric values used for the datapoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time stamp used for the datapoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The standard unit used for the datapoint.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteAlarmsRequest">
            <summary>
            Container for the parameters to the DeleteAlarms operation.
            Deletes all specified alarms. In the event of an error, no alarms are deleted.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteAlarmsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            A list of alarms to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteAlarmsResponse">
            <summary>
            This is the response object from the DeleteAlarms operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest">
            <summary>
            Container for the parameters to the DescribeAlarmHistory operation.
            Retrieves history for the specified alarm. Filter alarms by date range or item type.
            If an alarm name is not specified, Amazon CloudWatch returns histories for all of
            the owner's alarms.
            
             <note> 
            <para>
            Amazon CloudWatch retains the history of an alarm for two weeks, whether or not you
            delete the alarm.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.EndDate">
            <summary>
            Gets and sets the property EndDate. 
            <para>
            The ending date to retrieve alarm history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.HistoryItemType">
            <summary>
            Gets and sets the property HistoryItemType. 
            <para>
            The type of alarm histories to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of alarm history records to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to indicate that there is more data available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.StartDate">
            <summary>
            Gets and sets the property StartDate. 
            <para>
            The starting date to retrieve alarm history.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse">
            <summary>
            The output for <a>DescribeAlarmHistory</a>.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse.AlarmHistoryItems">
            <summary>
            Gets and sets the property AlarmHistoryItems. 
            <para>
            A list of alarm histories in JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A string that marks the start of the next batch of returned results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest">
            <summary>
            Container for the parameters to the DescribeAlarmsForMetric operation.
            Retrieves all alarms for a single metric. Specify a statistic, period, or unit to
            filter the set of alarms further.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The list of dimensions associated with the metric. If the metric has any associated
            dimensions, you must specify them in order for the DescribeAlarmsForMetric to succeed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The period in seconds over which the statistic is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
            The statistic for the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit for the metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsForMetricResponse">
            <summary>
            The output for <a>DescribeAlarmsForMetric</a>.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricResponse.MetricAlarms">
            <summary>
            Gets and sets the property MetricAlarms. 
            <para>
            A list of information for each alarm with the specified metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsRequest">
            <summary>
            Container for the parameters to the DescribeAlarms operation.
            Retrieves alarms with the specified names. If no name is specified, all alarms for
            the user are returned. Alarms can be retrieved by using only a prefix for the alarm
            name, the alarm state, or a prefix for any action.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.ActionPrefix">
            <summary>
            Gets and sets the property ActionPrefix. 
            <para>
            The action name prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.AlarmNamePrefix">
            <summary>
            Gets and sets the property AlarmNamePrefix. 
            <para>
            The alarm name prefix. <code>AlarmNames</code> cannot be specified if this parameter
            is specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            A list of alarm names to retrieve information for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of alarm descriptions to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to indicate that there is more data available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            The state value to be used in matching alarms.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsResponse">
            <summary>
            The output for <a>DescribeAlarms</a>.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsResponse.MetricAlarms">
            <summary>
            Gets and sets the property MetricAlarms. 
            <para>
            A list of information for the specified alarms.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A string that marks the start of the next batch of returned results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Dimension">
            <summary>
            The <code>Dimension</code> data type further expands on the identity of a metric
            using a Name, Value pair. 
            
             
            <para>
            For examples that use one or more dimensions, see <a>PutMetricData</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Dimension.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the dimension.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Dimension.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value representing the dimension measurement
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DimensionFilter">
            <summary>
            The <code>DimensionFilter</code> data type is used to filter <a>ListMetrics</a> results.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DimensionFilter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The dimension name to be matched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DimensionFilter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the dimension to be matched.
            </para>
             <note> 
            <para>
            Specifying a <code>Name</code> without specifying a <code>Value</code> returns all
            values associated with that <code>Name</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DisableAlarmActionsRequest">
            <summary>
            Container for the parameters to the DisableAlarmActions operation.
            Disables actions for the specified alarms. When an alarm's actions are disabled the
            alarm's state may change, but none of the alarm's actions will execute.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DisableAlarmActionsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            The names of the alarms to disable actions for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DisableAlarmActionsResponse">
            <summary>
            This is the response object from the DisableAlarmActions operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.EnableAlarmActionsRequest">
            <summary>
            Container for the parameters to the EnableAlarmActions operation.
            Enables actions for the specified alarms.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.EnableAlarmActionsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            The names of the alarms to enable actions for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.EnableAlarmActionsResponse">
            <summary>
            This is the response object from the EnableAlarmActions operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricStatisticsRequest">
            <summary>
            Container for the parameters to the GetMetricStatistics operation.
            Gets statistics for the specified metric.
            
             
            <para>
             The maximum number of data points that can be queried is 50,850, whereas the maximum
            number of data points returned from a single <code>GetMetricStatistics</code> request
            is 1,440. If you make a request that generates more than 1,440 data points, Amazon
            CloudWatch returns an error. In such a case, you can alter the request by narrowing
            the specified time range or increasing the specified period. A period can be as short
            as one minute (60 seconds) or as long as one day (86,400 seconds). Alternatively,
            you can make multiple requests across adjacent time ranges. <code>GetMetricStatistics</code>
            does not return the data in chronological order. 
            </para>
             
            <para>
             Amazon CloudWatch aggregates data points based on the length of the <code>period</code>
            that you specify. For example, if you request statistics with a one-minute granularity,
            Amazon CloudWatch aggregates data points with time stamps that fall within the same
            one-minute period. In such a case, the data points queried can greatly outnumber the
            data points returned. 
            </para>
             
            <para>
             The following examples show various statistics allowed by the data point query maximum
            of 50,850 when you call <code>GetMetricStatistics</code> on Amazon EC2 instances with
            detailed (one-minute) monitoring enabled: 
            </para>
             <ul> <li> 
            <para>
            Statistics for up to 400 instances for a span of one hour
            </para>
             </li> <li> 
            <para>
            Statistics for up to 35 instances over a span of 24 hours
            </para>
             </li> <li> 
            <para>
            Statistics for up to 2 instances over a span of 2 weeks
            </para>
             </li> </ul> 
            <para>
             For information about the namespace, metric names, and dimensions that other Amazon
            Web Services products use to send metrics to CloudWatch, go to <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html">Amazon
            CloudWatch Metrics, Namespaces, and Dimensions Reference</a> in the <i>Amazon CloudWatch
            Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            A list of dimensions describing qualities of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The time stamp to use for determining the last datapoint to return. The value specified
            is exclusive; results will include datapoints up to the time stamp specified. The
            time stamp must be in ISO 8601 UTC format (e.g., 2014-09-03T23:00:00Z).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric, with or without spaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric, with or without spaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
             The granularity, in seconds, of the returned datapoints. A <code>Period</code> can
            be as short as one minute (60 seconds) or as long as one day (86,400 seconds), and
            must be a multiple of 60. The default value is 60. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time stamp to use for determining the first datapoint to return. The value specified
            is inclusive; results include datapoints with the time stamp specified. The time stamp
            must be in ISO 8601 UTC format (e.g., 2014-09-03T23:00:00Z).
            </para>
             <note> 
            <para>
            The specified start time is rounded down to the nearest value. Datapoints are returned
            for start times up to two weeks in the past. Specified start times that are more than
            two weeks in the past will not return datapoints for metrics that are older than two
            weeks.
            </para>
             
            <para>
            Data that is timestamped 24 hours or more in the past may take in excess of 48 hours
            to become available from submission time using <code>GetMetricStatistics</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Statistics">
            <summary>
            Gets and sets the property Statistics. 
            <para>
             The metric statistics to return. For information about specific statistics returned
            by GetMetricStatistics, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Statistic">Statistics</a>
            in the <i>Amazon CloudWatch Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The specific unit for a given metric. Metrics may be reported in multiple units. Not
            supplying a unit results in all units being returned. If the metric only ever reports
            one unit, specifying a unit will have no effect.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricStatisticsResponse">
            <summary>
            The output for <a>GetMetricStatistics</a>.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsResponse.Datapoints">
            <summary>
            Gets and sets the property Datapoints. 
            <para>
            The datapoints for the specified metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsResponse.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            A label describing the specified metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InternalServiceException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServiceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidFormatException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidFormatException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterCombinationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.LimitExceededException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricsRequest">
            <summary>
            Container for the parameters to the ListMetrics operation.
            Returns a list of valid metrics stored for the AWS account owner. Returned metrics
            can be used with <a>GetMetricStatistics</a> to obtain statistical data for a given
            metric. 
            
             <note> 
            <para>
             Up to 500 results are returned for any one call. To retrieve further results, use
            returned <code>NextToken</code> values with subsequent <code>ListMetrics</code> operations.
            </para>
             </note> <note> 
            <para>
             If you create a metric with <a>PutMetricData</a>, allow up to fifteen minutes for
            the metric to appear in calls to <code>ListMetrics</code>. Statistics about the metric,
            however, are available sooner using <a>GetMetricStatistics</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            A list of dimensions to filter against.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric to filter against.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace to filter against.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to indicate that there is more data available.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricsResponse">
            <summary>
            The output for <a>ListMetrics</a>.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsResponse.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
            A list of metrics used to generate statistics for an AWS account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A string that marks the start of the next batch of returned results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Metric">
            <summary>
            The <code>Metric</code> data type contains information about a specific metric. If
            you call <a>ListMetrics</a>, Amazon CloudWatch returns information contained by this
            data type. 
            
             
            <para>
            The example in the Examples section publishes two metrics named buffers and latency.
            Both metrics are in the examples namespace. Both metrics have two dimensions, InstanceID
            and InstanceType.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            A list of dimensions associated with the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricAlarm">
            <summary>
            The <a>MetricAlarm</a> data type represents an alarm. You can use <a>PutMetricAlarm</a>
            to create or update an alarm.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.ActionsEnabled">
            <summary>
            Gets and sets the property ActionsEnabled. 
            <para>
            Indicates whether actions should be executed during any changes to the alarm's state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmActions">
            <summary>
            Gets and sets the property AlarmActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>ALARM</code>
            state from any other state. Each action is specified as an Amazon Resource Name (ARN).
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmArn">
            <summary>
            Gets and sets the property AlarmArn. 
            <para>
            The Amazon Resource Name (ARN) of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmConfigurationUpdatedTimestamp">
            <summary>
            Gets and sets the property AlarmConfigurationUpdatedTimestamp. 
            <para>
            The time stamp of the last update to the alarm configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmDescription">
            <summary>
            Gets and sets the property AlarmDescription. 
            <para>
            The description for the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
             The arithmetic operation to use when comparing the specified <code>Statistic</code>
            and <code>Threshold</code>. The specified <code>Statistic</code> value is used as
            the first operand. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The list of dimensions associated with the alarm's associated metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.EvaluationPeriods">
            <summary>
            Gets and sets the property EvaluationPeriods. 
            <para>
            The number of periods over which data is compared to the specified threshold.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.InsufficientDataActions">
            <summary>
            Gets and sets the property InsufficientDataActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>INSUFFICIENT_DATA</code>
            state from any other state. Each action is specified as an Amazon Resource Name (ARN).
            
            </para>
             <important> 
            <para>
            The current WSDL lists this attribute as <code>UnknownActions</code>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the alarm's metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of alarm's associated metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.OKActions">
            <summary>
            Gets and sets the property OKActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>OK</code>
            state from any other state. Each action is specified as an Amazon Resource Name (ARN).
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The period in seconds over which the statistic is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            A human-readable explanation for the alarm's state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateReasonData">
            <summary>
            Gets and sets the property StateReasonData. 
            <para>
            An explanation for the alarm's state in machine-readable JSON format
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateUpdatedTimestamp">
            <summary>
            Gets and sets the property StateUpdatedTimestamp. 
            <para>
            The time stamp of the last update to the alarm's state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            The state value for the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
            The statistic to apply to the alarm's associated metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Threshold">
            <summary>
            Gets and sets the property Threshold. 
            <para>
            The value against which the specified statistic is compared.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit of the alarm's associated metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricDatum">
            <summary>
            The <code>MetricDatum</code> data type encapsulates the information sent with <a>PutMetricData</a>
            to either create a new metric or add new values to be aggregated into an existing
            metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            A list of dimensions associated with the metric. Note, when using the Dimensions value
            in a query, you need to append .member.N to it (e.g., Dimensions.member.N).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.StatisticValues">
            <summary>
            Gets and sets the property StatisticValues. 
            <para>
            A set of statistical values describing the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time stamp used for the metric in ISO 8601 Universal Coordinated Time (UTC) format.
            If not specified, the default value is set to the time the metric data was received.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value for the metric.
            </para>
             <important> 
            <para>
            Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>,
            Amazon CloudWatch rejects values that are either too small or too large. Values must
            be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base
            2). In addition, special values (e.g., NaN, +Infinity, -Infinity) are not supported.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String)">
            <summary>
            Constructs a new MissingRequiredParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricAlarmRequest">
            <summary>
            Container for the parameters to the PutMetricAlarm operation.
            Creates or updates an alarm and associates it with the specified Amazon CloudWatch
            metric. Optionally, this operation can associate one or more Amazon SNS resources
            with the alarm.
            
             
            <para>
             When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>.
            The alarm is evaluated and its <code>StateValue</code> is set appropriately. Any actions
            associated with the <code>StateValue</code> are then executed. 
            </para>
             <note> 
            <para>
            When updating an existing alarm, its <code>StateValue</code> is left unchanged, but
            it completely overwrites the alarm's previous configuration.
            </para>
             </note> <note> 
            <para>
            If you are using an AWS Identity and Access Management (IAM) account to create or
            modify an alarm, you must have the following Amazon EC2 permissions:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DescribeInstanceStatus</code> and <code>ec2:DescribeInstances</code> for
            all alarms on Amazon EC2 instance status metrics.
            </para>
             </li> <li> 
            <para>
             <code>ec2:StopInstances</code> for alarms with stop actions.
            </para>
             </li> <li> 
            <para>
             <code>ec2:TerminateInstances</code> for alarms with terminate actions.
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeInstanceRecoveryAttribute</code>, and <code>ec2:RecoverInstances</code>
            for alarms with recover actions.
            </para>
             </li> </ul> 
            <para>
            If you have read/write permissions for Amazon CloudWatch but not for Amazon EC2, you
            can still create an alarm but the stop or terminate actions won't be performed on
            the Amazon EC2 instance. However, if you are later granted permission to use the associated
            Amazon EC2 APIs, the alarm actions you created earlier will be performed. For more
            information about IAM permissions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html">Permissions
            and Policies</a> in <i>Using IAM</i>.
            </para>
             
            <para>
            If you are using an IAM role (e.g., an Amazon EC2 instance profile), you cannot stop
            or terminate the instance using alarm actions. However, you can still see the alarm
            state and perform any other actions such as Amazon SNS notifications or Auto Scaling
            policies.
            </para>
             
            <para>
            If you are using temporary security credentials granted using the AWS Security Token
            Service (AWS STS), you cannot stop or terminate an Amazon EC2 instance using alarm
            actions.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.ActionsEnabled">
            <summary>
            Gets and sets the property ActionsEnabled. 
            <para>
            Indicates whether or not actions should be executed during any changes to the alarm's
            state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmActions">
            <summary>
            Gets and sets the property AlarmActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>ALARM</code>
            state from any other state. Each action is specified as an Amazon Resource Name (ARN).
            
            </para>
             
            <para>
            Valid Values: arn:aws:automate:<i>region (e.g., us-east-1)</i>:ec2:stop | arn:aws:automate:<i>region
            (e.g., us-east-1)</i>:ec2:terminate | arn:aws:automate:<i>region (e.g., us-east-1)</i>:ec2:recover
            </para>
             
            <para>
            Valid Values (for use with IAM roles): arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Stop/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Terminate/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Reboot/1.0
            </para>
             
            <para>
             <b>Note:</b> You must create at least one stop, terminate, or reboot alarm using
            the Amazon EC2 or CloudWatch console to create the <b>EC2ActionsAccess</b> IAM role
            for the first time. After this IAM role is created, you can create stop, terminate,
            or reboot alarms using the CLI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmDescription">
            <summary>
            Gets and sets the property AlarmDescription. 
            <para>
            The description for the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The descriptive name for the alarm. This name must be unique within the user's AWS
            account
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
             The arithmetic operation to use when comparing the specified <code>Statistic</code>
            and <code>Threshold</code>. The specified <code>Statistic</code> value is used as
            the first operand. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions for the alarm's associated metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.EvaluationPeriods">
            <summary>
            Gets and sets the property EvaluationPeriods. 
            <para>
            The number of periods over which data is compared to the specified threshold.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.InsufficientDataActions">
            <summary>
            Gets and sets the property InsufficientDataActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>INSUFFICIENT_DATA</code>
            state from any other state. Each action is specified as an Amazon Resource Name (ARN).
            
            </para>
             
            <para>
            Valid Values: arn:aws:automate:<i>region (e.g., us-east-1)</i>:ec2:stop | arn:aws:automate:<i>region
            (e.g., us-east-1)</i>:ec2:terminate | arn:aws:automate:<i>region (e.g., us-east-1)</i>:ec2:recover
            </para>
             
            <para>
            Valid Values (for use with IAM roles): arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Stop/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Terminate/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Reboot/1.0
            </para>
             
            <para>
             <b>Note:</b> You must create at least one stop, terminate, or reboot alarm using
            the Amazon EC2 or CloudWatch console to create the <b>EC2ActionsAccess</b> IAM role
            for the first time. After this IAM role is created, you can create stop, terminate,
            or reboot alarms using the CLI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name for the alarm's associated metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace for the alarm's associated metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.OKActions">
            <summary>
            Gets and sets the property OKActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>OK</code>
            state from any other state. Each action is specified as an Amazon Resource Name (ARN).
            
            </para>
             
            <para>
            Valid Values: arn:aws:automate:<i>region (e.g., us-east-1)</i>:ec2:stop | arn:aws:automate:<i>region
            (e.g., us-east-1)</i>:ec2:terminate | arn:aws:automate:<i>region (e.g., us-east-1)</i>:ec2:recover
            </para>
             
            <para>
            Valid Values (for use with IAM roles): arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Stop/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Terminate/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Reboot/1.0
            </para>
             
            <para>
             <b>Note:</b> You must create at least one stop, terminate, or reboot alarm using
            the Amazon EC2 or CloudWatch console to create the <b>EC2ActionsAccess</b> IAM role
            for the first time. After this IAM role is created, you can create stop, terminate,
            or reboot alarms using the CLI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The period in seconds over which the specified statistic is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
            The statistic to apply to the alarm's associated metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Threshold">
            <summary>
            Gets and sets the property Threshold. 
            <para>
            The value against which the specified statistic is compared.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The statistic's unit of measure. For example, the units for the Amazon EC2 NetworkIn
            metric are Bytes because NetworkIn tracks the number of bytes that an instance receives
            on all network interfaces. You can also specify a unit when you create a custom metric.
            Units help provide conceptual meaning to your data. Metric data points that specify
            a unit of measure, such as Percent, are aggregated separately.
            </para>
             
            <para>
             <b>Note:</b> If you specify a unit, you must use a unit that is appropriate for the
            metric. Otherwise, this can cause an Amazon CloudWatch alarm to get stuck in the INSUFFICIENT
            DATA state. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricAlarmResponse">
            <summary>
            This is the response object from the PutMetricAlarm operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricDataRequest">
            <summary>
            Container for the parameters to the PutMetricData operation.
            Publishes metric data points to Amazon CloudWatch. Amazon CloudWatch associates the
            data points with the specified metric. If the specified metric does not exist, Amazon
            CloudWatch creates the metric. When Amazon CloudWatch creates a metric, it can take
            up to fifteen minutes for the metric to appear in calls to <a>ListMetrics</a>. 
            
             
            <para>
             Each <code>PutMetricData</code> request is limited to 8 KB in size for HTTP GET requests
            and is limited to 40 KB in size for HTTP POST requests. 
            </para>
             <important> 
            <para>
            Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>,
            Amazon CloudWatch rejects values that are either too small or too large. Values must
            be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base
            2). In addition, special values (e.g., NaN, +Infinity, -Infinity) are not supported.
            </para>
             </important> 
            <para>
            Data that is timestamped 24 hours or more in the past may take in excess of 48 hours
            to become available from submission time using <code>GetMetricStatistics</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricDataRequest.MetricData">
            <summary>
            Gets and sets the property MetricData. 
            <para>
            A list of data describing the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricDataRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace for the metric data.
            </para>
             <note> 
            <para>
            You cannot specify a namespace that begins with "AWS/". Namespaces that begin with
            "AWS/" are reserved for other Amazon Web Services products that send metrics to Amazon
            CloudWatch.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricDataResponse">
            <summary>
            This is the response object from the PutMetricData operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.SetAlarmStateRequest">
            <summary>
            Container for the parameters to the SetAlarmState operation.
            Temporarily sets the state of an alarm for testing purposes. When the updated <code>StateValue</code>
            differs from the previous value, the action configured for the appropriate state is
            invoked. For example, if your alarm is configured to send an Amazon SNS message when
            an alarm is triggered, temporarily changing the alarm's state to <b>ALARM</b> sends
            an Amazon SNS message. The alarm returns to its actual state (often within seconds).
            Because the alarm state change happens very quickly, it is typically only visible
            in the alarm's <b>History</b> tab in the Amazon CloudWatch console or through <code>DescribeAlarmHistory</code>.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The descriptive name for the alarm. This name must be unique within the user's AWS
            account. The maximum length is 255 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason that this alarm is set to this specific state (in human-readable text format)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateReasonData">
            <summary>
            Gets and sets the property StateReasonData. 
            <para>
            The reason that this alarm is set to this specific state (in machine-readable JSON
            format)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            The value of the state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.SetAlarmStateResponse">
            <summary>
            This is the response object from the SetAlarmState operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.StatisticSet">
            <summary>
            The <code>StatisticSet</code> data type describes the <code>StatisticValues</code>
            component of <a>MetricDatum</a>, and represents a set of statistics that describes
            a specific metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Maximum">
            <summary>
            Gets and sets the property Maximum. 
            <para>
            The maximum value of the sample set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Minimum">
            <summary>
            Gets and sets the property Minimum. 
            <para>
            The minimum value of the sample set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.SampleCount">
            <summary>
            Gets and sets the property SampleCount. 
            <para>
            The number of samples used for the statistic set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Sum">
            <summary>
            Gets and sets the property Sum. 
            <para>
            The sum of values for the sample set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller">
            <summary>
            Response Unmarshaller for AlarmHistoryItem Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller">
            <summary>
            Response Unmarshaller for Datapoint Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller">
            <summary>
            DeleteAlarms Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DeleteAlarmsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAlarms operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller">
            <summary>
            DescribeAlarmHistory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarmHistory operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller">
            <summary>
            DescribeAlarmsForMetric Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarmsForMetric operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller">
            <summary>
            DescribeAlarms Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DescribeAlarmsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarms operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller">
            <summary>
            Response Unmarshaller for Dimension Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller">
            <summary>
            DisableAlarmActions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DisableAlarmActionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableAlarmActions operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller">
            <summary>
            EnableAlarmActions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.EnableAlarmActionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableAlarmActions operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller">
            <summary>
            GetMetricStatistics Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.GetMetricStatisticsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMetricStatistics operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller">
            <summary>
            ListMetrics Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.ListMetricsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListMetrics operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller">
            <summary>
            Response Unmarshaller for MetricAlarm Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller">
            <summary>
            Response Unmarshaller for Metric Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller">
            <summary>
            PutMetricAlarm Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller.Marshall(Amazon.CloudWatch.Model.PutMetricAlarmRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricAlarm operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller">
            <summary>
            PutMetricData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller.Marshall(Amazon.CloudWatch.Model.PutMetricDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricData operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller">
            <summary>
            SetAlarmState Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller.Marshall(Amazon.CloudWatch.Model.SetAlarmStateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetAlarmState operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchRequest">
            <summary>
            Base class for CloudWatch operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchClient">
             <summary>
             Implementation for accessing CloudWatch
            
             Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications
             you run on AWS in real-time. You can use CloudWatch to collect and track metrics,
             which are the variables you want to measure for your resources and applications.
             
              
             <para>
             CloudWatch alarms send notifications or automatically make changes to the resources
             you are monitoring based on rules that you define. For example, you can monitor the
             CPU usage and disk reads and writes of your Amazon Elastic Compute Cloud (Amazon EC2)
             instances and then use this data to determine whether you should launch additional
             instances to handle increased load. You can also use this data to stop under-used
             instances to save money.
             </para>
              
             <para>
             In addition to monitoring the built-in metrics that come with AWS, you can monitor
             your own custom metrics. With CloudWatch, you gain system-wide visibility into resource
             utilization, application performance, and operational health.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor">
             <summary>
             Constructs AmazonCloudWatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonCloudWatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.CloudWatch.AmazonCloudWatchConfig)">
             <summary>
             Constructs AmazonCloudWatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials and an
            AmazonCloudWatchClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DeleteAlarmsAsync(Amazon.CloudWatch.Model.DeleteAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAlarms operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmHistoryAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves history for the specified alarm. Filter alarms by date range or item type.
            If an alarm name is not specified, Amazon CloudWatch returns histories for all of
            the owner's alarms.
            
             <note> 
            <para>
            Amazon CloudWatch retains the history of an alarm for two weeks, whether or not you
            delete the alarm.
            </para>
             </note>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarmHistory service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmHistoryAsync(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmHistory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves alarms with the specified names. If no name is specified, all alarms for
            the user are returned. Alarms can be retrieved by using only a prefix for the alarm
            name, the alarm state, or a prefix for any action.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarms service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmsAsync(Amazon.CloudWatch.Model.DescribeAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarms operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmsForMetricAsync(Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmsForMetric operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmsForMetric operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DisableAlarmActionsAsync(Amazon.CloudWatch.Model.DisableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableAlarmActions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.EnableAlarmActionsAsync(Amazon.CloudWatch.Model.EnableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableAlarmActions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.GetMetricStatisticsAsync(Amazon.CloudWatch.Model.GetMetricStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetMetricStatistics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetMetricStatistics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.ListMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of valid metrics stored for the AWS account owner. Returned metrics
            can be used with <a>GetMetricStatistics</a> to obtain statistical data for a given
            metric. 
            
             <note> 
            <para>
             Up to 500 results are returned for any one call. To retrieve further results, use
            returned <code>NextToken</code> values with subsequent <code>ListMetrics</code> operations.
            </para>
             </note> <note> 
            <para>
             If you create a metric with <a>PutMetricData</a>, allow up to fifteen minutes for
            the metric to appear in calls to <code>ListMetrics</code>. Statistics about the metric,
            however, are available sooner using <a>GetMetricStatistics</a>.
            </para>
             </note>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMetrics service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Indicates that the request processing has failed due to some unknown error, exception,
            or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            Bad or out-of-range value was supplied for the input parameter.
            </exception>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.ListMetricsAsync(Amazon.CloudWatch.Model.ListMetricsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMetrics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMetrics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutMetricAlarmAsync(Amazon.CloudWatch.Model.PutMetricAlarmRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricAlarm operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricAlarm operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutMetricDataAsync(Amazon.CloudWatch.Model.PutMetricDataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricData operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricData operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.SetAlarmStateAsync(Amazon.CloudWatch.Model.SetAlarmStateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetAlarmState operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetAlarmState operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.CloudWatch.IAmazonCloudWatch">
             <summary>
             Interface for accessing CloudWatch
            
             Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications
             you run on AWS in real-time. You can use CloudWatch to collect and track metrics,
             which are the variables you want to measure for your resources and applications.
             
              
             <para>
             CloudWatch alarms send notifications or automatically make changes to the resources
             you are monitoring based on rules that you define. For example, you can monitor the
             CPU usage and disk reads and writes of your Amazon Elastic Compute Cloud (Amazon EC2)
             instances and then use this data to determine whether you should launch additional
             instances to handle increased load. You can also use this data to stop under-used
             instances to save money.
             </para>
              
             <para>
             In addition to monitoring the built-in metrics that come with AWS, you can monitor
             your own custom metrics. With CloudWatch, you gain system-wide visibility into resource
             utilization, application performance, and operational health.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DeleteAlarmsAsync(Amazon.CloudWatch.Model.DeleteAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAlarms operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmHistoryAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves history for the specified alarm. Filter alarms by date range or item type.
            If an alarm name is not specified, Amazon CloudWatch returns histories for all of
            the owner's alarms.
            
             <note> 
            <para>
            Amazon CloudWatch retains the history of an alarm for two weeks, whether or not you
            delete the alarm.
            </para>
             </note>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarmHistory service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmHistoryAsync(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmHistory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves alarms with the specified names. If no name is specified, all alarms for
            the user are returned. Alarms can be retrieved by using only a prefix for the alarm
            name, the alarm state, or a prefix for any action.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarms service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmsAsync(Amazon.CloudWatch.Model.DescribeAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarms operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmsForMetricAsync(Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmsForMetric operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmsForMetric operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DisableAlarmActionsAsync(Amazon.CloudWatch.Model.DisableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableAlarmActions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.EnableAlarmActionsAsync(Amazon.CloudWatch.Model.EnableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableAlarmActions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.GetMetricStatisticsAsync(Amazon.CloudWatch.Model.GetMetricStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetMetricStatistics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetMetricStatistics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.ListMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of valid metrics stored for the AWS account owner. Returned metrics
            can be used with <a>GetMetricStatistics</a> to obtain statistical data for a given
            metric. 
            
             <note> 
            <para>
             Up to 500 results are returned for any one call. To retrieve further results, use
            returned <code>NextToken</code> values with subsequent <code>ListMetrics</code> operations.
            </para>
             </note> <note> 
            <para>
             If you create a metric with <a>PutMetricData</a>, allow up to fifteen minutes for
            the metric to appear in calls to <code>ListMetrics</code>. Statistics about the metric,
            however, are available sooner using <a>GetMetricStatistics</a>.
            </para>
             </note>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMetrics service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Indicates that the request processing has failed due to some unknown error, exception,
            or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            Bad or out-of-range value was supplied for the input parameter.
            </exception>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.ListMetricsAsync(Amazon.CloudWatch.Model.ListMetricsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMetrics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMetrics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutMetricAlarmAsync(Amazon.CloudWatch.Model.PutMetricAlarmRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricAlarm operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricAlarm operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutMetricDataAsync(Amazon.CloudWatch.Model.PutMetricDataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricData operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricData operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.SetAlarmStateAsync(Amazon.CloudWatch.Model.SetAlarmStateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetAlarmState operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetAlarmState operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
    </members>
</doc>
