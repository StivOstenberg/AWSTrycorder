<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CloudWatch</name>
    </assembly>
    <members>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchConfig">
            <summary>
            Configuration for accessing Amazon CloudWatch service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchException">
            <summary>
             Common exception for the CloudWatch service.
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.ComparisonOperator">
            <summary>
            Constants used for properties of type ComparisonOperator.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.GreaterThanOrEqualToThreshold">
            <summary>
            Constant GreaterThanOrEqualToThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.GreaterThanThreshold">
            <summary>
            Constant GreaterThanThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.LessThanOrEqualToThreshold">
            <summary>
            Constant LessThanOrEqualToThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.LessThanThreshold">
            <summary>
            Constant LessThanThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.ComparisonOperator.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.ComparisonOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.ComparisonOperator.op_Implicit(System.String)~Amazon.CloudWatch.ComparisonOperator">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.HistoryItemType">
            <summary>
            Constants used for properties of type HistoryItemType.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.Action">
            <summary>
            Constant Action for HistoryItemType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.ConfigurationUpdate">
            <summary>
            Constant ConfigurationUpdate for HistoryItemType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.StateUpdate">
            <summary>
            Constant StateUpdate for HistoryItemType
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.HistoryItemType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.HistoryItemType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.HistoryItemType.op_Implicit(System.String)~Amazon.CloudWatch.HistoryItemType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.StandardUnit">
            <summary>
            Constants used for properties of type StandardUnit.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Bits">
            <summary>
            Constant Bits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.BitsSecond">
            <summary>
            Constant BitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Bytes">
            <summary>
            Constant Bytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.BytesSecond">
            <summary>
            Constant BytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Count">
            <summary>
            Constant Count for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.CountSecond">
            <summary>
            Constant CountSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Gigabits">
            <summary>
            Constant Gigabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.GigabitsSecond">
            <summary>
            Constant GigabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Gigabytes">
            <summary>
            Constant Gigabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.GigabytesSecond">
            <summary>
            Constant GigabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Kilobits">
            <summary>
            Constant Kilobits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.KilobitsSecond">
            <summary>
            Constant KilobitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Kilobytes">
            <summary>
            Constant Kilobytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.KilobytesSecond">
            <summary>
            Constant KilobytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Megabits">
            <summary>
            Constant Megabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.MegabitsSecond">
            <summary>
            Constant MegabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Megabytes">
            <summary>
            Constant Megabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.MegabytesSecond">
            <summary>
            Constant MegabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Microseconds">
            <summary>
            Constant Microseconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Milliseconds">
            <summary>
            Constant Milliseconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.None">
            <summary>
            Constant None for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Percent">
            <summary>
            Constant Percent for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Seconds">
            <summary>
            Constant Seconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Terabits">
            <summary>
            Constant Terabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.TerabitsSecond">
            <summary>
            Constant TerabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Terabytes">
            <summary>
            Constant Terabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.TerabytesSecond">
            <summary>
            Constant TerabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StandardUnit.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StandardUnit.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.StandardUnit.op_Implicit(System.String)~Amazon.CloudWatch.StandardUnit">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.StateValue">
            <summary>
            Constants used for properties of type StateValue.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.ALARM">
            <summary>
            Constant ALARM for StateValue
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.INSUFFICIENT_DATA">
            <summary>
            Constant INSUFFICIENT_DATA for StateValue
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.OK">
            <summary>
            Constant OK for StateValue
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StateValue.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StateValue.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.StateValue.op_Implicit(System.String)~Amazon.CloudWatch.StateValue">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Statistic">
            <summary>
            Constants used for properties of type Statistic.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Average">
            <summary>
            Constant Average for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Maximum">
            <summary>
            Constant Maximum for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Minimum">
            <summary>
            Constant Minimum for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.SampleCount">
            <summary>
            Constant SampleCount for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Sum">
            <summary>
            Constant Sum for Statistic
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Statistic.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Statistic.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatch.Statistic.op_Implicit(System.String)~Amazon.CloudWatch.Statistic">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.AlarmHistoryItem">
            <summary>
            Represents the history of a specific alarm.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The descriptive name for the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistoryData">
            <summary>
            Gets and sets the property HistoryData. 
            <para>
            Data about the alarm, in JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistoryItemType">
            <summary>
            Gets and sets the property HistoryItemType. 
            <para>
            The type of alarm history item.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistorySummary">
            <summary>
            Gets and sets the property HistorySummary. 
            <para>
            A summary of the alarm history, in text format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time stamp for the alarm history item.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Datapoint">
            <summary>
            Encapsulates the statistical data that Amazon CloudWatch computes from metric data.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Average">
            <summary>
            Gets and sets the property Average. 
            <para>
            The average of the metric values that correspond to the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.ExtendedStatistics">
            <summary>
            Gets and sets the property ExtendedStatistics. 
            <para>
            The percentile statistic for the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Maximum">
            <summary>
            Gets and sets the property Maximum. 
            <para>
            The maximum metric value for the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Minimum">
            <summary>
            Gets and sets the property Minimum. 
            <para>
            The minimum metric value for the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.SampleCount">
            <summary>
            Gets and sets the property SampleCount. 
            <para>
            The number of metric values that contributed to the aggregate value of this data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Sum">
            <summary>
            Gets and sets the property Sum. 
            <para>
            The sum of the metric values for the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time stamp used for the data point.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The standard unit for the data point.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteAlarmsRequest">
            <summary>
            Container for the parameters to the DeleteAlarms operation.
            Deletes the specified alarms. In the event of an error, no alarms are deleted.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteAlarmsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            The alarms to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteAlarmsResponse">
            <summary>
            This is the response object from the DeleteAlarms operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest">
            <summary>
            Container for the parameters to the DescribeAlarmHistory operation.
            Retrieves the history for the specified alarm. You can filter the results by date
            range or item type. If an alarm name is not specified, the histories for all alarms
            are returned.
            
             
            <para>
            Note that Amazon CloudWatch retains the history of an alarm even if you delete the
            alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.EndDate">
            <summary>
            Gets and sets the property EndDate. 
            <para>
            The ending date to retrieve alarm history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.HistoryItemType">
            <summary>
            Gets and sets the property HistoryItemType. 
            <para>
            The type of alarm histories to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of alarm history records to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to indicate that there is more data available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.StartDate">
            <summary>
            Gets and sets the property StartDate. 
            <para>
            The starting date to retrieve alarm history.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse">
            <summary>
            This is the response object from the DescribeAlarmHistory operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse.AlarmHistoryItems">
            <summary>
            Gets and sets the property AlarmHistoryItems. 
            <para>
            The alarm histories, in JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that marks the start of the next batch of returned results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest">
            <summary>
            Container for the parameters to the DescribeAlarmsForMetric operation.
            Retrieves the alarms for the specified metric. Specify a statistic, period, or unit
            to filter the results.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions associated with the metric. If the metric has any associated dimensions,
            you must specify them in order for the call to succeed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.ExtendedStatistic">
            <summary>
            Gets and sets the property ExtendedStatistic. 
            <para>
            The percentile statistic for the metric. Specify a value between p0.0 and p100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The period, in seconds, over which the statistic is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
            The statistic for the metric, other than percentiles. For percentile statistics, use
            <code>ExtendedStatistics</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit for the metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsForMetricResponse">
            <summary>
            This is the response object from the DescribeAlarmsForMetric operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricResponse.MetricAlarms">
            <summary>
            Gets and sets the property MetricAlarms. 
            <para>
            The information for each alarm with the specified metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsRequest">
            <summary>
            Container for the parameters to the DescribeAlarms operation.
            Retrieves the specified alarms. If no alarms are specified, all alarms are returned.
            Alarms can be retrieved by using only a prefix for the alarm name, the alarm state,
            or a prefix for any action.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.ActionPrefix">
            <summary>
            Gets and sets the property ActionPrefix. 
            <para>
            The action name prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.AlarmNamePrefix">
            <summary>
            Gets and sets the property AlarmNamePrefix. 
            <para>
            The alarm name prefix. You cannot specify <code>AlarmNames</code> if this parameter
            is specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            The names of the alarms.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of alarm descriptions to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to indicate that there is more data available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            The state value to be used in matching alarms.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsResponse">
            <summary>
            This is the response object from the DescribeAlarms operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsResponse.MetricAlarms">
            <summary>
            Gets and sets the property MetricAlarms. 
            <para>
            The information for the specified alarms.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that marks the start of the next batch of returned results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Dimension">
            <summary>
            Expands the identity of a metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Dimension.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the dimension.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Dimension.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value representing the dimension measurement.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DimensionFilter">
            <summary>
            Represents filters for a dimension.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DimensionFilter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The dimension name to be matched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DimensionFilter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the dimension to be matched.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DisableAlarmActionsRequest">
            <summary>
            Container for the parameters to the DisableAlarmActions operation.
            Disables the actions for the specified alarms. When an alarm's actions are disabled,
            the alarm actions do not execute when the alarm state changes.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DisableAlarmActionsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            The names of the alarms.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DisableAlarmActionsResponse">
            <summary>
            This is the response object from the DisableAlarmActions operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.EnableAlarmActionsRequest">
            <summary>
            Container for the parameters to the EnableAlarmActions operation.
            Enables the actions for the specified alarms.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.EnableAlarmActionsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
            The names of the alarms.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.EnableAlarmActionsResponse">
            <summary>
            This is the response object from the EnableAlarmActions operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricStatisticsRequest">
            <summary>
            Container for the parameters to the GetMetricStatistics operation.
            Gets statistics for the specified metric.
            
             
            <para>
            Amazon CloudWatch retains metric data as follows:
            </para>
             <ul> <li> 
            <para>
            Data points with a period of 60 seconds (1 minute) are available for 15 days
            </para>
             </li> <li> 
            <para>
            Data points with a period of 300 seconds (5 minute) are available for 63 days
            </para>
             </li> <li> 
            <para>
            Data points with a period of 3600 seconds (1 hour) are available for 455 days (15
            months)
            </para>
             </li> </ul> 
            <para>
            Note that CloudWatch started retaining 5-minute and 1-hour metric data as of 9 July
            2016.
            </para>
             
            <para>
            The maximum number of data points returned from a single call is 1,440. If you request
            more than 1,440 data points, Amazon CloudWatch returns an error. To reduce the number
            of data points, you can narrow the specified time range and make multiple requests
            across adjacent time ranges, or you can increase the specified period. A period can
            be as short as one minute (60 seconds). Note that data points are not returned in
            chronological order.
            </para>
             
            <para>
            Amazon CloudWatch aggregates data points based on the length of the period that you
            specify. For example, if you request statistics with a one-hour period, Amazon CloudWatch
            aggregates all data points with time stamps that fall within each one-hour period.
            Therefore, the number of values aggregated by CloudWatch is larger than the number
            of data points returned.
            </para>
             
            <para>
            CloudWatch needs raw data points to calculate percentile statistics. If you publish
            data using a statistic set instead, you cannot retrieve percentile statistics for
            this data unless one of the following conditions is true:
            </para>
             <ul> <li> 
            <para>
            The SampleCount of the statistic set is 1
            </para>
             </li> <li> 
            <para>
            The Min and the Max of the statistic set are equal
            </para>
             </li> </ul> 
            <para>
            For a list of metrics and dimensions supported by AWS services, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CW_Support_For_AWS.html">Amazon
            CloudWatch Metrics and Dimensions Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions. If the metric contains multiple dimensions, you must include a value
            for each dimension. CloudWatch treats each unique combination of dimensions as a separate
            metric. You can't retrieve statistics using combinations of dimensions that were not
            specially published. You must specify the same dimensions that were used when the
            metrics were created. For an example, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#dimension-combinations">Dimension
            Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more information
            on specifying dimensions, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing
            Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The time stamp that determines the last data point to return.
            </para>
             
            <para>
            The value specified is exclusive; results will include data points up to the specified
            time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.ExtendedStatistics">
            <summary>
            Gets and sets the property ExtendedStatistics. 
            <para>
            The percentile statistics. Specify values between p0.0 and p100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric, with or without spaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric, with or without spaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The granularity, in seconds, of the returned data points. A period can be as short
            as one minute (60 seconds) and must be a multiple of 60. The default value is 60.
            </para>
             
            <para>
            If the <code>StartTime</code> parameter specifies a time stamp that is greater than
            15 days ago, you must specify the period as follows or no data points in that time
            range is returned:
            </para>
             <ul> <li> 
            <para>
            Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).
            </para>
             </li> <li> 
            <para>
            Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time stamp that determines the first data point to return. Note that start times
            are evaluated relative to the time that CloudWatch receives the request.
            </para>
             
            <para>
            The value specified is inclusive; results include data points with the specified time
            stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).
            </para>
             
            <para>
            CloudWatch rounds the specified time stamp as follows:
            </para>
             <ul> <li> 
            <para>
            Start time less than 15 days ago - Round down to the nearest whole minute. For example,
            12:32:34 is rounded down to 12:32:00.
            </para>
             </li> <li> 
            <para>
            Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval.
            For example, 12:32:34 is rounded down to 12:30:00.
            </para>
             </li> <li> 
            <para>
            Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval.
            For example, 12:32:34 is rounded down to 12:00:00.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Statistics">
            <summary>
            Gets and sets the property Statistics. 
            <para>
            The metric statistics, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit for a given metric. Metrics may be reported in multiple units. Not supplying
            a unit results in all units being returned. If the metric only ever reports one unit,
            specifying a unit has no effect.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricStatisticsResponse">
            <summary>
            This is the response object from the GetMetricStatistics operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsResponse.Datapoints">
            <summary>
            Gets and sets the property Datapoints. 
            <para>
            The data points for the specified metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsResponse.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            A label for the specified metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InternalServiceException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServiceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidFormatException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidFormatException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFormatException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterCombinationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.LimitExceededException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricsRequest">
            <summary>
            Container for the parameters to the ListMetrics operation.
            List the specified metrics. You can use the returned metrics with <a>GetMetricStatistics</a>
            to obtain statistical data.
            
             
            <para>
            Up to 500 results are returned for any one call. To retrieve additional results, use
            the returned token with subsequent calls.
            </para>
             
            <para>
            After you create a metric, allow up to fifteen minutes before the metric appears.
            Statistics about the metric, however, are available sooner using <a>GetMetricStatistics</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions to filter against.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric to filter against.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace to filter against.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token returned by a previous call to indicate that there is more data available.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricsResponse">
            <summary>
            This is the response object from the ListMetrics operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsResponse.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
            The metrics.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token that marks the start of the next batch of returned results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Metric">
            <summary>
            Represents a specific metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions for the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricAlarm">
            <summary>
            Represents an alarm.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.ActionsEnabled">
            <summary>
            Gets and sets the property ActionsEnabled. 
            <para>
            Indicates whether actions should be executed during any changes to the alarm state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmActions">
            <summary>
            Gets and sets the property AlarmActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>ALARM</code> state
            from any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmArn">
            <summary>
            Gets and sets the property AlarmArn. 
            <para>
            The Amazon Resource Name (ARN) of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmConfigurationUpdatedTimestamp">
            <summary>
            Gets and sets the property AlarmConfigurationUpdatedTimestamp. 
            <para>
            The time stamp of the last update to the alarm configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmDescription">
            <summary>
            Gets and sets the property AlarmDescription. 
            <para>
            The description of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
            The arithmetic operation to use when comparing the specified statistic and threshold.
            The specified statistic value is used as the first operand.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions for the metric associated with the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.EvaluateLowSampleCountPercentile">
            <summary>
            Gets and sets the property EvaluateLowSampleCountPercentile.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.EvaluationPeriods">
            <summary>
            Gets and sets the property EvaluationPeriods. 
            <para>
            The number of periods over which data is compared to the specified threshold.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.ExtendedStatistic">
            <summary>
            Gets and sets the property ExtendedStatistic. 
            <para>
            The percentile statistic for the metric associated with the alarm. Specify a value
            between p0.0 and p100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.InsufficientDataActions">
            <summary>
            Gets and sets the property InsufficientDataActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code>
            state from any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric associated with the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace of the metric associated with the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.OKActions">
            <summary>
            Gets and sets the property OKActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>OK</code> state from
            any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The period, in seconds, over which the statistic is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            An explanation for the alarm state, in text format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateReasonData">
            <summary>
            Gets and sets the property StateReasonData. 
            <para>
            An explanation for the alarm state, in JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateUpdatedTimestamp">
            <summary>
            Gets and sets the property StateUpdatedTimestamp. 
            <para>
            The time stamp of the last update to the alarm state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            The state value for the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
            The statistic for the metric associated with the alarm, other than percentile. For
            percentile statistics, use <code>ExtendedStatistic</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Threshold">
            <summary>
            Gets and sets the property Threshold. 
            <para>
            The value to compare with the specified statistic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.TreatMissingData">
            <summary>
            Gets and sets the property TreatMissingData.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit of the metric associated with the alarm.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricDatum">
            <summary>
            Encapsulates the information sent to either create a metric or add new values to be
            aggregated into an existing metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions associated with the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.StatisticValues">
            <summary>
            Gets and sets the property StatisticValues. 
            <para>
            The statistical values for the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time the metric data was received, expressed as the number of milliseconds since
            Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit of the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value for the metric.
            </para>
             
            <para>
            Although the parameter accepts numbers of type Double, Amazon CloudWatch rejects values
            that are either too small or too large. Values must be in the range of 8.515920e-109
            to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values
            (for example, NaN, +Infinity, -Infinity) are not supported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String)">
            <summary>
            Constructs a new MissingRequiredParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingRequiredParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricAlarmRequest">
            <summary>
            Container for the parameters to the PutMetricAlarm operation.
            Creates or updates an alarm and associates it with the specified metric. Optionally,
            this operation can associate one or more Amazon SNS resources with the alarm.
            
             
            <para>
            When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>.
            The alarm is evaluated and its state is set appropriately. Any actions associated
            with the state are then executed.
            </para>
             
            <para>
            When you update an existing alarm, its state is left unchanged, but the update completely
            overwrites the previous configuration of the alarm.
            </para>
             
            <para>
            If you are an AWS Identity and Access Management (IAM) user, you must have Amazon
            EC2 permissions for some operations:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DescribeInstanceStatus</code> and <code>ec2:DescribeInstances</code> for
            all alarms on EC2 instance status metrics
            </para>
             </li> <li> 
            <para>
             <code>ec2:StopInstances</code> for alarms with stop actions
            </para>
             </li> <li> 
            <para>
             <code>ec2:TerminateInstances</code> for alarms with terminate actions
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeInstanceRecoveryAttribute</code> and <code>ec2:RecoverInstances</code>
            for alarms with recover actions
            </para>
             </li> </ul> 
            <para>
            If you have read/write permissions for Amazon CloudWatch but not for Amazon EC2, you
            can still create an alarm, but the stop or terminate actions won't be performed. However,
            if you are later granted the required permissions, the alarm actions that you created
            earlier will be performed.
            </para>
             
            <para>
            If you are using an IAM role (for example, an Amazon EC2 instance profile), you cannot
            stop or terminate the instance using alarm actions. However, you can still see the
            alarm state and perform any other actions such as Amazon SNS notifications or Auto
            Scaling policies.
            </para>
             
            <para>
            If you are using temporary security credentials granted using the AWS Security Token
            Service (AWS STS), you cannot stop or terminate an Amazon EC2 instance using alarm
            actions.
            </para>
             
            <para>
            Note that you must create at least one stop, terminate, or reboot alarm using the
            Amazon EC2 or CloudWatch console to create the <b>EC2ActionsAccess</b> IAM role. After
            this IAM role is created, you can create stop, terminate, or reboot alarms using a
            command-line interface or an API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.ActionsEnabled">
            <summary>
            Gets and sets the property ActionsEnabled. 
            <para>
            Indicates whether actions should be executed during any changes to the alarm state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmActions">
            <summary>
            Gets and sets the property AlarmActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>ALARM</code> state
            from any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
             
            <para>
            Valid Values: arn:aws:automate:<i>region</i>:ec2:stop | arn:aws:automate:<i>region</i>:ec2:terminate
            | arn:aws:automate:<i>region</i>:ec2:recover
            </para>
             
            <para>
            Valid Values (for use with IAM roles): arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Stop/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Terminate/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Reboot/1.0
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmDescription">
            <summary>
            Gets and sets the property AlarmDescription. 
            <para>
            The description for the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name for the alarm. This name must be unique within the AWS account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
             The arithmetic operation to use when comparing the specified statistic and threshold.
            The specified statistic value is used as the first operand.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
            The dimensions for the metric associated with the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.EvaluateLowSampleCountPercentile">
            <summary>
            Gets and sets the property EvaluateLowSampleCountPercentile. 
            <para>
             Used only for alarms based on percentiles. If you specify <code>ignore</code>, the
            alarm state will not change during periods with too few data points to be statistically
            significant. If you specify <code>evaluate</code> or omit this parameter, the alarm
            will always be evaluated and possibly change state no matter how many data points
            are available. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples">Percentile-Based
            CloudWatch Alarms and Low Data Samples</a>.
            </para>
             
            <para>
            Valid Values: <code>evaluate | ignore</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.EvaluationPeriods">
            <summary>
            Gets and sets the property EvaluationPeriods. 
            <para>
            The number of periods over which data is compared to the specified threshold.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.ExtendedStatistic">
            <summary>
            Gets and sets the property ExtendedStatistic. 
            <para>
            The percentile statistic for the metric associated with the alarm. Specify a value
            between p0.0 and p100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.InsufficientDataActions">
            <summary>
            Gets and sets the property InsufficientDataActions. 
            <para>
            The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code>
            state from any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
             
            <para>
            Valid Values: arn:aws:automate:<i>region</i>:ec2:stop | arn:aws:automate:<i>region</i>:ec2:terminate
            | arn:aws:automate:<i>region</i>:ec2:recover
            </para>
             
            <para>
            Valid Values (for use with IAM roles): arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Stop/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Terminate/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Reboot/1.0
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name for the metric associated with the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace for the metric associated with the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.OKActions">
            <summary>
            Gets and sets the property OKActions. 
            <para>
            The actions to execute when this alarm transitions to an <code>OK</code> state from
            any other state. Each action is specified as an Amazon Resource Name (ARN).
            </para>
             
            <para>
            Valid Values: arn:aws:automate:<i>region</i>:ec2:stop | arn:aws:automate:<i>region</i>:ec2:terminate
            | arn:aws:automate:<i>region</i>:ec2:recover
            </para>
             
            <para>
            Valid Values (for use with IAM roles): arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Stop/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Terminate/1.0
            | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Reboot/1.0
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
            The period, in seconds, over which the specified statistic is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
            The statistic for the metric associated with the alarm, other than percentile. For
            percentile statistics, use <code>ExtendedStatistic</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Threshold">
            <summary>
            Gets and sets the property Threshold. 
            <para>
            The value against which the specified statistic is compared.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.TreatMissingData">
            <summary>
            Gets and sets the property TreatMissingData. 
            <para>
             Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code>
            is omitted, the default behavior of <code>missing</code> is used. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data">Configuring
            How CloudWatch Alarms Treats Missing Data</a>.
            </para>
             
            <para>
            Valid Values: <code>breaching | notBreaching | ignore | missing</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
            The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn
            metric are Bytes because NetworkIn tracks the number of bytes that an instance receives
            on all network interfaces. You can also specify a unit when you create a custom metric.
            Units help provide conceptual meaning to your data. Metric data points that specify
            a unit of measure, such as Percent, are aggregated separately.
            </para>
             
            <para>
            If you specify a unit, you must use a unit that is appropriate for the metric. Otherwise,
            the Amazon CloudWatch alarm can get stuck in the <code>INSUFFICIENT DATA</code> state.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricAlarmResponse">
            <summary>
            This is the response object from the PutMetricAlarm operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricDataRequest">
            <summary>
            Container for the parameters to the PutMetricData operation.
            Publishes metric data points to Amazon CloudWatch. Amazon CloudWatch associates the
            data points with the specified metric. If the specified metric does not exist, Amazon
            CloudWatch creates the metric. When Amazon CloudWatch creates a metric, it can take
            up to fifteen minutes for the metric to appear in calls to <a>ListMetrics</a>.
            
             
            <para>
            Each <code>PutMetricData</code> request is limited to 40 KB in size for HTTP POST
            requests.
            </para>
             
            <para>
            Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>,
            Amazon CloudWatch rejects values that are either too small or too large. Values must
            be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base
            2). In addition, special values (e.g., NaN, +Infinity, -Infinity) are not supported.
            </para>
             
            <para>
            You can use up to 10 dimensions per metric to further clarify what data the metric
            collects. For more information on specifying dimensions, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing
            Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.
            </para>
             
            <para>
            Data points with time stamps from 24 hours ago or longer can take at least 48 hours
            to become available for <a>GetMetricStatistics</a> from the time they are submitted.
            </para>
             
            <para>
            CloudWatch needs raw data points to calculate percentile statistics. If you publish
            data using a statistic set instead, you cannot retrieve percentile statistics for
            this data unless one of the following conditions is true:
            </para>
             <ul> <li> 
            <para>
            The SampleCount of the statistic set is 1
            </para>
             </li> <li> 
            <para>
            The Min and the Max of the statistic set are equal
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricDataRequest.MetricData">
            <summary>
            Gets and sets the property MetricData. 
            <para>
            The data for the metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricDataRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
            The namespace for the metric data.
            </para>
             
            <para>
            You cannot specify a namespace that begins with "AWS/". Namespaces that begin with
            "AWS/" are reserved for use by Amazon Web Services products.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricDataResponse">
            <summary>
            This is the response object from the PutMetricData operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.SetAlarmStateRequest">
            <summary>
            Container for the parameters to the SetAlarmState operation.
            Temporarily sets the state of an alarm for testing purposes. When the updated state
            differs from the previous value, the action configured for the appropriate state is
            invoked. For example, if your alarm is configured to send an Amazon SNS message when
            an alarm is triggered, temporarily changing the alarm state to <code>ALARM</code>
            sends an Amazon SNS message. The alarm returns to its actual state (often within seconds).
            Because the alarm state change happens very quickly, it is typically only visible
            in the alarm's <b>History</b> tab in the Amazon CloudWatch console or through <a>DescribeAlarmHistory</a>.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name for the alarm. This name must be unique within the AWS account. The maximum
            length is 255 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason that this alarm is set to this specific state, in text format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateReasonData">
            <summary>
            Gets and sets the property StateReasonData. 
            <para>
            The reason that this alarm is set to this specific state, in JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            The value of the state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.SetAlarmStateResponse">
            <summary>
            This is the response object from the SetAlarmState operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.StatisticSet">
            <summary>
            Represents a set of statistics that describes a specific metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Maximum">
            <summary>
            Gets and sets the property Maximum. 
            <para>
            The maximum value of the sample set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Minimum">
            <summary>
            Gets and sets the property Minimum. 
            <para>
            The minimum value of the sample set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.SampleCount">
            <summary>
            Gets and sets the property SampleCount. 
            <para>
            The number of samples used for the statistic set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Sum">
            <summary>
            Gets and sets the property Sum. 
            <para>
            The sum of values for the sample set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller">
            <summary>
            Response Unmarshaller for AlarmHistoryItem Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller">
            <summary>
            Response Unmarshaller for Datapoint Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller">
            <summary>
            DeleteAlarms Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DeleteAlarmsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAlarms operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller">
            <summary>
            DescribeAlarmHistory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarmHistory operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller">
            <summary>
            DescribeAlarmsForMetric Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarmsForMetric operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller">
            <summary>
            DescribeAlarms Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DescribeAlarmsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarms operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller">
            <summary>
            Response Unmarshaller for Dimension Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller">
            <summary>
            DisableAlarmActions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.DisableAlarmActionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableAlarmActions operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller">
            <summary>
            EnableAlarmActions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.EnableAlarmActionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableAlarmActions operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller">
            <summary>
            GetMetricStatistics Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.GetMetricStatisticsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMetricStatistics operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller">
            <summary>
            ListMetrics Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller.Marshall(Amazon.CloudWatch.Model.ListMetricsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListMetrics operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller">
            <summary>
            Response Unmarshaller for MetricAlarm Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller">
            <summary>
            Response Unmarshaller for Metric Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller">
            <summary>
            PutMetricAlarm Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller.Marshall(Amazon.CloudWatch.Model.PutMetricAlarmRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricAlarm operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller">
            <summary>
            PutMetricData Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller.Marshall(Amazon.CloudWatch.Model.PutMetricDataRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricData operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller">
            <summary>
            SetAlarmState Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller.Marshall(Amazon.CloudWatch.Model.SetAlarmStateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetAlarmState operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchRequest">
            <summary>
            Base class for CloudWatch operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchClient">
             <summary>
             Implementation for accessing CloudWatch
            
             Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications
             you run on AWS in real-time. You can use CloudWatch to collect and track metrics,
             which are the variables you want to measure for your resources and applications.
             
              
             <para>
             CloudWatch alarms send notifications or automatically make changes to the resources
             you are monitoring based on rules that you define. For example, you can monitor the
             CPU usage and disk reads and writes of your Amazon Elastic Compute Cloud (Amazon EC2)
             instances and then use this data to determine whether you should launch additional
             instances to handle increased load. You can also use this data to stop under-used
             instances to save money.
             </para>
              
             <para>
             In addition to monitoring the built-in metrics that come with AWS, you can monitor
             your own custom metrics. With CloudWatch, you gain system-wide visibility into resource
             utilization, application performance, and operational health.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials and an
            AmazonCloudWatchClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DeleteAlarmsAsync(Amazon.CloudWatch.Model.DeleteAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAlarms operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteAlarms">REST API Reference for DeleteAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmHistoryAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the history for the specified alarm. You can filter the results by date
            range or item type. If an alarm name is not specified, the histories for all alarms
            are returned.
            
             
            <para>
            Note that Amazon CloudWatch retains the history of an alarm even if you delete the
            alarm.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarmHistory service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmHistory">REST API Reference for DescribeAlarmHistory Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmHistoryAsync(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmHistory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmHistory">REST API Reference for DescribeAlarmHistory Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the specified alarms. If no alarms are specified, all alarms are returned.
            Alarms can be retrieved by using only a prefix for the alarm name, the alarm state,
            or a prefix for any action.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarms service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarms">REST API Reference for DescribeAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmsAsync(Amazon.CloudWatch.Model.DescribeAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarms operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarms">REST API Reference for DescribeAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmsForMetricAsync(Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmsForMetric operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmsForMetric operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmsForMetric">REST API Reference for DescribeAlarmsForMetric Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DisableAlarmActionsAsync(Amazon.CloudWatch.Model.DisableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableAlarmActions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DisableAlarmActions">REST API Reference for DisableAlarmActions Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.EnableAlarmActionsAsync(Amazon.CloudWatch.Model.EnableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableAlarmActions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/EnableAlarmActions">REST API Reference for EnableAlarmActions Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.GetMetricStatisticsAsync(Amazon.CloudWatch.Model.GetMetricStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetMetricStatistics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetMetricStatistics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricStatistics">REST API Reference for GetMetricStatistics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.ListMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            List the specified metrics. You can use the returned metrics with <a>GetMetricStatistics</a>
            to obtain statistical data.
            
             
            <para>
            Up to 500 results are returned for any one call. To retrieve additional results, use
            the returned token with subsequent calls.
            </para>
             
            <para>
            After you create a metric, allow up to fifteen minutes before the metric appears.
            Statistics about the metric, however, are available sooner using <a>GetMetricStatistics</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMetrics service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListMetrics">REST API Reference for ListMetrics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.ListMetricsAsync(Amazon.CloudWatch.Model.ListMetricsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMetrics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMetrics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListMetrics">REST API Reference for ListMetrics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutMetricAlarmAsync(Amazon.CloudWatch.Model.PutMetricAlarmRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricAlarm operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricAlarm operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutMetricAlarm">REST API Reference for PutMetricAlarm Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutMetricDataAsync(Amazon.CloudWatch.Model.PutMetricDataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricData operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricData operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutMetricData">REST API Reference for PutMetricData Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.SetAlarmStateAsync(Amazon.CloudWatch.Model.SetAlarmStateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetAlarmState operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetAlarmState operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/SetAlarmState">REST API Reference for SetAlarmState Operation</seealso>
        </member>
        <member name="T:Amazon.CloudWatch.IAmazonCloudWatch">
             <summary>
             Interface for accessing CloudWatch
            
             Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications
             you run on AWS in real-time. You can use CloudWatch to collect and track metrics,
             which are the variables you want to measure for your resources and applications.
             
              
             <para>
             CloudWatch alarms send notifications or automatically make changes to the resources
             you are monitoring based on rules that you define. For example, you can monitor the
             CPU usage and disk reads and writes of your Amazon Elastic Compute Cloud (Amazon EC2)
             instances and then use this data to determine whether you should launch additional
             instances to handle increased load. You can also use this data to stop under-used
             instances to save money.
             </para>
              
             <para>
             In addition to monitoring the built-in metrics that come with AWS, you can monitor
             your own custom metrics. With CloudWatch, you gain system-wide visibility into resource
             utilization, application performance, and operational health.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DeleteAlarmsAsync(Amazon.CloudWatch.Model.DeleteAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAlarms operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DeleteAlarms">REST API Reference for DeleteAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmHistoryAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the history for the specified alarm. You can filter the results by date
            range or item type. If an alarm name is not specified, the histories for all alarms
            are returned.
            
             
            <para>
            Note that Amazon CloudWatch retains the history of an alarm even if you delete the
            alarm.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarmHistory service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmHistory">REST API Reference for DescribeAlarmHistory Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmHistoryAsync(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmHistory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmHistory">REST API Reference for DescribeAlarmHistory Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the specified alarms. If no alarms are specified, all alarms are returned.
            Alarms can be retrieved by using only a prefix for the alarm name, the alarm state,
            or a prefix for any action.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeAlarms service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            The next token specified is invalid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarms">REST API Reference for DescribeAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmsAsync(Amazon.CloudWatch.Model.DescribeAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarms operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarms">REST API Reference for DescribeAlarms Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmsForMetricAsync(Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmsForMetric operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmsForMetric operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DescribeAlarmsForMetric">REST API Reference for DescribeAlarmsForMetric Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DisableAlarmActionsAsync(Amazon.CloudWatch.Model.DisableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableAlarmActions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/DisableAlarmActions">REST API Reference for DisableAlarmActions Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.EnableAlarmActionsAsync(Amazon.CloudWatch.Model.EnableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableAlarmActions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/EnableAlarmActions">REST API Reference for EnableAlarmActions Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.GetMetricStatisticsAsync(Amazon.CloudWatch.Model.GetMetricStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetMetricStatistics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetMetricStatistics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricStatistics">REST API Reference for GetMetricStatistics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.ListMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            List the specified metrics. You can use the returned metrics with <a>GetMetricStatistics</a>
            to obtain statistical data.
            
             
            <para>
            Up to 500 results are returned for any one call. To retrieve additional results, use
            the returned token with subsequent calls.
            </para>
             
            <para>
            After you create a metric, allow up to fifteen minutes before the metric appears.
            Statistics about the metric, however, are available sooner using <a>GetMetricStatistics</a>.
            </para>
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListMetrics service method, as returned by CloudWatch.</returns>
            <exception cref="T:Amazon.CloudWatch.Model.InternalServiceException">
            Request processing has failed due to some unknown error, exception, or failure.
            </exception>
            <exception cref="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            The value of an input parameter is bad or out-of-range.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListMetrics">REST API Reference for ListMetrics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.ListMetricsAsync(Amazon.CloudWatch.Model.ListMetricsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMetrics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMetrics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/ListMetrics">REST API Reference for ListMetrics Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutMetricAlarmAsync(Amazon.CloudWatch.Model.PutMetricAlarmRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricAlarm operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricAlarm operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutMetricAlarm">REST API Reference for PutMetricAlarm Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutMetricDataAsync(Amazon.CloudWatch.Model.PutMetricDataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricData operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricData operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutMetricData">REST API Reference for PutMetricData Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.SetAlarmStateAsync(Amazon.CloudWatch.Model.SetAlarmStateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetAlarmState operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetAlarmState operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/SetAlarmState">REST API Reference for SetAlarmState Operation</seealso>
        </member>
    </members>
</doc>
